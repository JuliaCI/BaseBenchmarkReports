cset: moving following pidspec: 23637
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.356196545 seconds)
loading group "string"... done (took 0.584071822 seconds)
loading group "linalg"... done (took 8.119410612 seconds)
loading group "parallel"... done (took 0.170186949 seconds)
loading group "find"... done (took 1.240234486 seconds)
loading group "tuple"... done (took 1.888645284 seconds)
loading group "dates"... done (took 1.355252742 seconds)
loading group "micro"... done (took 0.202929581 seconds)
loading group "io"... done (took 0.991866032 seconds)
loading group "scalar"... done (took 40.948319313 seconds)
loading group "sparse"... done (took 12.702065283 seconds)
loading group "broadcast"... done (took 1.005574585 seconds)
loading group "union"... done (took 14.388434936 seconds)
loading group "simd"... done (took 5.211883849 seconds)
loading group "random"... done (took 9.790699509 seconds)
loading group "problem"... done (took 1.865136795 seconds)
loading group "array"... done (took 22.172033046 seconds)
loading group "misc"... done (took 1.848538804 seconds)
loading group "sort"... done (took 3.403846729 seconds)
loading group "collection"... done (took 18.208576853 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.539836363 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126694026 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140085531 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123045497 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.1525212 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117152986 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125101866 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084257335 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.831144492 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.151317871 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115954028 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.424074281 seconds)
done (took 5.335464316 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172486413 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088023977 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08060748 seconds)
  done (took 1.23016879 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067121284 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128287003 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068347429 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069037933 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.069229851 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068565371 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068446896 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068545947 seconds)
  done (took 1.604008729 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073168565 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069093471 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067038304 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069673397 seconds)
  done (took 1.341339672 seconds)
done (took 5.490411188 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.791443844 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.213194622 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188120815 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.412798118 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137164487 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.180721226 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.637401456 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.323772663 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.192062406 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.093960788 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113048011 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391779414 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.126683467 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.645624071 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078111321 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09581215 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141468547 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.452312093 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071155006 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08507033 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092785644 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131391389 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.083159621 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07928482 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.153475806 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071116645 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143262981 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.086751326 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068985482 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.255686462 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175625017 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660727093 seconds)
  done (took 10.473762888 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10118281 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100292532 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069328553 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125480341 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098559404 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070220937 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075879126 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068648783 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08994175 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128653434 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091180268 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108608554 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066372859 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070032818 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083451119 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.208671171 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.083331127 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084116224 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070643025 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080696705 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112577669 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078411255 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080491208 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080294522 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129196213 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183711531 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100006075 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100343352 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070382273 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087064139 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117022655 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.131106559 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069230863 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.069412324 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128847124 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09724115 seconds)
  done (took 4.616700463 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.989264302 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.119265667 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150495338 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090263488 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133642883 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065526986 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108989753 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066545732 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083212046 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.233397267 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.460436368 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.638460376 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.111885307 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113493792 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104333786 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06879535 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069867864 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068280948 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.275597781 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.097867482 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109641503 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083646926 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071183785 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071962714 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.066763547 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076510113 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065950752 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070631991 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.090323929 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077740982 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.33277512 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127197701 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070708425 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.044056193 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.070236098 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.166163595 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069030148 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104416237 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093125086 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.142609229 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069848637 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066132744 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.163129894 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065613306 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072046922 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067279912 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085387947 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106406151 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120321347 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066285921 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067348063 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.167594138 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.063954431 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080336737 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.104905779 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152975408 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063125992 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.283074628 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088048861 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06932926 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063177172 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.167966269 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.117987972 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.06328093 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066593251 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065971011 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067379126 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069594055 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.362591641 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06415167 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.908983474 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070460474 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078490091 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070231229 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069771693 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073023673 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072304118 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087834554 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06238127 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065057528 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.070218905 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064521717 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065119632 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.065276963 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.095798049 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.372972224 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06590569 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071476389 seconds)
    (88/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062972875 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065440391 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092342751 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095706333 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065790645 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06440322 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097953563 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066352698 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065427103 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066374791 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.095106742 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069119725 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.110140823 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067228002 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.304724437 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104792864 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074855598 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103467629 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084516905 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073521772 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.489523995 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069095574 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.077277657 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069621174 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072703548 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.07095533 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08278573 seconds)
  done (took 21.632857759 seconds)
done (took 38.775021533 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.255083486 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.087587728 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.087876338 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.088618156 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.088479641 seconds)
  done (took 1.790222374 seconds)
done (took 2.967810942 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.131939261 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103521759 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067115482 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.102001519 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067048652 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104790613 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104876309 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.086718155 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107130576 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067245203 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101555521 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067336348 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066931088 seconds)
  done (took 2.357806989 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083314278 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083503318 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071422551 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088644492 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064900846 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08502273 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083958495 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091546186 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083941093 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07349625 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064525701 seconds)
  done (took 2.031488279 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082301792 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083840175 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070324748 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084056539 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06523578 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084351413 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083645974 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087182992 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083806344 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076330701 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06514478 seconds)
  done (took 2.020618193 seconds)
done (took 7.563891238 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07722261 seconds)
  done (took 1.221146505 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.544697996 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.566813502 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.079670443 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.101243211 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.195653917 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.109955653 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.235486174 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.084195549 seconds)
  done (took 8.235800029 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.110474566 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072531152 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070002719 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071607786 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070789675 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069992324 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070327798 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072571542 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072335515 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072554364 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072076112 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07184316 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072508245 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071992393 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072791001 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073494485 seconds)
  done (took 2.415247942 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099344169 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.099527826 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07659857 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078356694 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075781223 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074808947 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077498411 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076760135 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074201116 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073674025 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076374725 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074599264 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074235245 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065037205 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076564866 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077624356 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072611222 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076628792 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07862414 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079252538 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078467415 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066853493 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076405234 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077277737 seconds)
  done (took 3.115955061 seconds)
done (took 16.143252955 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.106939895 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.068899436 seconds)
  done (took 1.32632497 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079405683 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080153458 seconds)
  done (took 1.320067972 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.07815572 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063250831 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.084309193 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076253946 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066920065 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065804576 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085723759 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066243253 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066736175 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066385359 seconds)
  done (took 1.880447238 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065537939 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.074111464 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070816024 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080781117 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073047555 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066927494 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071925293 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067836466 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.0767035 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065492429 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070809803 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086235301 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069220363 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086013502 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.06895899 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069405764 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070665729 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067890592 seconds)
  done (took 2.466601742 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063953426 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065583423 seconds)
  done (took 1.296127052 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066882777 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064680884 seconds)
    (3/7) benchmarking "month"...
    done (took 0.069100266 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068468996 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066026969 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065035516 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066292328 seconds)
  done (took 1.628697422 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.408724927 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.124805334 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.333674672 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073162103 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081219889 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.261899219 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065518692 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.0719575 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072103832 seconds)
  done (took 2.697874071 seconds)
done (took 13.785317223 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082240418 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087030064 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09868956 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.392824122 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.096743087 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070637236 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11882474 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.182758703 seconds)
done (took 2.304823105 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21289242 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.817915295 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.48751664 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212042655 seconds)
  done (took 2.687229044 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344655239 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.084144398 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.080401881 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069891761 seconds)
  done (took 1.759743079 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067665483 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072511669 seconds)
  done (took 1.315144403 seconds)
done (took 7.152960476 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065899526 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066138085 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093075115 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.067075502 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067133333 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.067415337 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067352109 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066626923 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066837836 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067314401 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.066762641 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066910247 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066975979 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.191034135 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067360143 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067191354 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066875193 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067278464 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068618733 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067626071 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066860081 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067122545 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06704006 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067609742 seconds)
  done (took 2.970556694 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082345482 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068203615 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071225149 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071202559 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072077785 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070919531 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071653984 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069312751 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071166392 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069887518 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071895028 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071902853 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069473613 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072186341 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069225769 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071995653 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071187005 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069580146 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069509822 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.072245916 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071152612 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069496201 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071705697 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071168086 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07182694 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071554334 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068977437 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.070576926 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070990308 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071886684 seconds)
  done (took 3.321855175 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068764293 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062430051 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063569451 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072432667 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06354387 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064017971 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063063044 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063829749 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064145245 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063512687 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064275805 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063168859 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063104998 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063887874 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06485922 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067849368 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082275338 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063953553 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063486923 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063901623 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068180497 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063538547 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063773673 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06620316 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063498837 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063067004 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063811506 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063872606 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064284429 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063947406 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067482317 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067901436 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063870681 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072312638 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068509452 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06326313 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068811514 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063099342 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064049947 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063456293 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063128036 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063587663 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063365985 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072974137 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063443177 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06485859 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063778955 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064247387 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064835522 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065393373 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062912337 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063108961 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065487363 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064768933 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069069058 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063187854 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064181282 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063093992 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064426999 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06309442 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063341383 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062819482 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.06665774 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063886324 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.081451673 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072457887 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063435354 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064809321 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064166882 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067040145 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064987459 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079910215 seconds)
  done (took 5.911480808 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085979751 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087964115 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067076562 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068176852 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064693349 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064604569 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073044755 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063950086 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069037444 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084007291 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064541776 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06893697 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068880621 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0681137 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064865452 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069327822 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07312226 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064841883 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064108114 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068346921 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064296618 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072358357 seconds)
  done (took 2.743936364 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.14724888 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070051509 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109299064 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074920811 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072963218 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075076334 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070307433 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070102295 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070764401 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07100632 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070819163 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070065951 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072824533 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071142003 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071236066 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070465281 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070347832 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07055919 seconds)
  done (took 2.589961439 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078969097 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068427857 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.089714656 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069590732 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069924045 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06938709 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073897563 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074647045 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069262835 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069471147 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074473716 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069270068 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069515382 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069629519 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069197264 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070025118 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069229273 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070005838 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074209943 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073229131 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073786443 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07437352 seconds)
  done (took 2.781710179 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08896873 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06702534 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082469755 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069596817 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062920766 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.0641266 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071324672 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069476958 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070536667 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068262103 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069416547 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064181273 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071506124 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069021201 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071285796 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069408983 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06906994 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069487568 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068554173 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064367923 seconds)
  done (took 2.593481427 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083958663 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067632227 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06687326 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07355766 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067897511 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066920799 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074266872 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067196523 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067251099 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088454165 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067441951 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067648465 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074134934 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071449962 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067423534 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073863582 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076683898 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073626271 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067391776 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067395349 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088686795 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067807205 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073474076 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06773286 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067245571 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067273711 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067424712 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071501914 seconds)
  done (took 3.196343024 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065606813 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066504312 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067227894 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067112014 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067125786 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066916725 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066986838 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067008285 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067235972 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06752751 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066802667 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066853531 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066835176 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066815712 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066947996 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067427863 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06701684 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067576207 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067554444 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066985337 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066967823 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067202968 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067016955 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067088561 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066806789 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066658658 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067173668 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067081952 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06654455 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067269911 seconds)
  done (took 3.208950388 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075801771 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074060423 seconds)
  done (took 1.349410726 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063998727 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080156921 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063328144 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074689112 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072654921 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067588334 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073550214 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07323615 seconds)
  done (took 1.763599396 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086156584 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076623961 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066331187 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078417654 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077271808 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087564143 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129530061 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066879054 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077531345 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067341186 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.085058205 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.068323466 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.077109832 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0711737 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076928695 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080290255 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064287875 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071314073 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067869656 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065174205 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06670761 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080644098 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075939147 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064437491 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071647888 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094437747 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.083032556 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065480732 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073396415 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078641816 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076673772 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062843722 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065797187 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066253444 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064080259 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077158715 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085299458 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073206639 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079256534 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066630069 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074841828 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06411618 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075247003 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077855572 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082573956 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066367683 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067086997 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063901445 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067320131 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073056873 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063775539 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071037869 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063496467 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078300365 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073956094 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081457666 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064641077 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072026875 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.07273908 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073264524 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.078040602 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072536802 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075820997 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065344298 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082214874 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075789067 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077963112 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064182853 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06296914 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064157466 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080420725 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095516276 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.075792389 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066073952 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066887862 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064127189 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073509567 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066500401 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075761053 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077686596 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06581297 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070952365 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077932347 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069109614 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070696873 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070624494 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062631437 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067451212 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065648431 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084262978 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063222657 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062824397 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065396246 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079276658 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073588744 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.063648751 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065559327 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077785023 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063623364 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066078558 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066940568 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071581417 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079738416 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070008625 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070467817 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079204031 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073561598 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069182887 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070499176 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061077645 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065836533 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067995343 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077278556 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06232955 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072434256 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.069510875 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065708594 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076983228 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063452664 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064084341 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076636891 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076671197 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062310929 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062362532 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072378186 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.064530824 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065408188 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076432785 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061929004 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061478409 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061984152 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071216948 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06278266 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070530182 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066302463 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070161214 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060715739 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.061637606 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.066691373 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.203994881 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068843262 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071063197 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074712833 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071684017 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06403778 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077063086 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071178979 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066866318 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074621224 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068871943 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062556577 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067613191 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072933922 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065224239 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07315999 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067113395 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072682647 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067153762 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065050522 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072729236 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066883668 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069233138 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072117235 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06568224 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.082525495 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072431855 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064468306 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063783818 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.07354436 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067506376 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066452447 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.068350469 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07366736 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066579897 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064915149 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065503403 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071297757 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071503262 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067602851 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064883702 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074430477 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081394916 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064231493 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071027042 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064027087 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065714862 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066721958 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.081269092 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077184649 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070473635 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073102983 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063468353 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075504614 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078392196 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.068622023 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064166347 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068495283 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069522112 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077785268 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07033977 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06641232 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064642795 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07212595 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068832651 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073161754 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066047684 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068638837 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071298507 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064754785 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072041741 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066363629 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080360122 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073693793 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064111554 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06828332 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064212957 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.077320301 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064040263 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067930512 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068509789 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066476675 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.0650873 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072517766 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062748238 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078366064 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079006748 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.071773919 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.068524878 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065778042 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078236285 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071912881 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074673408 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.073373435 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075862406 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081431469 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068609152 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073092131 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081291308 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064914015 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061386213 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076128804 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062819643 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063350531 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063161719 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062856021 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07218644 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071597364 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074987368 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06166111 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071169731 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064154817 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068074817 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06346684 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072921711 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071907915 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069932146 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076675723 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064160279 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.06367869 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071178064 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063259071 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064100977 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064358833 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070466059 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064278131 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06927347 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067106191 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069672473 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066091085 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061656899 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069106325 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.062976877 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068379578 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072018889 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062806371 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069078313 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069992994 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.063006737 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06919202 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066638017 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06552598 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069932374 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068662491 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067780206 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.203282424 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064567077 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078846585 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066765055 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078197554 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.07147224 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063100028 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070584827 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070715021 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070710375 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067008009 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065268431 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071572271 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065030511 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072547322 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077421518 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067164019 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082250742 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07783493 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071849548 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071903875 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.07061268 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069670712 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067002152 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.06840148 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06516019 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070132396 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063934067 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072867593 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071637564 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069546286 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071215076 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065127395 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070487113 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065509474 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062571521 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066720771 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066942078 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.063889798 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076383071 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06403267 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067036006 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062932367 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064927016 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.062852319 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061508103 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.070942661 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071320882 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064736931 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074587631 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066687272 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.07021204 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079536955 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061623889 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062888146 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062908537 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065563613 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076426506 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064832388 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077663982 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070153166 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068247795 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063197804 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066495196 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064796422 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063824119 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064250383 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074221439 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067529793 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064525934 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065445716 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.072506207 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065014822 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07743121 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064577702 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068256285 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064114592 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062714481 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068202385 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068069471 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073052136 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06620353 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06705334 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063842695 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065333686 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.06999995 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072057487 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065181438 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071851947 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07823498 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065703728 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072894298 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067487577 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063580107 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072650256 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064839616 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06532818 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068186837 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073672762 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073851917 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066320918 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079211657 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06694788 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070644296 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064784975 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062523732 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063649239 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063732069 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063805357 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067018427 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.06481258 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077268015 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062040042 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.06979666 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069129296 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067884411 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073810012 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064521623 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070741263 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068847211 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065331144 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070950089 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076632248 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067492442 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071217204 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064166788 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069891208 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073487305 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066419497 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075175654 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069633155 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064507092 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068962801 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064944046 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063440151 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063502879 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063152992 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07470968 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.063409776 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065440448 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065413033 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061126307 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067346799 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06559444 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075883016 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069660141 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070414725 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.197268606 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062731361 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065802984 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066934666 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070934172 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071469606 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074595556 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071374575 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068102772 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063494158 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078837298 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074825342 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072301814 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065503342 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072048043 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.065289437 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.0711506 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068793342 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070663078 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067431149 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074465374 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071849322 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068524294 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077199991 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072476616 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064709783 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06960908 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070362889 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069317732 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063102996 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066708535 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.073158885 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076060588 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.073537448 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066060047 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080465697 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065823902 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069132689 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067246046 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063482322 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072459477 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062261404 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071084627 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065145948 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064997188 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062067693 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066721992 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065970859 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071010645 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066437154 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06322142 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079769559 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078592063 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070636658 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06335542 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063000876 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062252676 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062447943 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067026789 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06505885 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06998306 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079079298 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068391581 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068196555 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062779238 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064703832 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07148769 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071679556 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062107284 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062621639 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067125802 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072456502 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077520483 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065714561 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065852089 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073505466 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073176192 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063962902 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069010597 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063340229 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073937108 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083664224 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066331295 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07233822 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076170609 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078681025 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066243255 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064150788 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066398378 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072304762 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.07160125 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066541587 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.0668841 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085598751 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072907652 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067213986 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064181349 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070869394 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068274057 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.08015827 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0666265 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066920021 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.078073753 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072735605 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073680055 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07593483 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077601914 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072593372 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072307318 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065216291 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070892631 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064928572 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068571865 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067153893 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06649057 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070924443 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072761858 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068962254 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082385525 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080162154 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.0685717 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064068357 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.070827973 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068478878 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063989858 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067034612 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064334611 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064094102 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06316469 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06320188 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070666588 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074669695 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070053687 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066047577 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064854325 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062833455 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07505037 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.071956088 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071533109 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062684316 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.064490726 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.063834798 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071430763 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065263793 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06540299 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069158511 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068661185 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.203750986 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064082886 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.076689475 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064234754 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071328011 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066818655 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064379542 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06484921 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071773628 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068003916 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065798419 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070964157 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071118436 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065956525 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.061983314 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.062851161 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073960747 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062410905 seconds)
  done (took 43.246632064 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100283959 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064121197 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062723236 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063237145 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072400635 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064074752 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062908401 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06376043 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063870347 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065829563 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064053313 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065000097 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071378422 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077586449 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07332406 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067255573 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063140391 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064056972 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063054582 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064776986 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071493892 seconds)
  done (took 2.697728508 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070863169 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077489143 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075116093 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079634456 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071806074 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067936975 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074945672 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067612611 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077694032 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075330762 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077972769 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07039254 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075384929 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075272208 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076226175 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071064997 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078059187 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074173792 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070308063 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.0780574 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070337033 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077752609 seconds)
  done (took 2.892912387 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.065568248 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064083301 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070087212 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06172859 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063949316 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063507118 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068616495 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064071136 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068885863 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.068446512 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067978866 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068408098 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072487692 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064365362 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069143154 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063972133 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111630798 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06945506 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065630687 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06562448 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063716213 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073218484 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064046101 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064525329 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068319066 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068593791 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066471203 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063794682 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065056901 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067931748 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06538322 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063607191 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071836338 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071734868 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067553025 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067322267 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065465942 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065155559 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064517774 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063581222 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.074351734 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06453414 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065626753 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072087863 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063725907 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063649332 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072433516 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065198759 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063730773 seconds)
  done (took 4.580928561 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075617796 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.11320018 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070102146 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094175806 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079409259 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.071728294 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070654784 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095128435 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065674056 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066829925 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080686923 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080624825 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068574601 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069411267 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070459898 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068444023 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068700117 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067386368 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071038044 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067145129 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071009775 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072212635 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079312716 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079672965 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068680369 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066636137 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066381448 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067545212 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076807372 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069615281 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067585955 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068001063 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.077378582 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072374907 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066951236 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067901966 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079397373 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06828126 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067451415 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065331239 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066166836 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069270981 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072535597 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.098606056 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067134111 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07094465 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065956012 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064032816 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077541577 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065480189 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069881875 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078197002 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066523819 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067006695 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068664943 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079344032 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067533031 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065912427 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067633927 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079010138 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065292263 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068260407 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080592897 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066277181 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070462969 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07773011 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071892705 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068106748 seconds)
  done (took 6.333166283 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0734301 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093992575 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080057829 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079525621 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073387011 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073938541 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073779242 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073793973 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074274659 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077592642 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073994178 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11506595 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069914891 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075572453 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.0735048 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074641144 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073397444 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073477007 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073488843 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073183464 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074199754 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079260166 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07362777 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079666064 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076453153 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069192059 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073531838 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073380371 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079768522 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073613125 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.077334613 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075208427 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07638115 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082103818 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07882471 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075949423 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065423837 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075433111 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075524022 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075832848 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070959557 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082114017 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075204312 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071423793 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075475254 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075360511 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081702467 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07690806 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075332737 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076986903 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073427777 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079618945 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072993316 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073664562 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079593145 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.082637228 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079967968 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079360741 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074512368 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08153652 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08137818 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08481271 seconds)
  done (took 6.075765044 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077973073 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070314789 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081300374 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06273164 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06215758 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072522371 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062400842 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064484931 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070317399 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.070094298 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072218842 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072305443 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074828033 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072456511 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072406781 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074844908 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071840301 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072130658 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07029339 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072234161 seconds)
  done (took 2.728636898 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076308111 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082327398 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067742106 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071904822 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068732446 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072009045 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067453757 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067981338 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068619126 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069120082 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075816312 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075941281 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07051793 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074687954 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075672376 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074152369 seconds)
  done (took 2.450821871 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083747135 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070317625 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077269326 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063945451 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068003504 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063011521 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063790115 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061999295 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063598452 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076485518 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063764881 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074704833 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063426994 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062408135 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063305675 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069119199 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062806163 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063736642 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063444452 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077105184 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07028128 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064518626 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06752638 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063446795 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068731454 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070825962 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064839991 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06720561 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063623928 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063758097 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069229648 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070340984 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063120616 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064116007 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062869343 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063451793 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063258636 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063964729 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06979636 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082599852 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063071616 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070267848 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065228952 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066684727 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064706456 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066054645 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064674592 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071754171 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065311601 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070991452 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064882261 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067605882 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06583177 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072847055 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067875122 seconds)
  done (took 4.995668828 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07877699 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067256617 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061816951 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062018299 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.067452957 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067904094 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067470649 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068536301 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068779783 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062178596 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068548886 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067243338 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068320025 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067692247 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068420361 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068017773 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061849566 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067543657 seconds)
  done (took 2.519495064 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073091154 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067029601 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071670173 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066985082 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068033834 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066911393 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062684519 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062407894 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062836981 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067494672 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067651569 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067073969 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06254939 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066623976 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068129746 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0686781 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068288633 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064303666 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068483775 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064461004 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068942317 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063855698 seconds)
  done (took 2.765948135 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.095627623 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.0836444 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139750227 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080134985 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086820512 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071995599 seconds)
  done (took 1.859492426 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092929358 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098105672 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067709276 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067463801 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073422297 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070162371 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070393558 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070577689 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076470617 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077375181 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072595891 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077455406 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077214147 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079284939 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075423117 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07790551 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073860572 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073142498 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069219565 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08209434 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072798495 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077485621 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072812163 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072269422 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072600861 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079297046 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076660682 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075842353 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072274168 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076968189 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074575714 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072504657 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077547373 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077356759 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069572606 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07677172 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070965167 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08001739 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072849158 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077070611 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067057099 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073238502 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075155477 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075005607 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075310062 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071032668 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074502397 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071135521 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070857516 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08145708 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073223257 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077107093 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072873766 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077037314 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076892158 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082835166 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076906012 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079048961 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075113579 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077552832 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07912309 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074960374 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079118966 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077400215 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075191708 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079037948 seconds)
  done (took 6.291389171 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103882421 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067546114 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07097872 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075437175 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077301739 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071149539 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071087925 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072755525 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073034583 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070269471 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108554534 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073593247 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079318804 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079717829 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073237091 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073552247 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073089561 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079563472 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070395966 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084276224 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072714518 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079559617 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079187967 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079329906 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077517817 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073047351 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070630872 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070713839 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070408861 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070538268 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074432449 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071388951 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077009079 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067865433 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077381631 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070936045 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070573315 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074926771 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070717681 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073163651 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077160429 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080419164 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070633361 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071359652 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075416312 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070405942 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070535808 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067755116 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070855281 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067857401 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075669716 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075441359 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075273325 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077212251 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070690776 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07047403 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070736418 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070337998 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070702518 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072852693 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076675254 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070632262 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081355885 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070587231 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072948403 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076845202 seconds)
  done (took 6.244963653 seconds)
done (took 129.294562893 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.215907194 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.191462508 seconds)
  done (took 1.696814291 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074194749 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.106287556 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082897708 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13286543 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071436526 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105866521 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104606818 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083554242 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071736927 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071156953 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.07133258 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074259889 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136775721 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071252281 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071429936 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073822735 seconds)
  done (took 2.710776171 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104805592 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.167245894 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10894846 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069281316 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105206228 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077605843 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069284419 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08234866 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.077358258 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071440443 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077301852 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077927025 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071383226 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075426938 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076054786 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077045637 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071406005 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077080233 seconds)
  done (took 2.847954435 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103372356 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095761477 seconds)
  done (took 1.513162154 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.178083954 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133709642 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202158061 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345762592 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.153411582 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.422719743 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.138819073 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.141428325 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116024826 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136560467 seconds)
  done (took 3.277640394 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10328769 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.1685145 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.292000446 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.12020266 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077066197 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.090491161 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121847214 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081958671 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083913806 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083496718 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084032602 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078336001 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.1029369 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.0767239 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075997565 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078252112 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106015664 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075309004 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075764606 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078568331 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106615933 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069940634 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076325194 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074739683 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080335911 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080420253 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071185487 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070169583 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078574547 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075815379 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07892422 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.087510426 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080208532 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105933577 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074983488 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107884203 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078785027 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076341007 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075910631 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076350257 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079998578 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080060058 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078099277 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078088118 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070950572 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078172511 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071028003 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069574603 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079678348 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070782771 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080513073 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079087884 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105276164 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070853513 seconds)
  done (took 6.111540436 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108124208 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107270548 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070743474 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112799053 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104466093 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07103514 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105762835 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099015664 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107518259 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0707614 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069197995 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07137968 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079593069 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08122999 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116479523 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107868984 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07282267 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070209804 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107981774 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107843863 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069809011 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102226173 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098196176 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107053926 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068815936 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070981685 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069005486 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070738975 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076007418 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07779823 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069858213 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078893671 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083809476 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077241003 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068461329 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069088221 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069389157 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078264386 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078813208 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078279371 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076442692 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06829418 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069596271 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071314696 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069634244 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0681688 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076841559 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078352344 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076774415 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068793257 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070312465 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06898582 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070135113 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078121956 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075844067 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078751199 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078163913 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069183859 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068964362 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07229173 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079159157 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078453544 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078691329 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070058335 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078448793 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068888935 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079431801 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084410116 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069214886 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069791774 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068803546 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069190723 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06983533 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076219588 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076474582 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070294172 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069013485 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0691683 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078603235 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077003249 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068928965 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076144097 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067891112 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069111554 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069897882 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070431831 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076560059 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078308098 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070854162 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069206695 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068979755 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070569658 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069862439 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078399869 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080573692 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079719308 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078826532 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070451375 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078044478 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076799292 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070626305 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07700968 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068643695 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070118815 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069615269 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07671385 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075799907 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078097676 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068913874 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068952077 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076279361 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078623385 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068896692 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.075717341 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078613529 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076574086 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067997203 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078579215 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068394995 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077142729 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067950697 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076512875 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067761505 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.209133197 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070306873 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069297789 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069587648 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078785795 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071446693 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069433335 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070200895 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069460362 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078248556 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080907927 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070815801 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076938231 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07765452 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071300854 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.07766047 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06938408 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078774866 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070018301 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070168063 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068948639 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08127465 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070451885 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069678486 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069569203 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079114543 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069191169 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079004169 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076728578 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068624834 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080536925 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079017455 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076503875 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079046434 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070706622 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069237221 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069382417 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069253037 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076545954 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078284397 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07046738 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069354177 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07841787 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082206574 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070769426 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079419344 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07965739 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079895431 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071891646 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071794584 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082716279 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079955659 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077268076 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077148428 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078050246 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069469532 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076987527 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07726691 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06946123 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083495191 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069520996 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081752489 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077433701 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076103637 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077712786 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.07905662 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.078838452 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079064285 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081324438 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068372202 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069293433 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077550798 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069612328 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070900398 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077459982 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070609702 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071663981 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083907633 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069608658 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079469143 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068758363 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077552118 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068472238 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070381663 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082225233 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069100324 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070468397 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077200083 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068942357 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076891843 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079014305 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079744778 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068975744 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070219143 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.0778204 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078441452 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068960374 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068904472 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070691978 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076437586 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076198973 seconds)
  done (took 18.495006163 seconds)
done (took 37.978872566 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.202405855 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152162017 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179617399 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.113688017 seconds)
  done (took 2.060624354 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.108332794 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097832751 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087419743 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06554673 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.093472265 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065620388 seconds)
  done (took 1.862842917 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280725754 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.191765969 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.174606512 seconds)
  done (took 1.990071432 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.207606649 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188005717 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.457136938 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.279948126 seconds)
  done (took 2.569516541 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.138898235 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.081727516 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064471879 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.082284522 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.123242701 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.14826378 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.09222462 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.116953124 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07560393 seconds)
  done (took 2.32037495 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.144874789 seconds)
done (took 12.312474054 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.104811264 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.129316454 seconds)
    (3/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.260660003 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.097823948 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.06884293 seconds)
    (6/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.075509169 seconds)
    (7/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.092064472 seconds)
    (8/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.184274183 seconds)
    (9/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.207681451 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.102802222 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076135402 seconds)
    (12/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.179303535 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.145179375 seconds)
    (14/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.088497946 seconds)
    (15/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075587707 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075316653 seconds)
    (17/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.207162688 seconds)
    (18/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.183962823 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074774057 seconds)
    (20/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.236452723 seconds)
    (21/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066689305 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065903185 seconds)
    (23/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074462285 seconds)
    (24/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.117013918 seconds)
    (25/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.080231697 seconds)
    (26/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084726411 seconds)
    (27/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074377925 seconds)
    (28/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.213187741 seconds)
    (29/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.449526335 seconds)
    (30/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.17076393 seconds)
    (31/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075488771 seconds)
    (32/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.198152425 seconds)
    (33/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.084195557 seconds)
    (34/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.076743374 seconds)
    (35/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077538176 seconds)
    (36/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.192051628 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.09922951 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065825583 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073705488 seconds)
    (40/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076048549 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.123142211 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065176997 seconds)
    (43/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074580521 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.138732339 seconds)
    (45/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068573071 seconds)
    (46/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.092337863 seconds)
    (47/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075258817 seconds)
    (48/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.225495673 seconds)
    (49/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069753101 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 0.155899343 seconds)
    (51/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.16929248 seconds)
    (52/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.195505086 seconds)
    (53/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.173108767 seconds)
    (54/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067185473 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 0.066876551 seconds)
    (56/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.187087426 seconds)
    (57/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066061925 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073129224 seconds)
    (59/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066305331 seconds)
    (60/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067008947 seconds)
    (61/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.174687974 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.240464633 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065464904 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074327131 seconds)
    (65/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074465779 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064360918 seconds)
    (67/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.066546233 seconds)
    (68/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.178789003 seconds)
    (69/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.129838523 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.117418668 seconds)
    (71/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.163199309 seconds)
    (72/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06484246 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.116569625 seconds)
    (74/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070357513 seconds)
    (75/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.130828169 seconds)
    (76/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076923318 seconds)
    (77/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.133539672 seconds)
    (78/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.188673505 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086652294 seconds)
    (80/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074015693 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.120964703 seconds)
    (82/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078003838 seconds)
    (83/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.163924682 seconds)
    (84/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07200136 seconds)
    (85/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.192648747 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090353413 seconds)
    (87/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069296473 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.102242396 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072090546 seconds)
    (90/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065304916 seconds)
    (91/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065424113 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064740861 seconds)
    (93/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.07173826 seconds)
    (94/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.065779788 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173248323 seconds)
    (96/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.120364041 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090893519 seconds)
    (98/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.3329112 seconds)
    (99/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.230347791 seconds)
    (100/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.230681192 seconds)
    (101/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.211498758 seconds)
    (102/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.134100371 seconds)
    (103/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.169132315 seconds)
    (104/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073115337 seconds)
    (105/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.069377387 seconds)
    (106/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.085361754 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090768654 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.083818926 seconds)
    (109/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067888661 seconds)
    (110/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066494984 seconds)
    (111/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074530007 seconds)
    (112/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070290439 seconds)
    (113/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092406047 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.100570755 seconds)
    (115/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067538622 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066963506 seconds)
    (117/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066039355 seconds)
    (118/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.079040641 seconds)
    (119/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066056348 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.125450971 seconds)
    (121/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07508482 seconds)
    (122/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.12152193 seconds)
    (123/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067770451 seconds)
    (124/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.217545478 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.14045524 seconds)
    (126/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.139437893 seconds)
    (127/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079116543 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073923967 seconds)
    (129/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076829536 seconds)
    (130/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174108185 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073265977 seconds)
    (132/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071722853 seconds)
    (133/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.13221004 seconds)
    (134/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074135873 seconds)
    (135/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073121643 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132418215 seconds)
    (137/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.159693483 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108959581 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.077732883 seconds)
    (140/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.065604277 seconds)
    (141/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178810186 seconds)
    (142/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.066560943 seconds)
    (143/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.066926693 seconds)
    (144/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.18956629 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073435445 seconds)
    (146/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066700812 seconds)
    (147/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.115285638 seconds)
    (148/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066324272 seconds)
    (149/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.066976884 seconds)
    (150/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066626962 seconds)
    (151/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066058024 seconds)
    (152/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066656696 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.146565936 seconds)
    (154/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088657624 seconds)
    (155/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066651253 seconds)
    (156/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066150364 seconds)
    (157/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.066740122 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065855087 seconds)
    (159/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.0655259 seconds)
    (160/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.13368886 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.148219313 seconds)
    (162/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078230068 seconds)
    (163/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093076927 seconds)
    (164/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066360945 seconds)
    (165/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066841086 seconds)
    (166/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073235687 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.227610853 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07431952 seconds)
    (169/309) benchmarking ("sort", Float64, false)...
    done (took 0.131457098 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091290699 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089656779 seconds)
    (172/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.077135968 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065692628 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.134586628 seconds)
    (175/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070076965 seconds)
    (176/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171304572 seconds)
    (177/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.122748444 seconds)
    (178/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072486608 seconds)
    (179/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067384529 seconds)
    (180/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076897409 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123690138 seconds)
    (182/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072549293 seconds)
    (183/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.17734995 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127843032 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066606574 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087928391 seconds)
    (187/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074187032 seconds)
    (188/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092785813 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066389673 seconds)
    (190/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.065538899 seconds)
    (191/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.078145052 seconds)
    (192/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066554656 seconds)
    (193/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.066328835 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074164198 seconds)
    (195/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066585516 seconds)
    (196/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.082412181 seconds)
    (197/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.077737738 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.089148267 seconds)
    (199/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.066194692 seconds)
    (200/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066954588 seconds)
    (201/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067834205 seconds)
    (202/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075897502 seconds)
    (203/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066081837 seconds)
    (204/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074769417 seconds)
    (205/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067231221 seconds)
    (206/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067169272 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065592893 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07248836 seconds)
    (209/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.167810294 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065091357 seconds)
    (211/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.177234591 seconds)
    (212/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.065537408 seconds)
    (213/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068721993 seconds)
    (214/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.196920529 seconds)
    (215/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.131985359 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085108762 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075012767 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072519856 seconds)
    (219/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066647994 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065599144 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.297382711 seconds)
    (222/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.074932656 seconds)
    (223/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.071214453 seconds)
    (224/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.071875773 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068247627 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.125001436 seconds)
    (227/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080840259 seconds)
    (228/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075703259 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.133041748 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.113677011 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092544209 seconds)
    (232/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070694361 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.193379157 seconds)
    (234/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067384446 seconds)
    (235/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.181523855 seconds)
    (236/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067431642 seconds)
    (237/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081583649 seconds)
    (238/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.06699654 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066869164 seconds)
    (240/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068474936 seconds)
    (241/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.06546368 seconds)
    (242/309) benchmarking ("sort", Float32, false)...
    done (took 0.135478141 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089559842 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148685062 seconds)
    (245/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066241751 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087049896 seconds)
    (247/309) benchmarking ("sort", BigInt, false)...
    done (took 0.192131233 seconds)
    (248/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.069900002 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066105933 seconds)
    (250/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067095703 seconds)
    (251/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068116659 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.14259572 seconds)
    (253/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067032576 seconds)
    (254/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073926931 seconds)
    (255/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066305093 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091132135 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.119604218 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065911354 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068805713 seconds)
    (260/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.06679356 seconds)
    (261/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065915321 seconds)
    (262/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074672314 seconds)
    (263/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.066981098 seconds)
    (264/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090023083 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139241122 seconds)
    (266/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07551292 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.087823395 seconds)
    (268/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.176372631 seconds)
    (269/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.06725017 seconds)
    (270/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067657939 seconds)
    (271/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074788665 seconds)
    (272/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06620564 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075369469 seconds)
    (274/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.07283999 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072919222 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066155487 seconds)
    (277/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065926011 seconds)
    (278/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07466874 seconds)
    (279/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.077272212 seconds)
    (280/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067239134 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066093909 seconds)
    (282/309) benchmarking ("sort", Int8, false)...
    done (took 0.145184155 seconds)
    (283/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066933842 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086688184 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065945881 seconds)
    (286/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065565681 seconds)
    (287/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066804859 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074155874 seconds)
    (289/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080536796 seconds)
    (290/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.065996157 seconds)
    (291/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071744273 seconds)
    (292/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066338136 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066135714 seconds)
    (294/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066197356 seconds)
    (295/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.078252386 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073443033 seconds)
    (297/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074223798 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065949918 seconds)
    (299/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067931657 seconds)
    (300/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068662052 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.118471437 seconds)
    (302/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066092765 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086360901 seconds)
    (304/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06686076 seconds)
    (305/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.080025895 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086163708 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066410041 seconds)
    (308/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066557741 seconds)
    (309/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067484448 seconds)
  done (took 32.848943304 seconds)
done (took 34.206556464 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083274707 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097287198 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072671821 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091679796 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080380162 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.094984723 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073742581 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078746854 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080895074 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079954022 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078981994 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071961731 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075005252 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075456461 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073362505 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0969408 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080085736 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074222156 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074395129 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065699901 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074362276 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065931491 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065717317 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072300871 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.0771899 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073416408 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075150509 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075024355 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066615297 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066748233 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070795617 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075252181 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066144544 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078627226 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.07483934 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074804242 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075473477 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078747603 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065546814 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066406008 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07598845 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066163117 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074321877 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07221255 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070844193 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072297883 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073730256 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078516971 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096430356 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070445795 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075830345 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07671565 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077550087 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071811292 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071290327 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073899682 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072190646 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096550004 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074313973 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070545901 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075588461 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075105381 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072545061 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073963232 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073938421 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076237305 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078055273 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072181019 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076457727 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072961462 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065815645 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073787955 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070386649 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066187384 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07706812 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079077966 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065036854 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070678134 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076614416 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074092184 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066189252 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06990472 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065524889 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070633962 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070120008 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.073035144 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070995504 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073521436 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065568041 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074234992 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072968827 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073955609 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066003882 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079152545 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066223396 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071966452 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066601369 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066367311 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065895484 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071350205 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066313849 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071547589 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075251217 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065283993 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072223215 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079900585 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065525727 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072662921 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065214964 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.0651667 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07665258 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.07585525 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06561207 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069971166 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064851036 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.0718482 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065452419 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065377913 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06524971 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065644421 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070293106 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065724531 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069425256 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070410837 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077914453 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065408344 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070297708 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069857632 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065596529 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071750146 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065946179 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065783475 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.064828777 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078727788 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069957099 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066287105 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07057887 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069704881 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073442242 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064884294 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073970367 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071603974 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069152486 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071346174 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064342712 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075734352 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069506324 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069159812 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064982177 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065007946 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064288497 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064528441 seconds)
done (took 12.470243412 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069513526 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.117124897 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.092789519 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092372346 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08220113 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066767089 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.073940274 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.091178885 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068902757 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.095643838 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088262828 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.087948524 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.108834411 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065569628 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066776604 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068015869 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067981052 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078191281 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.094033063 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088116762 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.105438126 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066955322 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.086097314 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086633609 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083378397 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090278847 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067811941 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068220055 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069928239 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.08682651 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092244355 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069563545 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067686397 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.089492666 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084400983 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079837433 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067588905 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.074822362 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067231784 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066423325 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068350296 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087055421 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.074889337 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.077180271 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06836824 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074794634 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068041991 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082151737 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.084838932 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075451464 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081983006 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.090102565 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070266452 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082331327 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06557763 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082230354 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.075492227 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.06708706 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068035388 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071698833 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066990119 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069131107 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.077941626 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075689671 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071237771 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080934426 seconds)
  done (took 6.594850534 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084281653 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094563903 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083332287 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083732009 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066159068 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066872819 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069414924 seconds)
  done (took 1.992103948 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067061287 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08665797 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089947388 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090367931 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.080547866 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091156356 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074622574 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067270367 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.095536008 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.065946094 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086417598 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097227621 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071124343 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078896818 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091392327 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067197169 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091113125 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067102824 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.067508965 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091045847 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071911757 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.093869723 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078256103 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066983405 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.07931748 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067529196 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.09895095 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07497126 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068390857 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068202068 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067981959 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.093422481 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078905694 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.08146572 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068668989 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081881375 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080454525 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070303155 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.077714849 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076287667 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080133315 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068258828 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066037205 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068360143 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070025579 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078521057 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.065962454 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068415368 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068339567 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086744019 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06570425 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079062512 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070447903 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072733673 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072455814 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072000521 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075154771 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068604127 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086510001 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068547573 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084050115 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083033955 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080501508 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08320177 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067290728 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078997058 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080208067 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068167561 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069449145 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068521272 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083179898 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070593253 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068925717 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079079081 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.066841397 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09151527 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090828874 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066995854 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080596626 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067764357 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068639803 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.078693216 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091126266 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072773831 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068369991 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.0717835 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069487942 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070446919 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066585471 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071266132 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068575985 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072603252 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068261884 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070497735 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069333088 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083287468 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066512463 seconds)
  done (took 8.802300446 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069653638 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068483956 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069296417 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067799898 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067975034 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068185866 seconds)
  done (took 1.881292639 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090311148 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068489372 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081141455 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068222816 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10346446 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08350977 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083462242 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077282474 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.0818885 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079921564 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083394955 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086520688 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088025246 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070188559 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082744617 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.069124755 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08349228 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072253655 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079412914 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070681602 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.080874788 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070368264 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070519932 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086698134 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072078248 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.06900057 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077266605 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079519628 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078795157 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077223242 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070141296 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071394068 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074791468 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077659788 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083797122 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07478905 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068236863 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073944317 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070705067 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071541562 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.085593017 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070345859 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073674732 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074262643 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07720816 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074916948 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07394751 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076260013 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083008399 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074146263 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074036056 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068679086 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071438338 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074105957 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075088652 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077037252 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073969844 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083127179 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069978223 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074475424 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067644856 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071295732 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077223696 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071563449 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075219253 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074845652 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075025177 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070078157 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07042583 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.06862652 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075077563 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068352899 seconds)
  done (took 6.914151886 seconds)
done (took 27.644351856 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.512212603 seconds)
  done (took 1.936461878 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.607744736 seconds)
  done (took 2.059940242 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.598886873 seconds)
  done (took 8.048705894 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.375286214 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.45107267 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.732445187 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134571513 seconds)
  done (took 3.185788537 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.70187314 seconds)
  done (took 2.164588288 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233244148 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222892755 seconds)
  done (took 1.928963281 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.348013443 seconds)
  done (took 1.80103147 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.068849799 seconds)
  done (took 2.523537071 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.23185942 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.159254349 seconds)
  done (took 1.849835138 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.442257727 seconds)
  done (took 1.896675271 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.227798237 seconds)
  done (took 5.685406494 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.218590535 seconds)
  done (took 1.708698426 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.233869568 seconds)
  done (took 1.691604647 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.740766777 seconds)
  done (took 3.197344267 seconds)
done (took 41.14394517 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082531248 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085105549 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085378718 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080498654 seconds)
  done (took 1.773247715 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.074451254 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.070355109 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.074484682 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070094883 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.074356666 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.070573227 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071973601 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073104219 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07050439 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.070957628 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.070484187 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.070957173 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073626124 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072356317 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070037028 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074824999 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074212327 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.070726682 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073290513 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.070551885 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.068472579 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073553783 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073428133 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.069665172 seconds)
  done (took 3.187313261 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078200768 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072851234 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075497617 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071981549 seconds)
  done (took 1.765385848 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076135703 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.08738618 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.085920162 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076272756 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.087643551 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.082959941 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067452506 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067209292 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068772971 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.075962122 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066022662 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.092184394 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086039969 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076155212 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078466418 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063406978 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065356287 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.084784237 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076945172 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076759804 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068436836 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076710625 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066064492 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.085987947 seconds)
  done (took 3.30234985 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080981325 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101303311 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.079967752 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091554499 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093433651 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066388336 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.079285293 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092949866 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.135267609 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066184536 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072037366 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066153246 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.074903483 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066415562 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080537769 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109385161 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112123529 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069860644 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.100969186 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066247591 seconds)
  done (took 3.177854584 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.08305838 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069327924 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.07108425 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065605092 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076264426 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073194982 seconds)
  done (took 1.912031274 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068160698 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068007338 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06749916 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067522564 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072410491 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067204823 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066741934 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068116288 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068165469 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068454547 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067186502 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066413361 seconds)
  done (took 2.284855791 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.189511261 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068361265 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068731978 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066180706 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070328597 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066847933 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081292594 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068067224 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092980961 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066965079 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067322152 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069203658 seconds)
  done (took 2.445985353 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195423011 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073725811 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230891766 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146063659 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104171202 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108814299 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110783274 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109010489 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.1334666 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097084211 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154613813 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158901659 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103000376 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131367065 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086848103 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119063231 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144840771 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161112251 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101034815 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155647848 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137325524 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121576109 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140870791 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097137412 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100588431 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113051971 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071346457 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076952185 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164481309 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124925753 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13620599 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106510751 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08913762 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176848347 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156986282 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134639535 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14324896 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081159172 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117240881 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.127820666 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192601403 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086984754 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156392187 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10593853 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077778851 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124975668 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109955341 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.114366161 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.098234436 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085167987 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275760791 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176649058 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.128489181 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08341393 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118916355 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106859544 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.109451243 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114190362 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172703712 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151486675 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122119798 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.06948459 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106033945 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14192592 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125558672 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10472845 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117702169 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089206233 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12565153 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150746039 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118930842 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134149678 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.112109022 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085013213 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115572223 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130624103 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119231681 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164912127 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118948461 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071371742 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114935528 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095486692 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078108937 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140591947 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073215353 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168127526 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09793727 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.119880301 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12524244 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10615527 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105195209 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14912042 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133807649 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100283343 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083504035 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10064225 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.11292341 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13573655 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084239417 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104130245 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109745817 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077499762 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12553715 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072371018 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115756997 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091778908 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114555501 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121309233 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076044751 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.261316921 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100824539 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099186363 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12432285 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149132319 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085945851 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078402827 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157210629 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116504046 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.099168038 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135464796 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148596076 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117309246 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093922645 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138054289 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158416046 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087181832 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152834989 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099339024 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080566891 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102281064 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117872731 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107673382 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.118316221 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078875053 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.114278317 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155539944 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.072323244 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093060096 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128769223 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079070545 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078072383 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101309902 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099967996 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093106878 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.0976703 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100176027 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129718589 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118851728 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100984872 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118856629 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097270186 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156766197 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085167473 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098741549 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099897897 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070578587 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.126346912 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145611211 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0762189 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150374075 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.1171584 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111496714 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114832661 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08089695 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128694367 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076094868 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.0702257 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132172586 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107126779 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10345352 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.139604481 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258592389 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.11919945 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.115491707 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124236167 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123309917 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.122854498 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104698554 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.085766345 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109760292 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123507171 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07095141 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088104696 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079944442 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101979544 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091056894 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081614432 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135304196 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116074887 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105933288 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110152388 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092618716 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140005783 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076174683 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120050397 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117508393 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092003965 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144797253 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14306756 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127545366 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096893431 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129748944 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071142537 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072763391 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086221153 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118721113 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081323046 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081227978 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109644304 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140333002 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122238039 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129269442 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118296715 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113546369 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147198901 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070559921 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115342838 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134932863 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115668064 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.100535178 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088848396 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.094479915 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134019972 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100025174 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173434876 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109646213 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119644816 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14688706 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097807379 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075975467 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098223817 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122604311 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096193756 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.281422216 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095825783 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085061128 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103182497 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076299996 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098821557 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120069844 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112037853 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129694838 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.106531664 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125183673 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075379243 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108116538 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116620372 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115070358 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081020365 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111985764 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154845305 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094428073 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11226383 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142592667 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077015914 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134105836 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162757781 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138744768 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082039618 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101418948 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115920252 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119567796 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114019642 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130418269 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100215149 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133165623 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106353578 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.082040493 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084027872 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092902477 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100351968 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.10911791 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.099981768 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.109407867 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092201858 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124103995 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098565636 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106143379 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112171002 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096864897 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092017482 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093006117 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167059596 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112871747 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1644852 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096359392 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.133619059 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149296335 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072937639 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075973403 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077290616 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128320296 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081008543 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122150766 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.252504688 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111661673 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118878331 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131890352 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092659035 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069863818 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104906258 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127157945 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118465804 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094249349 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.099351423 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15054492 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.113942192 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076702259 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108335129 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111493861 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099416159 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163240419 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079022 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105089712 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074311543 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077391341 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118150718 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144749889 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081552692 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.096476419 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115975453 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10714611 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119127089 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094838978 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106646333 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125158223 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139179552 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122387577 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086318759 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107140095 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120768206 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145613497 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098384138 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09659133 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163631221 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144666839 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.149212148 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.084833292 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108852425 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10881744 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104494789 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129415209 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081693877 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150829491 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079200686 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12701916 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096943864 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086300982 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12124149 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.107702732 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084703281 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13356218 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110801663 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079432973 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076391192 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25782132 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114210689 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09932548 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072720868 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1327087 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071990089 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129188953 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162517631 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078189728 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100847098 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092047352 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079939122 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100364752 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098020138 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083870864 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.096147292 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159361541 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08424579 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137157082 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125835854 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106812016 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12927155 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099374196 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639704317 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077186556 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141931103 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111016318 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165524659 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096015657 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11329777 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105763535 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114823676 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134092265 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097487628 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175732295 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123233359 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.11200593 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076699249 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097442693 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099508898 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08590528 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103864414 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108802509 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108018486 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091620897 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.112219086 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116323613 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080374392 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093046123 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145156465 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110362671 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1361025 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129977409 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081547061 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112125493 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127980051 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076960393 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.112522221 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1427198 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.248270761 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098779035 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080687787 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.096949179 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16205357 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.071596447 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148821462 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114587223 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107763894 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109401133 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.105488781 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124434326 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099408461 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116109342 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089271168 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.104079632 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144256691 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081539581 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076383987 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100696017 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105866444 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094037917 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094504019 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096395259 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141776925 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070455418 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094344203 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110728894 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135314494 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160181048 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.102633755 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081047741 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113451537 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113096561 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.10900591 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115922786 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.07896778 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078568284 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079009964 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.09781727 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.119708313 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108819879 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114368458 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104788838 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151179784 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081089144 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222681197 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092285982 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101188806 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.086547361 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077435842 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092995462 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092887227 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099854891 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106389204 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162869736 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091860649 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086227521 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088783472 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07231041 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080456726 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118781789 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106527466 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112064549 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098375317 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.078766045 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097956533 seconds)
  done (took 56.544925918 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.105701774 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.07768832 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097359358 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.143398326 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120797008 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199421104 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.149806704 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188387941 seconds)
  done (took 2.683810681 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068517202 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.09425002 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103292918 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082479225 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066903429 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068152902 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223388692 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081177518 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066968576 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091284773 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076998556 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068536978 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.444088831 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066392745 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067601896 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.075921678 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067462957 seconds)
  done (took 3.370866949 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.376630803 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.599556771 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.350364407 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075104161 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.844785194 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088686213 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.195048673 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137229165 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081253243 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.531001744 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.364076143 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132818585 seconds)
  done (took 18.344583363 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.081209281 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075049481 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.089512199 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.089563678 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.077388682 seconds)
  done (took 1.978933282 seconds)
done (took 104.250132801 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08067766 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.336700715 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.068428964 seconds)
  done (took 1.995715224 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090304343 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088395027 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.088659782 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086094741 seconds)
  done (took 1.92681614 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074329711 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076918241 seconds)
  done (took 1.71715165 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225228352 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.174257214 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095073001 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082546585 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080438603 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080379495 seconds)
  done (took 1.815207841 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072634093 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.072514083 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072929461 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.073437655 seconds)
  done (took 1.858851698 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.068392759 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.066973385 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.069378261 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071618531 seconds)
  done (took 1.844726961 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.083999732 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084319047 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078756484 seconds)
  done (took 1.815725134 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101261369 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090006803 seconds)
  done (took 1.759838686 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081069663 seconds)
  done (took 1.651040469 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.088845523 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099108356 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131645101 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114172942 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13774859 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.114357723 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.083985238 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08487522 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07855481 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085946122 seconds)
  done (took 2.588272311 seconds)
done (took 21.112823762 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078092106 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.36980456 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360175536 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089458351 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66885048 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357101809 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.969279076 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092421835 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.140320599 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068333844 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084719655 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649842537 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.960801308 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.325126687 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.945434719 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32440338 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649806411 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069104338 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068032204 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068282743 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.953575828 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068361295 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068137779 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068928042 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648964156 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372871457 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068863822 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325740266 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068913235 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070665554 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356221089 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069485472 seconds)
  done (took 16.03086364 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070922612 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122371208 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073152943 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084129793 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070724816 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070763539 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072141032 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069195601 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119676816 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068750253 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085109115 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068414842 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071965873 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06930474 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087683189 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069099008 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069958693 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070202833 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069923109 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070503028 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087719859 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06942833 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072159484 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070118027 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069388579 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081353015 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07016992 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069417639 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069858007 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071290341 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072393793 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070229488 seconds)
  done (took 4.01100827 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115661943 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125160534 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073645837 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105820245 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112714543 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071114561 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145488665 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092699266 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127001656 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068596418 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085067267 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069125802 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10276212 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069580051 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088845947 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070061957 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070353167 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06998336 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069517813 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069513021 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.0883604 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071012036 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070910559 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070019767 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069958033 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083700063 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069987744 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070184469 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069588393 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071273495 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072797146 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069801782 seconds)
  done (took 4.262673739 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070245587 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072702963 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08046707 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081095666 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067196438 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070570223 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071438716 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.067556608 seconds)
  done (took 2.16575072 seconds)
done (took 28.049324631 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078132776 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068418324 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071389655 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087015732 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073563305 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078841864 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065479258 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074526265 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071961659 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07205523 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073688007 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067464329 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070551478 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065852995 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072636802 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067111295 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080947962 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070957107 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079978195 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080651306 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069625317 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07349037 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075028303 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082476995 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083646812 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083935273 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079049702 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074882113 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069324739 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.072964601 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071339538 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079576841 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081719747 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081685862 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067633685 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067680274 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072131892 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069248888 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082054426 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076739174 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068947596 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076606159 seconds)
  done (took 4.688862912 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08483836 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089363168 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082404818 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.079321908 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.089784669 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082703392 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086659248 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077702167 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077668545 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086218998 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074389137 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081341894 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078716223 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.072481709 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077046786 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074737244 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.079683961 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07344359 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077200498 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077526178 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087823717 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072681691 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087460641 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079160212 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074986384 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080321349 seconds)
  done (took 3.677881753 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07367212 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085921617 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091851937 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142734148 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.11113801 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080406123 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081141654 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091211859 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096131631 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068584537 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072871268 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092286365 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092465367 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073960336 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068482418 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084077754 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083802747 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070462208 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074987558 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096773442 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089071199 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085232901 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094278967 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084658635 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067699749 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071155852 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072904806 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086703776 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070910991 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079639314 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071644072 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072669185 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.07012421 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078830448 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071005549 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068040947 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092405621 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079260057 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080783731 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068762266 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077352187 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069189216 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093477392 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127572483 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06734087 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073427948 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.071735625 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079424436 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067574639 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095247314 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079825394 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067896821 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.068959972 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067405406 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067928369 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.070453164 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069836579 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070336819 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077946667 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074876809 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089844903 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072751597 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085164234 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067288428 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078173088 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067220838 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070043031 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066992023 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09632421 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.06990753 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111534895 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069483464 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.066612644 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078706206 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077813159 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073733044 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067653462 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085175105 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079463358 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071847634 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076922846 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071423121 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071689131 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097454214 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068587375 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067569794 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.066819769 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.071791421 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071240506 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068848166 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079724999 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06712135 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071511863 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.085685454 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067645263 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068819683 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071665902 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070690479 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067549639 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078250169 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07188497 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069221888 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078092051 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06852464 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071974234 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080860095 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074585226 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067025917 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070116778 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071454095 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068872292 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069333921 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071231056 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069814758 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.074694476 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074053771 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073462672 seconds)
  done (took 10.651640655 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.163081308 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154328429 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070098759 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.147252643 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076418107 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.0800742 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149761335 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094936782 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.0685146 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069580412 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068706039 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109102527 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105426785 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115235337 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080611634 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069050785 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.090733515 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114333945 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152896799 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14622016 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090932272 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076562714 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071184798 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069931099 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070029059 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078100215 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084959489 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076938988 seconds)
  done (took 4.372626473 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078320938 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103154284 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072886355 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090573724 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088332399 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068929524 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070599494 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070205919 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.084919432 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078070374 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06894879 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073799439 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073202345 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07231522 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06927891 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075242505 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075791769 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068032033 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072770092 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074012684 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078888278 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093970263 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072465516 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068283253 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071555613 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068821676 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076551568 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083284305 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069354205 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.104720958 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066260542 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073642762 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082672268 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069298369 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068722046 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068792942 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068712784 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069227508 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070159385 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067179203 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067353395 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072366846 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067383327 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.076776801 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081902732 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071065061 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.070817171 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071523986 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071644233 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066073085 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072376917 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072200996 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074100477 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077362618 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072928217 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071227654 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069514307 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.094722091 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074366325 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068351904 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069864946 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069863431 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073152576 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.080210753 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083908234 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071041026 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067206485 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068913193 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.081508112 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081140257 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068156115 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073004652 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066298064 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.0703587 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071263277 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071070097 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069375555 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067594695 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068704927 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068661855 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.069304624 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068197138 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.067955465 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07142781 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067459764 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070360122 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068859172 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.069848821 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077100725 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068223396 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072550738 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069658359 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067416402 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071344483 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074131332 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072005009 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079508698 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.079757056 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06955427 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066956511 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082182434 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071853314 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068358019 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07416868 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073138893 seconds)
  done (took 9.336988137 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090679699 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068907744 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084946794 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091093694 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.077943205 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074273868 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078607445 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068488322 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084521608 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073219858 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076339921 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067399801 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079392354 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077993537 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068892081 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.07855546 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071395135 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086352733 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082772625 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067477757 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077088005 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080902886 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080406122 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082671956 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.081824174 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083429387 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.080388384 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078818258 seconds)
  done (took 3.832439119 seconds)
done (took 38.140746501 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.673747759 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.832909298 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.655720918 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.858676592 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.799921638 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.775201097 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.747824025 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.660946126 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.822988259 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.699328559 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.886196613 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.720347637 seconds)
done (took 63.868614794 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.720024173 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.800854964 seconds)
    (2/2) benchmarking "String"...
    done (took 1.899759449 seconds)
  done (took 5.292501738 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.884586724 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.450268521 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.894011986 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.653617504 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.664134192 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.95025827 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.442338337 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.098660607 seconds)
  done (took 29.745393367 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.820046008 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.88196717 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.358317243 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.393346138 seconds)
  done (took 15.092484102 seconds)
done (took 61.423993642 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.669366858 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.726239356 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.671361309 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.651289582 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.746819287 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.681348095 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.98657273 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.696511471 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.660580393 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.657238564 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.663320481 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.154631823 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.687564306 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.009195975 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.661161643 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.655943819 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.688053299 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.178837763 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.808643081 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.684426871 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.663336086 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.721536429 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.665625404 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.812659843 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.69297877 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.663516353 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.066786229 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.656196345 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.274504799 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.668797809 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.697171038 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.162879584 seconds)
  done (took 200.677825644 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.658950424 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.496431165 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.613209396 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.697943095 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.95970281 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.832258521 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.756158678 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.035576321 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.661429903 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.659436681 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.812909787 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.65900337 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.838629921 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.632180008 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.681633198 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.741952978 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.807893529 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.850728916 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.686620367 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.804690888 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.669022284 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.655847036 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.604805748 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.793619065 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.674243545 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.711107711 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.670269729 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.675366632 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.853887007 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.770352716 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.687205945 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.666408332 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.86446848 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.530783051 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.674346747 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.669359286 seconds)
  done (took 164.656375516 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.836704909 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.663218264 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.66144958 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.660945178 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.662234797 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.666805079 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.661102865 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.780959987 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.784121401 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.302559812 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.684706816 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.717970832 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.661823543 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.445099562 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.663843337 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.727807711 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.673446803 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.662575003 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.675867713 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.688717199 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.661383452 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.667472346 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.781263599 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.678348523 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.662071331 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.670765076 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.662342241 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.667412578 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.045407874 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.662562521 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.810341345 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.663566751 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.668192181 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.931401383 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.909776855 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.663751199 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.662937297 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.517702749 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.750446707 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.664464347 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.668006223 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.662372112 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.880823253 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.668908958 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.66821884 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.66377362 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.666178137 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.810095152 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.662686786 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.785174827 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.663279793 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.138600755 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.663155644 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.662799319 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.826163998 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.271952118 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.671352145 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.675542361 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.672023008 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.678059382 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.677845551 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.527304781 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.905992941 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.667024197 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.670876037 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.672071927 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.682219041 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.66634186 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.904866213 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.664896446 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.926738793 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.726403515 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.911136479 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.798202988 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.670823332 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.736114019 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.758026897 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.662533291 seconds)
    (78/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.669550304 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.667614975 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.667441187 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.666478422 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.7478805 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.664306251 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.839648563 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.674722459 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.671395073 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.721875868 seconds)
    (88/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.669527777 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.734883977 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.664377144 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.521230059 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.669236283 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.665823372 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.926991626 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.727378849 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.665870287 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.664305335 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.817773795 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.782163183 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.36844311 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.668724666 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.417504609 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.820385212 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.663236218 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.81691002 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.667832057 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.745575756 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.670236649 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.669152212 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.700135423 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.662611119 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.714599207 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.662368616 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.036106213 seconds)
  done (took 389.538353214 seconds)
done (took 758.364157106 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.257767663 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.213554757 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.313258127 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.239145218 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.202527524 seconds)
  done (took 12.819718134 seconds)
done (took 14.416933609 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.744361683 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.748391563 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.681643287 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.747534462 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.678084847 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.743969508 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.729733655 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.68597376 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.713606416 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.68539162 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.715979578 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.685920662 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.670879294 seconds)
  done (took 23.827353912 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.881508626 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.87587901 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.723269681 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.889138369 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.696998548 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.878383798 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.809805412 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.811758928 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.796832051 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.669676923 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.665202751 seconds)
  done (took 21.295855019 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.890829709 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.884908818 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.730576207 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.887191785 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.703455263 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.881850095 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.811302602 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.822025989 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.799455152 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.667258811 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.66765124 seconds)
  done (took 21.342682245 seconds)
done (took 68.062948612 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.667429327 seconds)
  done (took 3.262462105 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.682348862 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.837370182 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.672853973 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.665679113 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.667699288 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.663148908 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.662011407 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.681881656 seconds)
  done (took 15.131271604 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.667338501 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.666722127 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.665035658 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.666597735 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.668953203 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.66782802 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.66590998 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.667050296 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.66711068 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.669103964 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.667470527 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.667128344 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.668535872 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.666153847 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.667808115 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.667569603 seconds)
  done (took 28.27243056 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.671532072 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.668610243 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.668016357 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.668358804 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.668630255 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.668423925 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.667616345 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.669710836 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.666738878 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.670296094 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.668343825 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.668292918 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.670689457 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.668381845 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.668154648 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.669489519 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.668116148 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.667840732 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.674259516 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.67104164 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.672006912 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.671378968 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.670346506 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.671676276 seconds)
  done (took 41.667885339 seconds)
done (took 89.931010598 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.488585418 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.299464197 seconds)
  done (took 9.386017061 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.675071935 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.671516982 seconds)
  done (took 5.015954224 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.668108489 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.660589 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.660120807 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.658354914 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.659210208 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.659720644 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.659940061 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.660875908 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.659953193 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.659565627 seconds)
  done (took 18.202930083 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.661442813 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.661436209 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.661810226 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.6611259 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.659953151 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.661222495 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.662744944 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.661197842 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.662916787 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.660020627 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.660991008 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.660391688 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.661432036 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.660606549 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.661450095 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.661601368 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.661700991 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.660178772 seconds)
  done (took 31.490410685 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.659001223 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.661069229 seconds)
  done (took 4.909380932 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.660529572 seconds)
    (2/7) benchmarking "second"...
    done (took 1.660772794 seconds)
    (3/7) benchmarking "month"...
    done (took 1.661793535 seconds)
    (4/7) benchmarking "year"...
    done (took 1.660643022 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.662683934 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.660987396 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.661801389 seconds)
  done (took 13.217827278 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.663241138 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.832586036 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.898309994 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.290749727 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.66387914 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.663412852 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.558702385 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.663360022 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.667031608 seconds)
  done (took 18.490619848 seconds)
done (took 102.312810225 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.551654953 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.65430152 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.873619991 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.783428758 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.677356954 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.993756443 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.657257982 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.946501149 seconds)
done (took 41.728230707 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.684072802 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.428799373 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.470121984 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.683685837 seconds)
  done (took 15.177731889 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.663982827 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.974428077 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.679411518 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.494421533 seconds)
  done (took 21.466401372 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.020336323 seconds)
    (2/2) benchmarking "read"...
    done (took 2.004936227 seconds)
  done (took 5.619706426 seconds)
done (took 50.544640717 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.661513196 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.659359698 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.65778122 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.660585368 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.658024958 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.659393359 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.660822609 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.657547067 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.657068512 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.658074669 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.65792779 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.655930022 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.657319261 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.658209297 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.657395305 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.657225809 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.654472978 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.657573461 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.657379006 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.658248055 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.653531319 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.658299455 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.657482827 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.654341261 seconds)
  done (took 41.373356235 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.657387351 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.656617766 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.655821366 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.655075669 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.657682564 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.655826193 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.65848645 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.653973971 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.65432785 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.654462699 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.656227088 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.656756867 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.658737788 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.656054522 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.656092246 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.658030936 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.6565229 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.654851786 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.65408849 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.65561344 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.657774936 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.656917444 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.656715311 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.655921228 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.657182785 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.656704002 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.656016747 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.657637248 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.655317588 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.655157893 seconds)
  done (took 51.273285037 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.659315619 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.665324792 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.657303463 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.65735594 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.656884323 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.657465819 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.658014834 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.656668187 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.655896469 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.657441779 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.655833055 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.656482468 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.658791122 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.658570409 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.656916855 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.658376097 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.657877769 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.660606439 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.659322434 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.657458641 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.657611242 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.657773037 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.657726228 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.659062013 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.657416245 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.658858347 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.658238686 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.658878973 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.656155111 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.657793718 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.656373264 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.656334115 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.657563548 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.65921257 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.660048063 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.658995857 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.662415159 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.666605792 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.658687384 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.657855597 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.657337825 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.658285487 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.660359925 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.660156882 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.66068773 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.656387618 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.659447455 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.658241177 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.657441816 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.659860571 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.658632427 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.660136538 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.658603258 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.657040307 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.660689578 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.659521974 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.659698264 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.660672538 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.659816858 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.661870128 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.657586457 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.659707018 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.659746656 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.660069403 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.660450288 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.659967579 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.659900808 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.659589927 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.660465065 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.659998955 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.660103893 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.661197857 seconds)
  done (took 121.026258752 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.66016661 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.661477096 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.660098721 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.660266508 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.659998409 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.661327722 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.657260948 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.659155264 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.65789273 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.658807865 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.661749942 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.659160208 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.661337074 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.658658262 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.65789329 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.660062639 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.661019694 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.658557544 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.659932036 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.658757728 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.657903144 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.657492015 seconds)
  done (took 38.096195988 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.660040515 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.659230127 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.658372763 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.659530057 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.658404383 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.664815851 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.658732372 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.658880768 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.657914262 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.658148435 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.658616042 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.661415477 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.656870463 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.65804872 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.659325301 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.655766008 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.657176379 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.657480431 seconds)
  done (took 31.44698099 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.65435974 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.654478248 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.655307864 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.654997793 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.654940865 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.660351769 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.657348069 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.655206609 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.653526355 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.654367534 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.654640011 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.655242446 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.657836127 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.656042053 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.656047683 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.654534694 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.655287451 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.653971666 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.654215065 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.656502106 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.654553771 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.655359388 seconds)
  done (took 38.00769082 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.654784668 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.656264063 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.656445676 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.656522375 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.65588424 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.653605032 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.657928574 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.652171289 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.653827044 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.653961518 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.654196065 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.652739986 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.654149237 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.653700706 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.652700741 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.6534334 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.654419513 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.654250055 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.655603331 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.654157581 seconds)
  done (took 34.674804245 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.664470438 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.661942803 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.66551019 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.665569857 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.66539033 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.664045181 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.665302295 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.662991553 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.665331525 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.6655204 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.665720693 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.665567333 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.664194768 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.662358566 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.663249354 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.663093454 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.665326844 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.66684537 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.665479793 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.6639514 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.664602152 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.662452667 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.666185264 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.666615859 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.664114956 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.66352464 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.663459988 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.666365635 seconds)
  done (took 48.193860922 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.653023036 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.652090185 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.6533695 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.656005311 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.654137062 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.655112909 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.656289068 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.654640029 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.65406307 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.656610076 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.659374817 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.653570814 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.654769177 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.655765033 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.656923502 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.657077807 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.655588801 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.653261534 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.656201969 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.656173998 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.656927511 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.655040116 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.657015351 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.656827129 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.656874675 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.656463938 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.655879849 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.658709738 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.658038775 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.65614479 seconds)
  done (took 51.257879405 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.678820539 seconds)
    (2/2) benchmarking "in"...
    done (took 1.677054154 seconds)
  done (took 4.941890828 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.658309181 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.656916129 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.65583124 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.658007405 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.656659927 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.658376997 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.660506398 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.656343223 seconds)
  done (took 14.848592705 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.659066651 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.655283701 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.655018923 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.656357419 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.654102027 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.655332786 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.669104494 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.652744828 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.662629343 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.657097322 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.666273471 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.663124176 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.661554302 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.661953488 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.65935556 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.660971093 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.653165798 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.654701317 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.654435227 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.655103023 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.654702731 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.663478736 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.661792672 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.654666702 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.660376854 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.670228761 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.662477974 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.65667119 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.659864665 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.661263605 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.658482797 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.655362556 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.658106035 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.655434367 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.655478735 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.653696194 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.667262982 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.660440911 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.668923648 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.65497273 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.654605891 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.656098683 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.66457729 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.663614009 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.664789913 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.654985994 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.657686207 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.654663726 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.657208578 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.662838387 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.665012849 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.662016525 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.658701791 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.666026303 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.664537908 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.669389576 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.654134806 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.664709016 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.672751764 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.674239337 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.668312593 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.668816886 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.666620797 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.657108474 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.670103488 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.68686399 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.672701239 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.657255993 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.660043279 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.659521467 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.672384126 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.67407331 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.673155016 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.657784432 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.657883752 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.656400271 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.665684759 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.659399111 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.670595168 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.665592602 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.656509956 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.659947014 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.671359106 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.683872974 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.66670255 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.659431165 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.65803421 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.658825241 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.657324634 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.675575622 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.658135075 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.660331846 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.657689711 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.668271209 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.661637342 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.660921935 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.657707364 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.666091666 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.65956194 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.658112421 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.660594509 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.671131099 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.673072502 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.659270083 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.661171461 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.671261925 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.656767223 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.665349329 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.670503126 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.65681196 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.660418501 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.659501372 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.669305699 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.661444977 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.667319055 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.667495657 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.662163514 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.666431306 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.658806935 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.659619452 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.675326296 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.687505617 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.662819727 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.659488784 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.666553438 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.672411684 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.660936642 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.669706076 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.662148104 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.660730175 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.661193105 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.667326549 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.660044105 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.668726651 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.660283864 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.667357022 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.660572829 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.661872861 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.66140129 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.668361943 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.663919043 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.66941136 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.665520161 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.668972349 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.662082896 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.666895194 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.674983717 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.65933692 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.669479 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.661559227 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.661278891 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.659133133 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.66828849 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.658765118 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.660748363 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.660393541 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.668176284 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.660612608 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.662374458 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.660108612 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.660600086 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.66155078 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.66894549 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.662092615 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.670033944 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.668203367 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.661842723 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.661750898 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.663810036 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.66489235 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.664391261 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.659061433 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.668151866 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.667884744 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.663878334 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.66395448 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.670282078 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.660670164 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.662322973 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.665097299 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.669385648 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.676762898 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.663836207 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.674617772 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.662314338 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.664696855 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.665963404 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.669663393 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.666981163 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.661257895 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.673594646 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.67349766 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.680352465 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.675275895 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.663599219 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.666760539 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.662460494 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.66810426 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.673242651 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.661273141 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.663179068 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.663592184 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.670884879 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.666300299 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.670793854 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.663684789 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.66393853 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.664320631 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.663083163 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.665741476 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.662998098 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.671615351 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.671196911 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.666235999 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.663082328 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.664630692 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.668307251 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.662858039 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.664541703 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.661850431 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.663056534 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.667852976 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.675795112 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.662859145 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.67087757 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.670504319 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.670715183 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.666632909 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.665396759 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.672914823 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.671848711 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.677151409 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.66555932 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.669592752 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.678877325 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.66661271 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.664823884 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.672712014 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.666951739 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.667350062 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.672302398 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.670002657 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.667101472 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.664081114 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.664746897 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.670987745 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.664376973 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.675891591 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.66436297 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.672246082 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.667834605 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.667194178 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.666508201 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.672680901 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.673499066 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.666129479 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.675288291 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.664502125 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.664890706 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.672418826 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.667764765 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.666177932 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.66641881 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.674069473 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.672642709 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.674676842 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.664858261 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.669288201 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.668160712 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.669376782 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.671073404 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.668448901 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.671956066 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.681225542 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.671570361 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.679592975 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.673306118 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.666471611 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.676562003 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.667358992 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.668177821 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.670870706 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.674153658 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.673190198 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.670470802 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.667046241 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.67541059 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.667059886 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.673664451 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.674421316 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.672437971 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.668179778 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.671973716 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.671138931 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.667980349 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.666809163 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.674044642 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.668682843 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.67775412 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.675488163 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.667807525 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.674423564 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.681225201 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.674077867 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.676487152 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.67380824 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.674692859 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.666545614 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.670370154 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.669124762 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.678035561 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.675232636 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.677683318 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.68333309 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.674085248 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.682811116 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.668863384 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.677519769 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.679708722 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.672574369 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.669427543 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.670331883 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.669397407 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.684374774 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.669104914 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.667751716 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.672544174 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.670918669 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.667276813 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.669341895 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.672000265 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.673689524 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.673469286 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.6855151 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.670885061 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.679261175 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.680979799 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.671338387 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.670867089 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.673867124 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.66957896 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.682277067 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.671123264 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.676195284 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.676056198 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.669661922 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.674644064 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.670165938 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.672649072 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.67249188 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.669297121 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.683761158 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.66950299 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.676328382 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.671045992 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.68366921 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.672172099 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.683743975 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.669060415 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.671619973 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.673282517 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.670668608 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.673187762 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.671449443 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.676447979 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.670860525 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.671224755 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.674672577 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.673972168 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.674751865 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.677787297 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.670804584 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.677228352 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.684100186 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.691795374 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.681054555 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.6753909 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.669646804 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.676780137 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.676699379 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.668668322 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.67179183 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.677158873 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.686035911 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.677228347 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.677752812 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.673495857 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.680266685 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.670903155 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.672466667 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.67264688 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.671949257 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.672721896 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.672840044 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.674053732 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.680087411 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.669622064 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.672802158 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.679293148 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.674752196 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.68341877 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.668847691 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.671436346 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.670301385 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.669863823 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.679866408 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.674391051 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.668860164 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.675750885 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.668798571 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.675117163 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.682211073 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.675014666 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.677188318 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.674406188 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.671246333 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.675558838 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.672228507 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.671043469 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.669373181 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.673494184 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.677789128 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.67096993 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.674775778 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.6702039 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.668699694 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.671622286 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.669758106 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.67682948 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.684665107 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.676972696 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.670156784 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.669076935 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.668323398 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.670148901 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.676987207 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.682459106 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.676021416 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.684770289 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.678264115 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.673346274 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.680744562 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.678548601 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.682823569 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.668239313 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.678259593 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.670756138 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.682198684 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.672156221 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.677978801 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.670798751 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.681304763 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.675530622 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.672882494 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.683537198 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.673876088 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.671791312 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.676269897 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.679431932 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.679745915 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.671673878 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.670024957 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.676464326 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.684262317 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.679934209 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.672579082 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.680048499 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.670013973 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.678827661 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.677089514 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.674063426 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.682060357 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.672715156 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.67707625 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.673567161 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.673552573 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.673311553 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.674522917 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.675006554 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.685162521 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.680548587 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.676114967 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.68506386 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.685440806 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.677314889 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.674299313 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.673651587 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.673668854 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.674641566 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.6770331 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.674535472 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.677221141 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.680211111 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.672019101 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.673847479 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.676690038 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.674481135 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.683766512 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.688940709 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.67948992 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.674635722 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.675490009 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.674889885 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.681437058 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.674797508 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.672457955 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.679646504 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.680777466 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.673582502 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.674473689 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.67292408 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.680097331 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.693895929 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.670946862 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.676517246 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.677493643 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.683484667 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.672114734 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.673142825 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.675399558 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.675520712 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.679587947 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.679420775 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.675150831 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.686952041 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.680195487 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.67316593 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.677361027 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.681971161 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.679214772 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.683445049 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.679364571 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.674188058 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.68346164 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.695622182 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.674215635 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.687103279 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.709587315 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.674296669 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.676118562 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.674758209 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.682406203 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.674484026 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.674305315 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.67667277 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.674835105 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.674661628 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.676425501 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.674162412 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.686013714 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.68548436 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.675343016 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.675461896 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.676808734 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.675530396 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.677136721 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.675919887 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.675555403 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.675071232 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.674876503 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.675960038 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.681611479 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.69250274 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.682880374 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.674454444 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.677528319 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.679325771 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.685106164 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.682948948 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.691539354 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.68166397 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.676430969 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.678276811 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.683080251 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.675323158 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.677233589 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.682121252 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.683728303 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.681679763 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.676982918 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.691740478 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.683020965 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.685436732 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.673969787 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.681965697 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.678396306 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.685923938 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.679086846 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.679133085 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.685529185 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.680483861 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.683253594 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.677607609 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.678302031 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.686318364 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.6873636 seconds)
  done (took 997.5227773 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.677342 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.679469218 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.679072988 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.680389159 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.67772207 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.68603694 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.679694646 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.679741912 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.6812924 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.679996988 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.680525443 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.684149207 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.677451046 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.679768061 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.678897339 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.679858413 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.679174284 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.682912099 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.679729244 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.680887307 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.677375586 seconds)
  done (took 36.892945597 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.679830033 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.682317761 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.679964712 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.680959196 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.68081777 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.680498264 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.680213543 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.6818799 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.67948087 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.679430814 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.682253602 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.681961148 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.679103749 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.684272085 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.680080009 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.68019311 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.682613357 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.682404463 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.681804665 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.68327966 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.681977023 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.682688452 seconds)
  done (took 38.601278508 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.682803489 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.683878943 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.685453504 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.68446873 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.684754605 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.68215417 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.680363862 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.68244406 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.684304968 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.682245923 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.679205645 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.681850817 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.690904849 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.689373685 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.683169454 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.680186853 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.827420006 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.680674884 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.683599263 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.681535069 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.684016295 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.692331184 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.680157764 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.681175697 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.679359995 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.682367935 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.692519496 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.682163891 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.681181639 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.682834694 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.684573184 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.680695328 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.685500578 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.689573035 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.680787948 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.683868237 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.685286704 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.685620298 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.682307837 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.679986062 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.696316214 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.702907158 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.68359944 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.69738457 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.680952836 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.681787629 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.688846135 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.691612535 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.685433492 seconds)
  done (took 84.305831587 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.682799459 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.683347448 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.683562736 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.680765465 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.683712623 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.68468882 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.683582513 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.683862565 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.684095005 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.683166568 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.684381503 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.685241383 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.682337408 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.682475006 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.68539472 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.685150472 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.683803133 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.684529191 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.685487638 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.684283133 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.684336822 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.685938247 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.682259809 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.682936165 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.685223912 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.684769588 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.685137859 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.685001356 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.683894076 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.68473424 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.68434449 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.684703437 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.685028102 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.684701972 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.684749527 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.684922179 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.687850418 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.68515165 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.684666672 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.685018835 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.68420638 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.684939582 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.686322134 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.684777016 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.686396514 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.684315126 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.685689672 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.685696994 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.684212404 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.684498445 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.683349541 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.685910096 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.685872563 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.688005771 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.684806324 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.684783248 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.686267582 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.683400558 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.684530583 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.686109867 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.683979565 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.684153259 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.684178486 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.684897648 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.685386976 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.685202283 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.6854074 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.683066079 seconds)
  done (took 116.169094367 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.685293992 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.684547746 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.689729219 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.686080598 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.686178532 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.685469847 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.685161755 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.685571472 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.688340996 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.686469505 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.686517922 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.686242377 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.689077823 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.688754558 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.686146836 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.688488909 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.687634954 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.688632998 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.687095338 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.690927757 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.687900238 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.687863184 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.689434767 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.686362916 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.689908173 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.689087928 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.687067966 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.688246633 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.688241954 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.687011212 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.687709476 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.689216632 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.688841771 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.686751145 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.687830969 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.688266413 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.689079612 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.69103972 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.688908723 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.689770729 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.690277577 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.689467606 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.688252315 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.693865015 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.688899479 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.68720758 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.68803713 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.68924984 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.688574507 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.692893239 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.686963353 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.687356848 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.687326732 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.687926906 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.688144584 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.687539702 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.688701008 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.688488403 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.688165589 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.688289814 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.686461544 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.689953339 seconds)
  done (took 106.279603461 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.687803448 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.686786044 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.687476559 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.687884229 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.692368564 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.687490825 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.687895665 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.687109907 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.687421484 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.686936973 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.6906458 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.686849062 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.688714374 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.688928245 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.687658895 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.689363694 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.691024934 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.689030278 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.687219446 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.687746439 seconds)
  done (took 35.380956788 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.687939861 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.69080675 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.688372159 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.688814462 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.687191172 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.688177953 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.687008416 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.690178557 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.688508983 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.687678682 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.691246522 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.691067729 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.689658633 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.690616654 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.689081965 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.690179273 seconds)
  done (took 28.643809331 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.688770275 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.693070426 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.689566405 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.688825082 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.688592631 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.68960145 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.689673664 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.691046788 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.688327377 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.691017439 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.689012022 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.689608194 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.68947316 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.689556194 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.688716849 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.689579745 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.689189346 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.690531526 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.689877462 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.690417098 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.690221242 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.688889905 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.688418779 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.689224427 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.687400933 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.690307054 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.690567074 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.690451004 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.689727619 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.689847793 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.690523153 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.69093917 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.691516116 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.689381248 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.690834584 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.689537753 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.690009585 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.688924463 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.691276941 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.689989687 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.689480979 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.689685578 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.689639532 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.689891128 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.688493252 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.690922459 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.68959182 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.690392136 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.690081213 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.689574537 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.691400018 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.690978705 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.690073235 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.689444219 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.689427821 seconds)
  done (took 94.5588436 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.691663283 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.690998064 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.690317055 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.690645024 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.690708081 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.6894221 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.692235568 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.69195364 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.692389753 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.690684171 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.692478539 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.692575613 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.69250672 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.692201205 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.693627479 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.691687886 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.691429637 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.69267204 seconds)
  done (took 32.069166754 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.691349742 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.692745247 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.692311094 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.691908613 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.690666247 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.692706196 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.691336248 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.691430028 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.692248833 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.692815692 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.692056034 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.690147592 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.691304936 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.691644483 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.694224404 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.692327606 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.692129185 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.691352239 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.691419547 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.69216082 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.692956947 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.69353734 seconds)
  done (took 38.84400288 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.691571782 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.691233702 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.704463084 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.711023787 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.710346234 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.722214224 seconds)
  done (took 11.850281836 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.692945033 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.693158918 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.693038101 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.692455573 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.693362059 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.691783165 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.693085928 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.691958899 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.693712324 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.693570293 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.69276094 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.693717647 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.692238691 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.69430734 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.693551377 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.69328398 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.693313768 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.694583314 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.694053668 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.694943752 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.693284822 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.693363398 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.692188821 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.693468591 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.692523109 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.692792998 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.691988978 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.694645615 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.693576667 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.69326481 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.693813079 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.69392125 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.693725618 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696434628 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.693629757 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.69320618 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.694089647 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.693132643 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.698197527 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.692424333 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.693536075 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.693210279 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.692005689 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.693680505 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.695405464 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.692108735 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.694905489 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.695351489 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.695638629 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.697350001 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698025009 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.69530554 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695701552 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696781167 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696060305 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.695016959 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698680885 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.695015488 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.694340765 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.694944367 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.694615107 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696021137 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.699932857 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.695330459 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.694653569 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696502313 seconds)
  done (took 113.441773756 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.69577306 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.695892293 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.696550852 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.696624998 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.696093997 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696777726 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.69558682 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698254834 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.695733426 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.693569611 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.695408241 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.695163395 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.695986372 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70055696 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697091638 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.695187062 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.696802085 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698334769 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.697355641 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700082065 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697678225 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697553157 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.697127925 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.696751282 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.696185604 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.6975062 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.695612199 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696681978 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.696323741 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.697871312 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.697256834 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699148205 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.697461585 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.697055149 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.698666497 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.699194307 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.700258486 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.695831885 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698938924 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.699414958 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.700337067 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.696630385 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.700774237 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698288271 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.699302856 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.698783017 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698084027 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698118468 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.700152712 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.698841105 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.699127532 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.698787105 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698176008 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698865386 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.702748298 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.698659668 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.698117311 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.698506514 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699654454 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699676309 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.70175607 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.700492818 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.699589625 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.700088315 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.701352459 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701204863 seconds)
  done (took 113.696663141 seconds)
done (took 2324.991033485 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.754487271 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.780500347 seconds)
  done (took 15.163750247 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.860967702 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.814916579 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.699532558 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.710140175 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.696970973 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.699454697 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.711347648 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.69660113 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.697192549 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.698915235 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.697223825 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.879599243 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.760096794 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.69810067 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.697701335 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.788461887 seconds)
  done (took 49.442681973 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.700539882 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.70264966 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.710281547 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.706597155 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.699977273 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.712279555 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.731169241 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.706533746 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.732876599 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.712294952 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.766821366 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.709034051 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.702527304 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.749527492 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.712345701 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.714290832 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.794132402 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.77388233 seconds)
  done (took 32.668925431 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.775410276 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.703558969 seconds)
  done (took 10.116215435 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.711714013 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.751686114 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.786145569 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.721329453 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.70175971 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.705712834 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.733313254 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.730805495 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.728190827 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.727563975 seconds)
  done (took 68.933893725 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.708627151 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.705612215 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.705580983 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.701392181 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.700182734 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.705195286 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.702881306 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.702915427 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.34963091 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.734043925 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.708170796 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.708718846 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.702627166 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.704440032 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.704909764 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.724785872 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.819839909 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.703292261 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.705540849 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.711672546 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.706007359 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.759375091 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.718356269 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.708310784 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.733736367 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.34964912 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.711744528 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.708105291 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.818653677 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.706481378 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.705587131 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.89016629 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.707351385 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.163529866 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.972674975 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.707562449 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.714435565 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.710873935 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.706536024 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.815983034 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.705738606 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.709635169 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.594679918 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.953139805 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.801641391 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.745132452 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.997180294 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.718916805 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.705311642 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.73351241 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.707830698 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.70469756 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.715978597 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.213771513 seconds)
  done (took 123.569649077 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.706209446 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.04969102 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.869394461 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.705224458 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.986134969 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.915826199 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.707732511 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.749958175 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.704955449 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.932307269 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.959907909 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.809274214 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.706907777 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.707123565 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.707160955 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.703878609 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.857766914 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.77506962 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.709062563 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.702658499 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.731947268 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.94147459 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.824089393 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.709342245 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.731916759 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.911701404 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.82383508 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.807941808 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.422620711 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.703648742 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.767359791 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.70795358 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.706215785 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.704269097 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.86032414 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.796900024 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.785478477 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.705530085 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.705964568 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.70394451 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.44859873 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.903473415 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.798414356 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.832799027 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.955455536 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.90972012 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.484342575 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.70489157 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.443961392 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.868115102 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.93073906 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.930949268 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.824586478 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.711205209 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.236137196 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.704650557 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.706237727 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.954079937 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.926441884 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.802208507 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.708102669 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.705138071 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.705229056 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.995329547 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.709753074 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.801215938 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.709127651 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.70874442 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.799665458 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.803579405 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.935023315 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.916138274 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.735327117 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.063185 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.235331569 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.951079574 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.771246731 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.955610853 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.707632306 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.706405594 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.783674089 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.552499227 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.958912921 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.988079253 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.948004761 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.74209337 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.425135633 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.708008849 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.931254974 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.926567637 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.965353005 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.951138697 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.945804156 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.037745154 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.708818924 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.709624091 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.917015772 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.831232289 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.710689663 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.053101468 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.936622878 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.233657208 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.734918767 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.006854153 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.837451394 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.712570474 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.336660145 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.710204037 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.936274584 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.748744345 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.711212093 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.709747009 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.927159568 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.691580378 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.709630437 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.711106314 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.768969425 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.712075363 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.939623506 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.711779775 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.974708052 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.713647403 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.943466252 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.140582798 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.739645294 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.938741655 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.957580198 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.713760663 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.946960675 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.952932111 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.822969316 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.983108538 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.611391116 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.711453607 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.992136393 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.711354424 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.708419285 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.877851425 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.711133279 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.849492433 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.712059082 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.999900102 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.73035939 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.937659914 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.716828937 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.962597024 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.743581875 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.758260719 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.713951353 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.840744002 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.714701607 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.543123672 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.864629134 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.714586957 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.709978119 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.518258715 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.709865324 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.85677999 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.934844537 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.730204968 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.781890143 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.369281683 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.713052406 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.787832222 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.731642827 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.095066392 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.71349138 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.964766467 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.714440989 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.711948546 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.710854562 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.996563696 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.946108311 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.713416628 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.711002834 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.615856541 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.711596594 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.711143912 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.891464241 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.032844498 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.712184165 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.911131543 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.714399612 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.838294299 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.71860608 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.789261522 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.046424573 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.712258953 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.714172589 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.714275318 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.712055897 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.711505312 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.384491312 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.736157918 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.215079238 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.848814813 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.982456137 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.022694579 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.950704005 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.755120141 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.715942068 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.965172507 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.715741058 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.77406834 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.715642711 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.731804886 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.937694946 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.715962506 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.919507247 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.982790433 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.559902758 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.759246539 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.714138085 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.713803167 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.71513792 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.86046268 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.795276323 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.713938523 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.714147703 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.828532941 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.839034457 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.923865988 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.717117536 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.779179742 seconds)
  done (took 867.98471011 seconds)
done (took 1169.513403125 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.715711757 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.718487051 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.713749695 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.720170778 seconds)
  done (took 28.517061376 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.7154821 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.71523867 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.727437783 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.71486487 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.717253122 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.718568743 seconds)
  done (took 11.955934958 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.750749648 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.719851657 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.718092359 seconds)
  done (took 20.836577507 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.783751529 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.094402076 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.84507504 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.122583781 seconds)
  done (took 9.494654466 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.727031085 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.729585693 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.732021683 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.716295101 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.717961498 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.716747451 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.716577192 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.718094416 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.715943324 seconds)
  done (took 17.138664698 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.810438828 seconds)
done (took 93.401166973 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.637558533 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.052346269 seconds)
    (3/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.079527276 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.792797554 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.825353607 seconds)
    (6/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.851197338 seconds)
    (7/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.212342481 seconds)
    (8/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.945013139 seconds)
    (9/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.725695496 seconds)
    (10/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.950131024 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.827797207 seconds)
    (12/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.615702809 seconds)
    (13/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.729739114 seconds)
    (14/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.827252285 seconds)
    (15/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.747792805 seconds)
    (16/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.890465857 seconds)
    (17/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.725764764 seconds)
    (18/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.978888747 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.754842115 seconds)
    (20/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.010785889 seconds)
    (21/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.809109852 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.987450222 seconds)
    (23/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.886343338 seconds)
    (24/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.723158383 seconds)
    (25/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 8.024619988 seconds)
    (26/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.883159232 seconds)
    (27/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.727937202 seconds)
    (28/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 8.134995039 seconds)
    (29/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.019523606 seconds)
    (30/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.827748882 seconds)
    (31/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.818130608 seconds)
    (32/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.907653151 seconds)
    (33/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.116733245 seconds)
    (34/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.860098082 seconds)
    (35/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.726439677 seconds)
    (36/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.212094093 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.134272533 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.124601104 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.901670106 seconds)
    (40/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.737157313 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.846583059 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.832323758 seconds)
    (43/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.805407063 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.861183293 seconds)
    (45/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.725643608 seconds)
    (46/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 3.192392776 seconds)
    (47/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.758894507 seconds)
    (48/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.030180919 seconds)
    (49/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.797826542 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 1.943668084 seconds)
    (51/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.965621663 seconds)
    (52/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.091723495 seconds)
    (53/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.727555661 seconds)
    (54/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.816758233 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 6.825104716 seconds)
    (56/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.097936007 seconds)
    (57/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.173228651 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.986199524 seconds)
    (59/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.641202435 seconds)
    (60/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.101683789 seconds)
    (61/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.91832283 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.52616072 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.886021735 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.750871511 seconds)
    (65/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.728380232 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 3.281874007 seconds)
    (67/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.5445045 seconds)
    (68/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.840758811 seconds)
    (69/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.189241249 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.719610008 seconds)
    (71/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.847063828 seconds)
    (72/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.870623176 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.857037422 seconds)
    (74/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.806923349 seconds)
    (75/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.728121049 seconds)
    (76/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.746438083 seconds)
    (77/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.959826486 seconds)
    (78/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.10389776 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.99251733 seconds)
    (80/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.733943047 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.093133489 seconds)
    (82/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.454208417 seconds)
    (83/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.975898752 seconds)
    (84/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.737932827 seconds)
    (85/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.895936941 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.518616487 seconds)
    (87/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.800629958 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.728671457 seconds)
    (89/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.136762415 seconds)
    (90/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.109822419 seconds)
    (91/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.731977866 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.135785415 seconds)
    (93/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.753677327 seconds)
    (94/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.048337746 seconds)
    (95/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.852597191 seconds)
    (96/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.822248163 seconds)
    (97/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.408837431 seconds)
    (98/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.825635557 seconds)
    (99/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.731798934 seconds)
    (100/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.757415707 seconds)
    (101/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.162726348 seconds)
    (102/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.865734797 seconds)
    (103/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.850037043 seconds)
    (104/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.748358867 seconds)
    (105/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.054296743 seconds)
    (106/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.921269759 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.645239966 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.962748926 seconds)
    (109/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.728830597 seconds)
    (110/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.675287714 seconds)
    (111/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.764599635 seconds)
    (112/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.750529316 seconds)
    (113/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.769710263 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.06653264 seconds)
    (115/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.736853077 seconds)
    (116/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 3.527067693 seconds)
    (117/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.885164816 seconds)
    (118/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.93356956 seconds)
    (119/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.834522559 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.865262365 seconds)
    (121/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.76455704 seconds)
    (122/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.011388932 seconds)
    (123/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.737329264 seconds)
    (124/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.323921708 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.740699206 seconds)
    (126/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.252720052 seconds)
    (127/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.737066637 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.057794415 seconds)
    (129/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.753628053 seconds)
    (130/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.734987112 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.988625078 seconds)
    (132/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.833843184 seconds)
    (133/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.866970309 seconds)
    (134/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.766898228 seconds)
    (135/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.960320453 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.863178617 seconds)
    (137/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.730807283 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.98678055 seconds)
    (139/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.025869212 seconds)
    (140/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.759006093 seconds)
    (141/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.735928005 seconds)
    (142/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.852258281 seconds)
    (143/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.100726018 seconds)
    (144/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.058357375 seconds)
    (145/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.010589779 seconds)
    (146/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.811481538 seconds)
    (147/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.693742588 seconds)
    (148/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.103726822 seconds)
    (149/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.066650131 seconds)
    (150/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.850401379 seconds)
    (151/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.836707605 seconds)
    (152/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.762424132 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.737272922 seconds)
    (154/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.755885002 seconds)
    (155/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.734935135 seconds)
    (156/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.602637824 seconds)
    (157/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.97025285 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.074807787 seconds)
    (159/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.059505878 seconds)
    (160/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.969391345 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.740917512 seconds)
    (162/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.299609814 seconds)
    (163/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.784455274 seconds)
    (164/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.915892357 seconds)
    (165/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.937865803 seconds)
    (166/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.831265529 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.733616616 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.902740682 seconds)
    (169/309) benchmarking ("sort", Float64, false)...
    done (took 5.4912013 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.54508534 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.065977785 seconds)
    (172/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.749440983 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.876402836 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.770380195 seconds)
    (175/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.885854269 seconds)
    (176/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.73631617 seconds)
    (177/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.816037861 seconds)
    (178/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.757820986 seconds)
    (179/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.019753088 seconds)
    (180/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.746416361 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.928436599 seconds)
    (182/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.755840073 seconds)
    (183/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.948372593 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.872215395 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.736338194 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.768350553 seconds)
    (187/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.777778638 seconds)
    (188/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.737300168 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.834516297 seconds)
    (190/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.122777641 seconds)
    (191/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.99718916 seconds)
    (192/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.039925581 seconds)
    (193/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.84433843 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.809402679 seconds)
    (195/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.923666425 seconds)
    (196/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.737573084 seconds)
    (197/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.574314442 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.412478292 seconds)
    (199/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.842911154 seconds)
    (200/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.741771033 seconds)
    (201/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.892268108 seconds)
    (202/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.273028614 seconds)
    (203/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.972556462 seconds)
    (204/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.742095825 seconds)
    (205/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.734983087 seconds)
    (206/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.138048957 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.094608728 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.980119622 seconds)
    (209/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.847852939 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.127505862 seconds)
    (211/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.741778103 seconds)
    (212/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.815787659 seconds)
    (213/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.806292752 seconds)
    (214/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.484259236 seconds)
    (215/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.912588472 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.68063402 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.416308563 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.960747638 seconds)
    (219/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.734110434 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.50274191 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.740843327 seconds)
    (222/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.836357807 seconds)
    (223/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.955711338 seconds)
    (224/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.895171784 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.127043179 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.86499977 seconds)
    (227/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.230388407 seconds)
    (228/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.779186893 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.776139407 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.867197549 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.355911908 seconds)
    (232/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.817939091 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.037062194 seconds)
    (234/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.936774065 seconds)
    (235/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.744698519 seconds)
    (236/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.040533622 seconds)
    (237/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.592384793 seconds)
    (238/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.09754798 seconds)
    (239/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.741839133 seconds)
    (240/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.90341327 seconds)
    (241/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.866718587 seconds)
    (242/309) benchmarking ("sort", Float32, false)...
    done (took 5.485869235 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.662764899 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.748384821 seconds)
    (245/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.901518244 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.856308522 seconds)
    (247/309) benchmarking ("sort", BigInt, false)...
    done (took 6.745228218 seconds)
    (248/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.998449327 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.919321191 seconds)
    (250/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.802085138 seconds)
    (251/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.743244547 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.829074252 seconds)
    (253/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.878242367 seconds)
    (254/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.821145993 seconds)
    (255/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.74136857 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.46265571 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.754508149 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.9677984 seconds)
    (259/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.736778713 seconds)
    (260/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.036261971 seconds)
    (261/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.853554949 seconds)
    (262/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.767831745 seconds)
    (263/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.840335262 seconds)
    (264/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.76347736 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.743585024 seconds)
    (266/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.76988996 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.728106956 seconds)
    (268/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.251602423 seconds)
    (269/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.745160604 seconds)
    (270/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.070188534 seconds)
    (271/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.771184125 seconds)
    (272/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.838921776 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.060655994 seconds)
    (274/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.745674996 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.758509517 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.048396892 seconds)
    (277/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.993277356 seconds)
    (278/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.771715395 seconds)
    (279/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.187126178 seconds)
    (280/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.971717789 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.095447983 seconds)
    (282/309) benchmarking ("sort", Int8, false)...
    done (took 4.656295425 seconds)
    (283/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.93235934 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.884483639 seconds)
    (285/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.961049119 seconds)
    (286/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.751747281 seconds)
    (287/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.742305147 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.675689642 seconds)
    (289/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.626140181 seconds)
    (290/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.003082052 seconds)
    (291/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.835075128 seconds)
    (292/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.050073862 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.072543718 seconds)
    (294/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.097119918 seconds)
    (295/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.885082072 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.790550167 seconds)
    (297/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.774653647 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.360221337 seconds)
    (299/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.745792839 seconds)
    (300/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.46485654 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.749271556 seconds)
    (302/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 3.025018327 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.661530239 seconds)
    (304/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.133070251 seconds)
    (305/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.64977015 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.699945704 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.976519238 seconds)
    (308/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.751344793 seconds)
    (309/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.559051741 seconds)
  done (took 964.093956567 seconds)
done (took 966.035013046 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.774822214 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.767526825 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.751259621 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.770300378 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.86180774 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.798732231 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.759695642 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.75645178 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.80265773 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.800268235 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.74983315 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.797807745 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.751322199 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.751398094 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.752478057 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.767150143 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.062505399 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.783522196 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.772439348 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.762364265 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.768283942 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.748950004 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.804088693 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.798815718 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.756591245 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.758703015 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.756428428 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.774142682 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.866310598 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.756340042 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.756137775 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.766154155 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.064768523 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.782067499 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.749552238 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.77173337 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.763878873 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.764004722 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.756490175 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.783459962 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.149632835 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.789606218 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.755195022 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.755176276 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.756337542 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.76499171 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.755812609 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.763485494 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.769860838 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.770021459 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.148588944 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.807929801 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.758982978 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.753361926 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.767654336 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.756262438 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.758982841 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.771683745 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.772968964 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.771911281 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.052528063 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.792784667 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.757739003 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.77049953 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.766579521 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.181072791 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.790555197 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.76419064 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.15156385 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.798667816 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.181834815 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.802776638 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.759697509 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.772289946 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.787241379 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.066269579 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.784369765 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.75760296 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.766931783 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.753041803 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.768612691 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.76994972 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.760140502 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.754473692 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.772997414 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.803742123 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.770245223 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.760805835 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.768219418 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.778626837 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.766071748 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.771098201 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.763250396 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.755159167 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.765364505 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.760304867 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.759374554 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.761644079 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.761165227 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.769885046 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.151458266 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.810866424 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.756079046 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.754061702 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.758155037 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.768907982 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.148934306 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.796240736 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.780622413 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.806830412 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.757697001 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.054855182 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.789092313 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.774609124 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.766618536 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.757041213 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.754280842 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.051504807 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.175914969 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.811274191 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.75860117 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.754047408 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.775764576 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.757405449 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.754548154 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.069199328 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.789847304 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.771752948 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.877983823 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.770496244 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.792629408 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.757579079 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.760097248 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.806678593 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.772513479 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.790878576 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.759275816 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.773350744 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.774088219 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.756446337 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.76814388 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.768212296 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.75877128 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.768790058 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.759116611 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.806989658 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.772291359 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.773142669 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.780830629 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.882891672 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.753914885 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.057812645 seconds)
done (took 276.622297005 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.844533575 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.760855768 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.854870004 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.764003426 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.850261609 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.833327893 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.763410477 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.762510991 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.76062857 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.250312894 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.762010378 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.766676125 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.757909258 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.762589369 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.831403594 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.764572294 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.758440063 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.198737655 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.760963873 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.839589978 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.761324452 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.762826584 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.761732 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.249501875 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.761402381 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.758819238 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.842659599 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.761145888 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.197652086 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.756585705 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.761839621 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.199488108 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.841128776 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.786882039 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.769834481 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.769694245 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.850360227 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.771770849 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.828729024 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.828931426 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.85422735 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.797930821 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.762925028 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.761594903 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.765061378 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.763492602 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.76411749 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.790857912 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.761108273 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.771090438 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.194408173 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.768848666 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.766539523 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.764628255 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.764294577 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.79499238 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.75993545 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.764090042 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.840043058 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.763463897 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.830824171 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.249657459 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.247666936 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.76134036 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.76187022 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.762058457 seconds)
  done (took 177.942707634 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.824238896 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.841215422 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.828628302 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.768609277 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.810501012 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.830910132 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.767868404 seconds)
  done (took 14.358637447 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.768472786 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.763529962 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.813094102 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.813135803 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.764439785 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.918671275 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.764925062 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.775771817 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.768862857 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.790599115 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.775090754 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.767245462 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.771382394 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.763271546 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.811623023 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.772685822 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.876458289 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.765747919 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.766686767 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.914345685 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.771144386 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.77332405 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.790879353 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.77427336 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.778262271 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.771137472 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.33624442 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.765561504 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.766893302 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.766478539 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.768005932 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.805379789 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.764800058 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.764357196 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.766629538 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.877666979 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.767018629 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.768369248 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.767128917 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.763847383 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.765255138 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.76887679 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.76502966 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.769026881 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.767925548 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.788949843 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.766873084 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.765490338 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.766122145 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.765142774 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.789398951 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.766622392 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.767185493 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.77402506 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.806292525 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.774492533 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.766044496 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.766905631 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.767978927 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.767663291 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.913990313 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.815700463 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.768350547 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.817538524 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.763896335 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.770231504 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.765849374 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.768283098 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.853181241 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.768630907 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.81780828 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.765167849 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.925140348 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.789965972 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.772262229 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.769385946 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.771151339 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.769605704 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.767309669 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.776099436 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.767963097 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.771139543 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.775019924 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.775786327 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.770203068 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.880297728 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.909549595 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.772386 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.771754958 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.777060578 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.77019971 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.811937605 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.767612478 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.767869848 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.826152256 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.886952782 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.794355574 seconds)
  done (took 195.681781825 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.774688375 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.773815808 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.771296911 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.785501577 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.767047334 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.767580783 seconds)
  done (took 12.330763342 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.769651877 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.772291449 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.771369929 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.769014966 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.768735115 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.771864562 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.771016242 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.773161232 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.774921471 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.770623338 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.771235724 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.766652805 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.783732212 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.771037668 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.770294038 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.769378518 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.771715387 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.771774733 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.769376742 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.771550435 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.019496279 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.769688104 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.770323766 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.771074335 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.773964321 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.768532626 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.780692313 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.769780957 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.771029861 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.776660089 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.775030743 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.772292676 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.768796952 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.775517967 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.776659217 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.771077676 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.774252591 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.767811661 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.769966519 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.770898203 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.768657763 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.773333209 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.771635962 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.766936126 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.771432665 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.773232986 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.772990286 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.781852857 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.772994641 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.770792555 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.769180961 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.771582545 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.772238003 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.769609479 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.773232927 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.777441064 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.776842417 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.771282604 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.774734662 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.77315706 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.779027888 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.772048652 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.77374468 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.777107242 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.78129631 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.770901608 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.772354922 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.77764828 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.773328664 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.773274954 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.768957914 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.775070332 seconds)
  done (took 130.564523395 seconds)
done (took 532.583414851 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.058756138 seconds)
  done (took 8.753212714 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.87804031 seconds)
  done (took 8.63232801 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.290640954 seconds)
  done (took 9.99031226 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.80218966 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.799150939 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.778632332 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.771204011 seconds)
  done (took 28.876829438 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.968173085 seconds)
  done (took 8.666325705 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.794409614 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.763877726 seconds)
  done (took 15.325018997 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.821012443 seconds)
  done (took 8.521338636 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.811606867 seconds)
  done (took 8.51592355 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.794139919 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.78987593 seconds)
  done (took 15.30694964 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.772599801 seconds)
  done (took 8.471543123 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.996047222 seconds)
  done (took 9.797172758 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.798470611 seconds)
  done (took 8.566873682 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.785213156 seconds)
  done (took 8.487000075 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.854500046 seconds)
  done (took 8.553052843 seconds)
done (took 158.160397231 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.776785753 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.766763126 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.770733164 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.773503772 seconds)
  done (took 28.785151632 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.805784313 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.807364573 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.808888693 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.816364092 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.810066085 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.808279886 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.799968189 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.798218929 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.81915613 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.81184261 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.811746179 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.811832456 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.808322116 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.803628987 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.812099836 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.807468771 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.818560643 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.809485038 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.800306752 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.8116596 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.776778313 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.820717754 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.81105724 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.776509519 seconds)
  done (took 45.068922487 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.964936897 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.84678162 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.931389513 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.8294107 seconds)
  done (took 9.27011494 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.827798644 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.829090931 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.839165479 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.877750077 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.904054726 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.835920468 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.799540111 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.799825531 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.780175033 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.828355923 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.904582608 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.822668818 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.913266731 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.776719593 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.956527828 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.778903765 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.777429619 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.824502185 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.879129365 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.891375082 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.774308494 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.825509092 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.831602358 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.824772006 seconds)
  done (took 45.803246319 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.777007201 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.789037154 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.785013516 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.776544858 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.776312522 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.779266953 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.786190553 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.78053787 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.800774267 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.777927349 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.775599365 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.777173734 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.778777339 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.777952423 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.779361359 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.791827107 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.795085189 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.777043224 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.782654384 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.787206264 seconds)
  done (took 37.35041282 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.777942979 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.623995062 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.119170296 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.029408349 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.778494397 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.772303118 seconds)
  done (took 30.802397742 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.788995024 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.782900058 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.778086584 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.834425802 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.918247195 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.784215785 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.777540613 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.78641364 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.821962552 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.839358698 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.794259192 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.807896984 seconds)
  done (took 23.411549784 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.778080137 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.775554665 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.77711705 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.784008977 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.786268591 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.783390253 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.784063755 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.775627074 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.784193552 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.795981106 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.784310728 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.788224927 seconds)
  done (took 43.101123966 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857278309 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.65396059 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223348472 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.234766969 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.30129809 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.977198176 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.772933737 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.866004545 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.781571673 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.04940774 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.109704391 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978388866 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.021732354 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38030549 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.863885183 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.243912934 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068991335 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988680628 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.805783904 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.395684818 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885046286 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.281854417 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.441902036 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.886069727 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.981869126 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.897470403 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.037352189 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.728808537 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.829682321 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.7780708 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784509554 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.778897896 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049930953 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898045245 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850641545 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784015111 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.190278618 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.482123384 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.780243168 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.393255167 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.254193735 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.894527597 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781195329 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.778792119 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.706371084 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.284457253 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859563028 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.783183005 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.479456013 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.778097855 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.784819322 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851134395 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.783091718 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.587653161 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.462925548 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.039354905 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.779865886 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77789911 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.340651102 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779205535 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.270541869 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.810554099 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.866982062 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.473110327 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234059224 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.936747683 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.779205679 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.781722224 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706959934 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.396882699 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895387616 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.919562262 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.79166814 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.420772007 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062925727 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.190585412 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.830144735 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050879408 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440647138 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.808160793 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998900033 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.731515054 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708317183 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.603307796 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.706302708 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991501626 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811322027 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.377361347 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809888005 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.865787698 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.786040864 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795512796 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786226095 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.995902909 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.66767397 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.784311204 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.075435303 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.033720014 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795916022 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.870053524 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708910985 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.783376072 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029924637 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.984547013 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.885629233 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.352668901 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872729632 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.580287679 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.894155162 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.573785123 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.886970848 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.046191224 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842863717 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.794013505 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901450732 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.728403389 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027304258 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.617981362 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.981927211 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.15226626 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.01698493 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.121210465 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.032525793 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.848687275 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.78597395 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.783462441 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.477365972 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.390324154 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.000895883 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.790222241 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.139114964 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.89203687 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.796977191 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.712885923 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.401514475 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.145545522 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.86732165 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.998927028 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.596250839 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.160478194 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711183839 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.925102628 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.790473754 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.994444231 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.426988614 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.863817977 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033997762 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.894139893 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.991643453 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893911446 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800711043 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879668204 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80287669 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.081533187 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.132130537 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.783879977 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.785393838 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.469471624 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.840447766 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787654217 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.785674237 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.335183665 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055819417 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.80326579 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.787923971 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.659082698 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.79969006 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.846507965 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.787746836 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.79330097 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.304585473 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.28451875 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.793730579 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.443765796 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996778308 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788562771 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.464836248 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963678978 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.795437973 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054068815 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.850363603 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.712932561 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.484392276 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.488429046 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787227174 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.713442723 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.787448921 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790616722 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.795362577 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.97123894 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.060617437 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.834777709 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.421030888 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.893299199 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.792748076 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.791303716 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.789203052 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.306080774 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.804039813 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.27066064 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.896228146 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918104762 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.798515626 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.714456011 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.785771013 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.790503293 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.790692796 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.734887102 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835025522 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.482326284 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99541962 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.031655894 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.193374741 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.79874195 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.4777565 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.904652943 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.801415609 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.0936958 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.302972973 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.878618792 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851722673 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.791472425 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.431489973 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.516561763 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.349261769 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082964925 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104086672 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.131159647 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.147588294 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.101281987 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.875119547 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016045292 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.309035608 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.847499274 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.879703499 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.729197602 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.798587033 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.433816329 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.138212486 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795364283 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007366694 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.082266996 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.15407434 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917555781 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.994584161 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820019264 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.594526403 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.811350818 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.316723593 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805639502 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.174133729 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990615008 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.873397511 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.099362975 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.86696387 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.788126556 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123992249 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832855293 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.488768779 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.142414117 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.168831195 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.25845261 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02139777 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.791582856 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.231268219 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139254061 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.962028416 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.901778104 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.718912028 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.797314198 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.795949922 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.797664098 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.762992376 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.633102401 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.036768663 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796512218 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.021611141 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.894415474 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147639531 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.69172195 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.795604529 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.789468277 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037863879 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.476717334 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940662167 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.077501094 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.352752862 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.795860181 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.720655729 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716285288 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.492855256 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.796329364 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.759766004 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99724033 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.894321869 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.468734155 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.149350596 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094927658 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.034652647 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.80672017 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.057568693 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068531318 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.27952263 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814134344 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.88924176 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.100560204 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.534363921 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.008454003 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.019690601 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.326197482 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.005537169 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241483856 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.760777316 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.789340581 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.000656701 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.003966941 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.157654996 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96157715 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.500613401 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.802604553 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159116032 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855405113 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.156072684 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.970735027 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.875696977 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.798021103 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869599916 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796760325 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.795359891 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.797954233 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806728732 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.164156669 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.903511419 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.802423906 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871937136 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825485118 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.36137665 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.799210933 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061352525 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148934928 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.120568491 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.856543177 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.794636934 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.804549037 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.720883217 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91780295 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.237170158 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.066090283 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.91897322 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.921465384 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817616406 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.097911562 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.024997731 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097160649 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.065819281 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.677440132 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418600736 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.906796079 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.013841899 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800479292 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.999930171 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012331217 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099062487 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260107358 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.908254383 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.981083986 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.066768231 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.160166087 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.796392476 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372113593 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.808523255 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.197867477 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.831693914 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.164633991 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047816658 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.795707257 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920373547 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.798510231 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.998561621 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.244716158 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.489804405 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.139168789 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.650864484 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.797220956 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065923385 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.123131247 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103685711 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869288523 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.801282517 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.483564336 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929951177 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.717420853 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.007274529 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.797293141 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.999459823 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.506060028 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.799911988 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0672789 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101748678 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.795394705 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.720534502 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834106544 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.802716099 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.010073008 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01158547 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.045694573 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.801635917 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.805411477 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.604803121 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068690328 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855907881 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722428266 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.793884059 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843587002 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.021267751 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.816585619 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.313452581 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.495598944 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079491646 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.70339881 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81355456 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.182223799 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.163649479 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121546858 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.312325862 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011842218 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.351522551 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.615020563 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165371677 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.798896765 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.229593342 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170589373 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.802391019 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.299479968 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.902009976 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.069379743 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.122807808 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.812494614 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.496890592 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.832946819 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014853063 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.153305719 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.728447672 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.796099038 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.843901488 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.801154596 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.798360768 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.808357363 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.761377817 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272883776 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.632504372 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285095895 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.799677957 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.840514844 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.143840142 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.313234765 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898964205 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.819043239 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.800563798 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.51049991 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.084058082 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.046498802 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.289505557 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.879331466 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.803364463 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.802241507 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.720440479 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.977522871 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.987391093 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081262159 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.135563851 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.906781935 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.803371584 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.011019117 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007458152 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.180057022 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.929516746 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.915589053 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907431384 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.736726177 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.509678632 seconds)
  done (took 1620.772950983 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.801300528 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.814297604 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.805817337 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.825198732 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.826531407 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.816651541 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.859799548 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.894673404 seconds)
  done (took 56.372568044 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.800244956 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.965862465 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.80179038 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.80129902 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.801504992 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.79710379 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.969331769 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.812157367 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.803807888 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.807270209 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.802380514 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.797993341 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.08459657 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.822098972 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.802419376 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.792901693 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.804838676 seconds)
  done (took 73.001655415 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.816732361 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.01863741 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.826723969 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.799158691 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.990642358 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.810792511 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.76094647 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.855890891 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.816698466 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.218607583 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.092553741 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.868788923 seconds)
  done (took 89.602657931 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.811990884 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.805419549 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.801963938 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.804461972 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.800926594 seconds)
  done (took 10.758019813 seconds)
done (took 2115.815183432 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.034577908 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.991228786 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.056284787 seconds)
  done (took 5.774708369 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.943884413 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.996968723 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.108495847 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.113735033 seconds)
  done (took 9.892910924 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.083560401 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.168139636 seconds)
  done (took 5.978990571 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.113566218 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.815743943 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.173137307 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.804499407 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.805421754 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.809019978 seconds)
  done (took 22.15179873 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.803894896 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.804832115 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.805138243 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.802947501 seconds)
  done (took 8.94584154 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.797657188 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.507517299 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.799938672 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.810490529 seconds)
  done (took 20.643548527 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.951066756 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.921089031 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.947257332 seconds)
  done (took 7.546937096 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.943968909 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.027286225 seconds)
  done (took 6.700628152 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.968591405 seconds)
  done (took 3.696453066 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.834178041 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.073206946 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.288575238 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.777509379 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.431842214 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.053992824 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.143441194 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.032071906 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.244784149 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.286727611 seconds)
  done (took 24.894059593 seconds)
done (took 131.092971976 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.357505664 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.829244984 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.021379704 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.165324397 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.048906618 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.011751622 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.017623177 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.156120184 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.847816778 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.834866031 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.161839413 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.040744718 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.969011705 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.821588595 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.975591483 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.820913609 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.033135843 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.171969662 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.843849221 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.071106845 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.030230862 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.810037493 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.006929389 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.823548855 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.037409007 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.957417076 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.352960851 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.823087812 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.998690321 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.370994938 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.963134305 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.203069908 seconds)
  done (took 166.306280922 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.805250699 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.802228882 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.803592664 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.801903549 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.347670844 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.803302067 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.803504028 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.800968787 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.251943836 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.245752723 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.801373787 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.331631227 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.802737777 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.801392101 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.802730331 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.803824877 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.424571484 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.801316337 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.800198588 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.803503029 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.803031271 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.173229075 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.799557995 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.180788888 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.409262767 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.797893217 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.796396721 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.794713298 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.794621249 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.793318792 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.793187134 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.792299202 seconds)
  done (took 207.299616477 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.790330079 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.793259971 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.794738549 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.793437419 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.793815502 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.795631046 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.795017916 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.793404585 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.55456581 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.563266474 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.793366839 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.794106319 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.794562876 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.793116786 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.798061351 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.793004858 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.796815542 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.798709316 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.801722916 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.805071037 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.796160998 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.367682804 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.794561919 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.383424545 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.798364745 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.793623343 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.793531849 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.795091284 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.797484904 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.796098216 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.796755024 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.793763221 seconds)
  done (took 217.865891785 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.042385013 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.795326363 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.797529274 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.713764104 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.795354872 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.796445664 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.776938651 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.040906474 seconds)
  done (took 18.487706295 seconds)
done (took 611.69722013 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.150177501 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.992635243 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.971700196 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.81640848 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.076532467 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.862874223 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.811272521 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.878995098 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.619956712 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.889272503 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.474327018 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.843409488 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.563390101 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.841914641 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.934239823 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.872984492 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.38878226 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.485223682 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.989783483 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.882749914 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.990372013 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.7317186 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.896726467 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.665146258 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.595731807 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.781046498 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.83037407 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.393890669 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.824400541 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.969250221 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.462545624 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.070915056 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.830939013 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.813996999 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.867528607 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.845521525 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.020213597 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.830207376 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.942846385 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.531307684 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.889271416 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.534160586 seconds)
  done (took 99.389944129 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.803540796 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.796322602 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.797582761 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.798433181 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.805902486 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.797914004 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.79780553 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.798498907 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.79795407 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.798160918 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.798815395 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.807889712 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.799394725 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.809145186 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.797687849 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.800085106 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.798265548 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.807734689 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.799650185 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.799485486 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.798277831 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.799167478 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.811438681 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.799799322 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.799003324 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.801329615 seconds)
  done (took 48.56072039 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.798374543 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.95608365 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.04708107 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.820639806 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.799144277 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.802524601 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.815883244 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.804297502 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.800637492 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.800699216 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.900179826 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.805663205 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.816680369 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.046453504 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.819765242 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.800063341 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.800150289 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.800091081 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.963717212 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.814867355 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.819000995 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.805375903 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.819918209 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.813034742 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.800901943 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.79986434 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.803148898 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.269383439 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.809539243 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.90162613 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.860163975 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.828026196 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.214996529 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.054837182 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.855613553 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.814265942 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.800174143 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.904331199 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.806854637 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.799879459 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.81857678 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.805536244 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.044496199 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.338432061 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.815903177 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.802363588 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.280182317 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.915414407 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.843003052 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.81027655 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.048680685 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.81898699 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.803923139 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.801885135 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.838094054 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.807112033 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.800584179 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.164136932 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.813073643 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.820301416 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.806815628 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.803221772 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.971222129 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.810560524 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.957440199 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.810065011 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.808039042 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.801859965 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.047331614 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.818625469 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.344583758 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.817024767 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.80273726 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.902996926 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.962288981 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.305036058 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.816068645 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.973464784 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.23298781 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.826375235 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.810146989 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.259312226 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.829531461 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.80893714 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.805489762 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.802802071 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.80274223 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.844505693 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.817074345 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.259199564 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.348179846 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.183820892 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.829501204 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.819119154 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.802136652 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.163663562 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.813150099 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.803647441 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.040291467 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.357454554 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.818602333 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.809074526 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.327536108 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.819896757 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.820405734 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.812941923 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.052908742 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.819940764 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.846654766 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.804788691 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.809628592 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.804832696 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.822169706 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.813347972 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.804475715 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.316948985 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.924333778 seconds)
  done (took 224.563754373 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.80261608 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.805230305 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.803547722 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.809259814 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.801909553 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.802902357 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.802435404 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.800969829 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.803107219 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.802697671 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.802957056 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.802775789 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.803824037 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.808159499 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.819648378 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.81387801 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.417665643 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.813331887 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.813757406 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.812883531 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.452550444 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.816311557 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.814075845 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.813278368 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.81322802 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.813965434 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.823897569 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.816365701 seconds)
  done (took 165.642900409 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.814628336 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.926040538 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.83549667 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.842996472 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.823479556 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.815546043 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.912187697 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.83309578 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.819971394 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.815703722 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.816511497 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.875379111 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.826705877 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.914285892 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.847441354 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.923089429 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.919703754 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.823682677 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.81639934 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.817726966 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.841808423 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.818910819 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.874224331 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.938875675 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.835873491 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.926760423 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.834998066 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.816397047 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.813928707 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.926807775 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.836028286 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.876567065 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.844137655 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.832914121 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.931674451 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.936650038 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.921271565 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.921844687 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.822981764 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.816101471 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.817650948 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.813188836 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.927097672 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.840672756 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.816538965 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.925191129 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.840105431 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.817221481 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.817316974 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.816728476 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.828009914 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.835081171 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.879584949 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.946444289 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.854073717 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.842141899 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.914299563 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.941200403 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.818910145 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.914343949 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.820254787 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.929477541 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.840961586 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.814345585 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.819231593 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.823736922 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.848826196 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.92501896 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.923400898 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.827273213 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.915555137 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.855308673 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.825832439 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.818568957 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.817754562 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.928967387 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.938617188 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.85539858 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.853737489 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.846880518 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.822045186 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.817319399 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.815708334 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.834149322 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.823758931 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.932172588 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.939140887 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.825927674 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.818891975 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.818442784 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.819013868 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.843459119 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.937440377 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.854632725 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.918164504 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.885795656 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.895032158 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.836896457 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.832824087 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.824101382 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.879892206 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.839346311 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.831459184 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.11201557 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.876490698 seconds)
  done (took 197.205053655 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.181195412 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.864202607 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.875267344 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.140912379 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.176343467 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.727780773 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.868540015 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.863249777 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.889051073 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.047707387 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.938402719 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.881088508 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.854789853 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.840688246 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.863180317 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.887343658 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.869750977 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.204004868 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.087717093 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.99585918 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.856399877 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.144851386 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.180736716 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.435211568 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.91855639 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.254846704 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.435854941 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.993031053 seconds)
  done (took 60.030991613 seconds)
done (took 797.11793374 seconds)
SAVING RESULT...
DONE!
