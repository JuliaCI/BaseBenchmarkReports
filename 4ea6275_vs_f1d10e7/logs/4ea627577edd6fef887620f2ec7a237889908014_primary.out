cset: moving following pidspec: 31475
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.309369473 seconds)
loading group "string"... done (took 0.693820401 seconds)
loading group "linalg"... done (took 8.010363945 seconds)
loading group "parallel"... done (took 0.165041794 seconds)
loading group "find"... done (took 1.293970419 seconds)
loading group "tuple"... done (took 1.94206291 seconds)
loading group "dates"... done (took 1.280617362 seconds)
loading group "micro"... done (took 0.195708689 seconds)
loading group "io"... done (took 0.935352324 seconds)
loading group "scalar"... done (took 39.514263123 seconds)
loading group "sparse"... done (took 12.249874266 seconds)
loading group "broadcast"... done (took 0.96926775 seconds)
loading group "union"... done (took 13.79505508 seconds)
loading group "simd"... done (took 4.939119959 seconds)
loading group "random"... done (took 9.147715667 seconds)
loading group "problem"... done (took 1.791546235 seconds)
loading group "array"... done (took 20.980089017 seconds)
loading group "misc"... done (took 1.855210751 seconds)
loading group "sort"... done (took 3.49679212 seconds)
loading group "collection"... done (took 18.731992961 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.540963479 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124123224 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137143367 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120157635 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.149612362 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117279339 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124768941 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084772537 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.894394403 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148791475 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115533401 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.416767167 seconds)
done (took 5.422105831 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175874636 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08868828 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080311587 seconds)
  done (took 1.293450686 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066151173 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129019678 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067356109 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068241274 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067917784 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067330998 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06859765 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067344003 seconds)
  done (took 1.661463978 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073623638 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069485627 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06620484 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068914922 seconds)
  done (took 1.395555955 seconds)
done (took 5.729242492 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.799477531 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.210013969 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187961972 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.408787184 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.135551314 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.178991627 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.648077091 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.32489561 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.192180602 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.094463286 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113033765 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391243478 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125048196 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.643072279 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078068292 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09629538 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.143216135 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.465192131 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.07186324 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085633627 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093346174 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132023582 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.080965133 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077489145 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.153061903 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071044304 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.144783874 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.086826672 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06932373 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.256254337 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175780994 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.662867079 seconds)
  done (took 10.548598925 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.102467592 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100511002 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069466886 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125571769 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09841268 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070782915 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075862472 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068557575 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090330218 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128616335 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091522705 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108879011 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066574008 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070005106 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083445351 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.208823899 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080378559 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082497299 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.068909713 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079275221 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.111902284 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079297037 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080324126 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080623359 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129489663 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180239394 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096811909 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098013264 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067449989 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08432909 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11536902 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127499958 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06711284 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06712642 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125564544 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095479714 seconds)
  done (took 4.637809776 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.983205541 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150566217 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090846494 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134032833 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065627022 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109192707 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.090750722 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066162592 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083220556 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.234736315 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.394448222 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.094150298 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.626098671 seconds)
    (13/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.12175606 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117727549 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105119342 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071786971 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069607571 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068755227 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.282701586 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.097873046 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10555351 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083129482 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071163748 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069028755 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.067902931 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071901797 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064056699 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068965976 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.087241101 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076421012 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.330135587 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12525929 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06921134 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.966354271 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168879882 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069185925 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106102835 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161679808 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094784359 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140553143 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068404652 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067097757 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.299270468 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066219998 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073127211 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067489078 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086197835 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.110029451 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120878374 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066347836 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066586588 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169520495 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06585155 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082833279 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.167240418 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153013693 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066711608 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.297354179 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092810545 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072238648 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065450281 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.191146802 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.120720195 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068994427 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068532792 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069811476 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.072363264 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.365035346 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066422391 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.914544909 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07054775 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076988092 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070821124 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07177551 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079561728 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079922599 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.090852801 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067761723 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064615851 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067528432 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067087166 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067791785 seconds)
    (83/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074504944 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.100516165 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.391620079 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068030852 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072990165 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065778167 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.092195688 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09984187 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068061282 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06630003 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102775036 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071111822 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066836386 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064357112 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068872604 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.099345559 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071364447 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112866529 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.07033946 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.214178337 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101686387 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070214694 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103175261 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080150074 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072753369 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.467745948 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067306449 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073069889 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066960989 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069305308 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067617335 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080007741 seconds)
  done (took 21.868189009 seconds)
done (took 39.154412762 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242542012 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084076484 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.08394739 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083867326 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083878022 seconds)
  done (took 1.780047188 seconds)
done (took 2.963690268 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126818348 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099831262 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065049488 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098492983 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065557781 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101721375 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103950602 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083761838 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100598359 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065180647 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09802158 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065151554 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065386676 seconds)
  done (took 2.340168998 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083068056 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.0830105 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069872759 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084563269 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063171726 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081927727 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081006212 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088305518 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081411864 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07282547 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063308169 seconds)
  done (took 2.033493072 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082478221 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083609645 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069771751 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081575772 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063198243 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081378308 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081086535 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08522833 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081325122 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073989081 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063359883 seconds)
  done (took 2.015032051 seconds)
done (took 7.562062867 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077526781 seconds)
  done (took 1.244790668 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.532868222 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.603137262 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078574161 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.099948882 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192920088 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.108928292 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.235157945 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.083493637 seconds)
  done (took 8.273792407 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.094992776 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069937414 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.082248678 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070904422 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070190542 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069001563 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070518625 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069589601 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.069224924 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070899493 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.06933202 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069686655 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071049339 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.06916923 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07029737 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070625628 seconds)
  done (took 2.406690331 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.098053396 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095948809 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073818647 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075194847 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073677365 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072683325 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074627326 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073565736 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071750469 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072924115 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076125449 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074047647 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073276738 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065159435 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074619512 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077157489 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071606597 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074918079 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075398563 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.076901363 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075657386 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064860938 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073373554 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074474045 seconds)
  done (took 3.084806674 seconds)
done (took 16.189511257 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.105810991 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.068283572 seconds)
  done (took 1.345830652 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079244399 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080224913 seconds)
  done (took 1.343494628 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.078934439 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06302713 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08448955 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.074354568 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.064338515 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063082234 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.082920215 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064427414 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064129833 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064136604 seconds)
  done (took 1.889073739 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06540584 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.073176933 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07009059 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079362966 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070597139 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064571362 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069521166 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066192137 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.073747839 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063908537 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.068610327 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084213583 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068209261 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08546003 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068943009 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068577385 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070248022 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06722643 seconds)
  done (took 2.465653987 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063934974 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063893644 seconds)
  done (took 1.31528067 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067235958 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06378383 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067030601 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066305038 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063484715 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062906398 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063782818 seconds)
  done (took 1.638294931 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.400222235 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.121563916 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.329100714 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070423395 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.079556221 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.255973058 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065082023 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069646762 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.06952648 seconds)
  done (took 2.687749208 seconds)
done (took 13.874512182 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08129935 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086683475 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096862742 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.383310216 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092850854 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06799503 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114261373 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.178791893 seconds)
done (took 2.303807304 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.207853589 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.80949902 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.479970642 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206160012 seconds)
  done (took 2.684622184 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.340868679 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081496548 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077379804 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067092633 seconds)
  done (took 1.760169432 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06704041 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070458346 seconds)
  done (took 1.325154678 seconds)
done (took 7.176004244 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065432986 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.0652695 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.090441987 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065352441 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065292702 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065184628 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065612399 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065002331 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065151266 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.065306211 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.064971801 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064738174 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064766048 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06517291 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065139571 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064702382 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065254484 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065262693 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065291368 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064907893 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.180671075 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064768598 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065054493 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065114285 seconds)
  done (took 2.926622524 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081668939 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067828628 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.069542767 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.06896229 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069287101 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.06852328 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.06874793 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067189898 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069171804 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067104354 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069208297 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069580253 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067184382 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069173673 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066652886 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069274976 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.068718412 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067449473 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066959519 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069711116 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068812905 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067463494 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068970202 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06855973 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069104829 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069137575 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066773404 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067418966 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068472682 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068879326 seconds)
  done (took 3.262817016 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068856873 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062206982 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061865087 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070264132 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061545371 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.062578876 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061202397 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061678905 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.062457847 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061549583 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.062809764 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.060999668 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061185208 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.061891513 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.061881668 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.065762704 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078578245 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061506853 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.061568731 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.061882177 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065739501 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061508306 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.061587449 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064085334 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.061337038 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.061018996 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.061594634 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.061236125 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.062189691 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061413239 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.064995629 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06588102 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.061184572 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069707917 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065763346 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.061161295 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066621642 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.061120149 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06226534 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.061405319 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.061174877 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.061455432 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.061863221 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.07024443 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.061654909 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062878801 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06192 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.062391067 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062019124 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063572679 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.061025552 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.061422034 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06321822 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062677613 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066378294 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061701429 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062128052 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06091396 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062250741 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061301262 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061834128 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061178139 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064436681 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062008572 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078621861 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070383062 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06122013 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.062698259 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061972157 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.064464617 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062717317 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076907419 seconds)
  done (took 5.783009873 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085147567 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088055243 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066449321 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066359484 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062186886 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062370175 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07026528 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062166767 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067004085 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081124954 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062428931 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066513805 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066611809 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066295565 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062869086 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066707701 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07058178 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062445855 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062181066 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066004523 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062343384 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069948903 seconds)
  done (took 2.719333821 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.146512367 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068444587 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106403073 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072489302 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070926086 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072903663 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067910006 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068294034 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068200209 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068902194 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068668822 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068269459 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070843269 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068364205 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068954704 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068242178 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068036486 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068304472 seconds)
  done (took 2.575792424 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078558938 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068000991 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086447731 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067640589 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067636389 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067505189 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071646003 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072293647 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.066987191 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067775165 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072082037 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067032897 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.066856313 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067519043 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067076866 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067887161 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067135566 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06761269 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072089641 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071705992 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071798421 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071888076 seconds)
  done (took 2.761270347 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088776974 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066648021 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082175309 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069132195 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063582344 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062161066 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068163259 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066681678 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068101474 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066201406 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066788024 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062327559 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069394522 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067200125 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06948265 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067068229 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06685732 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066862214 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066165444 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062082429 seconds)
  done (took 2.58312646 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083555373 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065417737 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065175261 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071954763 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065354529 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.064976349 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071628659 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.065014493 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.065094183 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08595781 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064976334 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065381104 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071263012 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069553956 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.065125111 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072061998 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073852705 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071813235 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.065109845 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065113671 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086293261 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065784369 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071131069 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065080115 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065505758 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065652204 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065173647 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069022787 seconds)
  done (took 3.160008652 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065243552 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065083389 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065523816 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065608391 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065444146 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064903707 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06507056 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065111436 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064554796 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065367399 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064666344 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064467959 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064434596 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064468818 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064669067 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064793198 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064591927 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065059736 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065510652 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065208171 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064754825 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064707271 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064809813 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065299828 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065098779 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064738138 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064885356 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064769537 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064319987 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064894913 seconds)
  done (took 3.172191641 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075204072 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073139761 seconds)
  done (took 1.368861015 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063417207 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079078207 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.061180102 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073221129 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070445316 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065083061 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.071297471 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070366353 seconds)
  done (took 1.772929519 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084877986 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07610328 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06487784 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.075517829 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075129218 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084467966 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.125703871 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.063774732 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074574818 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064731788 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082236355 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066536539 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074536896 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069393514 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.074284658 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077991351 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.061776889 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.068669518 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065588186 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.062602879 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064765603 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07785194 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073560477 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062111724 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069297334 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090889687 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079561999 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063381946 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070519201 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076095331 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074134591 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060956027 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.063974995 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064332876 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.062010811 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074760798 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081962767 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070408778 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076875561 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064683875 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071887011 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061593401 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072825085 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074634186 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0794851 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063852046 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063756939 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061541577 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064770198 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069646919 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061869323 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068764358 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061365682 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075680471 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071661036 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079026029 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.062109001 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069803406 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070273808 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070594064 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075319379 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070280571 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073485711 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.063471578 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079311464 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073484055 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075433771 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061722344 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061385693 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062030174 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077581487 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092416286 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073947808 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064157523 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065058634 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062315004 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070958476 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064527571 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07293265 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075769877 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063773567 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068404143 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076119018 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068274397 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070543222 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070094662 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062407388 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067199375 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065098883 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083809083 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063099731 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.062034203 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065413974 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079291773 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073495807 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.063579853 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065126172 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075288152 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061161044 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.063852396 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064674879 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069721927 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076812006 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067644833 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068374393 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076944548 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07254267 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068841827 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069904694 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060733881 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064121219 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065560501 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075112742 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060839609 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070278001 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067517492 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.063829651 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074874838 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.061709788 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063080823 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076237426 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074958503 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062073793 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.060685195 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070138336 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063265206 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066111249 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076650593 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.062165356 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061482495 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061285422 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07102165 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062919779 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071119619 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066261961 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069592392 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060420855 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060925341 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.066000505 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.204243204 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068273346 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.07097727 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074433023 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070238714 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06349739 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076907068 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071090422 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066500098 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073735181 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067814571 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062249892 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066243364 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071015673 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062590933 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071665878 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066482291 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070766154 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065023312 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06287849 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069775757 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065122659 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067260514 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070104791 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063650101 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079316151 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.07027794 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062629723 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061622786 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071358363 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065721464 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063654689 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066459265 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070882318 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064964327 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063041574 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064336865 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070670973 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071799297 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067208849 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06521383 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073685822 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080933711 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.063843036 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071018617 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063509988 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064296353 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064416248 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077989243 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073923832 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067781682 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070165756 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061173703 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073011392 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076232328 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066372459 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.062150957 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066276569 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.06732543 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.075350631 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067253139 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064684974 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062368078 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069539259 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06656624 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070709171 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063286778 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066325683 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069137209 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062527089 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.06906835 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064803547 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077788212 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071221799 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061757666 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06582234 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062522994 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075125794 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061906326 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065109082 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066918017 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064192366 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06292344 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070170356 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061189817 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075909243 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07643086 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069338404 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06635868 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063851798 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075588765 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069458652 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071949426 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071143798 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073450138 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079552554 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066097184 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070534639 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078762442 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.063751661 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060969997 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075864268 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.062287707 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062547093 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.062552047 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.062584317 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071401189 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071237967 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073238411 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061105991 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070050188 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062067318 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065891159 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061732229 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071645944 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070749867 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067716386 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075261238 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06411003 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063557291 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070936239 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063091004 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064312618 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064477279 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070394761 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.064000627 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069235947 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06580235 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069245542 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065715199 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061537796 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06951177 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063310157 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068809149 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072211282 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062720493 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069837219 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069647475 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.063004282 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069492248 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066806211 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065535554 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069584306 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068747975 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.198797159 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071531877 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062852331 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076826148 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064016503 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076850715 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069084455 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062349125 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.069416934 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07092366 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.069612376 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.064784808 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065443126 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069331581 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.063474329 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070998946 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076309104 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065860531 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079972192 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075690913 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070460946 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071051088 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069699988 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.06940812 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066660484 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068801802 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065550711 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069395806 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064150828 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073285833 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071119935 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069145429 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070754224 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06496748 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070357585 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065502822 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061827904 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066811298 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067472027 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064130782 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07721894 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065099494 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067442007 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063038436 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065249553 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063482061 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.061415799 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07104178 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070986694 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064333374 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074494081 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067022477 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.070484928 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07936678 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061360826 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062869384 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.062398645 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066092609 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076443768 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06469759 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077234018 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069359191 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066534648 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061494049 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064242545 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06277379 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061580015 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.061991994 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072054606 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066160084 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063131356 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.063717474 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.070569759 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06459904 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076463526 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063171225 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068422156 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.063848053 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061742892 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066281549 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066294952 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070553179 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064138525 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065424796 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061894783 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063728781 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068416691 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069991392 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063744932 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069493867 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075711332 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063663718 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070512734 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066380953 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061984238 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070703464 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06387406 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064197659 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066684718 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071489022 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071018957 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064403263 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078127165 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066223679 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070125893 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063862982 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062491739 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063708468 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063607635 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063426572 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066322126 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064800971 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076541611 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061925794 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069911302 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0690918 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067557888 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073371903 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06433018 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069405583 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068713885 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065228597 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069660419 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076307736 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067263401 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071110074 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.063901544 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069673725 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073404305 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065560352 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07530624 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069024201 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064267787 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069033575 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065001612 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063198846 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063379424 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062723534 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073451691 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06364512 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06552756 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065687355 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061645578 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067910651 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064167616 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074854589 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06899201 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.204680465 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06312664 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062518645 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065218749 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065430635 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069389351 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.0711567 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074615844 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071425354 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067999088 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063237318 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078522384 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073874718 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072177439 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065722145 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071810528 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.0648736 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071092767 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06861402 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069167454 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065865415 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072288434 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070871966 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067330199 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074912751 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.0722417 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065419967 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069760901 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070467686 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069046143 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062651225 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065430496 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07067331 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073192748 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070862316 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064319629 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079880163 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065797645 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069488573 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067084219 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063765086 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072722498 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062485783 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070359835 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065040065 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065149434 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062454613 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06710792 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065510616 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070530929 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066209147 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062162631 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079096275 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078892376 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070392863 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063475929 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063352601 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062189936 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062031081 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066692406 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064680422 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069776346 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079005205 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066490665 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066223407 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061963896 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064257941 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071574161 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071850077 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06157782 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062039653 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066496791 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070149217 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075530975 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063168913 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.063680981 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071283593 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070643025 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062293854 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066615567 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061728196 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071722475 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080572413 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064088911 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070049771 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073841181 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076397595 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.064078433 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061892377 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064559033 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069983701 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069451763 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.064375894 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06492726 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083170044 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07079273 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06686187 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.062770152 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070562199 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066699714 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077407932 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064745147 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.064006638 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075418358 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069898385 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071124111 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073861048 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074938312 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069711929 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069927284 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063090093 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069231974 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062767112 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066524427 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06460284 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064131451 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067881484 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072176737 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066272014 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078877618 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077676338 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066171923 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06122891 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065999675 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066050762 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061703573 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064677488 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062440288 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062526833 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062458945 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063111228 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070232061 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072894242 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068417771 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064162834 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063559885 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061365997 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073471314 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070692565 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069588274 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.061097824 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.063699072 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.063889735 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071298892 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064977898 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064383594 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068548036 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068281855 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.204248123 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063737688 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077184034 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06415883 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070618135 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066850189 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064476115 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064368144 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072187337 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068555616 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065594744 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070975414 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071163642 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066203119 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062690206 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.061947476 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073614459 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063035775 seconds)
  done (took 42.506174835 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101272437 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064169869 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062888166 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063153855 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071968863 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063789357 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062884873 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063584341 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063603494 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065277521 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062651733 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063069584 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070050946 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077673781 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072506695 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067436897 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062411259 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06406297 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062282768 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063770621 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069976465 seconds)
  done (took 2.709887694 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.070669375 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078082574 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075301947 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079455574 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071189463 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067590277 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075062399 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067260398 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0756275 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072821647 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075168723 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067447139 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072350237 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072216539 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072575372 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068343044 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075460334 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087298907 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067170801 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074449122 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067630176 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074478563 seconds)
  done (took 2.891102147 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064829647 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.063325505 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069882753 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061908342 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063232215 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06172841 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066192919 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061548798 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.065938998 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065505157 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065548829 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065968514 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069808128 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061568929 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066769048 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062308446 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106887174 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.066213424 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.063444817 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.064176024 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061585389 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070199601 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061546001 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062297658 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065413776 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066409491 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.064282294 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062321319 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063233067 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065492551 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.063003236 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.061600222 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069590117 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.06954143 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065645837 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065382653 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06279642 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.062947702 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061751826 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.061642683 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071615758 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061937489 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063361351 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069855429 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.061715318 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061698451 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070084113 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063272988 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06136643 seconds)
  done (took 4.512313922 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075444053 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110691964 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068033637 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091500504 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.076476383 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.0692129 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06796569 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091915334 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063567329 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064278428 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077449882 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077430318 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065439198 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.06756539 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.0696988 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065445133 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066641151 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064663081 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068542898 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065271926 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.068596167 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069415345 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076047289 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.076881042 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066246386 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064518992 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064898959 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.066736425 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076150548 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069066103 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067023649 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067635206 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.076877333 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07001668 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065025745 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.064891261 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.077402646 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065408178 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065164938 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06328379 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064869475 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067021978 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.06969913 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077187175 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065486728 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070105371 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065480351 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06295736 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.076595753 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065380811 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069947217 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077423037 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066444418 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065539313 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066671794 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.07623145 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065650157 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064210408 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065753185 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076480191 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06326718 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066163799 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07740019 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064490982 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069144221 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.0773339 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070040897 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066305274 seconds)
  done (took 6.212446445 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073082007 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094398082 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080131613 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079437011 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073196559 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07327658 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073113118 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073341591 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073442726 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077053116 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073655779 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11428052 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.06918081 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075044592 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073279805 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0731618 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073250401 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07320113 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073382516 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073476234 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073479075 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078941397 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07297543 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079285021 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.076286383 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068879959 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072853043 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073215196 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079558436 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073076904 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076057764 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07293426 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073752822 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079249722 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076330546 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073326146 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063817436 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073085558 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072987246 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072914802 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06922012 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079047016 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073034035 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.06905127 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072851804 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072486056 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078966052 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076062931 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074725268 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076979079 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072792148 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079183341 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072679425 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072931584 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078941936 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.081660735 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078876897 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079219056 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073441135 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078973434 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078832945 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.081863429 seconds)
  done (took 6.018099421 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078184448 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070840061 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082066038 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062270732 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06173362 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072055306 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062222064 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064475662 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069940654 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.070057615 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072010042 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072002203 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074344178 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072102284 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072002704 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074337493 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071886784 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071958108 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070287273 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071638704 seconds)
  done (took 2.741128565 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076117404 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.081776177 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.06821711 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072060434 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06740267 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07214318 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066616287 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067424835 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068132593 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06754249 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073307375 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07343387 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067730156 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071722832 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073336482 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072577453 seconds)
  done (took 2.454797856 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083238507 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.070682108 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.077387421 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063885909 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06725072 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063005801 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063520382 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061737219 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062380949 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.076158963 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063131377 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074293142 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063219008 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062282057 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063309516 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069040437 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062698159 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063410025 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063244539 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076324863 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070212993 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064478685 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067423292 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06373992 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068548647 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070482662 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06487853 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067351867 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063316498 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064082931 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069250839 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069925485 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063338874 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063817671 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062677356 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063174541 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06355091 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063779913 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.08710409 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063122569 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.061702702 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068281121 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.063496646 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064233888 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062398296 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063590228 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062566643 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068911341 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063819667 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069132462 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.063131917 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065521553 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064068042 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070556044 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.06612836 seconds)
  done (took 4.979010048 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078698819 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067940249 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061944721 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.062580515 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066963591 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06802746 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067485821 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067454735 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068343438 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062420196 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068021577 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067052345 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068247766 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06759384 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068173975 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06737568 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061940359 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067536864 seconds)
  done (took 2.536017558 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07276134 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066977258 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07249903 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066714728 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066748219 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066379784 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062177788 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.062603287 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062257163 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066722405 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066787189 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.066833974 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062185862 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066326789 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066995073 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06713724 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066401738 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062257242 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067028928 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062100265 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06663488 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063108782 seconds)
  done (took 2.771207211 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094923715 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083003616 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139501522 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079186789 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086157655 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072620484 seconds)
  done (took 1.875804814 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092078858 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098246957 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067355327 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067309274 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072840925 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070222051 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070773951 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070771398 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074693963 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075313677 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070277054 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075545793 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074665092 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077032112 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072475489 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075500913 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070492015 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070556581 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066937746 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079876084 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07028083 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075210573 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071021742 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070210887 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070604536 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076676408 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074488178 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0753091 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070376915 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074692612 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073137122 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070529483 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07511969 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076032129 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067212281 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075013368 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070679122 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079866793 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072825079 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076655227 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067140633 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072710531 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075078536 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074418409 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074806685 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070661041 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074206458 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070527162 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070588512 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081340495 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072893274 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076499421 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073072412 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075009561 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074840078 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081775211 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075513851 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076850822 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072685858 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075217645 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076611708 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072710518 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076656959 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075165473 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072716628 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076334442 seconds)
  done (took 6.21465324 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105019281 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067566366 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070964546 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075702132 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076803437 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0704589 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070641254 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070698074 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070551114 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067899889 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105481604 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071045942 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076976906 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077625556 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070950857 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070754855 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070695019 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077178186 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067848024 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08183399 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071119028 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076712843 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077079718 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076711859 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075419713 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072766114 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070553512 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070968114 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070445411 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070443907 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074470105 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070731749 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076871432 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067485358 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077159777 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070584692 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070935981 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074581279 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070797342 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07284849 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076733803 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079374949 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070518046 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070818306 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075050324 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070400022 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070385047 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067516838 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070552919 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067289256 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07501654 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075118732 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075188894 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076298201 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070260234 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070293933 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070258446 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070308694 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070690794 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072616526 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076139644 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070309916 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082555921 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070759461 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07015122 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077603866 seconds)
  done (took 6.207197306 seconds)
done (took 127.906968571 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.209901426 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.18455685 seconds)
  done (took 1.701756233 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.074488309 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.10449379 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082668573 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133939677 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071581758 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106040337 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104166593 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083429372 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071501495 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071456324 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071247577 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073795725 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136272699 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071390876 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.07137486 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074127434 seconds)
  done (took 2.728736767 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105106513 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.166653979 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109204913 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069508583 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104574897 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077311348 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069438206 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082174034 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07606764 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071524253 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077210073 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077743752 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.07117879 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075556131 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076223945 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077074213 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071086342 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07712062 seconds)
  done (took 2.867959406 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104752399 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095500734 seconds)
  done (took 1.532455564 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.173975521 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133828804 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201582691 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34644522 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.154157393 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.423049499 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.139070055 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.140517062 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.1134235 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.135609276 seconds)
  done (took 3.287974487 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104368191 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.168903037 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293474492 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119938792 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07614029 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.090825875 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.12186011 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082264692 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083397913 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083111261 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083403238 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078325362 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102356558 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076763131 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075627048 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077885424 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105835351 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074826365 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075848156 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078514016 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106294826 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070145204 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076671313 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074626934 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080266102 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080137149 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071288613 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069493296 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078073457 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075553604 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079190372 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.087448449 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080063024 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105864168 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.074333873 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106827006 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078165726 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.076365435 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075904998 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076680936 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079942429 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080144375 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078474881 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078338531 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071112212 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07886888 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070917166 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070070412 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080279293 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070887496 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080106107 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079137857 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105502331 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071019266 seconds)
  done (took 6.128187395 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108235227 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107424126 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071522878 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112543612 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103756717 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070369407 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106267919 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098571632 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107576993 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071276565 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068940415 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.0705326 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079301954 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081113124 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115492898 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107541661 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072763096 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.06996654 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.10830907 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.1075897 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069645435 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101979306 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097873833 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.10707695 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068847824 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070885843 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069229491 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070685039 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076095278 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07779742 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069507264 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079222914 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083227862 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077093605 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068517572 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068962025 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068971865 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07810745 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078339775 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077993744 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076480877 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068242374 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069074642 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070170368 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069601152 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067964081 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076684059 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078153245 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077128921 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068999538 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070522578 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069374747 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069979888 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078126853 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076225185 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078502406 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078206 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068718089 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069249466 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07153477 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079553787 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078732568 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078155859 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069688042 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078102091 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069076312 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078851659 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085068916 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068914392 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070079323 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069005318 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069014035 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070134217 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076025418 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.076137487 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07081124 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068625173 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068999001 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078427771 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076467887 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069051853 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075828155 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068002544 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068998271 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070910701 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070368428 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075954843 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077695074 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070086362 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06917389 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068542641 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068516221 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068216415 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075723049 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077710935 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077326194 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076639276 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07014957 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077008899 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076233523 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070091726 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077329765 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068653217 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070195477 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069987807 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076706976 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076237013 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078097133 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06920404 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068745358 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.076914998 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07928483 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069682687 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076742875 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078726321 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07643346 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067964639 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.0782339 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068948442 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.07671483 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067862567 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076965326 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068468174 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.211017166 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070527462 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069309594 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070104959 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078554836 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071205317 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069452803 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07106335 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070085694 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077697584 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081019338 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070758356 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077263571 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.077379834 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070738162 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077223073 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069653909 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078284811 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069914054 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070664136 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069129685 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080641898 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070425243 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069843655 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069353033 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079121227 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069051258 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079248096 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077672546 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068949671 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080556183 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079380962 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076667476 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079403011 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071276338 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069595399 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069254095 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069472614 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076733924 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078103209 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071215776 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070270991 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076750637 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078760057 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068737837 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077154113 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077127711 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077292686 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06949728 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069805106 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080311031 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079258039 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077454645 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077253791 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077695235 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069780633 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076578342 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077433397 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069654862 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083521338 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069386717 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.08142951 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077578037 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075882618 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077827671 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.07890482 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079172126 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07928832 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081664378 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068782839 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069313998 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077730806 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068954774 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069102137 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076470669 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07054086 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070148252 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08098994 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069723467 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078618983 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068310656 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077426607 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068850747 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070582509 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081585207 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069320164 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070403646 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077161483 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069339963 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076569702 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079034698 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079560351 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069414875 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070405111 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077829161 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077956779 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068974045 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068834652 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070260242 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07660177 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075798925 seconds)
  done (took 18.471656704 seconds)
done (took 38.063465124 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.203308542 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15139835 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.18055224 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.113324192 seconds)
  done (took 2.073095914 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.108574207 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097452288 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.087500962 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065666156 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.093555509 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065950243 seconds)
  done (took 1.883288987 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.282473619 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.192147374 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.174251111 seconds)
  done (took 2.008692633 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209436203 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191071912 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.455620511 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.280226831 seconds)
  done (took 2.596108973 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.139653609 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08163681 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064830465 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083340938 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.12295942 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.147977009 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092212321 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.116853704 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075458381 seconds)
  done (took 2.341516302 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14543123 seconds)
done (took 12.425534446 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.201736245 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.097397591 seconds)
    (3/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.069080089 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.116080061 seconds)
    (5/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072152153 seconds)
    (6/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.227575131 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09191139 seconds)
    (8/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.181112152 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092650819 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076671524 seconds)
    (11/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.24474873 seconds)
    (12/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.175675047 seconds)
    (13/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.21200059 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.161131932 seconds)
    (15/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.074471118 seconds)
    (16/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074734339 seconds)
    (17/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.228304009 seconds)
    (18/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.210487682 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.105249353 seconds)
    (20/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.174373857 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.107625539 seconds)
    (22/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077268794 seconds)
    (23/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084828192 seconds)
    (24/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.104181909 seconds)
    (25/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.098373443 seconds)
    (26/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.194505554 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.099310244 seconds)
    (28/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087254766 seconds)
    (29/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.329943102 seconds)
    (30/309) benchmarking ("sort", Int8, false)...
    done (took 0.157345794 seconds)
    (31/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.229726067 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.119151178 seconds)
    (33/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080503742 seconds)
    (34/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.18501387 seconds)
    (35/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07757803 seconds)
    (36/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067422532 seconds)
    (37/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082269811 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.122724081 seconds)
    (39/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067463483 seconds)
    (40/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077946624 seconds)
    (41/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074697639 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073924777 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064759133 seconds)
    (44/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.134945896 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087123975 seconds)
    (46/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.126140651 seconds)
    (47/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079074419 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 0.155230427 seconds)
    (49/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.163256867 seconds)
    (50/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.077747146 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.099250783 seconds)
    (52/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.16996443 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 0.067032763 seconds)
    (54/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074299666 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.116882219 seconds)
    (56/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.194198243 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072750186 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09910331 seconds)
    (59/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09195674 seconds)
    (60/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.065241904 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.192234884 seconds)
    (62/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.123298459 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090983761 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074336816 seconds)
    (65/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074909861 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064446412 seconds)
    (67/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.077504985 seconds)
    (68/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069981274 seconds)
    (69/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072170365 seconds)
    (70/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076233689 seconds)
    (71/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069403955 seconds)
    (72/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065488179 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065392504 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.0998555 seconds)
    (75/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075676867 seconds)
    (76/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080880577 seconds)
    (77/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074473169 seconds)
    (78/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.177473622 seconds)
    (79/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119014853 seconds)
    (80/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.15865519 seconds)
    (81/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.221467635 seconds)
    (82/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093456899 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091269418 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136159519 seconds)
    (85/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072490483 seconds)
    (86/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176784197 seconds)
    (87/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.07318431 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168820349 seconds)
    (89/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.066313922 seconds)
    (90/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.145719217 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.088318786 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.192262057 seconds)
    (93/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.378141202 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.124837823 seconds)
    (95/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.184964265 seconds)
    (96/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.169997792 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073448972 seconds)
    (98/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.139875134 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.099577309 seconds)
    (100/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07757176 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.122986203 seconds)
    (102/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072647575 seconds)
    (103/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065561935 seconds)
    (104/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091045027 seconds)
    (105/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.126991042 seconds)
    (106/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.079047021 seconds)
    (107/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.198819263 seconds)
    (108/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072718713 seconds)
    (109/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.166678498 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.136713459 seconds)
    (111/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.066819493 seconds)
    (112/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.129175019 seconds)
    (113/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.181135552 seconds)
    (114/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.070054442 seconds)
    (115/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.190944573 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088112348 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074486365 seconds)
    (118/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087568974 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066233996 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092220667 seconds)
    (121/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075292976 seconds)
    (122/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066596514 seconds)
    (123/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073780154 seconds)
    (124/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.218301963 seconds)
    (125/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066172316 seconds)
    (126/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.193585071 seconds)
    (127/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066051746 seconds)
    (128/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075371552 seconds)
    (129/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077785918 seconds)
    (130/309) benchmarking ("sort", Float32, false)...
    done (took 0.132649827 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06647552 seconds)
    (132/309) benchmarking ("sort", BigInt, false)...
    done (took 0.191755066 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066311551 seconds)
    (134/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067791441 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088338468 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076016261 seconds)
    (137/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073122432 seconds)
    (138/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074444761 seconds)
    (139/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065316554 seconds)
    (140/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.13907377 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.084785665 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.087737289 seconds)
    (143/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.193117256 seconds)
    (144/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066730471 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07373694 seconds)
    (146/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.087704635 seconds)
    (147/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.195444464 seconds)
    (148/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180692551 seconds)
    (149/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.077885576 seconds)
    (150/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074705283 seconds)
    (151/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.142722448 seconds)
    (152/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.06716969 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072836699 seconds)
    (154/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065682404 seconds)
    (155/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073694162 seconds)
    (156/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066108497 seconds)
    (157/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.193646883 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142624432 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066078009 seconds)
    (160/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071200468 seconds)
    (161/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069854517 seconds)
    (162/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.129840598 seconds)
    (163/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06624685 seconds)
    (164/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.209268171 seconds)
    (165/309) benchmarking ("sort", Float64, false)...
    done (took 0.130664948 seconds)
    (166/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078065452 seconds)
    (167/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.065838585 seconds)
    (168/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.168466145 seconds)
    (169/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.078123056 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.129423688 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067474989 seconds)
    (172/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.064513716 seconds)
    (173/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.068075267 seconds)
    (174/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092058308 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065534903 seconds)
    (176/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06638237 seconds)
    (177/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065650431 seconds)
    (178/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073398325 seconds)
    (179/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.066203396 seconds)
    (180/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074062535 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.12589568 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.124046788 seconds)
    (183/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066883379 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180423903 seconds)
    (185/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072703366 seconds)
    (186/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.136052992 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066880083 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139827298 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067235461 seconds)
    (190/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.079677175 seconds)
    (191/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.06551975 seconds)
    (192/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076090677 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.169172123 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.142386966 seconds)
    (195/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.0681092 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065352309 seconds)
    (197/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066755769 seconds)
    (198/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065868787 seconds)
    (199/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.21481297 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.171608028 seconds)
    (201/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073152524 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124135981 seconds)
    (203/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.06598697 seconds)
    (204/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.068340065 seconds)
    (205/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073397845 seconds)
    (206/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.06732866 seconds)
    (207/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.082062925 seconds)
    (208/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064761125 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072183128 seconds)
    (210/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074440276 seconds)
    (211/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.06589369 seconds)
    (212/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065182556 seconds)
    (213/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.234062279 seconds)
    (214/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075262115 seconds)
    (215/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.171949762 seconds)
    (216/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.071382749 seconds)
    (217/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.068149366 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074108374 seconds)
    (219/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.076712224 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09210193 seconds)
    (221/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.068023346 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089652412 seconds)
    (223/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.0702353 seconds)
    (224/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075440456 seconds)
    (225/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078849675 seconds)
    (226/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.066973702 seconds)
    (227/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074013797 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066163893 seconds)
    (229/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079635281 seconds)
    (230/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076379829 seconds)
    (231/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075947933 seconds)
    (232/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.083490203 seconds)
    (233/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.066990945 seconds)
    (234/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.066149102 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.11247208 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135850673 seconds)
    (237/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.127203346 seconds)
    (238/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.066795746 seconds)
    (239/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06916842 seconds)
    (240/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.066466085 seconds)
    (241/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073473666 seconds)
    (242/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.069039869 seconds)
    (243/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07450128 seconds)
    (244/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.07747502 seconds)
    (245/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089820322 seconds)
    (246/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.069974012 seconds)
    (247/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065462025 seconds)
    (248/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.170721216 seconds)
    (249/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.066869966 seconds)
    (250/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.0664218 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06625553 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067039536 seconds)
    (253/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075434108 seconds)
    (254/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065380893 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.064973857 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.109110435 seconds)
    (257/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065735089 seconds)
    (258/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.066404432 seconds)
    (259/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066342564 seconds)
    (260/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073204986 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086289283 seconds)
    (262/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067223845 seconds)
    (263/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067184092 seconds)
    (264/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066880005 seconds)
    (265/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.195762802 seconds)
    (266/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.079087505 seconds)
    (267/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066474012 seconds)
    (268/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.0662648 seconds)
    (269/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066486975 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075158062 seconds)
    (271/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067498518 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072884174 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.131933739 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.078260586 seconds)
    (275/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.078630768 seconds)
    (276/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066595513 seconds)
    (277/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.066755564 seconds)
    (278/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078558666 seconds)
    (279/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068626359 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088324564 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066529064 seconds)
    (282/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069734153 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066351397 seconds)
    (284/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.0668384 seconds)
    (285/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.066346671 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.06622151 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.132727657 seconds)
    (288/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.06600552 seconds)
    (289/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066472312 seconds)
    (290/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.078904574 seconds)
    (291/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066506916 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073963176 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06615266 seconds)
    (294/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066665334 seconds)
    (295/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.065628776 seconds)
    (296/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.06604013 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.11727829 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073211634 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067824077 seconds)
    (300/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070612374 seconds)
    (301/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066492525 seconds)
    (302/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.065734762 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066136357 seconds)
    (304/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.066178553 seconds)
    (305/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068875924 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.065654274 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.118752672 seconds)
    (308/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067016409 seconds)
    (309/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078058327 seconds)
  done (took 32.844867354 seconds)
done (took 34.220087798 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085495007 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098271611 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073578468 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09384888 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080741203 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095638118 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073586824 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078631286 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081022653 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079918536 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078871452 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.071968835 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075116641 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074847986 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072975446 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097282824 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079585537 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07407617 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07420215 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065447813 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074177104 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06570915 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.065629555 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.072592217 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077271687 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073259998 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075182677 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075060596 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066176269 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066752451 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070641923 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074869118 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066274022 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078050622 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074876041 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074796461 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075969114 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078581425 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.065680374 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066664316 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075672609 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066127019 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074088934 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072274455 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070795127 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072573694 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073970577 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078379328 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096957515 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070987514 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075950824 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076608772 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07786424 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071476514 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071201344 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074073303 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071870534 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096614499 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074412015 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070517124 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075649675 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074938218 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072290731 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07357226 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073506509 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076191204 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078291077 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072209841 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075929963 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072832848 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065761991 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073839053 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070833503 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066080642 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076785509 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078535713 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065028711 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070306653 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076942823 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074297933 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065745098 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070469029 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06542743 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07049566 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070480338 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072321857 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071138933 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073268655 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065573338 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074713885 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073266377 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073809413 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.065527486 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078417774 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065721185 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071893713 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066094513 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06597685 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065310071 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071475083 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065431403 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070917542 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074618122 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.064957917 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070568522 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079033932 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065693417 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073044437 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065316763 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065471877 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076518101 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075977006 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06536424 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070476477 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065267483 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071142763 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065452058 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065837191 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065440403 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065792312 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070210969 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065679634 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070149656 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070867975 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077683824 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065307657 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070283415 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070375908 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065377269 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07219863 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06581757 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065605211 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.064962139 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079039922 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070258599 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06567134 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071219044 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07008102 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073257936 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064560595 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073915888 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071192868 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.069702227 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071865753 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065026547 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076391071 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070451093 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070690914 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.065235754 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065389831 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064157458 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06461094 seconds)
done (took 12.496715792 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070052357 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.117746769 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.093167246 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093069193 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082946456 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067215104 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075259293 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.092989121 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068214096 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.096956767 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088291644 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088446062 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.109392292 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065912897 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066756044 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067859912 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067756169 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078425461 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.094336457 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088963046 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.106235838 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066991443 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.086148234 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.087141748 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.083791171 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.0910218 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067809373 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.067936007 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070009496 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.087455181 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.091751182 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069389016 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06756669 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.090730838 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.085344139 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.080127801 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067617708 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.075369762 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067388637 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066887308 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068082037 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087755325 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.075171704 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.077599268 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06806737 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074583007 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067851514 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082711503 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.085303488 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075233702 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081948455 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.090558187 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.070183497 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.082553189 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066127795 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082163731 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.076106244 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.066805402 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067643815 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071838069 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067002331 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06910552 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.077932561 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075908655 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071629113 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081431997 seconds)
  done (took 6.627827032 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084476595 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094117423 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084185984 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083938824 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065990873 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067017691 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069465059 seconds)
  done (took 2.007289285 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068411388 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087442493 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090533874 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091015115 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.080917498 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091766395 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074681515 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067144799 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.09602294 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066235875 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086968683 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097792933 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070794315 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078593083 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092009462 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066947293 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09134056 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066876397 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.067712468 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091113345 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071679408 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.093684754 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077853832 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067316259 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080017559 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067332166 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099038405 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074839057 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068541037 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068584827 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068421338 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.09371459 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079045987 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081361469 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068705932 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081780297 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.0807311 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070539727 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.077677028 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.077006666 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080477203 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068305521 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06618325 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068570235 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070062886 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078504333 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066033783 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068919859 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068152706 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086087868 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066613622 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078943908 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070846721 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07319863 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073078621 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071945322 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.074928369 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068658976 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086823262 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069260163 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.0844052 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083211882 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080211402 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083406019 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067311232 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079310243 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08099594 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068082327 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069181329 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068406993 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083283159 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070202914 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068616107 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078769754 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.066602174 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091523109 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091052538 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066658919 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081265792 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067711037 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068629071 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.078896683 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.0908311 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072839137 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068295148 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071493551 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069414769 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070364279 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065889618 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071338891 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068671468 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.07228991 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06830308 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070407105 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069520556 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083527816 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066708898 seconds)
  done (took 8.827875484 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070311229 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068062459 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069379716 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068485501 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068032482 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068598548 seconds)
  done (took 1.897547797 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092306487 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.067846409 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080591721 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.067971446 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104360503 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083374361 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08385785 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077137613 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08189262 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080182518 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083672844 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.086528232 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087593616 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070203134 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083062284 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.06887764 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08350629 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072432993 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079191818 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070516037 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081433763 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.070216983 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070423068 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086708671 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071575125 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.068665002 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077247014 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079087651 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079098749 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07730422 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.070584587 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071382847 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074646095 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077095615 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083401822 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075176741 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06785299 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074799437 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07100177 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07223105 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08653013 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070542742 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.072921851 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074320651 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076945932 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074666677 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074309912 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076267093 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082942037 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074534181 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074157698 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069149901 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071681719 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07437356 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074610272 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076992827 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073970101 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083264846 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069960765 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07472854 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.06819596 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.071581008 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.0767162 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.071481524 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075419321 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074674879 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074757365 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07011525 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070711236 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.067967307 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074123148 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068447551 seconds)
  done (took 6.932337003 seconds)
done (took 27.769816099 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.513280739 seconds)
  done (took 1.951227769 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.615924205 seconds)
  done (took 2.084176397 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.726829415 seconds)
  done (took 8.196958966 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.378759484 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.453555278 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.728165743 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133187255 seconds)
  done (took 3.198046854 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.702915255 seconds)
  done (took 2.182746592 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.235321748 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224410743 seconds)
  done (took 1.950872331 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.348741143 seconds)
  done (took 1.818157884 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.064799499 seconds)
  done (took 2.536723674 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.234113021 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160016174 seconds)
  done (took 1.868270664 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.442999953 seconds)
  done (took 1.917318601 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.390310861 seconds)
  done (took 5.867152073 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.222150034 seconds)
  done (took 1.732962467 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236535377 seconds)
  done (took 1.71410484 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.744514648 seconds)
  done (took 3.213317272 seconds)
done (took 41.713049413 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084436837 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085825861 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086300743 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081886325 seconds)
  done (took 1.787755516 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075788285 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071344885 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075445758 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071207714 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.074985937 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071197087 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072841665 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073616432 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071096379 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071468447 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071649286 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071107965 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074277466 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07287904 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.06988584 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074222267 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074992088 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071097208 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073944775 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071263592 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069365539 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073789081 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074011164 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070532721 seconds)
  done (took 3.214448057 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080133692 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073452045 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07652877 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07256873 seconds)
  done (took 1.787410586 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078752923 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088540177 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086542878 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.0773806 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088658022 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084009207 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067773656 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067771383 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069042652 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076760699 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067083464 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.092666557 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.085819891 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077175939 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079349463 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.06408968 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065918283 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085097833 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077658055 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077522144 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069394787 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077655557 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066930971 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086842834 seconds)
  done (took 3.338888186 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.083330535 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103217645 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081395756 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092670442 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093652408 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06694625 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.080226943 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093937284 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.137220679 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06742835 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072750909 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06711702 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.075864437 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066826069 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081124278 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110219137 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11356582 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070375839 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101337344 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066586968 seconds)
  done (took 3.219265899 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.084923142 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069995015 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070839032 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066553571 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077274039 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073872705 seconds)
  done (took 1.93556982 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070126274 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068566825 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068200754 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067676843 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073951683 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068111357 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066758609 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068608148 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06832339 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068433292 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067904725 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067021556 seconds)
  done (took 2.312136367 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.192660498 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069674806 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069619103 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066964569 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071088488 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067218388 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082768959 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068622565 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.094009193 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06828628 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067615219 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069948857 seconds)
  done (took 2.476356192 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199049125 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074411416 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229209071 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146564317 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104099313 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109172387 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11121027 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108753418 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.133825582 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097539407 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155146452 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159113335 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103363679 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131944208 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087359725 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119971438 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144921492 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162151069 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101632742 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15657707 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138268357 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122541603 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141577983 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098013712 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101464508 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113603264 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072190922 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077521751 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165562178 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125857726 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137890345 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107431744 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089837625 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173875097 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162619398 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135211427 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144128609 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081932499 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.118016767 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.128944648 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194141688 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087854281 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156474071 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107107487 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078148718 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12632902 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11059544 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.114123888 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.099102352 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086106023 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281936178 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179445813 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.131131476 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084704444 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119984588 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107844405 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.109042369 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114723389 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173522127 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151740531 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123703322 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070558206 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107081363 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142551676 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127097973 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105888183 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.120493033 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090188418 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126605076 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150844576 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120179819 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135016456 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.112938282 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085928422 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117009452 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131774688 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120299521 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165980522 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12027677 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072068091 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11559212 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096053844 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078559541 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142976068 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07406164 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169262144 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098941916 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.121155342 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125671256 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106256828 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105796208 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14982621 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13523907 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101230572 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084418779 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101712045 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.113611517 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136581564 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084979746 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105457882 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11060304 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077356099 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127562381 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073213129 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117611796 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093160486 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115790878 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121556073 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076873655 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.265171416 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101863059 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100604289 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127964703 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151601822 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086613425 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079543711 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159330787 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117779641 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.100889422 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1356642 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149058826 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118026703 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095099795 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139375963 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165596955 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088125862 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154839228 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100439376 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081722264 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.10387802 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118608524 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107732911 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119065574 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079569497 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115630188 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156714593 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073340019 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093639357 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129887897 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079956176 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079007887 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101990689 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101393043 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093851745 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097770119 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101235244 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130384496 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119917446 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102349234 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119783032 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098557359 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15789065 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086096259 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099852316 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100955579 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07156217 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.127034299 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147011347 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077039356 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150317689 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.117695978 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112163508 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116155703 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081996084 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130269833 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077420167 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071682791 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133168693 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107853476 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10437172 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.14090313 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262282141 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.122540217 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116850999 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126650032 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12474414 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.124117803 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106568706 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087022634 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110733941 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124114791 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072037811 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090402851 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080829012 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102595931 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092630936 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08209962 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136052929 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117041267 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106900245 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110382131 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094612683 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141858683 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07693734 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121327334 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117014008 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093449608 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145433324 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143755636 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128450758 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097884358 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131194121 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072157772 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073494429 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086912984 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119726582 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08200032 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08150896 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110077534 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141567974 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122527313 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129643173 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119594401 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114849669 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148325106 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.07190604 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116527828 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135865933 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115965108 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101548781 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089131192 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095194648 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135818503 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100230284 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174668886 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109601073 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121115643 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149665121 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099280357 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076475838 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098715925 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122923459 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09652306 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.288275204 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096963989 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086565159 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105193832 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078001 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100717772 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121964869 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113136683 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130657466 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.108732134 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126790774 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076724644 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109407966 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11788745 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116304317 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.08227422 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112453755 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15670039 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09544326 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113462717 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143187151 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077499596 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.135127859 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163518134 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139528689 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082941096 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102145806 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11737612 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120509267 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114575336 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131382655 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100976918 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134165224 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107337262 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.083279581 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08478933 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09352234 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101499528 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.109925 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.100895205 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11073241 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093408676 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125080322 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09929183 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106776196 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113419504 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097545204 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093256517 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093938074 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167376808 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113344311 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165272633 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097535495 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.134179482 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150884862 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073506775 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076631819 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077972459 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128415565 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081757548 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122414753 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.258092271 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114729955 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120328692 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133695617 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094217881 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070708085 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106355827 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126984252 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119948768 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095558025 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.100435887 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152194879 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115290501 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077459579 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108570545 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113304491 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101492556 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163667073 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080641176 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1054872 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075428837 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077566247 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120152175 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145853549 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081057093 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101371049 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1172326 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107756067 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120392376 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095450789 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107755411 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126395536 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139862292 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122702842 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087064439 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107311106 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121248747 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146011364 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101744316 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097396189 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164200378 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146250091 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.150207857 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085064094 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110102014 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109904691 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105270685 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129933499 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082322063 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151404415 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079853208 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127638993 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097760856 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087181491 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121853068 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108352478 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085954241 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134920448 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111349492 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079886092 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076926078 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260377982 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116109429 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101443614 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074682628 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132464749 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073426897 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130970681 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164709318 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079370753 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102617022 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093215565 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082079696 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101263102 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099309573 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084689267 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097975224 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162421354 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085925584 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138188769 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12768214 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107948657 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130397728 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100489353 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640313771 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078050614 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143484502 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110782455 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167088318 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097343265 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113998419 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107367133 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115584926 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135273227 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098819228 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175003483 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124605813 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113673417 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077532512 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09903664 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100732993 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086586108 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104369634 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109713249 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108738297 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092083318 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.11304097 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116918776 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08012605 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093461764 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14616583 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110729984 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136238331 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131020788 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082451488 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113262533 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12944316 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0778366 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.112999882 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142733151 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.254363126 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099855221 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081696543 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.09903813 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165209768 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072533529 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150835868 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116451924 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110246915 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109020081 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.106767372 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12463891 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100900138 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116764153 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090838855 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.105077086 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145941259 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082279451 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077495816 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10200955 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106486634 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096348662 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095027175 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097702866 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14259702 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071492373 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095422853 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111272212 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136359746 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161258865 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.1036596 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081945953 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114135 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114736285 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.109701692 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117023138 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079560561 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079493816 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079593164 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.099245776 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.120871457 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109799904 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114834091 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105096215 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151603142 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082059395 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222345927 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09338923 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101541669 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087294945 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078708791 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093836247 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093707246 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100532541 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107530665 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16393287 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092892841 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087141304 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089607742 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073102774 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081402092 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119365413 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106221919 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112477756 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100189825 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079491644 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098755598 seconds)
  done (took 57.08366027 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12390768 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.098084552 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.099103165 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145888468 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122528901 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200532863 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.151664907 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189364536 seconds)
  done (took 2.746640075 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070350221 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095704588 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105957284 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083128102 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067540454 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069285741 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226248356 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081785334 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068067727 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09188784 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077932597 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069524744 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.446456905 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.0671537 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068435116 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.076836274 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068698004 seconds)
  done (took 3.407565167 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.384513388 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.608047915 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.353100792 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07620013 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.863519688 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.09199036 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.179629078 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140555377 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082828145 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.520755293 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369371015 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133905255 seconds)
  done (took 18.388903309 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.083769542 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077705555 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091458133 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091351934 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.079210472 seconds)
  done (took 2.000343151 seconds)
done (took 105.223189197 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082737565 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.435908879 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070045874 seconds)
  done (took 2.115145113 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092659332 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089968433 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090570307 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087302909 seconds)
  done (took 1.956850307 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076213146 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.0777225 seconds)
  done (took 1.740267419 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.229835728 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.176631812 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096842355 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084624899 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080765172 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081988738 seconds)
  done (took 1.840504823 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074413767 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073891326 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074247291 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075054558 seconds)
  done (took 1.884902785 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.070132523 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.067995087 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.070133164 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072926196 seconds)
  done (took 1.870128899 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086641779 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085351817 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080285018 seconds)
  done (took 1.840126919 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.101935832 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090901861 seconds)
  done (took 1.781277175 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083162183 seconds)
  done (took 1.672719636 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.090753338 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.100190472 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132437132 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.115416201 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138437907 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.115236828 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084954105 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085698174 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079629162 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086662557 seconds)
  done (took 2.618696683 seconds)
done (took 21.48126347 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080909913 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.376173087 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361286175 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091092022 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670562734 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357588128 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.998036103 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093543587 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141697442 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069032988 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085605161 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651844675 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.988672775 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.331385226 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.974765416 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.331710424 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649824086 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069855819 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068853551 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068801319 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.982198715 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068916189 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068901388 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069313881 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65022898 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372448436 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069089696 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.331122344 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070116297 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071720039 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359499412 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070141706 seconds)
  done (took 16.21267374 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072842574 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12267792 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07393615 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086184059 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071420022 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070949359 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07271387 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070335877 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121014874 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069218667 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086220236 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06935099 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073030773 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069712865 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088670776 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06934587 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070367714 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070471238 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070327939 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070463165 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088889799 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069873595 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073228344 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07059858 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07020437 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082291025 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070285283 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070650764 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070947471 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071987667 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072852665 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070476649 seconds)
  done (took 4.054352106 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119249431 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126755894 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075294233 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107275809 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113740838 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071632296 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147413696 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094130071 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128676099 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06938234 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086209325 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069873165 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103511117 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071168807 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089678556 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070613519 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071475699 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07052407 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070570086 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070431133 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089646952 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070375713 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070208277 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071565481 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070454295 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084364249 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070731953 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071128757 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070530209 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072425737 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07352156 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070680294 seconds)
  done (took 4.319292066 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072925705 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074253843 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081313966 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082483971 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068219976 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07068646 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072864404 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.067997794 seconds)
  done (took 2.198237144 seconds)
done (took 28.383628157 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080642088 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06906057 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072198691 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087834953 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075143694 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079482615 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066127416 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075096253 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072227184 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07263778 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074433414 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068325715 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071273152 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065699533 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072951105 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067076207 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081500782 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071581579 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081286389 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081590308 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070232214 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073963757 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076109829 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081213793 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081032562 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081422243 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077530334 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073348105 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068376298 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070928806 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071091326 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.07990418 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081309391 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081355924 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067626679 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067805022 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072649578 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069563545 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08205078 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076777833 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069164236 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076928576 seconds)
  done (took 4.712589523 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086679783 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089733716 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08328789 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080010224 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090882161 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083343992 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.086581414 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078542656 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078273754 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086922735 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074497447 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081437183 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078892686 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073040669 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077533754 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074871524 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080667766 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.074426614 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077608614 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.078438767 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087226485 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073589686 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087738202 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07978308 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07550082 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080824618 seconds)
  done (took 3.715499488 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075621979 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086891209 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093382777 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143950154 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111578053 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08112134 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082381418 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092375636 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.096679676 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068893959 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073451963 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093173654 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09353178 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074554008 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069157731 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084763472 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084457365 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070793105 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07557553 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097499135 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089338624 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085891982 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09471066 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08541066 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068454386 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071803195 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073978525 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087269902 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071165605 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080319041 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072032086 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073083667 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070378257 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079726335 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.0711748 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068575132 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093154833 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079535083 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081173017 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069646296 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077989511 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069379019 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093750796 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128261203 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067694506 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07245446 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072410161 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079770433 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06851537 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09561693 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080432023 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068164375 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069229307 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06778813 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067818526 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.071102021 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070185361 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070716425 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078290452 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075543732 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090193939 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073911637 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085618618 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067904239 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078181094 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.06761938 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069855506 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067335693 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096857687 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070042436 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112075649 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068986986 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.066970975 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078994714 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078287435 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074241433 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068295805 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085565105 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07969211 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072497012 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076558258 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072262113 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072031549 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098693438 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068706409 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.067752089 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067174716 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.071718792 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071961792 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068816464 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080128949 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067564667 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072217507 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086090733 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068416807 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069185664 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.071845162 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070748308 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067631606 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07884532 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072063255 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069504761 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07921808 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069129211 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071848399 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081803368 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075786382 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067136147 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070778915 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071857044 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069762683 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069964356 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071915321 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070168722 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07495067 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075144046 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074051786 seconds)
  done (took 10.736820428 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165016929 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156827776 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070894191 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148351841 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077008168 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080388312 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151099271 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095380034 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069128574 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069960342 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069095647 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109548762 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105413762 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116433928 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081689869 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069798144 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.091403072 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114606712 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153324247 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147465263 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.091625602 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077498393 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071388004 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071236991 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070599886 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078390171 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08592175 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078417535 seconds)
  done (took 4.412834716 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079523963 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103889968 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073082545 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091071391 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088698947 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069570752 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070710573 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070709904 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085525127 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078553509 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069086563 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074538404 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07311105 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072424422 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.06987505 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075772238 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076597527 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068257267 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07263865 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074740142 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079641651 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093572084 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072806622 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06897411 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07172714 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069131444 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077329344 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083646973 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069317501 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.103234582 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066733688 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073655314 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083361095 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06931589 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068721891 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069678462 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069229675 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069160479 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070734282 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067635208 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067725177 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072658183 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067874191 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.076863619 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.08193306 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071115526 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071076919 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072180517 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071815994 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066689174 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071671972 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071892297 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071785413 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076433974 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073402659 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072941485 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069731977 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096624629 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075254542 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068643901 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068275066 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068442692 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071507198 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078488783 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084515377 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071418315 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067723677 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069455358 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.081691354 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.08212846 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068307334 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073702267 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.067117266 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070769662 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07146083 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071361297 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069857143 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067834005 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068996061 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069341814 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.069842168 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068639143 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068593906 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074744405 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067559931 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067736412 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069239454 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071105862 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07740339 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068606127 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072828152 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070045305 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068086242 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072279439 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074877121 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072308948 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.07975032 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080004076 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06985354 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067875042 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082403954 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07182333 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068501416 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.074959717 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074003824 seconds)
  done (took 9.383149378 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093516932 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070088378 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086060036 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092015078 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079421232 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074661009 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.079737404 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068968511 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085169906 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073832576 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076735974 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067809081 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079944558 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078676954 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070066266 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079382703 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072024029 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086545859 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083908124 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067702624 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07771549 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081722215 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08102932 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083408812 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082935139 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083944886 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081058994 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.07865886 seconds)
  done (took 3.874591362 seconds)
done (took 38.438091631 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.705137955 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.918741971 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.678000417 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.90333274 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.983071577 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.700422794 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.765596302 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.665386521 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.951806533 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.713397152 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.909921343 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.74938818 seconds)
done (took 64.397186928 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.688976698 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.825239941 seconds)
    (2/2) benchmarking "String"...
    done (took 1.932053567 seconds)
  done (took 5.357305153 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.900112958 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.320270193 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.893484973 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.660967623 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.665864762 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.917016976 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.44450561 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.112578254 seconds)
  done (took 29.615506233 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.835723808 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.886104541 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.370072787 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.402851306 seconds)
  done (took 15.142472834 seconds)
done (took 61.399249873 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.689077779 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.690494967 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.665714097 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.664957928 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.75390654 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.677667823 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.808210738 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.889874334 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.659331811 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.670867975 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.662483319 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.144973242 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.671391003 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.768831222 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.660530765 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.658336518 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.724974445 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.09552001 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.811473131 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.665453437 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.681437392 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.695737134 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.658896853 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.656021617 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.661029063 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.653697247 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.033382421 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.661933658 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.471256588 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.655235745 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.699104422 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.971263082 seconds)
  done (took 201.135064609 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.649174271 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.561474012 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.644419306 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.685463553 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.00725555 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.823926331 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.751026774 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.057246934 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.652348686 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.650806693 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.854091843 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.646825648 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.861998981 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.589000632 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.669354384 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.73676208 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.808150522 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.859289749 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.669813252 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.807856804 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.656836399 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.681363304 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.631080534 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.816656376 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.676925168 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.729635442 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.648662744 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.646269103 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.828802347 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.780164838 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.640954723 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.643476105 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.839601637 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.510633505 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.647483249 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.666865715 seconds)
  done (took 164.620052276 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.816294009 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.641201153 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.639173899 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.640510929 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.647152524 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.640175091 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.638695697 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.761484545 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.760903985 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.276748483 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.34058682 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.640482377 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.689784737 seconds)
    (13/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.637457898 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.394253712 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.638191405 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.703315272 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.651207601 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.638867521 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.652106854 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.66630562 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.638194939 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.639376443 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.75819092 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.651887143 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.638604929 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.64754319 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.63915828 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.643751729 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.023357653 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.638297376 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.886184396 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.637922593 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.642148415 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.878014757 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.639314698 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.63945576 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.460001643 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.156133299 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.71768416 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.638605574 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.642984626 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.635502933 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.853743772 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.639273938 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.636774965 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.63825216 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.638601472 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.749094341 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.636896449 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.760114504 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.640603917 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.107882131 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.636947644 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.63793287 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.668549599 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.209994813 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.637260072 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.639312575 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.635997941 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.636530614 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.642775836 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.661146128 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.711477347 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.640490195 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.640419138 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.643333121 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.636985143 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.880671836 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.639151999 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.296149358 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.692215163 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.766052908 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.755826139 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.638063745 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.700589107 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.727119244 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.637575172 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.636157003 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.635160189 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.635497033 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.717215092 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.63773018 seconds)
    (83/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.63499564 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.779530143 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.645330233 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.635766006 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.691787542 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.705864129 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.637494131 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.459052682 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.637715065 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.635938845 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.872370275 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.702596404 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.635474969 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.636003748 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.637668755 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.778671723 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.758220137 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.364520502 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.639440121 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.572146861 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.775965245 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.638068231 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.749924171 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.638330297 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.719300387 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.645427459 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.640942475 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.67219381 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.640710844 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.690660561 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.639444133 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.009555256 seconds)
  done (took 385.484805811 seconds)
done (took 754.719561708 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.231270034 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.197488955 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.289827254 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.214606797 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.193434042 seconds)
  done (took 12.702715034 seconds)
done (took 14.281747069 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.71481872 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.718778883 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.65517032 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.716341545 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.65206326 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.717396259 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.703104487 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.664195616 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.686826717 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.660742179 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.686361278 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.659967342 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.644356311 seconds)
  done (took 23.458515214 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.855917959 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.863685943 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.703498248 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.858790638 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.677455207 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.876850539 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.790873492 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.787485001 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.782960016 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.65087396 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.645643277 seconds)
  done (took 21.071486168 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.864365575 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.869836253 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.710027347 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.88263953 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.683147906 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.860579988 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.796260162 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.786086604 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.779502232 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.649396817 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.647582556 seconds)
  done (took 21.109211059 seconds)
done (took 67.216586971 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.645875582 seconds)
  done (took 3.225035211 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.662272714 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.813057169 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.642488193 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.642052278 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.645339416 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.643694127 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.641530121 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.642925952 seconds)
  done (took 14.914629799 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.645093183 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.644343571 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.643461052 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.646186074 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.64549509 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.645218043 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.644377459 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.646018975 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.644688573 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.644929243 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.644433307 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.644968722 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.645566883 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.643346606 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.644674183 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.645418534 seconds)
  done (took 27.899641607 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.64759303 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.645604504 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.647911337 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.646889112 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.647681269 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.649347609 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.648186022 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.648039136 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.646638368 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.648385185 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.648877094 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.648391519 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.647604238 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.64735495 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.648356039 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.64818634 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.64777208 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.647487709 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.653172969 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.649279939 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.648533836 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.648396444 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.649359814 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.64911524 seconds)
  done (took 41.140844288 seconds)
done (took 88.761688157 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.362234347 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.657022345 seconds)
  done (took 9.604501931 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.654514454 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.654661815 seconds)
  done (took 4.901625382 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.654431875 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.654255114 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.65357902 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.655013523 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.655163611 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.654776317 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.654984153 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.654685109 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.654588418 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.653552779 seconds)
  done (took 18.134669807 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.655735004 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.654906869 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.655408203 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.653566898 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.653664753 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.653940295 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.654914914 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.655262708 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.654675115 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.655609325 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.655892452 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.656389097 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.655312624 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.654748006 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.655527396 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.655269979 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.655860592 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.654825537 seconds)
  done (took 31.381509655 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.655441805 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.654572278 seconds)
  done (took 4.900521134 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.655806349 seconds)
    (2/7) benchmarking "second"...
    done (took 1.656624194 seconds)
    (3/7) benchmarking "month"...
    done (took 1.65563753 seconds)
    (4/7) benchmarking "year"...
    done (took 1.655544645 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.656045331 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.657209749 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.655596243 seconds)
  done (took 13.183085488 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.65606461 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.813941825 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.878262903 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.297501255 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.65808586 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.658730219 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.599572311 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.65864499 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.660973572 seconds)
  done (took 18.474134333 seconds)
done (took 102.166524314 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.551945713 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.65438207 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.884816065 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.764158476 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.673059014 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.945740596 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.67583853 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.926476024 seconds)
done (took 41.667879362 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.693523028 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.396250553 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.433747218 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.685127589 seconds)
  done (took 15.107031913 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.671284594 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.969991836 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.678059714 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.451303174 seconds)
  done (took 21.366722358 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.017060366 seconds)
    (2/2) benchmarking "read"...
    done (took 2.008913875 seconds)
  done (took 5.621666554 seconds)
done (took 50.383633277 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.657481579 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.658156866 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.658569692 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.657221755 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.657318242 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.658778034 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.658631078 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.657938671 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.657844468 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.657629873 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.658576469 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.657256046 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.657452544 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.658208181 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.658827237 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.65849434 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.658323331 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.656729865 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.657599011 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.658885129 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.659244288 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.657175931 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.658223691 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.659869678 seconds)
  done (took 41.38670634 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.658170133 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.660793556 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.658763518 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.658504593 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.659211659 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.659124483 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.659945497 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.658715039 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.657763489 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.659332569 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.659765054 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.65855146 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.660622852 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.659470209 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.657816403 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.659096765 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.659674451 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.658962845 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.660671136 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.659559448 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.660184637 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.659837892 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.659730119 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.659884422 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.659732791 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.659118696 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.660279075 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.659425136 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.659893786 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.659546176 seconds)
  done (took 51.377168463 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.663269583 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.667627916 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.660382937 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.660459776 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.660582177 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.65844976 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.660970757 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.660438075 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.660419281 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.660578451 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.660452457 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.660948314 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.660454121 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.661255034 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.661045895 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.660483143 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.660437999 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.66397207 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.661392243 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.662080755 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.659855363 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.660932305 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.661328445 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.660856838 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.660770404 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.6613488 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.660285196 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.661299907 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.661906341 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.662074809 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.661457485 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.662353616 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.6613877 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.661276652 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.663275759 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.661929568 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.663712816 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.668419401 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.661889165 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.660304648 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.661886673 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.661597627 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.663418388 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.662601896 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.662809945 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.661510091 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.661780072 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.661718456 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.662203367 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.661522523 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.662641386 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.660663016 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.662227711 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.661655059 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.663523413 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.663577287 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.663927223 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.663405796 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.66269783 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.661384631 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.662546648 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.662805109 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.660911801 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.662493814 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.663727947 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.6616902 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.662742517 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.663594623 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.66274224 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.663478567 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.663128974 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.664319387 seconds)
  done (took 121.260899256 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.664783372 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.663206544 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.663095922 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.66321956 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.664117966 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.663744639 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.663373945 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.663345473 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.663536572 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.664010796 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.665328786 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.662474488 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.663839395 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.663552047 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.663713918 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.66313097 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.663874099 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.663347145 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.664789072 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.664722348 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.664781056 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.665129223 seconds)
  done (took 38.204586344 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.665433083 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.664702905 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.663977016 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.665375078 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.664258076 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.663101725 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.665201438 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.66655268 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.66428527 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.665320387 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.664237734 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.66551425 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.665433499 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.665608022 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.665368971 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.664393208 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.66613638 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.665874151 seconds)
  done (took 31.570729216 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.664462227 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.664346386 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.665249046 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.664718264 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.665989206 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.666620507 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.664801506 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.665517631 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.664446382 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.665303353 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.665688183 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.666005766 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.667056334 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.667366313 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.665712487 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.666500851 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.66643853 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.667999016 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.664782295 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.666725779 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.667551868 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.666059888 seconds)
  done (took 38.251285645 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.668021776 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.666059952 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.666563155 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.666824442 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.666554935 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.66603944 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.668844638 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.665733288 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.66611917 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.667392068 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.666512888 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.666053216 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.668845941 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.666503412 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.666674407 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.66737452 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.665862846 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.666854236 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.667931154 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.667470894 seconds)
  done (took 34.939898103 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.664292029 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.6644196 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.664517475 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.663315127 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.665259347 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.664932673 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.664632164 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.663586414 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.663949539 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.664742123 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.666344884 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.66441693 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.664142816 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.665170708 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.663732768 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.665048626 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.665030159 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.665557352 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.664800347 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.665122966 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.665028984 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.664720831 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.66557682 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.667290963 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.666546248 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.666494725 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.667040175 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.665665354 seconds)
  done (took 48.224188236 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.66648615 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.66695706 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.66726706 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.669146205 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.667634871 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.668963914 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.668121797 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.668277262 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.668618571 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.668844857 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.667589464 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.669064209 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.669068934 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.668532892 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.668639299 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.668805208 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.667934205 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.667486236 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.668568731 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.669431153 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.669855952 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.670064418 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.669045187 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.670774577 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.668648906 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.668981943 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.669010843 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.670223441 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.669086189 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.669524312 seconds)
  done (took 51.664916243 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.690721038 seconds)
    (2/2) benchmarking "in"...
    done (took 1.68864241 seconds)
  done (took 4.983994454 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.668949293 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.669840113 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.669436247 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.66977874 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.669853863 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.668942393 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.670369531 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.669808658 seconds)
  done (took 14.961284572 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.669759684 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.670409453 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.670536885 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.67104632 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.670374195 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.669811031 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.67667297 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.671341251 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.670055671 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.670309764 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.674355491 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.67834885 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.672068272 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.670433247 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.670635295 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.671241567 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.670918508 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.6712725 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.671834075 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.672277923 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.672901275 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.671069918 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.670828206 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.672294578 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.672004788 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.679531083 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.675292984 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.672271596 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.671246242 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.675911544 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.670115553 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.673518622 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.672559845 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.672534138 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.672772733 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.672934179 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.679369935 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.672223165 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.67624563 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.673174236 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.671503142 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.673104273 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.674001011 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.672537621 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.672098023 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.672662663 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.673293383 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.673464792 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.671437594 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.673298373 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.681345994 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.671596329 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.672881558 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.675283725 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.673734813 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.67943444 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.673521747 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.67500767 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.681094585 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.681436805 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.683702795 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.679225302 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.673657255 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.67367735 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.681215122 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.694998701 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.679765767 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.673855022 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.674203394 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.673549244 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.678809008 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.684292271 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.682513576 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.67418942 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.6750105 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.675478186 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.674611182 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.673483928 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.682093179 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.678783502 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.676294512 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.674170696 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.683485126 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.694775649 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.674472149 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.675830609 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.675513226 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.677495868 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.675045521 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.684425433 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.677074239 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.675728876 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.674110197 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.675603214 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.675068173 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.676798241 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.674061639 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.674820529 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.675976579 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.675581421 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.675377684 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.67733855 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.682540114 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.675736205 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.675469612 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.681308225 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.676179745 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.674637937 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.680304976 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.676130674 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.676391931 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.675309019 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.681400257 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.675510766 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.678063018 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.683544587 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.675749197 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.676835218 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.676632709 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.677421718 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.683164325 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.700535571 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.677322614 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.67703868 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.680426314 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.687089179 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.676977563 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.678533065 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.676879699 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.676566679 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.676775371 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.676080847 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.677689471 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.677754007 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.677236592 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.677172977 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.677917581 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.678377234 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.6774066 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.677376557 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.675849473 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.677205808 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.678574958 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.67865734 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.678638683 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.678568447 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.686122014 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.675805647 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.678084606 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.677815314 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.68031171 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.67830501 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.679293807 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.677358236 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.677740084 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.677511727 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.677212348 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.678942719 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.678615404 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.678897355 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.678143278 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.67749705 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.680887595 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.678772765 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.681500763 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.677425293 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.677490633 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.678939994 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.679090153 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.678634859 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.681659648 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.676802399 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.681079474 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.686012964 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.678881848 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.679619786 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.67973733 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.67957725 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.67992192 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.679623406 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.681903574 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.685532348 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.680089917 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.68504902 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.680939492 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.680261365 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.681156933 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.678847974 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.678998265 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.680329964 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.681810133 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.686914716 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.690041623 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.688485283 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.679989493 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.68384904 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.680235375 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.684344466 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.683027956 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.68064865 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.680329816 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.680410172 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.678928505 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.681174136 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.682616603 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.682080128 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.679589074 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.681031625 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.680955487 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.680434581 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.68051311 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.68078027 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.682049217 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.681398915 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.680836512 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.680399055 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.679528563 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.680457877 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.678869081 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.680809455 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.680430213 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.681345645 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.687316948 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.682958392 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.682126921 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.682332162 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.68028059 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.678626998 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.681235752 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.682966072 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.680268609 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.686468203 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.68102605 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.679804982 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.688251629 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.681587322 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.68074866 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.683675507 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.681773959 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.682570769 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.682781129 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.689005931 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.68092908 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.683195553 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.683138493 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.681433894 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.681770619 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.687448446 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.681804097 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.680152904 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.683137084 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.683638154 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.682013541 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.68311034 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.683279167 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.683491204 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.684149715 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.683484553 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.682197841 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.683451429 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.683199379 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.6832653 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.684013867 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.685728825 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.688516148 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.685420917 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.683352018 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.684403913 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.683353329 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.686758034 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.682381064 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.684367585 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.682544992 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.692735834 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.691929521 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.689403474 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.68442252 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.683369778 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.688088957 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.684181728 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.687678609 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.682926221 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.682347373 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.681687482 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.68267814 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.684073274 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.683503564 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.681874923 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.685342729 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.684224791 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.686976657 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.685016382 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.682910649 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.684274732 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.685106763 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.684276539 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.683147888 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.685093581 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.68507072 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.685716285 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.68303375 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.683572058 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.689885328 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.683258933 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.68520278 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.683427155 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.683496621 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.682315615 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.684441009 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.684992779 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.68640287 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.692240565 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.688368587 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.693705127 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.685092546 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.693318953 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.685447623 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.687403036 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.693311877 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.685550978 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.683263546 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.685177276 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.685523907 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.691406277 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.685628675 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.684852469 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.690518065 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.686459077 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.68777374 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.685809659 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.687261044 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.685702746 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.687417678 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.694239716 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.687157802 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.688599747 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.687971606 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.686389508 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.686073077 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.68633792 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.685541414 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.688736278 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.684791028 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.686450801 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.686042413 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.685620886 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.68708357 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.686873471 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.68759569 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.686832169 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.687129071 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.692489185 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.688112954 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.691068994 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.686868105 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.693933656 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.686510976 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.693190063 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.687564681 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.686438102 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.687017936 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.68796137 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.688317513 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.686498221 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.688760102 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.688869985 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.687548565 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.691868873 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.687704411 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.68910921 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.687380832 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.688861161 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.68740506 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.695336981 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.710682162 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.687479187 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.691561733 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.688158962 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.688330866 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.694764349 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.688806342 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.685122022 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.690441247 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.698482568 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.698649036 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.688778815 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.689608156 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.689035523 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.689812865 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.688015677 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.690800106 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.689105752 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.689151334 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.688811334 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.689821412 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.692357335 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.689029625 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.689440757 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.690091466 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.689341551 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.698397534 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.690216193 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.689142007 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.689922763 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.689555129 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.68954492 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.688966683 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.68958269 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.690426464 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.690739306 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.689934047 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.694458709 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.695664029 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.691518062 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.689391826 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.690368019 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.690396335 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.690773449 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.692147145 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.689901864 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.691008482 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.690674597 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.691455911 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.689951642 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.689433643 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.691460694 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.689963144 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.690771473 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.692011489 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.696372567 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.691069267 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.689381719 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.69063043 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.690367557 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.689947174 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.691305118 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.698024937 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.693839944 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.699566782 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.697976406 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.69497976 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.691799441 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.693927117 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.697835998 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.690242957 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.690504103 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.692488902 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.692576382 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.691793868 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.695692703 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.691149084 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.69745739 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.691653657 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.690606551 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.69791744 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.69452257 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.692323114 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.690929438 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.694701469 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.69154129 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.693767618 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.691697467 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.691102124 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.698464762 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.692599086 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.692750633 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.693553049 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.690267558 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.692377715 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.695965778 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.692771831 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.693816293 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.693827527 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.693832542 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.692075092 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.692892171 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.693797074 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.69039219 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.691057866 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.694946504 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.699877059 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.6935493 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.695714335 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.692337443 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.693592808 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.694345476 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.694782795 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.693774347 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.694172848 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.693275127 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.695269274 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.693862312 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.695189446 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.69230655 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.693973858 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.699183878 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.694991509 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.697820178 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.702609151 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.701186692 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.6956193 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.693571742 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.693724321 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.697662109 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.693397117 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.695079951 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.693590451 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.695332232 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.693996039 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.696801249 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.695302346 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.697192053 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.709978254 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.695717542 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.694315142 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.694600171 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.697788657 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.694493976 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.695851713 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.695580316 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.695444066 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.695785919 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.702779314 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.694789559 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.701182816 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.695055683 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.694886345 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.700631844 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.696959777 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.704093175 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.696827454 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.696712746 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.695598929 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.699527309 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.711571761 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.696565944 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.702010188 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.723390524 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.695237377 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.695512801 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.697234681 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.695956782 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.697389779 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.696993967 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.697535849 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.69704402 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.695391077 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.696901149 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.695458371 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.703733347 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.697865739 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.696583581 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.696229609 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.696439741 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.696669703 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.697085585 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.697674063 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.696992427 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.697602272 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.696068334 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.698291539 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.695942823 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.706042496 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.707903907 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.697326272 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.69861127 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.69721099 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.699551185 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.699054128 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.704314476 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.707753915 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.698420094 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.697932817 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.698947322 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.698201288 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.697452917 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.697679622 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.696018015 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.697640902 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.69875005 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.708433758 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.706913053 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.702811085 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.696343769 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.697978314 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.697618422 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.700136033 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.699502955 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.699174889 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.698918831 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.69668087 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.702401631 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.698211473 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.697209687 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.700594324 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.706446304 seconds)
  done (took 1006.615213113 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.698785546 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.698289286 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.699550497 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.698130213 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.69934095 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.699647274 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.699904184 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.698936544 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.699463 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.698329745 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.6991099 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.698746551 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.699457799 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.699331869 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.701003296 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.699927557 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.698633986 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.699310005 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.69908544 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.700424086 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.703113524 seconds)
  done (took 37.318975461 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.701847944 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.70077474 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.700525283 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.700935923 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.700245173 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.700068092 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.70169 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.700722539 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.700627481 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.698583924 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.700230825 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.699463968 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.701257993 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.699724861 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.700991077 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.700469921 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.701297827 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.700197309 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.700516294 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.700666432 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.701423864 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.701191346 seconds)
  done (took 39.047227628 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.70180838 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.700838397 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.699163698 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.701208482 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.70134764 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.700946929 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.70154312 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.700530587 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.700708755 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.699632992 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.700228213 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.699796448 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.705929653 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.708561241 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.700587067 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.701620106 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.845835382 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.702429471 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.703132704 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.700525763 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.701641144 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.705854997 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.701378866 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.701828644 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.700814946 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.700719455 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.701449056 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.702046682 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.702550643 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.701419439 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.706519966 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.701686208 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.700879761 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.703005775 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.700526651 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.701621494 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.70699484 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.703777941 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.701721382 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.702069244 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.710318876 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.723463186 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.702979169 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.708521993 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.702554712 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.703949092 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.704594381 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.709924895 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.703491746 seconds)
  done (took 85.229697951 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.703851329 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.702917815 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.702740348 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.703073397 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.703147698 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.703884511 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.70265441 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.702286246 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.702496356 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.704257612 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.704284496 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.703619226 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.703907752 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.703342852 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.703033492 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.703204215 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.701978508 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.703140596 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.703082534 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.702712029 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.703479109 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.703157485 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.704745851 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.703999502 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.704058351 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.702753329 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.704013229 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.70464529 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.703296578 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.703460818 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.704288736 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.705863711 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.70853171 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.705361762 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.703843039 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.704049345 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.704926993 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.705610731 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.703652784 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.703783592 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.705245295 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.704028784 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.703472931 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.704877615 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.705390911 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.70500728 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.705375841 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.704758753 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.70568851 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.705005684 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.704872973 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.705512688 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.703767873 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.705067516 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.704515835 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.704894196 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.705661846 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.706020757 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.70494825 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.70544138 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.704907369 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.705406864 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.705574017 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.705690346 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.705010569 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.706202984 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.706000522 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.705252093 seconds)
  done (took 117.533435307 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.707028133 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.708139219 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.706985149 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.706478502 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.706443236 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.70742166 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.707704695 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.707025128 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.707660424 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.706849323 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.706451571 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.70226256 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.702249724 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.701903664 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.701929481 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.701610222 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.702964712 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.70167314 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.701730975 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.701909358 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.70272365 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.70302716 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.703255059 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.702146189 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.701771675 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.703093696 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.701885892 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.702680074 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.703875087 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.704744129 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.70246661 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.702726068 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.702505151 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.703760071 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.704301689 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.703005177 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.703619768 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.702743011 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.703052321 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.702898349 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.704542436 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.7038291 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.704310662 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.704064023 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.704805348 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.703430057 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.703934608 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.703812929 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.702435052 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.703778775 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.704933881 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.704510329 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.703366285 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.70335424 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.703601134 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.704463833 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.70389445 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.704377768 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.704689856 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.703420804 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.704366628 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.7042553 seconds)
  done (took 107.285028185 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.703695692 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.704282198 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.7050225 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.704385887 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.70406535 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.705093657 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.705616237 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.706282492 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.7038693 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.70401498 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.704820224 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.704465698 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.705731941 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.704996243 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.704415309 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.705588294 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.704219531 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.705855316 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.704791926 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.704839422 seconds)
  done (took 35.733642256 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.704387549 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.704478446 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.704968977 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.706978691 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.705108329 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.705835829 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.704429024 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.704738291 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.706822321 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.706091401 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.706072608 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.705987569 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.704676582 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.706013007 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.705271728 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.705956775 seconds)
  done (took 28.925368083 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.707327708 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.705701761 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.706442639 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.705890458 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.707692437 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.706572963 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.705676686 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.706034572 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.705846665 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.705579666 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.706120641 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.70758039 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.708083146 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.705575479 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.706451881 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.706110635 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.70600906 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.706005508 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.706082976 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.706439213 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.707330702 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.706793185 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.707509342 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.706162863 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.707498628 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.706246628 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.708233499 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.706320633 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.707232102 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.705897781 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.706788452 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.707445582 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.707790719 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.706973606 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.707808297 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.706155676 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.708502083 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.706705636 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.707473314 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.708509266 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.708713555 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.706801995 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.708324379 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.709455237 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.708832036 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.708590906 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.708358624 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.708264786 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.708386113 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.70863285 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.707483516 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.708555096 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.708654244 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.707906527 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.707695997 seconds)
  done (took 95.536136752 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.708166383 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.708576835 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.708567823 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.708394884 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.708359902 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.708990786 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.707964215 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.707945543 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.707910767 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.707928875 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.708447697 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.708940512 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.708053588 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.707338432 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.710294035 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.708438063 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.709126288 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.708500958 seconds)
  done (took 32.393743742 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.709263301 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.708915036 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.708546518 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.709014819 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.708763171 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.710413217 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.708464555 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.70886735 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.709256282 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.712453176 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.709437534 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.710052468 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.709877307 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.71007211 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.710395946 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.709489088 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.709153568 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.708939457 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.710444976 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.709430017 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.710573458 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.710936125 seconds)
  done (took 39.25481228 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.707383576 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.707472305 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.722390226 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.727083458 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.728063484 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.741297814 seconds)
  done (took 11.97627393 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710623185 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.709394777 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.711583755 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.710210513 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.709655894 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710688558 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710737983 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710834318 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.713034418 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.71108203 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711895098 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712213985 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711482665 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711010961 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710604348 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711515131 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711776724 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711295175 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711342822 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711467695 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710113618 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71142246 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710773008 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711944111 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710500604 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711466997 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712094975 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712385813 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712038363 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711985373 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711930218 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710864464 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713107117 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712328134 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712108308 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710983845 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.712681132 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713557632 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712416114 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711379538 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.713415012 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712632654 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711678643 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.712891528 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712250977 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71146638 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712388439 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713501461 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.71363166 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713176258 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713004425 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.71383041 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712720599 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713276029 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712559496 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712111342 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.714284181 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713651974 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71314741 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712949756 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713320528 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.714270473 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712579538 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713516491 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712725734 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713887868 seconds)
  done (took 114.643367363 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.71374434 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.715588143 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.714928575 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714589536 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.714699739 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713689723 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713906961 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715354138 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71557207 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713830098 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713149703 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.715120198 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713423155 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.714461638 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.713349463 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.714262041 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713994117 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713414938 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.714254369 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.715070295 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713922916 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.71358601 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71416728 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.714286082 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.714246199 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.714537905 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.71442662 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.715312769 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.714424091 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.715581641 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715633467 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.714665476 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714863986 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.714461689 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.714073149 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.714501279 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.714267453 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.716283449 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715159453 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.715706849 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715389421 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716268013 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.715151712 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.716143866 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.715969312 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.714571665 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715463846 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.716068501 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.715791947 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.715656394 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.716984167 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.715522656 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71668064 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.716294355 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.71622977 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.717317004 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.717361228 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716451811 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.715811386 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716372508 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717179106 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.715690753 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716250695 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717061356 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.718025693 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.716629159 seconds)
  done (took 114.851141582 seconds)
done (took 2344.767740691 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.725690808 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.794553973 seconds)
  done (took 15.169987199 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.875967275 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.829311709 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.714449687 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.752532931 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.713840561 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.738095263 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.730777121 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.71483804 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.71553874 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.7144929 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.715141461 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.897613343 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.716410021 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.714507475 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.715210104 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.809930411 seconds)
  done (took 49.722737154 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.717184277 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.717596605 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.727851932 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.720030115 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.717785114 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.729808017 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.748878915 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.7216597 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.752466146 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.728942436 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.788024666 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.72672453 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.716933967 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.765877779 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.729384949 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.732311138 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.808718404 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.791346232 seconds)
  done (took 32.989605776 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.793477579 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.724806852 seconds)
  done (took 10.172282832 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.749942169 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.742058074 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.742691939 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.720027335 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.726789348 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.73596565 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.750330169 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.719024639 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.73832627 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.759293947 seconds)
  done (took 69.038572749 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.722302195 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.718193051 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.717455557 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.715606523 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.712543146 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.715763462 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.716155793 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.716209036 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.366647126 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.750580977 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.722488764 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.722642006 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.715078744 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.717506127 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.719793653 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.737358613 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.823989654 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.716780222 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.716092824 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.721349589 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.717898992 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.7747656 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.72853448 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.721175148 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.745626964 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.368589877 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.725223652 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.721738582 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.829053749 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.716514658 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.715761085 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.899974956 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.718481574 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.180253548 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.98105469 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.721563822 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.728258469 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.723808085 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.715881121 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.833109247 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.718206713 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.722842486 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.62080629 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.961732361 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.80756044 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.760910751 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.032872772 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.734340915 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.717786499 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.747622952 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.720453517 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.71650819 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.730276213 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.224090746 seconds)
  done (took 124.298452972 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.716023921 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.071324119 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.882021663 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.71864202 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.997022513 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.920771874 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.717987092 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.762232153 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.719196232 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.943841089 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.965094301 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.819985066 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.718089556 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.715835829 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.715492132 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.714331537 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.868885511 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.785704758 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.719123042 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.715862136 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.74411896 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.954503303 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.838786452 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.717943099 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.741615876 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.924764842 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.837336066 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.818111115 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.493804915 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.715015601 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.776993387 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.719499699 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.717532342 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.715718637 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.871200001 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.809356856 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.802492081 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.719927776 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.717851106 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.717190626 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.460831469 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.918523777 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.812312174 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.847768475 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.967238262 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.921853944 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.494591787 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.716528739 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.456933303 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.879585827 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.945099877 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.945687894 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.834991941 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.719601189 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.259837474 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.71853254 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.71743866 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.96643702 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.937142559 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.812063881 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.71861786 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.719816505 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.717779636 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.003032878 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.720774569 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.811189956 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.71943747 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.721090828 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.814580927 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.815645407 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.94577392 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.929521771 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.747324923 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.058145022 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.229833899 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.963842856 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.781360449 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.966863841 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.722631376 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.718815226 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.796392054 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.564598652 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.970851038 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.998472761 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.961938483 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.752217554 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.435241711 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.719068634 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.943010967 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.938104127 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.977411243 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.961528021 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.957565398 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.041063182 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.720134811 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.719550403 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.991848968 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.841402962 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.721771184 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.063560904 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.947327471 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.248303738 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.746329103 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.019668686 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.848858576 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.722179032 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.355871413 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.720780215 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.946528276 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.757993319 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.721792119 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.718922159 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.936941355 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.704332435 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.721211756 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.611058935 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.781216386 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.724221869 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.949746709 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.72218923 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.986789863 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.724119817 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.952360552 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.749069976 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.749361965 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.946967967 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.964847517 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.723729194 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.959052205 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.961238641 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.835212378 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.991347774 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.621010425 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.721696556 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.004035799 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.7229786 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.719210436 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.889004961 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.722511502 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.861638146 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.723163784 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.012245363 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.741754438 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.953101605 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.723395823 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.972386219 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.75321725 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.771216679 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.723496194 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.851162745 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.722981664 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.635326667 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.882043207 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.722206022 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.721567505 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.530546986 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.720943428 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.869583835 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.94503686 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.742239819 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.791661805 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.384006749 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.721532224 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.800224015 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.744436615 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.111110307 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.72326144 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.971118235 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.724171289 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.722141588 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.722506091 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.005786602 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.957434094 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.724545411 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.722919666 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.635190931 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.723989627 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.722307863 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.90413072 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.043032789 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.722115252 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.922779245 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.726071616 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.849138837 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.724649309 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.806988832 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.059711624 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.722780648 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.723836981 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.724181906 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.723843609 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.722959656 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.984034487 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.747284501 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.227077614 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.859731365 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.99302094 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.032699129 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.96193466 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.765719062 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.166752551 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.983198915 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.726447641 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.784286836 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.726546133 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.742291429 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.949187504 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.726261728 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.93009242 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.99270301 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.578762557 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.769940416 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.726943868 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.725149095 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.724285802 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.867313064 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.807971214 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.72655786 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.72435233 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.836874549 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.845077352 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.931916397 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.726357391 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.811600941 seconds)
  done (took 871.255528988 seconds)
done (took 1174.298552576 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.724949752 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.726695734 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.729190251 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.727551655 seconds)
  done (took 28.568559194 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.727275113 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.727670612 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.726035547 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.726375679 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.728238151 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.726883222 seconds)
  done (took 12.024132445 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.753601778 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.727675179 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.727095642 seconds)
  done (took 20.8692008 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.796269888 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.105595253 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.861382593 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.136968064 seconds)
  done (took 9.562147659 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.726322382 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.725362486 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.725881932 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.731057639 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.726924546 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.727957726 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.729001639 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.729003667 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.7275761 seconds)
  done (took 17.212051658 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.790076536 seconds)
done (took 93.68776477 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.821332509 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.796825537 seconds)
    (3/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.823338097 seconds)
    (4/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.484817877 seconds)
    (5/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.8697208 seconds)
    (6/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.729249756 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.578724136 seconds)
    (8/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.973587869 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.395540274 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.759249245 seconds)
    (11/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.513134616 seconds)
    (12/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.867994672 seconds)
    (13/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.956176445 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.768642266 seconds)
    (15/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.891863938 seconds)
    (16/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.752177958 seconds)
    (17/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.072086356 seconds)
    (18/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.845876297 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.412031278 seconds)
    (20/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.178945058 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.678645555 seconds)
    (22/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.75279269 seconds)
    (23/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.811950367 seconds)
    (24/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.394603423 seconds)
    (25/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.746859868 seconds)
    (26/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.942454736 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.985367435 seconds)
    (28/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.822525994 seconds)
    (29/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.72863844 seconds)
    (30/309) benchmarking ("sort", Int8, false)...
    done (took 4.688765448 seconds)
    (31/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.733548485 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.949537041 seconds)
    (33/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.582192621 seconds)
    (34/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.180743418 seconds)
    (35/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.732953607 seconds)
    (36/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.123898457 seconds)
    (37/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.553365769 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.735266856 seconds)
    (39/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.83372407 seconds)
    (40/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.832567282 seconds)
    (41/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.182731403 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.920286853 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.833631319 seconds)
    (44/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.664347672 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.99149732 seconds)
    (46/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.02702618 seconds)
    (47/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.278912269 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 1.958895362 seconds)
    (49/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.836141713 seconds)
    (50/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.863435346 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.609955287 seconds)
    (52/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.655199122 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 5.378662248 seconds)
    (54/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.730538744 seconds)
    (55/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.974735317 seconds)
    (56/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.64071663 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.983359517 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.810295585 seconds)
    (59/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.734262988 seconds)
    (60/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.007292502 seconds)
    (61/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.913294729 seconds)
    (62/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.80933198 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.348804907 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.756120213 seconds)
    (65/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.753825672 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.817853293 seconds)
    (67/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.895957278 seconds)
    (68/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.751718399 seconds)
    (69/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.100625098 seconds)
    (70/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.75076734 seconds)
    (71/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.793092913 seconds)
    (72/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.031620276 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.3542809 seconds)
    (74/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.655740547 seconds)
    (75/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.742101235 seconds)
    (76/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.552675302 seconds)
    (77/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.749538573 seconds)
    (78/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.731548799 seconds)
    (79/309) benchmarking ("sort", BigFloat, false)...
    done (took 7.396729828 seconds)
    (80/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.731519702 seconds)
    (81/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.733541099 seconds)
    (82/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 3.177388112 seconds)
    (83/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.051968117 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.734435949 seconds)
    (85/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.972933955 seconds)
    (86/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.736415625 seconds)
    (87/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.821680667 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.864894363 seconds)
    (89/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.511666863 seconds)
    (90/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.830595475 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.734587859 seconds)
    (92/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.410917343 seconds)
    (93/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.737632471 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.467943804 seconds)
    (95/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.730373465 seconds)
    (96/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.974044277 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.996260826 seconds)
    (98/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.987413447 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.085330416 seconds)
    (100/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.736136351 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.97083859 seconds)
    (102/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.748734162 seconds)
    (103/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.884561752 seconds)
    (104/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.730720099 seconds)
    (105/309) benchmarking ("map", abs, Float32, false)...
    done (took 3.231663541 seconds)
    (106/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.917799412 seconds)
    (107/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.103003498 seconds)
    (108/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.892926624 seconds)
    (109/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.850390398 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.870393238 seconds)
    (111/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.734729036 seconds)
    (112/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.83723281 seconds)
    (113/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.091370911 seconds)
    (114/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.821342592 seconds)
    (115/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.886582944 seconds)
    (116/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.740287917 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.943050516 seconds)
    (118/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.743089063 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.045106637 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.351031091 seconds)
    (121/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.76515795 seconds)
    (122/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.831867309 seconds)
    (123/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.835101552 seconds)
    (124/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.065158699 seconds)
    (125/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.735663108 seconds)
    (126/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.468451008 seconds)
    (127/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.065263877 seconds)
    (128/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.760812757 seconds)
    (129/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.737123619 seconds)
    (130/309) benchmarking ("sort", Float32, false)...
    done (took 5.466677003 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.736195722 seconds)
    (132/309) benchmarking ("sort", BigInt, false)...
    done (took 6.827701027 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.426322674 seconds)
    (134/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.738148209 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.792194881 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.777554523 seconds)
    (137/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.744844364 seconds)
    (138/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.814178329 seconds)
    (139/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.738212696 seconds)
    (140/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.968240252 seconds)
    (141/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.969394114 seconds)
    (142/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.130037109 seconds)
    (143/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.028983418 seconds)
    (144/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.480069999 seconds)
    (145/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.988804377 seconds)
    (146/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.127186702 seconds)
    (147/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.057304233 seconds)
    (148/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.739492107 seconds)
    (149/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.394912018 seconds)
    (150/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.76437583 seconds)
    (151/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.736576439 seconds)
    (152/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.131593688 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.99156195 seconds)
    (154/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.049132042 seconds)
    (155/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.761034249 seconds)
    (156/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.919176409 seconds)
    (157/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.077844301 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.740326425 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.131831931 seconds)
    (160/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.817641898 seconds)
    (161/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.796179983 seconds)
    (162/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.920273854 seconds)
    (163/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.114050451 seconds)
    (164/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.055693549 seconds)
    (165/309) benchmarking ("sort", Float64, false)...
    done (took 5.504437585 seconds)
    (166/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.73656372 seconds)
    (167/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.989180527 seconds)
    (168/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.838670651 seconds)
    (169/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.946488033 seconds)
    (170/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.87521658 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.734081195 seconds)
    (172/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.92258934 seconds)
    (173/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.735905815 seconds)
    (174/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.226993897 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.079134173 seconds)
    (176/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.740269149 seconds)
    (177/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.986927982 seconds)
    (178/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.765888546 seconds)
    (179/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.61358902 seconds)
    (180/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.765460003 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.837396334 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.860511073 seconds)
    (183/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.953869132 seconds)
    (184/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.738950113 seconds)
    (185/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.760066609 seconds)
    (186/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.871015348 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.740612536 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.834562018 seconds)
    (189/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.736334367 seconds)
    (190/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.742520534 seconds)
    (191/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.828831007 seconds)
    (192/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.199212055 seconds)
    (193/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.741193028 seconds)
    (194/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.736805423 seconds)
    (195/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.741075612 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.533829691 seconds)
    (197/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.039386392 seconds)
    (198/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.043860184 seconds)
    (199/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.832221173 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.740081399 seconds)
    (201/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.765506677 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.837798307 seconds)
    (203/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.033446331 seconds)
    (204/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.896736011 seconds)
    (205/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.765075789 seconds)
    (206/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.817371588 seconds)
    (207/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.737063723 seconds)
    (208/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.212615022 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.805238489 seconds)
    (210/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.740732491 seconds)
    (211/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.067804047 seconds)
    (212/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.74463309 seconds)
    (213/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.859582254 seconds)
    (214/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.815744391 seconds)
    (215/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.841416301 seconds)
    (216/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.058872144 seconds)
    (217/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.88693547 seconds)
    (218/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.968756354 seconds)
    (219/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.889126383 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.62798368 seconds)
    (221/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.741151084 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.862252121 seconds)
    (223/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.958965757 seconds)
    (224/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.738671938 seconds)
    (225/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.766856918 seconds)
    (226/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.817874068 seconds)
    (227/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.763678395 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.023107794 seconds)
    (229/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.227381189 seconds)
    (230/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.879588925 seconds)
    (231/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.440546329 seconds)
    (232/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.94052702 seconds)
    (233/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.822531308 seconds)
    (234/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.743325859 seconds)
    (235/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.966943098 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.738855151 seconds)
    (237/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.854062868 seconds)
    (238/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.136545264 seconds)
    (239/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.843365105 seconds)
    (240/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.908550395 seconds)
    (241/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.742323963 seconds)
    (242/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.112274907 seconds)
    (243/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.768623735 seconds)
    (244/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.738690937 seconds)
    (245/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.849099597 seconds)
    (246/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.995817607 seconds)
    (247/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.875809431 seconds)
    (248/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.85316301 seconds)
    (249/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.82101069 seconds)
    (250/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.740743846 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.166492995 seconds)
    (252/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.744020363 seconds)
    (253/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.349976312 seconds)
    (254/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 3.109948113 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.861220544 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.86265531 seconds)
    (257/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.819786961 seconds)
    (258/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.927993146 seconds)
    (259/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.187205826 seconds)
    (260/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.879247163 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.688311848 seconds)
    (262/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.082103486 seconds)
    (263/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.948691358 seconds)
    (264/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.935992568 seconds)
    (265/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.068390507 seconds)
    (266/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.004872823 seconds)
    (267/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.075184581 seconds)
    (268/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.198663457 seconds)
    (269/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.989067086 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.092055587 seconds)
    (271/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.956924056 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.758901516 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.763933924 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.13298791 seconds)
    (275/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.878483435 seconds)
    (276/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.101974695 seconds)
    (277/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.873528898 seconds)
    (278/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.227873409 seconds)
    (279/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.78266215 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.733012863 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.081105095 seconds)
    (282/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.804702428 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.077173142 seconds)
    (284/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.91484393 seconds)
    (285/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.856095875 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.055581614 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.745413612 seconds)
    (288/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.995158254 seconds)
    (289/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.942289826 seconds)
    (290/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.993199754 seconds)
    (291/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.9269318 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.559086759 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.131251094 seconds)
    (294/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.744724512 seconds)
    (295/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 3.251553329 seconds)
    (296/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.936829434 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.749255058 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.872770189 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.743158318 seconds)
    (300/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.995753091 seconds)
    (301/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.741994562 seconds)
    (302/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 3.326649364 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.089308081 seconds)
    (304/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.871762451 seconds)
    (305/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.807919859 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.946775872 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.745899531 seconds)
    (308/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 8.129091245 seconds)
    (309/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.880193207 seconds)
  done (took 962.754887282 seconds)
done (took 964.483873424 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.942823814 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.760939339 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.743452573 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.764606122 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.856466646 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.789954304 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.756427185 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.746766963 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.793284153 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.794337209 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.741604835 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.788571134 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.744454511 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.743914718 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.741778015 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.759723578 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.047478994 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.769620695 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.762880007 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.756292565 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.761635424 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.742215223 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.795266948 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.787319218 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.748205808 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.748399365 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.747665847 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.764159618 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.858354364 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.748276832 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.749195196 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.756825777 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.049719097 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.768080489 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.742783769 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.764362764 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.75678285 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.75703218 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.74882511 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.779243364 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.134442361 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.777737942 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.745717505 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.744223459 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.745415879 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.752870179 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.746375828 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.753561468 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.761051622 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.761509982 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.129551965 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.79491585 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.747930148 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.746711544 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.758280447 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.745238576 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.748927059 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.762014915 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.766770324 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.761918862 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.033320861 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.779533973 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.750432912 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.763485404 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.754857851 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.164199143 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.777984032 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.752631249 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.135836928 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.786777117 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.16313172 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.789309662 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.748948944 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.762034775 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.77899494 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.05058433 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.769386514 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.747097142 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.754608857 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.745519305 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.760996046 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.761751639 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.752545191 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.746626414 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.763334853 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.79440691 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.760019947 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.74854758 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.759126452 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.76790163 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.756246918 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.759761408 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.751399122 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.746286047 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.759707683 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.751236173 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.752114881 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.75118402 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.752965745 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.759829397 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.133618011 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.798294506 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.744758221 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.746614479 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.748681143 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.762877638 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.131341696 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.781873598 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.771036579 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.799401603 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.748193618 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.034258779 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.776959058 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.764854969 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.759049989 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.751140621 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.746817958 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.036426068 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.156847201 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.798322785 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.750399654 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.746626417 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.765200258 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.750517514 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.746155411 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.052170657 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.775481071 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.765155711 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.871948974 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.762469803 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.781891244 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.748580972 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.752774769 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.799245784 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.765507142 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.783282714 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.752472049 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.764377485 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.767231702 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.746992697 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.76152813 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.761685195 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.74981476 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.7586313 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.747783669 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.799742426 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.764756738 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.765546295 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.770843418 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.873039866 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.746980334 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.036923798 seconds)
done (took 276.464116658 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.828533111 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.75101732 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.842639093 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.752438185 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.83763734 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.82406185 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.750255707 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.7507769 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.751386376 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.24906332 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.752313157 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.756577554 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.74906569 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.751651089 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.819117119 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.752467003 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.751575287 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.191224657 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.751452609 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.830910027 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.748970825 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.750998065 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.75194564 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.243811117 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.748221632 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.747070299 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.836201027 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.752638668 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.190967161 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.748656053 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.749773614 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.193085221 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.836824847 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.779284302 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.760758866 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.756628888 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.839655827 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.762479135 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.820497196 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.819591398 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.845986499 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.785958857 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.750199238 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.74915662 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.755686884 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.75473523 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.751865893 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.784684371 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.752907021 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.758064941 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.187475819 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.760708414 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.758279025 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.754086332 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.753431963 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.781586657 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.753226896 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.755195284 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.833657253 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.753712413 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.835137078 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.243589791 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.256466747 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.753454194 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.750450599 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.75397306 seconds)
  done (took 177.339623563 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.817621885 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.829107306 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.817032395 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.757008422 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.800447957 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.81944534 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.756335161 seconds)
  done (took 14.280893025 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.758982055 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.753559939 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.802057508 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.802821152 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.753379194 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.908253551 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.755182576 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.76437966 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.758864487 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.779788726 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.754273826 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.754640406 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.760657332 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.751212383 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.802047292 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.764430062 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.868103815 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.756047397 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.754874612 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.90107332 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.759991266 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.762924696 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.778721458 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.764227428 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.751444535 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.759685549 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.370368122 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.755440573 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.75489418 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.755559065 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.755531877 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.796237831 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.757051137 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.753520232 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.755634082 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.867845307 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.754773802 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.756834336 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.756403369 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.75108016 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.755477877 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.756185366 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.756345489 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.75614634 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.756050876 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.777405338 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.751911098 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.755230762 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.754846559 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.754964339 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.778784705 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.754653761 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.757740196 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.760519885 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.796540574 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.763288579 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.75633266 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.756340876 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.755523598 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.755606133 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.900867603 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.803309091 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.756754301 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.803294878 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.755730936 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.756653359 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.756110071 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.755531082 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.841428976 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.756943807 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.803941095 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.755814553 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.913096927 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.777986309 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.757064921 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.757858226 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.759877147 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.757118593 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.75585315 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.760797606 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.757879419 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.756935553 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.761376337 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.761272495 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.759773553 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.891462955 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.894384048 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.75685045 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.75747964 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.763984006 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.757881435 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.79841164 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.757680371 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.756130286 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.810218936 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.872310618 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.782012375 seconds)
  done (took 194.602484281 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.764003849 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.762666573 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.758376812 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.772582699 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.757167414 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.754791054 seconds)
  done (took 12.257487054 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.757268339 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.761291547 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.756727869 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.757264894 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.757182501 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.757025269 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.757661854 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.75740782 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.760685734 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.757718847 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.758659355 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.755208545 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.754378741 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.756483429 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.757389431 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.757506289 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.757543406 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.758596016 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.757205323 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.758264814 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.003008445 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.75620819 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.757352252 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.75775817 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.761338731 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.756235645 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.769528391 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.757443005 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.758843446 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.763367695 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.763064161 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.75701749 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.7587075 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.761774736 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.762185293 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.760000899 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.762507033 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.75717299 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.759103928 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.75911782 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.757837987 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.757414115 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.758926757 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.755666896 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.759836611 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.764066435 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.760747863 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.772200736 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.760135983 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.757160366 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.757132462 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.759543937 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.759876366 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.758340065 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.759867095 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.764021193 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.76176577 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.758972941 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.758701347 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.760327402 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.763731643 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.760596681 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.759362465 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.763254765 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.768902268 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.759125786 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.762379476 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.763457518 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.761002278 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.760037333 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.758715891 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.76047426 seconds)
  done (took 129.626367895 seconds)
done (took 529.804458992 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.831421063 seconds)
  done (took 8.523557953 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.919407583 seconds)
  done (took 8.651890789 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.124721041 seconds)
  done (took 9.813238681 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.784657657 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.781675421 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.767096383 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.756011 seconds)
  done (took 28.797546724 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.01425142 seconds)
  done (took 8.698562099 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.780315176 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.756181252 seconds)
  done (took 15.299285635 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.762447562 seconds)
  done (took 8.451993057 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.255415824 seconds)
  done (took 8.949955498 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.774429291 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.777560722 seconds)
  done (took 15.265997697 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.752938133 seconds)
  done (took 8.435303756 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.890200725 seconds)
  done (took 9.674989621 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.760140257 seconds)
  done (took 8.503481427 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.780815696 seconds)
  done (took 8.460301085 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.843957549 seconds)
  done (took 9.520512937 seconds)
done (took 158.738086549 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.755570594 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.740725762 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.742492417 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.740927682 seconds)
  done (took 28.653621483 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.775004762 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.774755856 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.776566688 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.785755163 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.779051007 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.775586645 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.766234331 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.766852976 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.784921656 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.777449758 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.775428244 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.776350023 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.774978127 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.767450661 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.77613476 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.775235185 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.78539463 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.775821558 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.764830024 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.774385638 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.740326494 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.785029264 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.774997998 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.739225613 seconds)
  done (took 44.222460831 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.923812177 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.800848288 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.887822832 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.789992032 seconds)
  done (took 9.06868507 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.785013915 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.786336194 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.798143255 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.836765014 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.861022017 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.794735216 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.757632763 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.753724 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.74100358 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.785665426 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.861217758 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.777515289 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.86488437 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.728744761 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.91797324 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.73157825 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.727340001 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.777699962 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.830341431 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.843123317 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.728119144 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.779115345 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.779367081 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.772897712 seconds)
  done (took 44.685278922 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.726069985 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.734062861 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.731726333 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.723547531 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.724063962 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.72342055 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.730359855 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.727247066 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.743866386 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.722984344 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.721590094 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.721257034 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.721221517 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.72310693 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.719517819 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.733046128 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.733458802 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.718990884 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.723832632 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.729015579 seconds)
  done (took 36.190857893 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.714309485 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.562554728 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.057553815 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.965578872 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.713114646 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.71238425 seconds)
  done (took 30.374657904 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.724773201 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.717274694 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.713521004 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.769811151 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.85121205 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.7168321 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.712117893 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.720531173 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.756302193 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.775214198 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.728181163 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.738573106 seconds)
  done (took 22.57118082 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.710251095 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.710242204 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.710406038 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.720490255 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.718578272 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.715848232 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.715301703 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.706531937 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.72039604 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.72562046 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.714077236 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.718362433 seconds)
  done (took 42.235005065 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.787276855 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.584444515 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156632425 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.166832019 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.231412276 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.910447382 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.706125939 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.79159591 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.708177075 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.976793989 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.012091114 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260032649 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.010936457 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.767372824 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.856570986 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.233544435 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051330717 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97644213 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.792618656 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.432361073 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870478409 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.347568695 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.401125816 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.871759609 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.968810188 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.888087828 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.030098946 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.716912593 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.815003241 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.768070902 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.769860876 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.767302685 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.036229142 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.886358417 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836669374 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771892667 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.206850781 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.471211663 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.775429358 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.450082732 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.302469747 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.884828829 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771611292 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.76722019 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.694071581 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.346030527 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.858758354 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.769523397 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.467150946 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.7694786 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.772862072 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.841281279 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.768940161 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.573879243 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.447312102 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.033530002 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.768556713 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765220603 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.323981626 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.755454984 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436577841 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.699696211 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.869390889 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.448006628 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2200672 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.919648132 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.768345215 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.767243567 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.693493572 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.395819187 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.87867448 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.906438296 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.787017715 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.410095045 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073448122 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.169386204 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.818084847 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039422342 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.63023969 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.703271611 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984955542 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.719544946 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.693913023 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.612341785 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.693706331 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97700414 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800515966 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.359803502 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.800975517 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.848893361 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.772743317 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780749007 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.768317055 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.979995316 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.658961479 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.764265375 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.037932438 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.020973634 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788083945 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.858555438 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.695533326 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.772415965 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013988313 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.974353615 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.078961679 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.234240544 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849593649 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.758169996 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.782502757 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.749453336 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.773142048 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.030583004 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.820807435 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.767406463 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884239019 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.724432318 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014370123 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.800572304 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.867384487 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.115582732 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.006550635 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.105738388 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.01643902 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83377026 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.771906903 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.771355232 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.45482667 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.382231496 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.988886355 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.782708244 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328341217 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.780471735 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.771648566 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.698942599 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.580385508 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.118567818 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.84574976 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.985669307 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.77280758 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.045461338 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.698115464 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.90799527 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.751793557 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.987044347 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.408597686 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.85096072 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.021049807 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.093853342 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.089337325 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780610355 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785616527 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863724557 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790589885 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.26945297 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.019970131 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.77416031 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.773554929 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.444123699 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.821805229 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.776829716 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.775682596 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.323639261 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040948674 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.795133004 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.77853925 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.64730882 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.78457917 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836429464 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.775804974 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.77680689 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.32665862 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.276830187 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.779369322 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.462393838 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98954638 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.777091486 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.433210426 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.942494252 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.785773231 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.03595994 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.834983118 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.700290576 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.473659171 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.475063975 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.774273741 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.700373337 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.775489212 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.777443856 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.780039422 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.959225078 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.045968105 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.821923042 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.389153208 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.875394232 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.780425239 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.778308681 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777672714 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.292729493 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.771301197 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.316953348 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.795306798 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901675589 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.787750084 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.69996604 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.777009105 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.779926014 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.776350694 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.729627887 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822379925 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.439295549 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972311997 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.02387928 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.179513925 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785212233 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.391737645 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.886043184 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.836286694 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.044771876 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38884102 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.879897521 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850306247 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.781155656 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.43826822 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.504113194 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.338423553 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06075696 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079800524 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.125525733 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.205635407 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.104717357 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.859083412 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001932105 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.295255657 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.830021753 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.862415101 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.710149073 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789886989 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.408907496 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179936979 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.782977887 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987932441 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065269886 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.097739991 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9077736 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.982641804 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810286769 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.641722995 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.813707953 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.312988741 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.793043264 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.206202726 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97408041 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857838795 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.051889712 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.856264914 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.773501915 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122334976 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.815650563 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.480106331 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.125252269 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.219062245 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.232915672 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.999982061 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.787751519 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.215067236 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118008595 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.017225573 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.904824847 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.698402393 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.776967204 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.777430104 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.781416969 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.744206118 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.649923948 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.013464872 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.77359097 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997766664 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.950951901 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.136682351 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.667768338 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.773489409 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.77286825 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034202222 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.49611876 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934202244 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.135219899 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.35255776 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.77739199 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.698708554 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.699585023 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.474203853 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.778030412 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.738089056 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980023773 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.872674421 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.451385379 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.195526594 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091632833 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.017644606 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.783699146 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.034931446 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.041280056 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.261927261 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794390922 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.869995735 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.100271181 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.479800758 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.99565446 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.006844979 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312749847 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.000129656 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223859727 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.750685233 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.779648913 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.988108284 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.997351482 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.130434926 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95108799 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.493119882 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.790977933 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.14008895 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838199593 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.123388566 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.960718556 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.881696163 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.787371859 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85920167 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.785364308 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.786772564 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.787000379 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.792591798 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.126111054 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.895183904 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.794044444 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857592024 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.777202966 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.345625218 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.791007264 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04476891 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.116642552 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.102899237 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.840157622 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.783654975 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.792115017 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.70933166 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909765104 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.22095296 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.054612067 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.903316323 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.914150438 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803633902 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.061438648 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.083362039 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098918184 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055703134 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.66555322 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453549041 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.909864818 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 4.999946864 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789164563 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.986443721 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995351604 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092412404 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246570444 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.981266224 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.983774791 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055494863 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.150947617 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.785042548 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.36143167 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.794216346 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.196625827 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.816572705 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.126753788 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035406908 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.787864947 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906147464 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.788964703 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.982637103 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.23470205 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.396103879 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.124288053 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.854860569 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.788421951 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049578037 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.100883974 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086402897 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861564303 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790627079 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.470432512 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916773253 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.671557626 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.000295491 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.78543124 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988104528 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.495640794 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.787569159 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.05109847 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086048122 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.786378975 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.68894898 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813640543 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.788102026 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.000391291 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995885687 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.030119341 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789012902 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.793736004 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.594196513 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05358305 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.841919168 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.712917975 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.788792875 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832557811 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.013252628 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.806368131 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.299029206 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.486151683 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058955706 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.68879578 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.804318355 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.230711475 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.162193058 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104293549 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.300772837 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996215833 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.333408248 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.673846174 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163536903 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.785064331 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.217143627 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164222182 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.781750276 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.315022633 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89371023 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.038026619 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.097614036 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.785591375 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.505642718 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.798826563 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987696738 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.128405543 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.700685816 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.772000602 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.811298109 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.765427848 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.744809711 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.770558286 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.697541977 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.251095647 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.607904821 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245099501 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.763214714 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.769634723 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.071111888 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.329851551 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868527797 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.773428513 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.762672471 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.461269908 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.038910665 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.000565046 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.301294968 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.852243248 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.754756316 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.753975742 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.672828151 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.937272617 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.939703642 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035079434 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.156505218 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.867729164 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.754360822 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.961052878 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957061296 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.109228416 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880934693 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.93788987 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.874303008 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.691307935 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.461950557 seconds)
  done (took 1615.987739438 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.772413007 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.7675397 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.767706563 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.819679595 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.770364388 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.773230547 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.79689678 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.849908703 seconds)
  done (took 56.002607535 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.753435374 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.91135854 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.757972627 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.753488615 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.760156645 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.753196218 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.91914153 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.764986818 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.757822673 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.758436686 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.755540199 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.753961812 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.043895493 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.774649995 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.754026299 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.756402542 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.758815702 seconds)
  done (took 72.181157513 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.755268339 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.976724396 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.78882034 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.756488696 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.94822487 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.755049565 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.753427175 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.760343533 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.759388611 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.16865697 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.051578076 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.766535733 seconds)
  done (took 88.927686266 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.76703725 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.75679087 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.755747649 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.756200647 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.755991321 seconds)
  done (took 10.483360781 seconds)
done (took 2103.351991866 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.980300277 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.953401408 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.005689351 seconds)
  done (took 5.645696879 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.895656602 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.947343214 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.060816387 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.082735511 seconds)
  done (took 9.677599619 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.033368233 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.120995176 seconds)
  done (took 5.842737136 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.074333953 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.789894807 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.169788421 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.758787448 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.759064269 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.761472554 seconds)
  done (took 21.972365391 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.758714658 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.759256009 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.758399607 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.759265618 seconds)
  done (took 8.721362649 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.758489299 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.460127957 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.758090481 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.766692477 seconds)
  done (took 20.431204894 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.907636728 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.875550589 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.901556661 seconds)
  done (took 7.373280951 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.974239101 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.548073017 seconds)
  done (took 6.209530949 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.920905455 seconds)
  done (took 3.608753037 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.786017828 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.030216269 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.250739416 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.280054868 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.343445507 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.644950697 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.067775348 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 1.979579541 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.198208718 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.206914032 seconds)
  done (took 23.47628107 seconds)
done (took 127.661437182 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.095525713 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.781185225 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.958101664 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.101615851 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.985841269 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.960479083 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.973186323 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.091005448 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.78465824 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.773511968 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.110511568 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.988175491 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.923458631 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.778302816 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.927476833 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.78334928 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.981014347 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.113205497 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.792186209 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.019546629 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.987973892 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.753525741 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.947544699 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.766125783 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.985454735 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.906316037 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.295401103 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.785564205 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.928635322 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.308608226 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.910801316 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.158620664 seconds)
  done (took 164.348055953 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.760441315 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.76003422 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.760362451 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.760846336 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.282285409 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.760585989 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.75978737 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.759654609 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.135742519 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.131706808 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.759647808 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.272860101 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.764625267 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.759036519 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.759508574 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.760818558 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.270825533 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.760309456 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.760279243 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.760447405 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.761305281 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.120990417 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.761870178 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.130821891 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.265343239 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.761208176 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.761084651 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.759512245 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.760052614 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.760054041 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.762371406 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.762242927 seconds)
  done (took 205.560592504 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.687710482 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.760461785 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.761803878 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.761991677 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.762045052 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.765086543 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.764008499 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.762468781 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.364643257 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.356351932 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.761450415 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.79397219 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.761372763 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.76008258 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.7637823 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.761486757 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.760258042 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.723312576 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.762318368 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.762299356 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.762896644 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.46073369 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.762486014 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.467160755 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.76177712 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.761950392 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.760677948 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.761710268 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.762416252 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.762100102 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.760953113 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.76285435 seconds)
  done (took 216.596955997 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.004710931 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.764567994 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.765585614 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.68374101 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.765786252 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.763966782 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.75187258 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.01004492 seconds)
  done (took 18.205866636 seconds)
done (took 606.409496504 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.137701563 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.97878476 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.938180321 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.786472765 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.042419722 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.828774187 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.783444522 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.848201615 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.604666481 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.855944631 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.437194904 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.808350595 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.527585256 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.812612153 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.903561571 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.843377574 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.333284226 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.436426502 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.960978065 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.844254928 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.95982938 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.695934382 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.864944877 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.64483621 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.558454684 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.769676495 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.800296418 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.337597635 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.793385494 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.939446751 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.445840677 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.050582629 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.797025541 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.781492609 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.836592674 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.813808128 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.988303765 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.793379555 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.905811844 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.500522896 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.876102002 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.51637545 seconds)
  done (took 98.07822205 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.772576598 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.769600415 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.769432563 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.769523277 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.779448815 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.770102056 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.771308133 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.770134886 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.770997345 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.769172303 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.769700291 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.780661126 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.771224876 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.778685072 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.76951775 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.769614081 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.769927124 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.779916659 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.770023444 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.770446423 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.771799916 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.769771815 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.765652051 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.770691113 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.769401065 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.768222947 seconds)
  done (took 47.76618585 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.766448104 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.917018969 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.010285868 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.786541095 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.766219774 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.768400164 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.783994768 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.772363619 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.768432407 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.767719841 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.853752105 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.774805249 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.783905257 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.01009612 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.782273767 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.767879685 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.768534589 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.766977633 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.924605324 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.782019294 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.786612425 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.772356767 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.78652743 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.78034386 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.769518542 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.76777226 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.771421972 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.241155909 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.776650368 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.855239977 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.815112783 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.793825662 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.210295491 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.020867317 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.823359676 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.777889411 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.769025674 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.858147463 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.773472018 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.768847482 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.785808782 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.773562346 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.011860176 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.295284431 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.782552954 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.770429448 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.248919873 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.866466949 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.8091497 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.779255677 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.014611806 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.785520506 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.770396916 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.768823512 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.805332114 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.774481122 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.768319904 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.135504252 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.780987462 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.786236385 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.774797607 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.768748108 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.930838839 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.778146319 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.918976294 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.777250613 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.775380088 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.770063305 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.015552771 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.786423249 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.307323076 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.784313609 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.770888978 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.85531727 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.925687093 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.273954673 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.782420363 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.930330548 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.230075083 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.794060854 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.776530749 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.232308894 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.797370193 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.777028283 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.773101263 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.771828525 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.770844753 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.814599238 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.784703516 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.221950359 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.310469328 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.154254662 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.797127159 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.784698442 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.771980747 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.135508588 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.780500999 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.772306489 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.007434389 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.317225956 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.785965676 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.778037563 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.286726919 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.786864365 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.788650292 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.779286242 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.021624169 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.788087528 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.815456091 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.774074019 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.777723342 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.773523994 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.789354098 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.778878696 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.773476232 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.280886032 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.876302542 seconds)
  done (took 220.612222233 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.771965537 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.775597768 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.769264715 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.774915009 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.770123221 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.772579141 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.769079837 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.770369196 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.770327116 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.770477001 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.769906743 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.771147145 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.772384189 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.776090227 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.359982626 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.772007358 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.375047422 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.771800661 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.771996379 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.773750994 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.45282433 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.775257148 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.77046774 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.771408492 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.77225761 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.769194425 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.780359487 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.775948599 seconds)
  done (took 165.201851909 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.773505899 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.958484664 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.79618416 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.801229973 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.782241673 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.774631842 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.913638512 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.794799199 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.779338233 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.775171248 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.774992177 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.832339614 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.786803792 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.873601599 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.803947666 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.882663044 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.876803632 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.78190474 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.777513947 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.774769974 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.802744429 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.783945012 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.832992391 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.898828136 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.795688989 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.885176933 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.797177886 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.777833528 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.774016204 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.885711822 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.796123998 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.840138388 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.807430357 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.796564371 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.896022519 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.89709212 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.886329392 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.885405878 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.783479767 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.780317252 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.780804855 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.782910687 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.89142418 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.801199666 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.780300663 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.896762219 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.799202987 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.780741157 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.781324391 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.779624022 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.790909931 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.796578834 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.843791201 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.910181231 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.81931777 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.80369185 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.875700089 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.906361899 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.78205747 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.875953037 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.788877844 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.893700678 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.801286731 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.782879236 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.783170759 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.784514018 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.809829817 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.887983981 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.884551739 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.787397746 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.877190409 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.818073083 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.788365693 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.781394084 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.782757719 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.891797255 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.898520341 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.815777878 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.816277768 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.80934791 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.793436827 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.778129551 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.784536878 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.796894996 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.786486362 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.895265692 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.897736335 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.787563458 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.78400296 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.781896962 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.782133487 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.806535926 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.901109398 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.816687847 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.890690026 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.845523858 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.856493449 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.798921537 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.796372083 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.788683304 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.843047554 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.799914003 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.794877065 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.080659 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.840048796 seconds)
  done (took 193.315769309 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.161574888 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.828593721 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.837215338 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.088001118 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.128201548 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.719160295 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.829536435 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.828406216 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.852379272 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.008117741 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.902913742 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.844696951 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.816888887 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.802584759 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.825348344 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.84805537 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.833885697 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.171379335 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.039290519 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.972456596 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.820156639 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.091765256 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.134996378 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.404517734 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.87904267 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.235082155 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.398149028 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.963798094 seconds)
  done (took 58.982101421 seconds)
done (took 785.651087586 seconds)
SAVING RESULT...
DONE!
