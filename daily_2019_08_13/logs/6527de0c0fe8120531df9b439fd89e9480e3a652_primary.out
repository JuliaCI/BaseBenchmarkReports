cset: moving following pidspec: 24509
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.35824496 seconds)
loading group "string"... done (took 0.546033061 seconds)
loading group "linalg"... done (took 6.887913271 seconds)
loading group "parallel"... done (took 0.157673779 seconds)
loading group "find"... done (took 1.2011464 seconds)
loading group "tuple"... done (took 1.811601392 seconds)
loading group "dates"... done (took 1.221402117 seconds)
loading group "micro"... done (took 0.299102996 seconds)
loading group "io"... done (took 0.925119178 seconds)
loading group "scalar"... done (took 38.693145111 seconds)
loading group "sparse"... done (took 11.801631319 seconds)
loading group "broadcast"... done (took 0.997375709 seconds)
loading group "union"... done (took 12.910601072 seconds)
loading group "simd"... done (took 4.685932829 seconds)
loading group "random"... done (took 9.566214956 seconds)
loading group "problem"... done (took 1.875345024 seconds)
loading group "array"... done (took 22.706134254 seconds)
loading group "misc"... done (took 1.892692448 seconds)
loading group "sort"... done (took 3.663209766 seconds)
loading group "collection"... done (took 18.95561796 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.495205554 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126080677 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116370595 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119621738 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.143435832 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.117699351 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125755468 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08620781 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.785620058 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.140668677 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119169305 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415371025 seconds)
done (took 4.951091995 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175957167 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08508074 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083687994 seconds)
  done (took 1.28813767 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066792111 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.124263269 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06773085 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068503935 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068283557 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067593582 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067715841 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067731228 seconds)
  done (took 1.653507393 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074979423 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070276735 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070467849 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069427923 seconds)
  done (took 1.405265014 seconds)
done (took 5.719456278 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.77410483 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200820524 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182230118 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.394516778 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128762342 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.165543114 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.633882553 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.296632944 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183399813 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080046588 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102264684 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.323329573 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.10559324 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.636475392 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079465348 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089347118 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13689868 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.413317516 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066605959 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081300122 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088487754 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127072864 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087879775 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077855178 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145808798 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067697208 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128946526 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079724409 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066587439 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.20765298 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172013647 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.655480853 seconds)
  done (took 10.140874107 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098484655 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098799367 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068122972 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122795107 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094916674 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069187471 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070440967 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06728972 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086315117 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127092382 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088217346 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100947382 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.066128646 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070371029 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086694364 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.206875241 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082361039 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083383534 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071836454 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076956978 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108039956 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079663264 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078472706 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078578508 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12978719 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180173511 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098843071 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097602337 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068552632 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08192534 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115037594 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127925309 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065127495 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067086942 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124467043 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093711698 seconds)
  done (took 4.591561007 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.920153845 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.11538469 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.142728037 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092304812 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168372888 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068987515 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109732498 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066460595 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086118962 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.203944444 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.113997084 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.111643376 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.4339364 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110137913 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.083668807 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067199651 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067774887 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066587939 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.356753536 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.109483848 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111576829 seconds)
    (21/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064750924 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084793382 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075856222 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071915274 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068442354 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067769737 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069966693 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.103684521 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.299607331 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.116401733 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069350659 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.092006268 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.072488231 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.114440306 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066652648 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101877973 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089419212 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136407687 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066891013 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06569845 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.149924046 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073995875 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064441127 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066461596 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084138206 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104062732 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.238179253 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070506724 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069206633 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164987576 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066003017 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083011672 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.702557443 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154426648 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078122646 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068193247 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.251262676 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086879856 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06855168 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066029284 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.183510838 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13168277 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068996114 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068069392 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067297791 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069668462 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.320109697 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066714249 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.766623561 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070083668 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07998686 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071548037 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067250066 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072559048 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07433878 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086179452 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.068515126 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.070204764 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067961766 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067756748 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069293401 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08728567 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.194959298 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068151508 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068827795 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066868668 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.088019185 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098792237 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.076418284 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066728603 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102031628 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067473333 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066858711 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.102099784 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068204298 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086325899 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071028208 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114707828 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068067506 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.080704783 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066610971 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097992241 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070022221 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100182763 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.170787809 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069406996 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.221323542 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064487728 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065827161 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068329601 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069600071 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068800554 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070595381 seconds)
    (114/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064813564 seconds)
  done (took 20.126074427 seconds)
done (took 36.896796125 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.281901098 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078429869 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078662686 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078662732 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078852615 seconds)
  done (took 1.805402906 seconds)
done (took 2.992120672 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122163219 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100749832 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065672281 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097388651 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065634148 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102207463 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101385778 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08338558 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101870712 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065801546 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098213111 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065768972 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065484202 seconds)
  done (took 2.344808938 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084860703 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084644005 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07198168 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083908533 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064755576 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083969276 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082203604 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090601773 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082212888 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073440312 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064918638 seconds)
  done (took 2.051145052 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083778977 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084730899 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070913842 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082982821 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065136176 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083153839 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082302409 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087490809 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082546386 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074672556 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064642667 seconds)
  done (took 2.042246107 seconds)
done (took 7.613500248 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078558576 seconds)
  done (took 1.248636822 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.589498947 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.054406496 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08078138 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111348011 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182862917 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120698589 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.280278037 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086660274 seconds)
  done (took 8.868316477 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.104108809 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07292456 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07054929 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071971718 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071208042 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070972243 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070068598 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071131056 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073051965 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070369779 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072775625 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073284113 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069566704 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072892122 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072072564 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070207037 seconds)
  done (took 2.424554856 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094151835 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09233176 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075312282 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076827901 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073634939 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073743227 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075963264 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075256834 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072253554 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073475925 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076381681 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075122349 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072739478 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066283868 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075525779 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07703188 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072576514 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075723072 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076302402 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07573994 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076025829 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065742703 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072585422 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075529702 seconds)
  done (took 3.105119576 seconds)
done (took 16.826609803 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114279042 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073061554 seconds)
  done (took 1.363143488 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082988726 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085387404 seconds)
  done (took 1.350411456 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084809433 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067516328 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091797127 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079732232 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068372146 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067318072 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08947735 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067820108 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067786669 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068097105 seconds)
  done (took 1.935026572 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070805158 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080071653 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071869707 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082913213 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075962396 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065464986 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074633093 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.070083718 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07952009 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064190509 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072438167 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083482444 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072386525 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084918402 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073957792 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070151843 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07218877 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068103506 seconds)
  done (took 2.51915051 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068194159 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068504042 seconds)
  done (took 1.328187945 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068452788 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065081424 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068204986 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067720164 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065023929 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063725807 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06457355 seconds)
  done (took 1.648694184 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.391459921 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112885125 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.300966252 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071784296 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083554229 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.254443499 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067022059 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072016571 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071535968 seconds)
  done (took 2.66186351 seconds)
done (took 13.999900126 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080298695 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087231738 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097192313 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.353048663 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.094002844 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067380184 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115124919 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192612965 seconds)
done (took 2.289896239 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.20903024 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.586556735 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.379987155 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.201389136 seconds)
  done (took 2.363261929 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.320965442 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093362956 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060084125 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068870101 seconds)
  done (took 1.745633476 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067738341 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070337887 seconds)
  done (took 1.338069215 seconds)
done (took 6.8551508 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068396607 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086496038 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067892033 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.067513739 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.065124973 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067578601 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064838892 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064776006 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064841959 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067320124 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070445959 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.067177757 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.067226096 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06746685 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065020074 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064536163 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06741272 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065038275 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064747493 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06459577 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064692947 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070355878 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064833454 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064494685 seconds)
  done (took 2.85118444 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084828014 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068189792 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073009676 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07272212 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.0717859 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072337213 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072508421 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067989438 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072392655 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069510672 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071164236 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071467201 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069498322 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071560286 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069478889 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07150981 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07299068 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067862978 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06926986 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071503678 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072619258 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067760226 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07092951 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072150848 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071217332 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071263209 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06948505 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067607624 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072341654 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071082275 seconds)
  done (took 3.347373409 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072355748 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064892586 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065360244 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072155325 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064903095 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066208979 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064953357 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065415802 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065949707 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064754783 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06640474 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064644549 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064696992 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065845773 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065984963 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068984225 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080464474 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065316278 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064767149 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065403463 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068030932 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065280224 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065289471 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065014639 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064603242 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.0646887 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065394596 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064871383 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065749785 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.06478272 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068025266 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068771831 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06469382 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071719909 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068191797 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064796348 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069166975 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064928398 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065299029 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.064996076 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064354518 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064709234 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064709017 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071740628 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064788894 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066654705 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065142482 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.066456945 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064900713 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067401107 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064332165 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064822479 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066461773 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065849955 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068789451 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064467789 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065499355 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064440901 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065783808 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064499038 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064320961 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064718415 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067217963 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065777191 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079344715 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071451315 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064347777 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066546323 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065608343 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067186482 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06630654 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079753522 seconds)
  done (took 6.013861703 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.094041867 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.203379467 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067037457 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066750407 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063282096 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067383619 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069008861 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065561897 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066952273 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071384168 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065656697 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066649394 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066785394 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078120162 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065975249 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066881486 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071145461 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063306533 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065626111 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068353015 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065601511 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068927682 seconds)
  done (took 2.872021788 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.157091095 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071904411 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107439923 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074426704 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069219708 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074515537 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071000781 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071317946 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071529225 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06992575 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069575138 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071457056 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069007004 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06919294 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069658851 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069466994 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071315707 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069798524 seconds)
  done (took 2.610616049 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079681008 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067547604 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088619777 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067453984 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067470561 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069629451 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072026938 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.0757072 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069329569 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067217791 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.076093863 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069507547 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069414958 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067172096 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070159979 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067600228 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069486319 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067220162 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07575261 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0717663 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072302961 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075756722 seconds)
  done (took 2.789294342 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08167112 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07016079 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084567304 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070369715 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063577113 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065603921 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071326275 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067116663 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071403537 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068870394 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067475631 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065900383 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070898899 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067395806 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07101911 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067041206 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068539027 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067388026 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068712407 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.0629843 seconds)
  done (took 2.607390762 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088088942 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069588173 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06907096 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077233248 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068947059 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068710205 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076622704 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068805673 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068729491 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088536184 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068859625 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068674252 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07667871 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07343034 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06817057 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076491344 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07617321 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076228458 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068365939 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068654687 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08870629 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068582128 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076133809 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068045209 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068682734 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068976828 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068854715 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073495249 seconds)
  done (took 3.263102247 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068462377 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067956016 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06481256 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065479479 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065187102 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065481595 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065353216 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064919765 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067410495 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06492624 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067189762 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06723143 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067418313 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06728213 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067843261 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067294551 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067574603 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064982831 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064958025 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065216173 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067238431 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067613993 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067458726 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06482389 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064736652 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067136688 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065029823 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064533631 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066995899 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064566054 seconds)
  done (took 3.208032835 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077472817 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074616842 seconds)
  done (took 1.372671148 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064999722 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082175151 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064408494 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071761701 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07120568 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068373876 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075033809 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071101157 seconds)
  done (took 1.784795217 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083723805 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079257441 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069337562 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082190802 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078157763 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08431363 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134515582 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068760146 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074345345 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065784912 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081720218 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066943177 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07389274 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068390292 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07341447 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074614131 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065797252 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073885384 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070240176 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066266676 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068631763 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076350519 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070128149 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063149352 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068398875 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089923703 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07881951 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067457602 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070336329 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07473608 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072739501 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061089071 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067259236 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067732071 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065050441 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076975038 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083337859 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070454583 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076290602 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068251478 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078306961 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062887431 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071876782 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074070048 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077977851 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06770818 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067962142 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062668768 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065477791 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069662093 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062756814 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067687426 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062329753 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07702395 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071042281 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077900758 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066052622 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069145049 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070119264 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07066342 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073946736 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069651954 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069883394 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066824492 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077009811 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071783588 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077042266 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062478544 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061478127 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065362813 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077024948 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090201552 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073677788 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067987938 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068241879 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065139578 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070591404 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06855326 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073563857 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073795406 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067832815 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073523724 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075175187 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06786278 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070113699 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075889092 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064887626 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068724094 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063405562 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082753643 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066040537 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065068015 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065226739 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078060156 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.06960514 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066728177 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065352687 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074797219 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061626538 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06811802 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06842855 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068131361 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077730166 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070950013 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071330267 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07520114 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074056281 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066536846 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069368569 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063217349 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0671239 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066097224 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073794711 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061221951 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069783038 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067675688 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066987214 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.200268573 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064893047 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066492307 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07371925 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072147278 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064651542 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064292904 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07095576 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067824521 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07122263 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076145975 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066851985 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063359547 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063625686 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071330494 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068339027 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071435004 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072368957 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070745136 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062971455 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066346943 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073310983 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077593787 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068754743 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069110253 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074133265 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069563054 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067536112 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074655843 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070617 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068111055 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074283604 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069256568 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062928631 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071557267 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07067255 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066973056 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072233129 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071656789 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.07019314 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.068815688 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066697775 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.07557906 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068893909 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067118676 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067993489 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066903771 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078443671 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070265057 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063422722 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065140974 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077289423 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066713985 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067736419 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067233148 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070110846 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069044625 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065861263 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067392327 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069660634 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078355554 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072452688 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068758 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073007328 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079072918 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067886318 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070229527 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067672171 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068659389 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068514327 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07657956 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073474543 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072736567 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070304978 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064375128 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073463208 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075319772 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067063938 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065471041 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06645586 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071828892 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073163072 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071915562 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067997127 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06590021 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068507496 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070730076 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07041338 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068080523 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066853488 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074770771 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065962176 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075014762 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068907474 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07848652 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071230719 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063304752 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070795708 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066211627 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074138146 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063159377 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066139111 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067351242 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068905384 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066770029 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070498135 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062601027 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07479862 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075030124 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067021366 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066507075 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066941748 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073688944 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068865941 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070894247 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070514776 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073081617 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077367165 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066315429 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070149036 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.077317711 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.195063521 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063222005 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074724374 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067910748 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067777802 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067576917 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066940291 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07210817 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078042749 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075579508 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06244371 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071641368 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066697246 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067803755 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064371929 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073241652 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070908374 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06916424 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075893159 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069560698 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068936442 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072547449 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067992462 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069293624 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069943947 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071144221 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069638028 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070405342 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06799417 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.072055166 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067368709 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065996619 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070234836 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068342597 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068793816 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074036585 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068413637 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068628427 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070954796 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068778855 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069096828 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068776795 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067382114 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07139696 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069204696 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06839376 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070226626 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063186326 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07559095 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067548268 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075658444 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068311535 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065508018 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075609681 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070658381 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074361173 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069207264 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068788236 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069870807 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067667342 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070954873 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074793448 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065868208 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079887807 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075748727 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069334585 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071658974 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068611253 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069945215 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067317423 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069201496 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068599357 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068614475 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067660135 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072774788 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070471462 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06829997 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069943044 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068440243 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068440868 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069121761 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062544012 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067125954 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067565921 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067645299 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078067739 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06887081 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067431438 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067015221 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068740419 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066915264 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06457203 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.0761555 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077429136 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068445717 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075606064 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067385395 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069519728 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078838373 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062267182 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065943202 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.066143627 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065954673 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075304051 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068525562 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07750512 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06809653 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067471684 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065485574 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068728029 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066170659 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061947281 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06543836 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07055462 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065841076 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06570548 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066386499 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069212394 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067339769 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076118394 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065708681 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067739095 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066547206 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063529637 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065662759 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.198246457 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071571406 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070079047 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067103268 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066042659 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068502296 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069478118 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069824745 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068865169 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070115457 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077843507 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068395757 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071831368 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072258563 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063223535 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071944077 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068268406 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068175266 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067535652 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072125021 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071677535 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069614639 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077705908 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068395294 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068711764 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068874478 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066680465 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068784836 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06805297 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068938608 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067947536 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069448193 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07634015 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066154369 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071648164 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068530807 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069067881 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075252323 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068897075 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071759384 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075122312 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068760737 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07020914 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07677597 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072385684 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071915052 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069523438 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069736854 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074640277 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068091299 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074967021 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068955879 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069255749 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070139207 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066562951 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068455964 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068238124 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067380914 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074558703 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069190457 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068315324 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067380214 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066069824 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069105265 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071987139 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075617028 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07077316 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071712636 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063244295 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065227754 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069525875 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066201799 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069645653 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070795432 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073565744 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070061166 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068149014 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066987199 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077080992 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073456406 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071215827 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065857721 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071318534 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068277895 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07007561 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068522884 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067673959 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069013133 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071648304 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06929023 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066932473 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074473086 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07138228 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068554655 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069490666 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.0686612 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067970016 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062845276 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068322405 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06981408 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072786113 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070036883 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067614665 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078129945 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065568791 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067955856 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071390906 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067057491 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072248777 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063123422 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068725649 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068151842 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068147325 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062331369 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066599001 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064800549 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068911497 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066571344 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062065285 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077604942 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075814884 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069928616 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065774856 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065493869 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061916498 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.194279169 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068161898 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070477737 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070874915 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078984719 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067552304 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067273421 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064032252 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068834079 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071573344 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071944712 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.066428244 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063997235 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068116608 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072087346 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074430164 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06663816 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068204821 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071258035 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071047166 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065870923 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071491481 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065462971 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072261228 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081490834 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069518017 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069580329 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07512877 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076484667 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.06889299 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063529748 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068911761 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07134346 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06860062 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069141442 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069372009 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083230072 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071804148 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067720946 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067018718 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070790245 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.06810105 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07585165 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069681998 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068967271 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072913132 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070637454 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078297919 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071887136 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076520936 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071638186 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071968296 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067289401 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068510033 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066284956 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.0674637 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068963762 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068902469 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073915781 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076788086 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068278746 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078960186 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077589485 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069982864 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064855466 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067692235 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067430023 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063575976 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068737897 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065853248 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065711131 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065813094 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066435406 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068855081 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073595094 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068519709 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068326409 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067548047 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061813407 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070263938 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070120907 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068909404 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064712857 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067301821 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06818934 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071787296 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071238164 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065636183 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069486933 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06961394 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068536645 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063318014 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074351776 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066722159 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069904624 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067402193 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067752841 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068655378 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071194145 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072837208 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068832402 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070354892 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072093035 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0696626 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065697591 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064939304 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073163925 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065614749 seconds)
  done (took 43.464235773 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103034057 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065038083 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063423857 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063759236 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075516441 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06488585 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063692622 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064758337 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065111693 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066604655 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063674534 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063557369 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072590505 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079749551 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075295255 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068672351 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063642134 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065205014 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06343428 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064506876 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072720999 seconds)
  done (took 2.76817684 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075880939 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072081096 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074351987 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077181791 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068693469 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072108849 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074318134 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072632097 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077625227 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068755705 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077544944 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072574101 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068883986 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068771283 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06896308 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073026047 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086772975 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069434046 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072167406 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074074396 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07223656 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074142122 seconds)
  done (took 2.905891438 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068859568 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067711907 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069636618 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063191686 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06748549 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062783066 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070967324 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065462591 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071283312 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066887759 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066485678 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066381669 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069026123 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062904621 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067843244 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06535328 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110058059 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070557152 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067124982 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.069100411 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063025444 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070076106 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063297754 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063216227 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066434354 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071066406 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068097148 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065340352 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066959087 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066578185 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067298723 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065457131 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069078786 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067812258 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06662743 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066238612 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066909989 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066728869 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062763196 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065317664 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067760779 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063319013 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067523006 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06879106 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065284927 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064971614 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068666976 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066691038 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062204936 seconds)
  done (took 4.609760108 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081906848 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111066634 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069176401 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088515602 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080344886 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074957625 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069044416 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090154303 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064952055 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06581058 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083065947 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081094246 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067326617 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071576282 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07064628 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067194211 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068064663 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066313884 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071086695 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066652632 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071169621 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073583427 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081435542 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080540425 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070945443 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065943209 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066364843 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071001268 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079702353 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07193114 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071748641 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072971017 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082149573 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072452046 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066333233 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069231643 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.083006881 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067254587 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069147582 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064478234 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069008064 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071073405 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073432738 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083270731 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06782652 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072151219 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067293778 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064247466 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079700128 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069528071 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07510393 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081584089 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071027332 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06705058 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071389493 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081954835 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067444195 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065297231 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069839393 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079136803 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064518655 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071166243 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080843924 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06862104 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073727075 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081099207 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072198833 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070969101 seconds)
  done (took 6.436417431 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07731387 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.074124255 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082187888 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081815018 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073778572 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074066707 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074143068 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073652004 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073730006 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078678505 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073538867 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.095065341 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069517723 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07683696 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074121239 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073954511 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073698601 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073938397 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073796265 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073753307 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073758757 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081382378 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.074179658 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081746694 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.099656975 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069375638 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073662202 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073618077 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08221022 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074083056 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080864832 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073825739 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073959402 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081926935 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080974537 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073676552 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066610944 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073477544 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073507016 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.073598655 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068654872 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081578633 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073226853 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068959786 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073441591 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073360536 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081958135 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080878232 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076841357 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078563737 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07349233 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081601412 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073307134 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0736955 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081564404 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106333342 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081333071 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081495672 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073542748 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081384568 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08141533 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087313419 seconds)
  done (took 6.111622937 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085689264 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076880245 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077885103 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063130928 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065699586 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071586885 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065844796 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06547632 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07601023 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076201101 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078934426 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071513647 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074373829 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078311859 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071384856 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074353931 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071113444 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071140573 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075896299 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071180089 seconds)
  done (took 2.784541747 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075615104 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084294977 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068273809 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073611761 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070723907 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072985115 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069710098 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070559025 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068598162 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070985894 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077502192 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077999027 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068133281 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073301723 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077597651 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073177992 seconds)
  done (took 2.486946692 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076324203 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073812338 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082252149 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066975845 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065550108 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06428863 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067866387 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062681975 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064059738 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079234325 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067148894 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070710795 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067221928 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065953446 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064562838 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06972931 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063636785 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064893858 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067547025 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079723782 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078249045 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065613891 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067586629 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067164349 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067136174 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07220925 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066566848 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064820457 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064737331 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067660487 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067935694 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070599501 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064477241 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065194716 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065879455 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064599117 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06645386 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067436676 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069966468 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066592872 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065311956 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067073974 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06678497 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067980631 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063302352 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067492927 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063282777 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069210436 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064697966 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068025613 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067131606 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069585872 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067664724 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074130365 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069946985 seconds)
  done (took 5.05885303 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08077002 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071269261 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06390598 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065445225 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070408941 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069151822 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071000294 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069215355 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069090381 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065267918 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069030806 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069936999 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069312176 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07067756 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068952738 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07118256 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063121925 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069190316 seconds)
  done (took 2.572472836 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07274643 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067410847 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073861103 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067867748 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067401294 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069539525 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063452573 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066086923 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065765059 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067059025 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066899483 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069705364 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065980594 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069895538 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067219218 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067105432 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069985607 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065585982 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067072926 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06333159 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069448627 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065770961 seconds)
  done (took 2.808053741 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073420325 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093575759 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.142878448 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.085225087 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083119476 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.080574661 seconds)
  done (took 1.878645213 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092361516 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080384128 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068252497 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08953136 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074911381 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068785029 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068810831 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069130037 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077254116 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077578078 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068765616 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077406782 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0770887 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076623774 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074756862 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074381449 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068754654 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068838428 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067679014 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085905363 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069133172 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077260408 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069259648 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068628163 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068780507 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076844327 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077365227 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077796601 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068684674 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077147477 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074988689 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068778506 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077653208 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077400385 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070075904 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077401793 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069342531 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085625456 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074737092 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076878593 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070043349 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075094107 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077375551 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073526757 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077280466 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068807419 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073873214 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068750243 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069425999 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087919859 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074868066 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076472931 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074685801 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077755524 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077638388 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087542427 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078250532 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077120379 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074861559 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08046895 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077468902 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074705409 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076655362 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077572157 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075213169 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076843081 seconds)
  done (took 6.298345547 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083568941 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.087335195 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069943171 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077824875 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077474682 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069273242 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069570387 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069160718 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069250645 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069120573 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110346513 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069281502 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077983367 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077346103 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069592799 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069380861 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069543286 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077085232 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069045894 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087672978 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069170977 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077047175 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077062606 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077085674 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078115749 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074942799 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069092738 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069132408 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068866257 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069149401 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07412322 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069146094 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076809609 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068615969 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077337579 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069272143 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069370551 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073871735 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069107372 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074598804 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077211317 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085473112 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069202799 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068494949 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077849661 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069021052 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068687793 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06813437 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06888409 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068593729 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077802601 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077533122 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077374603 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076643009 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069699211 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068912297 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069160572 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069207578 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06906436 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074988958 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076907975 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069151508 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087907645 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06943273 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069069605 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07713492 seconds)
  done (took 6.217620213 seconds)
done (took 130.317694817 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.192487193 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169196403 seconds)
  done (took 1.678660785 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069886419 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097822442 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079853801 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131196278 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066307433 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099533351 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098005669 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077560755 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066036594 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066369447 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067944165 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.06979251 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132869137 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065807492 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065769944 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067350509 seconds)
  done (took 2.653006738 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100006429 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.179770706 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101683254 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066491525 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099484879 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074930191 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066972156 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077376118 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.072862066 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066924113 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074770743 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07262827 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066869939 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073061833 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.072665523 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074905111 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066757619 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074912309 seconds)
  done (took 2.814601115 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103286244 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.093544527 seconds)
  done (took 1.529421214 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159392173 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.107601263 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.148690739 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.334737803 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.161276933 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.228311011 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126625772 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.12535766 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115414818 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122003092 seconds)
  done (took 2.955831037 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099952976 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151395407 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.261578987 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118573427 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074546808 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093630883 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119256207 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079174666 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077583861 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077223043 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076760065 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07774027 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098505707 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075702149 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075468919 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077782169 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101186159 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074434291 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077174064 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075881591 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099311792 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067382189 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075886204 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.0741065 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076837494 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076494536 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067366083 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067210877 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076065955 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075220781 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.0792058 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09232971 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076166034 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107658077 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071875125 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108891711 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078682313 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073539933 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075606745 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073189161 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077530826 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07758091 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073730625 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077553633 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066783955 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078367338 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067535086 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067354667 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.08032187 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068456617 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080018102 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.0790522 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107675675 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068320504 seconds)
  done (took 5.993116108 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.675374032 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.1044791 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072392499 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110170099 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098217039 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074200904 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.686616273 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09001911 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.175577268 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091973698 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087606235 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07140568 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083342762 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085850957 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110351141 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100824571 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.093392678 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070941201 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100533278 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.098459601 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067461795 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094439534 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091720255 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.378681926 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069074309 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07154372 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06914296 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071697642 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.113176989 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079566728 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071226525 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.123549733 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087436928 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.12045783 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066610059 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066944763 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067144188 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078539252 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.178401675 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.133336249 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.131315869 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068698421 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069989169 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070867418 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091248202 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068472793 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.113151529 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082317224 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.121068467 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071480322 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071549195 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069294474 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070550847 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081511745 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079032489 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083378735 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.228142215 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069904277 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069576655 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.0726445 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.181275306 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080005631 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080431067 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.093044663 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.132705114 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069284552 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.695225629 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083843976 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066836931 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069012521 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068510816 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070156604 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069188601 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.248127097 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.360196327 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071860683 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07292846 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070690081 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.153959921 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080280887 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069806287 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.115211767 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068918395 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070891004 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07210068 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071952141 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.121201066 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082610343 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.072624016 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069868388 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071975955 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070143534 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068947241 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.163181657 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082430271 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.081756344 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.164420738 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069150726 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.111961148 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078455366 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069802296 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080416329 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069933211 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072429722 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071194128 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.0813505 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.098807411 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081109327 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072198274 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06948622 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.099809529 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082750555 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069956709 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080477424 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.401075645 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08048918 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067138067 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080285569 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067595519 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.111332724 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069684614 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.184372095 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070720121 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081349043 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070406779 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069243358 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07005153 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.113444582 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072095571 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070235996 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070727568 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072298034 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081728469 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.136445326 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07228033 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.164832257 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.13562983 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070895006 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.120803387 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069729157 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.12034159 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07183162 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071043504 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068836121 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.688620481 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068021284 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068005975 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070622482 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.13941041 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069553842 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080323738 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077827728 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06787072 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.700394644 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077429592 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076991155 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.210662953 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071839961 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070838137 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070049966 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072361953 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.113207788 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.147903041 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07202548 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070517273 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080888968 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.113909644 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069584586 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081235032 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078879472 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080048864 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071047456 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072061539 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083329749 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.117937302 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078878798 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.138090463 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.5103976 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068091133 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07762332 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.145390496 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070483452 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086691683 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069876434 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.085396604 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.115612468 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078898482 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.228642462 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.11634002 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.140520601 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081580552 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082928584 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067456969 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067922612 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078730766 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068513508 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071486829 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079945939 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071761658 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071484656 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08676728 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068285388 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.175058868 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067140909 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07911708 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066653512 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069566929 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083071124 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067896694 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069215225 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079045936 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0700731 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.07733388 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.786777217 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078788275 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068505543 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06990605 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.135317596 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.112860768 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067703235 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067784124 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071792312 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.112254557 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.162097943 seconds)
  done (took 28.509840498 seconds)
done (took 47.480019248 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.213532615 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150006417 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.200569399 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117466977 seconds)
  done (took 2.119666092 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.125649245 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103532976 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.097837745 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066537668 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10444779 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066584376 seconds)
  done (took 1.939707812 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.316495041 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214924479 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.185239662 seconds)
  done (took 2.083944586 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201103564 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190805977 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.400230932 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.255560223 seconds)
  done (took 2.534478333 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.146712131 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.09177638 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069030063 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085321386 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.137878771 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.16471122 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.10124696 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125111179 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07746731 seconds)
  done (took 2.426438076 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.143795841 seconds)
done (took 12.627415792 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.101809885 seconds)
    (2/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.090247834 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.156675436 seconds)
    (4/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.197721356 seconds)
    (5/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.193678925 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.081768675 seconds)
    (7/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.170380261 seconds)
    (8/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074318202 seconds)
    (9/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07508719 seconds)
    (10/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.169198616 seconds)
    (11/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.1694804 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.151476938 seconds)
    (13/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076236811 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.094554002 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.170309612 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.080864181 seconds)
    (17/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.108885725 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076282758 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.188840187 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072418571 seconds)
    (21/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072387515 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176020458 seconds)
    (23/309) benchmarking ("sort", BigInt, false)...
    done (took 0.18858832 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.115242427 seconds)
    (25/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067112128 seconds)
    (26/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.156462236 seconds)
    (27/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.188658754 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.10903189 seconds)
    (29/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.194480421 seconds)
    (30/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164534308 seconds)
    (31/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.179962846 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070362176 seconds)
    (33/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078901753 seconds)
    (34/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.190655988 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097551722 seconds)
    (36/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074581757 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.100056072 seconds)
    (38/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.099815698 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072183256 seconds)
    (40/309) benchmarking ("sort", Int8, false)...
    done (took 0.141842119 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.110731391 seconds)
    (42/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078021585 seconds)
    (43/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070072118 seconds)
    (44/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.178692273 seconds)
    (45/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.137409281 seconds)
    (46/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088725911 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066837072 seconds)
    (48/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077095761 seconds)
    (49/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072127863 seconds)
    (50/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074322081 seconds)
    (51/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.156651533 seconds)
    (52/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.147217613 seconds)
    (53/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.102260744 seconds)
    (54/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091406968 seconds)
    (55/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.160133843 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073045578 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091009735 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072157647 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.10900909 seconds)
    (60/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089193764 seconds)
    (61/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072042314 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.185194477 seconds)
    (63/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.194461437 seconds)
    (64/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.184976394 seconds)
    (65/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.05160242 seconds)
    (66/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.07045219 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068444332 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.142494695 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.09648175 seconds)
    (70/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.137542208 seconds)
    (71/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062977121 seconds)
    (72/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.139955247 seconds)
    (73/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.142253954 seconds)
    (74/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079489936 seconds)
    (75/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071744894 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091544192 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092802651 seconds)
    (78/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054510158 seconds)
    (79/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072096506 seconds)
    (80/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.119600623 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.0666292 seconds)
    (82/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.211509137 seconds)
    (83/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.068664039 seconds)
    (84/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.202002867 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092862998 seconds)
    (86/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.079697402 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.148227959 seconds)
    (88/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.139684559 seconds)
    (89/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.077230872 seconds)
    (90/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.082956507 seconds)
    (91/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077586613 seconds)
    (92/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074304918 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.147994056 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068621047 seconds)
    (95/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.052580136 seconds)
    (96/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070243355 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.104485837 seconds)
    (98/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.139729564 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091019212 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067008768 seconds)
    (101/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051417041 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.096716534 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067922445 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067308044 seconds)
    (105/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069055656 seconds)
    (106/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068048428 seconds)
    (107/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.054154349 seconds)
    (108/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076710664 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094046352 seconds)
    (110/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.054550775 seconds)
    (111/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074731752 seconds)
    (112/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.115472658 seconds)
    (113/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.118011997 seconds)
    (114/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052542719 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.067799751 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.137337408 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051037947 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052609083 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110044552 seconds)
    (120/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067248854 seconds)
    (121/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171866777 seconds)
    (122/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108793938 seconds)
    (123/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.291334461 seconds)
    (124/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.135232243 seconds)
    (125/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071592246 seconds)
    (126/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067279738 seconds)
    (127/309) benchmarking ("sort", Float64, false)...
    done (took 0.125026933 seconds)
    (128/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086362106 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.142473718 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073353048 seconds)
    (131/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.17040395 seconds)
    (132/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050417805 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088051178 seconds)
    (134/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079203108 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073377134 seconds)
    (136/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.142658635 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.091568297 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072906818 seconds)
    (139/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.165144665 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.114335692 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073117751 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073135746 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.134981837 seconds)
    (144/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068658044 seconds)
    (145/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.164012315 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066736856 seconds)
    (147/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.149876512 seconds)
    (148/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.172173236 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066604392 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074722784 seconds)
    (151/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.05247721 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.090024706 seconds)
    (153/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073325599 seconds)
    (154/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.107182128 seconds)
    (155/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.066670954 seconds)
    (156/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.108914719 seconds)
    (157/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.139684182 seconds)
    (158/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064257193 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.170793914 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075280425 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09486453 seconds)
    (162/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080554168 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131041334 seconds)
    (164/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.05205806 seconds)
    (165/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.077463734 seconds)
    (166/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.140697569 seconds)
    (167/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052960036 seconds)
    (168/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.105083595 seconds)
    (169/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067690321 seconds)
    (170/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.113165852 seconds)
    (171/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053366031 seconds)
    (172/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.053640767 seconds)
    (173/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068207447 seconds)
    (174/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.055442674 seconds)
    (175/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052641444 seconds)
    (176/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121044573 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095831539 seconds)
    (178/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06809679 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068955846 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.055040788 seconds)
    (181/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.07329658 seconds)
    (182/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068209528 seconds)
    (183/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067622287 seconds)
    (184/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072970872 seconds)
    (185/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072197212 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090134968 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066024611 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066285656 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073175348 seconds)
    (190/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076196679 seconds)
    (191/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074206999 seconds)
    (192/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073426893 seconds)
    (193/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065546459 seconds)
    (194/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061957714 seconds)
    (195/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.052057369 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134442564 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.229363872 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.125202443 seconds)
    (199/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092597834 seconds)
    (200/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.112905923 seconds)
    (201/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066523914 seconds)
    (202/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143873808 seconds)
    (203/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054033938 seconds)
    (204/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.176907776 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068115956 seconds)
    (206/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.183150721 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065866177 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093593596 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093858651 seconds)
    (210/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.055690381 seconds)
    (211/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170934946 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.079030125 seconds)
    (213/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069617001 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067410969 seconds)
    (215/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.054823041 seconds)
    (216/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.07145808 seconds)
    (217/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.052885554 seconds)
    (218/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.071587539 seconds)
    (219/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.069329703 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.067576238 seconds)
    (221/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080589048 seconds)
    (222/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.053649778 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.0760588 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07454598 seconds)
    (225/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.074058551 seconds)
    (226/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.053772845 seconds)
    (227/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053283673 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089903664 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067971458 seconds)
    (230/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071779776 seconds)
    (231/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078805468 seconds)
    (232/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.054445883 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067522068 seconds)
    (234/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.053198583 seconds)
    (235/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054750519 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073307991 seconds)
    (237/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.05290515 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066123682 seconds)
    (239/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.052841873 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.165695752 seconds)
    (241/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070949055 seconds)
    (242/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.053249806 seconds)
    (243/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.05283277 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067853034 seconds)
    (245/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06462567 seconds)
    (246/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.054269334 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136290958 seconds)
    (248/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067402271 seconds)
    (249/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078043311 seconds)
    (250/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.074443356 seconds)
    (251/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069267792 seconds)
    (252/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.054008937 seconds)
    (253/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.075332953 seconds)
    (254/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.100990965 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.118982574 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.136675274 seconds)
    (257/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067072718 seconds)
    (258/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.063167196 seconds)
    (259/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073436608 seconds)
    (260/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.05530485 seconds)
    (261/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.053759554 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.09738442 seconds)
    (263/309) benchmarking ("sort", Float32, false)...
    done (took 0.129892078 seconds)
    (264/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070009191 seconds)
    (265/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.15005309 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067023785 seconds)
    (267/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080681347 seconds)
    (268/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.062603349 seconds)
    (269/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054238672 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.052500382 seconds)
    (271/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080871777 seconds)
    (272/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073430044 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.066919897 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.109997643 seconds)
    (275/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052810428 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087930909 seconds)
    (277/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.054186052 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.111794325 seconds)
    (279/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.052186418 seconds)
    (280/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074414014 seconds)
    (281/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072783722 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069101233 seconds)
    (283/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07525114 seconds)
    (284/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.107051834 seconds)
    (285/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052783702 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067183048 seconds)
    (287/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077179535 seconds)
    (288/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082474334 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091514021 seconds)
    (290/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070379796 seconds)
    (291/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.053578682 seconds)
    (292/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077319169 seconds)
    (293/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.067514546 seconds)
    (294/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.052487297 seconds)
    (295/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067294141 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.0742758 seconds)
    (297/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065609732 seconds)
    (298/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065537495 seconds)
    (299/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.052376159 seconds)
    (300/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074048146 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072407985 seconds)
    (302/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052569819 seconds)
    (303/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065895413 seconds)
    (304/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.052493795 seconds)
    (305/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.054335382 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.0724579 seconds)
    (307/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072970773 seconds)
    (308/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074523367 seconds)
    (309/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080266431 seconds)
  done (took 30.678012915 seconds)
done (took 32.059414738 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.090676434 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097172723 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077420784 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097168262 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083889386 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.080808656 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075210672 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081423645 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083396878 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084982729 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081935598 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057106589 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076853315 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07678285 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077301872 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094817874 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080729465 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075209463 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075373319 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066993847 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075286187 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067779072 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069295776 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057036953 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080257589 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074125197 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075286538 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076126777 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068268215 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06849512 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071361755 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076251223 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068488144 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080230827 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074809425 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075322531 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075818829 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077697033 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069755099 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06839597 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076514746 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06815443 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074806884 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075602106 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074070798 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073864619 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075252009 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080423253 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094717129 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070872421 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076648694 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078937801 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078764011 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074659905 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.071654144 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075458376 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072764479 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094787792 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075506192 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070741098 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076190572 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075890688 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073374819 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075266047 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075162003 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077572766 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077613656 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073086321 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076940561 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073005598 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067819185 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075326695 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070853255 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.06791001 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077958127 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078732331 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066377723 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073276946 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074538854 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073469005 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066714841 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070004875 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068822864 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07335517 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070063671 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057123621 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070663246 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.073427369 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066554164 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074921052 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07333656 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074420025 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068816608 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077518426 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066486672 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072493948 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067274818 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067039783 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069183021 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071218711 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067163014 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070038139 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075969213 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06874526 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073428208 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.08141706 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06733475 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07356733 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066755029 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066551002 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081324989 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076561708 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067371581 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070509074 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066248819 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073769516 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066213492 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066664564 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066273324 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067039858 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072380405 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066363471 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069208663 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07317075 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078475664 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065827153 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069388872 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068675618 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066389347 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071270464 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06644313 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066265143 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.203209826 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063709411 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07105571 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068321401 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075119254 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070723763 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075395514 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069594859 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076037836 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072668579 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073688942 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073184396 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.067001638 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061558054 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071364752 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070813931 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069601436 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06786396 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069439265 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067779551 seconds)
done (took 12.785719494 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069120189 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145807872 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.1019918 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09808866 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085545384 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066525196 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075777618 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10167738 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067409133 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102203818 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087594739 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085107154 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111931397 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064923824 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065927724 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069785219 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067638409 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081783118 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10057581 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086734042 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.10888784 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065295675 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094574799 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090072104 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087029989 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101293196 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066730198 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069268443 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069826935 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090900316 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08643665 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070236332 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.06636923 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100366407 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091918085 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08288447 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066445007 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082390942 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066459623 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065593734 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.08048665 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097296316 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079585127 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080294965 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06969285 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068927809 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069171351 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086297764 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092146965 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.07975893 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08742989 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102662508 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069247137 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.0678124 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066794681 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087614001 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.067445541 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070936463 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068697397 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.070418652 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068420332 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071428481 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.083650106 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.089369242 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07165139 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080441931 seconds)
  done (took 6.824501437 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086590463 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093704366 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086082936 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.086187501 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067089053 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066735891 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066690768 seconds)
  done (took 2.025187045 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069723668 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091211871 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091677208 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092547458 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.087098091 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.089692948 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076230614 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06635083 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080580562 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067628566 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087387068 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101357719 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067133636 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072632741 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090629916 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066836288 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.08989425 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066482473 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069224581 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089995717 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068484449 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082069463 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070785691 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069168691 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083288052 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068736343 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115808315 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073214503 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070320425 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.0715079 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066782031 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109112533 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082445092 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077970172 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068274584 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082914625 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083203673 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066620214 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.08448767 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073996751 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08219545 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068655558 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.069271342 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066512911 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072550538 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078941875 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069776972 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068717639 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070874419 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088018973 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.069192615 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081874173 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072909301 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071399219 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069562828 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072225238 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078533174 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069034102 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088417598 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069723999 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.085849047 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085385152 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082468057 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084994672 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07056041 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082031952 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082373517 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070672759 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069702241 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071487569 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084978168 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066444994 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069675321 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079222363 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069995625 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092047202 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.092362539 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069605644 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078161899 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068837653 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068748938 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068839796 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092333482 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071710717 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069026583 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073117215 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071329273 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066625673 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067481222 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072246282 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06628352 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06974382 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071234194 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071609783 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07173826 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085368247 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.07081272 seconds)
  done (took 8.908898833 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071591492 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070042519 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071820114 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069627198 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06990023 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069653246 seconds)
  done (took 1.917012072 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096635447 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.071769671 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083009068 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075094888 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107224333 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08995838 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.090076282 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081867197 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087033524 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.081984448 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.089637439 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.091488891 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095722127 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.075285153 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.089953746 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.074367459 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.089974604 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078414323 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081352493 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07574117 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089643971 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.075251919 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07550239 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085062645 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.078307539 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.074748974 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069644592 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082075399 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081215407 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081614728 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074860706 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.078006113 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073127203 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081487511 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.089877711 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07291686 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074327324 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.079673945 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075118556 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.077643112 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.090802088 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075468302 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076736335 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.079647448 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080955077 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07306657 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.079441801 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078373101 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.088967152 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.079475579 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.079422676 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.074094104 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.077504472 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.079251751 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072661446 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081247174 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.079641069 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.089356837 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074695108 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072839263 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071550985 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077393434 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080562083 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.077820936 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081278568 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078872338 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072619399 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074726662 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075145852 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074024975 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.07924733 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071038425 seconds)
  done (took 7.244500678 seconds)
done (took 28.380068843 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.550368636 seconds)
  done (took 2.007796336 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.631898599 seconds)
  done (took 2.11599284 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.633881072 seconds)
  done (took 8.11280369 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.403402669 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.513544924 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.716178093 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130059354 seconds)
  done (took 3.274779396 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.666494704 seconds)
  done (took 2.161542248 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.216031132 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.200467507 seconds)
  done (took 1.919408984 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.374789512 seconds)
  done (took 1.857940382 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.106642518 seconds)
  done (took 2.592340971 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.267599947 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.166677021 seconds)
  done (took 1.922107255 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.47517769 seconds)
  done (took 1.963129978 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.843887973 seconds)
  done (took 6.332783741 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212310707 seconds)
  done (took 1.744418263 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242886955 seconds)
  done (took 1.733414487 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.707659727 seconds)
  done (took 3.197910396 seconds)
done (took 42.426876213 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.083725053 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084691832 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084540711 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079200433 seconds)
  done (took 1.806852017 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.07989297 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075405129 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.079120602 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074800044 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.079379434 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074836527 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076981305 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079726452 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.075157412 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.075091884 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074540082 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.074963682 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077441426 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076623235 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072991476 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077433219 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.078890887 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075033775 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077748398 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075075548 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073703073 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.077116513 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077533411 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074809959 seconds)
  done (took 3.32521985 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080436113 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075278417 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077876978 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074537595 seconds)
  done (took 1.808230777 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079746977 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095523154 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.09238493 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079594304 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094858013 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.088887011 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072176206 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071060094 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075974237 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079455767 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070709592 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09917357 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.091025567 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079480441 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081746349 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068270653 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070838065 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.090176373 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079488365 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079726124 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072274401 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079271097 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070453066 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.091036751 seconds)
  done (took 3.447281107 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081072454 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105839343 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.080263792 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090309541 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092717309 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068160659 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.077156939 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091861658 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.126786192 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067642436 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072535076 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.067746675 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.074673865 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.067324347 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07909212 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.107756821 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110989357 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070746618 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09872911 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067997249 seconds)
  done (took 3.206330324 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075390053 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072528102 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067891024 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071393642 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.080105327 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076029607 seconds)
  done (took 1.951819358 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071205368 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069653442 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06946058 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069131517 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074311991 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069377932 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068187106 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069514447 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06926787 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069080664 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068589656 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067910036 seconds)
  done (took 2.33826816 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.33770664 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071857408 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069843771 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06602778 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.0712112 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067211242 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081767139 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068092672 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090375995 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066038943 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066712514 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068270234 seconds)
  done (took 2.630523157 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21107588 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079032858 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242262387 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14101688 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114949872 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118969243 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106962389 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116754728 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.146784912 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104877281 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172255895 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169394179 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110698385 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140396679 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092888094 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.102335401 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159617515 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166926107 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106792771 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170192766 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147710755 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128343003 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151621528 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104821744 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109022117 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1255189 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07362998 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082879403 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174532868 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135206412 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150391926 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114002632 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093725344 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176991464 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171533791 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142627409 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133973934 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083530283 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.10188263 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132621221 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198412013 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088731056 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166595013 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249632527 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084298872 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144748443 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125366477 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.124431341 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.110760383 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093937787 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149662594 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186881219 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.142794453 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091116054 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115310353 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118454773 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117869138 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106496914 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185053459 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164371978 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130230183 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070970605 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101600856 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157475156 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134397307 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.112782268 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.131360823 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096825396 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137149724 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159163781 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122104633 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147212127 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.132894121 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091685505 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122820607 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144454135 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132243623 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175022281 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128466808 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.075889118 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129528611 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107373232 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084093955 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145966938 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078210192 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177359514 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098342913 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105879591 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113779307 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112466466 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112189244 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164577288 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145662123 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.248841704 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.068575904 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107581988 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.125029428 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152866144 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091072227 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112690968 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119993265 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080516206 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142505353 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077774829 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127019225 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07835578 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129079774 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136701393 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078920457 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126105896 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104491565 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.103514944 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137393656 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164602949 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09179731 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085478719 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172232316 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126087963 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.109013759 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149007825 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160391742 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102616634 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106215552 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154335467 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183693792 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092940736 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16251595 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107771302 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083961508 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.09010625 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127015962 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116575182 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.126433411 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084284903 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.123124175 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173575236 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07713078 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098700153 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138344018 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082017206 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08354323 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105921397 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103488273 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09809387 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.103279931 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.107116422 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142192661 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125933223 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10736765 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275762322 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102673266 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176022318 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092726996 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.104763146 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10856599 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072739526 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.141582396 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162464218 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082659561 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168883888 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.128216495 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108474164 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123094514 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086134934 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144184514 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081396663 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073762653 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147611237 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113955055 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113224988 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.155443866 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108719909 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.131086975 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.123367311 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13880669 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136727641 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.133177569 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109297175 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091216253 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115065246 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129762846 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.075850973 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094333712 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.08293172 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10755597 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099326426 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086429748 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146133856 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12891572 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103908317 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114977269 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100204431 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151726159 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079467511 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133394542 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.122850594 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097010832 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15582464 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156748842 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134283942 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102379951 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147893719 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072543106 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07557864 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.235689851 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128621702 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087007036 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088126375 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121573785 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152135391 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134068272 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141809694 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114964852 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12546244 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160124413 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072597753 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.120348654 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152022535 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12479888 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.108795395 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093630721 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102347935 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147110566 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112879326 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187512473 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117996862 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129949701 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158152583 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.102894158 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083012427 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106486861 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13984958 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114915315 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14877351 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10309119 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090806872 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114218601 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076924449 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103150995 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131051954 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123572475 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139594839 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.118808312 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137106963 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079660486 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120633819 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124295577 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126868897 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066898973 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123056786 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165305153 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096772838 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121432421 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156558795 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082044379 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.12717072 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.328871159 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151546503 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089084473 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114381183 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123400661 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132785793 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124702023 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144354342 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11413655 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138581574 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113709513 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089065283 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090540258 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100931018 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10894295 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097693742 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108297424 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115383047 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095687734 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132280215 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10311352 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111445483 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11945295 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098757608 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092355305 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099426192 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176658913 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123023823 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176413593 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.102174741 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14870428 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168210661 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077814898 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08233594 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081084109 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144411814 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087244699 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135230246 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.10158353 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109153426 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12761511 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145471474 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097413025 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068898019 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116224193 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138869615 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115751363 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101840872 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106862622 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16244431 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099735431 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0816575 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116657931 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106971942 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102639509 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31903486 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064689841 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101738351 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079197434 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084731738 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133008756 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157501507 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083934944 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.107302668 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12295613 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114131792 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132326488 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10487746 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101799432 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117682764 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154997679 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133661229 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09308826 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116222135 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133520473 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158913109 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106739226 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.099000151 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175140018 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155776344 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.183587084 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.091615837 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117280004 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1168543 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116124743 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143518817 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086036956 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167628062 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084483061 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138802197 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107782025 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09355448 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134068163 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.102231227 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091402899 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151899857 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117695783 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082500842 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077969415 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118188244 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12239421 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110594936 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078346801 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142893475 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075259111 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135586418 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173613633 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083749278 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.25220924 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099787001 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083624411 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113235262 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107400293 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093020664 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.10288093 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179141368 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089047908 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149819688 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142362551 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113609233 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13726532 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09973439 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636332519 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078142627 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152646724 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116191463 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173318057 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097217805 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118780004 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109173261 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124182049 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145201103 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105606849 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179104463 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132540121 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117530027 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080028958 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10249476 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104670636 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091276708 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107588425 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116009047 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119890015 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09711705 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.119846668 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126913366 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.085150289 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099415074 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161170648 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121057733 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148741972 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144466771 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086789467 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119896778 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137806725 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079349837 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121207522 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151343736 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105478777 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09676699 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.223281555 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.10512493 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176762928 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075988771 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167216429 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123513963 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111436256 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114117301 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114790012 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13213606 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108789892 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123433248 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094255518 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111252828 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112555412 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081999433 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.0775738 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10540661 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112667635 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097619869 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098837224 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098636349 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154615593 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071856785 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098317743 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103001757 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145488011 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175167255 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088073103 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082565686 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1190291 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114155472 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.116220211 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1239332 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082212059 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085067233 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084564827 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.079920989 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112586138 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115920899 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107838757 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114702649 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16853631 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.085343521 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.228965175 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098215364 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107297452 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069684483 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079943834 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099087371 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097468526 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108606471 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100612028 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167886837 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093804138 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.08925013 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09141991 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072523193 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082327795 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124917584 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107841212 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115476207 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094714889 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061768917 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106158108 seconds)
  done (took 60.108875858 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.114041047 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083215012 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09786247 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150817191 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123345857 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212364436 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158026714 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199344373 seconds)
  done (took 2.773874022 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070992668 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099228967 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102456013 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085648816 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.070099746 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070937322 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.233320733 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083878883 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069155293 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.091354125 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082616006 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069107267 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.406850106 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068267532 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070719584 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062512889 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069235766 seconds)
  done (took 3.400070795 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.386153613 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.370951952 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.374116928 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073687539 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.661107252 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090608346 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.078079099 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096404934 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071157648 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.269872239 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.696419402 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.09611932 seconds)
  done (took 13.865450042 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07862736 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072710204 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.086868446 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087055017 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074779361 seconds)
  done (took 1.992944702 seconds)
done (took 104.205880879 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083565983 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.31185326 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05590681 seconds)
  done (took 1.993523274 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086832724 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088084067 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.088249982 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086069213 seconds)
  done (took 1.95797469 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.077335898 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079045612 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.087754519 seconds)
  done (took 1.847668975 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.231221154 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.144070458 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089772437 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.085257697 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.08073359 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081436739 seconds)
  done (took 1.85599871 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074893722 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07755406 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076166994 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079153003 seconds)
  done (took 1.909628553 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080035216 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055288976 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056966898 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058388919 seconds)
  done (took 1.853978121 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08966126 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082314674 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082143728 seconds)
  done (took 1.860370437 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111257714 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088597826 seconds)
  done (took 1.804735435 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084968208 seconds)
  done (took 1.688413591 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102062258 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.117732791 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.1331601 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.113422486 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140864079 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.113238023 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088715572 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089714132 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079633769 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.089203883 seconds)
  done (took 2.67077599 seconds)
done (took 21.587122151 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082158175 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368063726 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363572113 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095657684 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670460668 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357700807 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.025963611 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09616788 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128052705 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070042164 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087749894 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.668922268 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.979308011 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.319874146 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.967981232 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.316842334 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652198116 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070632686 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070459171 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070406746 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.011364392 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070285045 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070742447 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071223944 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651033515 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374240859 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071400554 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.317605951 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071013071 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072572022 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357631694 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071355776 seconds)
  done (took 16.259468483 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074331333 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123079568 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076729509 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088537522 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073149353 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072834211 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074356813 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072107926 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129854011 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070994878 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088181607 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070669017 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075073275 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071925382 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090693609 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070631905 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071661592 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071312823 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071014519 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07150647 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090252569 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070722796 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071482563 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070966037 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070809168 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082995042 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071253304 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070776935 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071347367 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072890557 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074047668 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072223434 seconds)
  done (took 4.117838194 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11903668 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129471114 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077334673 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107361851 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117027743 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072763418 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148487633 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096990409 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132797974 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07075722 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088913833 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071942682 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105608337 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071747969 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091168666 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07163191 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072267803 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072033591 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071714777 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071611188 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091526023 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071063913 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071555001 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072259349 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071628802 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085178939 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071718365 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071781111 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071763376 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073428538 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075070918 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072611643 seconds)
  done (took 4.378372446 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075161183 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078074222 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.086391844 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086379705 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072079341 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074907628 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076030718 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072439918 seconds)
  done (took 2.241151156 seconds)
done (took 28.60472907 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082069746 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071458964 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075325062 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084101183 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076031983 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081792177 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06989901 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077577754 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075034754 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07586957 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077769664 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070479177 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073880945 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069635039 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076469256 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070856115 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082479351 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074340161 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084135944 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.082857458 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072637269 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076244138 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.077228502 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083024631 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.082985694 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082610748 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080523007 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076109483 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071923333 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073579909 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080087655 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088344932 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07162163 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082470064 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070928836 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070866167 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074560947 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070891753 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083154681 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079642329 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072528726 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079057355 seconds)
  done (took 4.82583603 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092565467 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.095612382 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.088613812 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064828569 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.071261753 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068239713 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.092914404 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.062511219 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062437909 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092646182 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.05860059 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062325679 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065496082 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056896993 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061975915 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059807705 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.064510026 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.057910485 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062009509 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062636723 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.061058855 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057109392 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.062725689 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.068123418 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058380711 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063882574 seconds)
  done (took 3.406254159 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077863757 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087377514 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091937684 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13148479 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.106340632 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079326644 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079472988 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095095445 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.088181545 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069696185 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074223573 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.097224829 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091210286 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07396158 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067729142 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084791704 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082129296 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069407531 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073855571 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091242956 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084173763 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083986787 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092856266 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081028461 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066762711 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069593036 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071095623 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08132404 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.0722486 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076257556 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071787836 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070930114 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069282439 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078854677 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071282404 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069492282 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090440066 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077067776 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077435321 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068701354 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073074407 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070701903 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091442926 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12609276 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069948392 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077127559 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.078209727 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079529615 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070203402 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089232513 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081497528 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069709372 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072933882 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069659464 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069993797 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083741375 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071833637 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072301705 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079858729 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.073425626 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.088357135 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074009308 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086415261 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069838477 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077619494 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069721226 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070653206 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069030095 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095932615 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072035573 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113302899 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07115144 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071191038 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079169335 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077425935 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076378452 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070903571 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085989124 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081110207 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.074052781 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078677553 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073905235 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07313405 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.090581758 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.072575124 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071463199 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070937865 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076178062 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072153575 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071283517 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083239119 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069826679 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072938089 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087201212 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069608253 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071518579 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076279494 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075047441 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.069858048 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082595511 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074717948 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070641081 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079487047 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070115789 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072918191 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08048824 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076984104 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069369228 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.075453711 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.076376099 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071212084 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071785921 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072852913 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071400233 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078260701 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076586474 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074734522 seconds)
  done (took 10.785873228 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166414963 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158739918 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073068462 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.152825062 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080113887 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.098533841 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.15255716 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098493797 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070809927 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070571329 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.07091928 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.119101215 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110226293 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.129462155 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082435776 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07034671 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086724616 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.122018841 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154142762 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147761302 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086561313 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079984222 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072553894 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07186831 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.078334761 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.085681091 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.096860818 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.080454662 seconds)
  done (took 4.531010846 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.083997669 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104665407 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07690834 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092522873 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.093864647 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070456436 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.073223755 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072545803 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.083558119 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.081596092 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070578001 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077141485 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077843565 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.079759956 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072513792 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078039238 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078326412 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072416913 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074297834 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07620209 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080943541 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084252578 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075019369 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069929486 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078046761 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070212157 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06720416 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.087450227 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071053452 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094019146 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068698374 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077800714 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084496329 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07147772 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070561924 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070344046 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070154094 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070631696 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072628686 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069504467 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069919135 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059743713 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068672451 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080959297 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073874092 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056795771 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072937897 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072858164 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072758333 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066251461 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071593123 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072786024 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073800721 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077857383 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075556731 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.075663061 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07140398 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.069872783 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078245944 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070327112 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.067287904 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069039159 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074916391 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068820325 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.07814663 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074505208 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068713471 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069705442 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072239676 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074324919 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067593937 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070705878 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065404017 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070611537 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073248136 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07176823 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069250384 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066467311 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067455014 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067877584 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055465233 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067367159 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.055403341 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.073104312 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068248397 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068481352 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070040821 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075213875 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.082189902 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071147101 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075997776 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071204129 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.069126648 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073374509 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063104454 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07334396 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.086003026 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.085429647 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069692222 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067791165 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.0850504 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074528167 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069064363 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057434833 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076749011 seconds)
  done (took 9.377134468 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.100598507 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091191232 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072974562 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087539335 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.094429576 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.089413541 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075114125 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078063185 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071986673 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.085491531 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075930696 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079150049 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071073838 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077971979 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.094534295 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077204867 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069915676 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077022846 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071835954 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.101221358 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082756135 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082335023 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.075152525 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068496102 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075941761 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079984605 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090088672 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080458798 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078612003 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075932391 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.080332525 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090191294 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074299843 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072510543 seconds)
  done (took 4.416545935 seconds)
done (took 38.953224619 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.704200491 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.875201237 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.698519559 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.049638276 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.777182414 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.939354325 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.835928165 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.694994883 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.818984395 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.729139716 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.941647335 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.729398099 seconds)
done (took 64.426958872 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.757960963 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.833472955 seconds)
    (2/2) benchmarking "String"...
    done (took 1.959369689 seconds)
  done (took 5.418248702 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.992034427 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.319158348 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.926918722 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.683535954 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.685888654 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.993810205 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.487181612 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.226231984 seconds)
  done (took 29.950734039 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.873644222 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.876488701 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.334850233 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.373076876 seconds)
  done (took 15.125257008 seconds)
done (took 61.959525822 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.701006084 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.694985693 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.695109085 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.66076615 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.739235541 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.689585851 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.896694073 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.948043038 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.681931444 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.670960985 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.679104147 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.106911549 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.683415433 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.889002041 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.679507699 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.680446182 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.709685085 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.197376052 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.830657918 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.68325062 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.695087049 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.719868284 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.678512917 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.672653637 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.71106859 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.674879236 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.118794332 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.681828946 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.288035617 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.672958327 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.697975824 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.137187908 seconds)
  done (took 201.885661808 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.671913502 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.609138956 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.706230774 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.680719599 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.082030994 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.870564316 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.810432893 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.117619967 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.673466111 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.694413892 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.906544598 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.669773435 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.930834607 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.622018564 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.679800367 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.783234055 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.856377988 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.920686334 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.67214731 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.938440002 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.671891284 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.745135691 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.691136657 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.868635268 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.700123507 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.684580253 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.670915169 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.70026657 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.860306292 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.832668481 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.678004851 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.684807456 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.800716616 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.536209475 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.679386538 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.690407232 seconds)
  done (took 166.006386405 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.06916239 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.038249798 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.664286859 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.666962245 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.671147384 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.672130998 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.666890838 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.789641245 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.793819905 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.12114498 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.147957748 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.666080795 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.714052965 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.506618923 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.663157963 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.73514962 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.67769378 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.668132973 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.681502908 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.694702279 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.667622811 seconds)
    (21/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.666881522 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.666387003 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.791288945 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.676205927 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.674878109 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.666064003 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.671700796 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.03748164 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.789193114 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.663583091 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.675393684 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.499921568 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.10506905 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.668637878 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.673398461 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.660263182 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.750915877 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.669149156 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.676311395 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.67168574 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.896054167 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.66880422 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.669837558 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.670130333 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.674265928 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.843061398 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.667086891 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.79422 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.669090047 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.170615535 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.668343827 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.669804834 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.562735611 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.355616427 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.671400075 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.669877092 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.673130424 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.669914623 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.671030204 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.6767992 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.554326967 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.747348075 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.670837484 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.672772966 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.676792756 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.671247009 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.720663715 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.671297427 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.130240794 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.721884556 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.888020737 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.795176729 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.67161525 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.738570045 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.762936931 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.668294669 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.670968919 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.67296402 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.671353503 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.752371856 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.669076994 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.820949584 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.675854726 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.67189808 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.722578917 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.741355058 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.668592001 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.565611461 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.673015842 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.67208155 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.988558256 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.736199094 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.669152473 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.671312672 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.672467244 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.804380412 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.795046749 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.441001744 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.672411296 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.468474396 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.671030957 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.816958547 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.66880408 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.862484827 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.673632715 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.755124679 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.673341949 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.674326194 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.67267639 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.704157298 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.673509811 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.733627923 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.673232328 seconds)
    (114/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.671201737 seconds)
  done (took 391.148022249 seconds)
done (took 762.783384202 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.354601621 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.328079669 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.444107551 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.347711687 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.328650915 seconds)
  done (took 13.416491 seconds)
done (took 15.02684752 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.763436359 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.765641607 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.698657071 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.763739913 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.696130775 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.76351147 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.745321679 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.699342899 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.730059794 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.699609954 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.732921951 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.698569685 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.68612525 seconds)
  done (took 24.058532639 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.898394582 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.908612739 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.745156211 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.91103737 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.720977017 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.902172367 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.833402238 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.826669201 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.837321811 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.689358676 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.686609784 seconds)
  done (took 21.575340159 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.91690997 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.911641085 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.74515385 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.910612545 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.720443419 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.908463745 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.837069955 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.828057396 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.829267682 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.691205239 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.687587449 seconds)
  done (took 21.601016427 seconds)
done (took 68.847035678 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.682551787 seconds)
  done (took 3.29787754 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.706212517 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.841495138 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.687694136 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.68930446 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.683743083 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.684666614 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.687253381 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.682729079 seconds)
  done (took 15.279664366 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.684819628 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.682936435 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.680619593 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.683188082 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.679932828 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.679953666 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.682946806 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.679924019 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.683703532 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.679267967 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.683009126 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.682047541 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.683574452 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.682807422 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.68266526 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.681120899 seconds)
  done (took 28.530068516 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.682527529 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.682430232 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.681191275 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.681803204 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.680970725 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.683435153 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.680919907 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.681482164 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.681300158 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.680373134 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.681882656 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.681655353 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.683403253 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.684461925 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.682314848 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.681544674 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.681640716 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.682593552 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.686729396 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.683539774 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.684424335 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.682108346 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.683296812 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.682312723 seconds)
  done (took 41.998651957 seconds)
done (took 90.719228429 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.369472769 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.120450425 seconds)
  done (took 8.110019785 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.688248729 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.684539902 seconds)
  done (took 5.029150831 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.685502073 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.684653915 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.684932297 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.686036424 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.685309194 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.685516517 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.684024535 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.686089606 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.684506636 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.68607702 seconds)
  done (took 18.471025718 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.685211391 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.685982189 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.683699399 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.686078655 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.687156857 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.683672737 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.685604916 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.684945024 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.685802223 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.682350078 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.68615615 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.682784232 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.685625718 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.683150095 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.685085895 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.68314532 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.683480491 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.685153421 seconds)
  done (took 31.945585066 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.687593409 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.686140855 seconds)
  done (took 4.993375883 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.684099837 seconds)
    (2/7) benchmarking "second"...
    done (took 1.683891383 seconds)
    (3/7) benchmarking "month"...
    done (took 1.684398598 seconds)
    (4/7) benchmarking "year"...
    done (took 1.683233729 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.683506207 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.684221222 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.683814128 seconds)
  done (took 13.408157582 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.68624468 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.84113575 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.915331398 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.38816488 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.687820611 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.690146263 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.63836013 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.690209769 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.694666231 seconds)
  done (took 18.852924589 seconds)
done (took 102.42549671 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.507928809 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.678792665 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.01845905 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.806448411 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.697412794 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.024893082 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.682198308 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.903579675 seconds)
done (took 41.938385887 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.751899832 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.15426676 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.168187871 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.318974212 seconds)
  done (took 11.264888614 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.667076345 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.208065399 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.723945061 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.270630613 seconds)
  done (took 19.501791339 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.051001324 seconds)
    (2/2) benchmarking "read"...
    done (took 2.044680756 seconds)
  done (took 5.722301395 seconds)
done (took 44.862091866 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.686357075 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.687436646 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.688448661 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.687696228 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.68478748 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.690642902 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.684572425 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.685693514 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.685191172 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.688539956 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.688744582 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.692139359 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.688720661 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.688961893 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.686301644 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.686055645 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.689287889 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.690237768 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.686028159 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.686438564 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.686337057 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.690222765 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.686921737 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.688199734 seconds)
  done (took 42.128276654 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.689000477 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.688769858 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.691116369 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.689346087 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.687350357 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.690682214 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.690393323 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.687479025 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.690169054 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.69039597 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.690343139 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.688106473 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.689390915 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.688505318 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.689783434 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.686752077 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.689878326 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.688076695 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.690269003 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.688365985 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.691007762 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.687559102 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.689912115 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.690085858 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.687998362 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.687643956 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.690155832 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.691883029 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.689747884 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.688028578 seconds)
  done (took 52.302545913 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.69503164 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.69841412 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.694059457 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.691237631 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.691868108 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.691157758 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.691932246 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.690998787 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.69191836 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.691251107 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.692075487 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.689887899 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.692080403 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.691795782 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.692494076 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.692147638 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.692989017 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.691911318 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.692662544 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.692378584 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.693693135 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.692376936 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.692826321 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.692681943 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.692332706 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.693295231 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.692793609 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.693677033 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.692396633 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.693084178 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.693105956 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.692720523 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.694059992 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.693120531 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.69210927 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.691841619 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.697258449 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.700111714 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.694050064 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.692819282 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.693730805 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.693391662 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.693688359 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.693490149 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.69346121 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.694958067 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.692633146 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.693366882 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.692700418 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.693266553 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.69547936 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.693527629 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.693263479 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.69348731 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.693313631 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.692619231 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.694111081 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.694043598 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.693682507 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.694177282 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.694040292 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.695889636 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.693494794 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.694739899 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.693863107 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.693138609 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.693200535 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.696508109 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.694080313 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.69389481 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.694913443 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.695372521 seconds)
  done (took 123.551691122 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.694944301 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.692490832 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.691702798 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.691434358 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.692076063 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.696652853 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.694411361 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.694268835 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.693154763 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.694222136 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.695698805 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.693719029 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.6946718 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.696175907 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.695275245 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.69258547 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.694360276 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.692467797 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.695116076 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.696422519 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.694393054 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.693517431 seconds)
  done (took 38.899036577 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.695825984 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.697578865 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.692762639 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.695650626 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.693814457 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.695797734 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.695775487 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.696077282 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.695188421 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.694675337 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.693587149 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.69689776 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.693536672 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.694751499 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.693949215 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.692966934 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.69723451 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.694543175 seconds)
  done (took 32.141536438 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.694887716 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.695339938 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.697431218 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.694060821 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.694175416 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.696505642 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.694614674 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.697196776 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.696578654 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.69447881 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.697175093 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.696766742 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.697264085 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.69444101 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.697317075 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.695439556 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.698251469 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.695675204 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.697957683 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.694866951 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.694448571 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.697661069 seconds)
  done (took 38.944832339 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.699050363 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.697750801 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.695368232 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.69510984 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.695816982 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.699141481 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.699876453 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.69606483 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.69814896 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.698726266 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.69456479 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.698539013 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.695512367 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.696838888 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.696403864 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.695766951 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.698409138 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.696707237 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.69951116 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.697416944 seconds)
  done (took 35.575926804 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.699882153 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.699818744 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.700780073 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.7032069 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.699767037 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.699308143 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.699314 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.70021934 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.700609885 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.70081327 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.700924117 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.700787983 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.700199591 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.699986883 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.700730274 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.703936484 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.701659548 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.699897242 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.699981578 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.700553866 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.701372074 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.70170767 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.700785768 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.701274131 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.701666919 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.700618215 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.703389727 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.701517351 seconds)
  done (took 49.258830996 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.700423297 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.699506263 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.697354242 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.700523351 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.697761642 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.698075434 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.699431327 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.698059023 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.700243486 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.698985657 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.701259115 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.701356822 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.700818302 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.702022271 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.701017812 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.702755404 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.700359086 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.700197385 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.699163794 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.697449768 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.70275634 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.703740487 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.701232318 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.698298356 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.699465638 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.701869103 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.699246875 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.701791875 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.701777651 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.699350158 seconds)
  done (took 52.641154763 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.72035009 seconds)
    (2/2) benchmarking "in"...
    done (took 1.720090188 seconds)
  done (took 5.075733423 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.700808788 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.701449038 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.700917465 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.699055128 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.69940882 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.704050515 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.702183702 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.698851362 seconds)
  done (took 15.242187242 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.701983208 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.703164766 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.7022423 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.703104124 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.703687082 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.703979662 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.710450284 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.702639742 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.70487624 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.703229309 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.708965915 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.712026967 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.708248874 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.704742133 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.707723312 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.704395892 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.702556167 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.704075086 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.703623491 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.706523568 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.704316203 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.706508242 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.704597485 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.701641486 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.705641741 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.719507046 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.71059506 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.704437621 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.704970762 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.709941148 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.705414525 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.704147981 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.704645936 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.704244925 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.704719327 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.706229333 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.71510108 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.706838184 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.71255769 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.705554107 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.704124035 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.701525567 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.706443895 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.712006853 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.707573333 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.705939564 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.704360236 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.702320014 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.705729554 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.708158427 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.708877226 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.704723968 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.702692827 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.712459425 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.709593385 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.713972333 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.705237494 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.708450433 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.714944343 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.715992396 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.723633986 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.71337588 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.707388156 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.706997828 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.715650428 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.729687801 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.716602806 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.702760004 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.70277356 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.705522038 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.715807709 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.722078046 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.717844267 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.707321573 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.707251456 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.705750359 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.708046125 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.706280139 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.7177497 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.709583815 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.707430652 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.707255837 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.716671319 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.728193325 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.707772983 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.707359186 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.706704244 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.706992216 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.708693375 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.722153539 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.708170339 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.708114905 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.707543379 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.708930383 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.711732357 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.709599119 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.707794929 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.711335533 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.704982182 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.70614222 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.708478622 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.714788748 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.717726243 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.709877572 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.708285361 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.715957165 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.708708257 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.712439381 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.717218928 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.707452527 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.708740563 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.708765119 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.716951641 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.707900065 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.711958466 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.716232653 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.70850688 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.710881981 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.710449082 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.713295074 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.718449965 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.735329889 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.709164529 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.708534837 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.715248228 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.720111684 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.710433728 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.712883017 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.709202374 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.706085243 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.70704822 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.712465596 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.710004578 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.7138897 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.710287333 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.712892558 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.707127003 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.709100127 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.710251851 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.711656578 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.712224519 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.71165396 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.713975035 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.714166066 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.711433977 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.711962981 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.718294938 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.710926103 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.711776203 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.712935845 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.707885856 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.711338103 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.712993148 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.711925344 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.713710452 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.710802907 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.710106734 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.711537275 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.710497368 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.71015022 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.712226237 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.712212249 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.715306741 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.710959216 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.716430554 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.712931261 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.708094334 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.71058443 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.710863392 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.711496126 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.711230615 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.712408392 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.714614255 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.718571716 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.710882172 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.712203564 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.717065176 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.714177689 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.713302393 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.713366328 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.714677854 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.7204364 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.712241183 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.723353278 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.71279569 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.712740564 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.711445328 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.713472566 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.713738054 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.715864144 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.716289732 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.720040815 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.728075362 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.723121974 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.713617888 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.715987797 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.714176222 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.716661955 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.718846351 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.714271389 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.714096687 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.713697583 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.714026625 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.71337408 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.716712573 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.713855068 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.716614114 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.714220004 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.713884512 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.713702535 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.713032437 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.715654749 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.717268525 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.710808617 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.713670524 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.714899492 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.714398316 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.71147815 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.714362948 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.71468135 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.715228997 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.714420343 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.723790448 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.712119817 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.716545766 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.714954567 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.714719814 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.714100902 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.713731812 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.718554572 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.716579544 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.723291832 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.715478483 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.717740798 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.723703311 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.713588852 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.715360453 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.719522703 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.714454932 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.71196368 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.717869407 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.723779503 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.714998228 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.715329854 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.714736692 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.716111768 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.714373884 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.723667877 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.712190516 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.715579 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.71571329 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.721372494 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.712914867 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.717441344 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.718711249 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.717594283 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.718174066 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.716429423 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.716847656 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.719541596 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.716603897 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.715543902 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.715764648 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.720163852 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.726439449 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.723200748 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.719224628 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.720700895 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.718325174 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.720181819 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.718335733 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.719263722 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.717206984 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.733109141 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.726101641 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.726856449 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.723952325 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.717271759 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.725036234 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.718832204 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.722182137 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.717456442 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.719623469 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.718517725 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.716584091 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.71552417 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.719988668 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.717378064 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.720340443 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.718116702 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.721375584 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.718165928 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.71817517 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.718315506 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.719129448 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.717587945 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.717846486 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.717415302 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.725214459 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.719446015 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.719468822 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.719075882 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.72693745 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.719188478 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.721632056 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.719312538 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.719855765 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.719406586 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.720049336 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.719033987 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.721923027 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.727503565 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.722156625 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.729368477 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.719663138 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.729685834 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.719988993 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.722376892 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.727197186 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.715887385 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.718732095 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.722038675 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.719607758 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.72743807 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.718638633 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.719852327 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.723801377 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.720812423 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.719450228 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.719799117 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.721080208 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.718805048 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.72035419 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.730374736 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.721253434 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.724366112 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.723138383 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.716925301 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.720231586 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.720111804 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.720244688 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.727187871 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.721223605 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.72280644 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.720409687 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.720389019 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.720424094 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.721670517 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.72093533 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.717595607 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.719824419 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.729315607 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.721448864 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.72495962 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.720941766 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.731790457 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.72275809 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.729985225 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.722396889 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.723040377 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.722153255 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.720382981 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.725151284 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.722369319 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.723682329 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.721486353 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.722735024 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.72491473 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.721125477 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.725939794 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.722702785 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.723179208 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.722842562 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.731048332 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.7451149 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.72286793 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.725132967 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.720129243 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.722683271 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.727355144 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.722469206 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.72106374 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.725468229 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.73275449 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.729918109 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.722996413 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.721578122 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.724401546 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.722938835 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.722588156 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.72252115 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.723488584 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.722770682 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.726053073 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.725052178 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.729993566 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.721935456 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.724722936 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.727107559 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.724182836 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.73432641 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.723048291 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.725465929 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.723231936 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.722306662 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.726247133 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.724662177 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.724099298 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.726133043 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.722985834 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.725631799 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.731482384 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.731318314 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.726199322 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.72363537 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.724239398 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.725453837 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.726209389 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.724311382 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.724141911 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.724464556 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.727059026 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.723395029 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.727096355 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.722600027 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.72332534 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.725874259 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.723724146 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.727874867 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.731311829 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.72504419 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.722393948 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.723972153 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.724594617 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.725182267 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.726222844 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.737004568 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.727374192 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.736468679 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.735132563 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.729239013 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.72557407 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.728637861 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.734726512 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.725981103 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.728826096 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.727193753 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.728815096 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.726647376 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.730201828 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.726370415 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.734950261 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.727270618 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.726990266 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.73498069 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.727636553 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.725602193 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.728050553 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.730488632 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.726607556 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.724312515 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.726459984 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.725845885 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.734422777 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.729415127 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.727430507 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.729085691 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.726128197 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.729083438 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.731603846 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.726986128 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.728587983 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.724577784 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.727627008 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.727554654 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.726507542 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.723564809 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.726679126 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.72788863 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.731353591 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.73498831 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.724087292 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.731083368 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.729059482 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.730063524 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.728249091 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.726990953 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.723370142 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.723928681 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.728523906 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.728432571 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.729199498 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.730233112 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.728152878 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.730095374 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.729211969 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.728256799 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.730192866 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.738050617 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.735997333 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.725194526 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.729104118 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.729769851 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.732730556 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.728760595 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.729128476 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.730561053 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.732351121 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.729236571 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.728751285 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.728504867 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.732119167 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.746651219 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.729373019 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.730505513 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.730962213 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.73553087 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.72891156 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.726308154 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.729331569 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.733103389 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.731719842 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.737072039 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.729778644 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.73599556 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.730309131 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.730636916 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.734056822 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.73281179 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.73935093 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.732883385 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.729708248 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.73016166 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.734799212 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.747649925 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.730429087 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.739751503 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.761381135 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.731951778 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.732469278 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.730944426 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.730357568 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.731123678 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.734243966 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.731486682 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.730947201 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.729668494 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.730634823 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.732219362 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.738063121 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.732962633 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.73083741 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.72959004 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.733053098 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.734375203 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.727944176 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.732327065 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.730305064 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.731620759 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.73282354 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.73311584 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.733795278 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.746930064 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.744171375 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.733051254 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.73277066 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.728748507 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.737327251 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.73601097 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.742960271 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.739604231 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.732461227 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.732351943 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.734770397 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.731984739 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.729379718 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.733688226 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.733453447 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.732633359 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.729444913 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.747727329 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.740628859 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.739821916 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.73383251 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.73369068 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.731857823 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.735299488 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.733551917 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.73373058 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.736601359 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.733811306 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.736482975 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.732970904 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.732728641 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.735547965 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.741078112 seconds)
  done (took 1027.099433043 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.730228347 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.730867061 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.730907955 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.729855154 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.731626847 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.730948058 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.730834011 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.730057023 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.732750821 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.730807285 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.73159831 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.731110738 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.730979919 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.732166705 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.731176124 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.731496802 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.731311667 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.73068698 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.73111464 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.732690109 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.731189379 seconds)
  done (took 38.020677198 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.734459661 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.731161295 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.73187963 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.734880814 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.731650226 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.734189263 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.731630244 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.733884425 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.733905634 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.730664381 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.733914343 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.73501484 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.732466282 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.732435827 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.73273815 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.735634517 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.73569836 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.732267895 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.733957665 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.732139419 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.735880462 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.731988654 seconds)
  done (took 39.799480073 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.736018612 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.735276051 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.735210136 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.732447031 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.735726451 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.733109833 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.735575034 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.735709608 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.735748347 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.738114765 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.734873819 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.737536581 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.743341433 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.741232863 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.739109762 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.735595953 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.88048025 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.737069194 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.737434963 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.736474993 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.733857115 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.742788766 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.732895908 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.734357741 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.736942756 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.736518217 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.7363881 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.736505673 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.736455567 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.737981531 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.740539063 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.736596374 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.737357844 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.739437602 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.73822711 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.739098004 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.74216731 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.739457775 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.735074759 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.737993476 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.747305454 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.757528743 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.73916566 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.746725902 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.738416646 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.738298953 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.74186473 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.746400723 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.734982935 seconds)
  done (took 86.986715975 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.737335658 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.737536822 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.735177576 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.737598073 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.738222036 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.737456066 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.73803497 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.737782248 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.735700787 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.734712035 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.737519303 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.737290872 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.73528824 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.738017551 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.738919812 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.736228464 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.735950701 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.73564557 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.73729852 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.735799727 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.735775677 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.738712465 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.738740902 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.737201909 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.737964655 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.735878808 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.736486319 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.738898224 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.735761354 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.735904328 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.739956209 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.73866847 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.740565337 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.737348106 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.738063308 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.739902883 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.739809215 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.737167154 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.741038413 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.738076103 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.738740396 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.739940929 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.740750389 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.741121708 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.738352424 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.738205216 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.737643222 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.737950576 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.737407801 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.740742336 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.739982396 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.737867364 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.741839519 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.73818454 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.739836395 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.739598924 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.737597118 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.738089468 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.740037298 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.736850194 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.738436159 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.7406096 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.738016415 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.741238323 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.741085775 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.738458975 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.739043909 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.742679138 seconds)
  done (took 119.872694402 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.741828365 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.742241787 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.741681585 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.742576775 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.742154345 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.741823117 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.742535151 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.741250561 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.742803279 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.740812071 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.74284874 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.7411849 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.742382427 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.742747463 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.743177816 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.742752533 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.742512386 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.743535144 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.742480281 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.743576453 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.743210408 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.743005559 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.74239937 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.743802352 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.743042677 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.742231789 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.743041667 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.74230032 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.744200928 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.742575729 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.743777784 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.743264343 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.743264393 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.742979882 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.744744111 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.745313472 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.743921647 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.743218223 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.743518911 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.743904569 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.744807513 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.744136909 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.743224528 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.745398428 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.743917556 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.746123162 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.744647287 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.745016206 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.744383443 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.745138682 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.742978505 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.7438919 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.744412487 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.743683504 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.744707069 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.744451694 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.74417979 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.745228998 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.74450037 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.744658894 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.745233975 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.744645839 seconds)
  done (took 109.769470329 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.744236519 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.743878843 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.74175642 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.741288234 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.744806243 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.741728968 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.744481639 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.744845675 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.744492989 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.744286297 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.743884722 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.742125533 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.743687441 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.745990335 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.742366993 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74301631 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.742275464 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.743338531 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.745071164 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.742187086 seconds)
  done (took 36.547658265 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.742546938 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.746861208 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.742247087 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.744584216 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.746401466 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.743159078 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.745169322 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.745905919 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.744013099 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.746429813 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.747655127 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.746087075 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.743977867 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.743627162 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.744591008 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.744267751 seconds)
  done (took 29.595406633 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.745465787 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.746216187 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.746772144 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.747196036 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.744313014 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.742897236 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.746665085 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.743775778 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.745001948 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.74718677 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.746305177 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.74698216 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.746673932 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.747974162 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.743617798 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.746982499 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.744440328 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.744157331 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.746482951 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.748340195 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.744312627 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.744050556 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.747593396 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.746485741 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.744720415 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.745218659 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.745331031 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.745055599 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.745200994 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.747304464 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.746732944 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.746626867 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.745926616 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.744757577 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.748303327 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.746445289 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.747752778 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.749672271 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.748658886 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.748742958 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.747846686 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.745871029 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.74889471 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.748616527 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.745641526 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.749027236 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.746456253 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.746095125 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.745548324 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.748484063 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.750623457 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.748858406 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.747926364 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.748145533 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.74995847 seconds)
  done (took 97.744867502 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.748848641 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.748050776 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.746196005 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.747677828 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.748463454 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.746168965 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.749169806 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.747531188 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.747313787 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.75086278 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.747447655 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.748596456 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.748500508 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.749476307 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.748263736 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.750301574 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.748652017 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.747449999 seconds)
  done (took 33.149317343 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.748160924 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.748632423 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.750819398 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.748672882 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.747790775 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.751266987 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.747791343 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.750326623 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750957691 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.747722506 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.747664309 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.750496814 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750412264 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.750509235 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.750611954 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.74746889 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.751084128 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.750730388 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.749052868 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.748620149 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.752478633 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.750621936 seconds)
  done (took 40.17506178 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.751503872 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.75130071 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.769517515 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.796833558 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.785517565 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.751800686 seconds)
  done (took 12.28943202 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.750010704 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.756432061 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.751375753 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.756154667 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.755787529 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.751905572 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751115486 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75231474 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.755644368 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751187452 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753449532 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.754331946 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.755809481 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751896641 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.754452154 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.754423298 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.751442125 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.75289774 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.753880375 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.754817223 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752910285 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.756717764 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753491062 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753687124 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.754610465 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.752889266 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.756780538 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.752265168 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.753812413 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.757872419 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.754371241 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.753954915 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.755713051 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.754725725 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.758429955 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.756046774 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.753933188 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.758243098 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.756866915 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753315935 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.755984398 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.756592347 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.756813919 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.752960135 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.755878374 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.753192893 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.755248967 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.752618764 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.754351638 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.756064975 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.755388457 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.751779924 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.755513899 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.754095381 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.756000148 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.756705649 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753810073 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75320073 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.759646854 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.754399017 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.752298946 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.75566529 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.753250316 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.752981269 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757697066 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.754224726 seconds)
  done (took 117.482048756 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.753145135 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.753604227 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.758208115 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.755012318 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.753537332 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.753557363 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.751799473 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.754148417 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.754690026 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753403478 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75692237 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.753442641 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.753015781 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.75350229 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753127378 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.753075476 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.753643593 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.752200655 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.753098508 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.756886186 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.754184081 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753716083 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.753631794 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.754998762 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.755551923 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.757809304 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.754062092 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.753398091 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.754233093 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.753657092 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.754647551 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.755990741 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.754217993 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.754895822 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.75433715 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.754941229 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.754637089 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.754756758 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.755375098 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7573842 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.754502018 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.758003304 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.755261606 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.754740208 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.754975709 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.754612492 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.755131819 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.756370068 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.757326343 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.75581556 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.756373777 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.756938602 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.757344788 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.755737339 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756194104 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.757993682 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.756128815 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.756450647 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756441146 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.762040779 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.757017796 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.756096711 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.758610274 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.756210608 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.757036515 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.757093328 seconds)
  done (took 117.536569982 seconds)
done (took 2393.450717411 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.789986098 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.771182919 seconds)
  done (took 15.252444051 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.932904107 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.884573043 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.769397883 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.780440281 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.765804365 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.766429755 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.786471259 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.766705822 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.769344964 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.770257072 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.769278719 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.95613533 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.777341115 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.76749657 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.77045183 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.863804672 seconds)
  done (took 50.764404762 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.774788426 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.774426549 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.786504934 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.774060378 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.773587631 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.794521336 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.807067644 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.778022794 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.835446263 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.796897907 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.898069486 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.784238634 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.77281337 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.833604895 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.785473978 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.783215649 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.87044572 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.846691281 seconds)
  done (took 34.173369833 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.852469805 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.771582489 seconds)
  done (took 10.333343103 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.780361504 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.765032604 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.783905127 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.78671287 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.767874231 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.770058574 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.795136704 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.786107882 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.799359569 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.81778142 seconds)
  done (took 69.556973547 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.778164403 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.773450111 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.773532171 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.77235164 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.765464562 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.7665317 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.772346207 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.77137294 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.464254705 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.80543386 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.775821279 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.780172488 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.772579423 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.775392807 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.771359146 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.795651308 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.887937484 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.770685987 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.769595286 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.778295455 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.772360073 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.834795929 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.785874851 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.774274768 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.803639946 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.462113022 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.779523469 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.780984267 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.884261509 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.770534883 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.774615318 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.774161298 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.776497459 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.164961405 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.108881003 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.773555015 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.778885105 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.782088187 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.770229611 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.908527601 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.774503683 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.780694547 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.768360386 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.089685034 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.859345384 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.817903498 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.146176979 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.774427102 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.778276527 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.804977844 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.778408266 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.77482784 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.787607037 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.292079883 seconds)
  done (took 127.515728008 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.82682354 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.25790384 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.924976681 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.771684917 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.062538456 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.00550896 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.767548795 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.820486409 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.815869529 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.022292571 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.997918409 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.889765563 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.767348474 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.772967894 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.766113952 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.765400786 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.922551105 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.841411093 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.772466829 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.772333349 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.806981972 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.039992928 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.896215349 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.924894591 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.794690093 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.997320257 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.899427519 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.888104891 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.770725829 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.76751704 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.84185829 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.768228974 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.769278216 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.76874964 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.938181796 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.877403164 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.872334006 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.772711202 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.794165989 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.765854603 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.795802655 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.993538105 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.879662729 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.909531075 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.020658298 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.000350348 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.770512945 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.770513185 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.777200519 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.963740578 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.988214492 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.031167671 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.900786822 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.772385528 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.027979223 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.771310351 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.784636879 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.02350618 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.004318089 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.884994011 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.7914254 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.774731608 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.769616037 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.091077613 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.775614452 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.879493918 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.875288441 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.772067888 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.882101903 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.887648982 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.004651519 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.016008789 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.802472888 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.776815164 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.848750918 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.058834913 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.844152012 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.027187029 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.801028192 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.769117509 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.867657328 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.779480734 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.982963429 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.095239449 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.039700076 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.816763746 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.777604358 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.772950156 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.022807909 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.025405472 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.024279644 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.0237671 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.943984818 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.811392616 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.774600045 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.773556582 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.775241672 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.90700609 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.777113683 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.133753622 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.020708605 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.55239682 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.802512021 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.093485351 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.917965015 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.778231693 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.775388651 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.774262901 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.979561217 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.8182544 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.777223073 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.778972537 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.022779132 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.641655514 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.908784786 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.502159342 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.844348312 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.775487382 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.042992918 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.776811701 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.023262463 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.789425281 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.085121771 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.192628507 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.819444966 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.972795377 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.026482219 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.778639189 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.071521174 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.091461441 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.898379506 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.027116255 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.526584211 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.779107434 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.069501751 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.785042029 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.81176238 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.945317552 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.779315348 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.932820561 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.779882427 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.045334812 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.79945728 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.949143882 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.805297806 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.053458641 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.818903502 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.830258484 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.801523293 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.905555832 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.779594571 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.848863226 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.959014033 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.165973179 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.77790842 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.325661508 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.777712909 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.924717868 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.07833349 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.799961704 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.850816856 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.776586263 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.77993796 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.872485985 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.803679852 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.389032217 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.781242913 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.002089247 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.737192548 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.232690104 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.777789909 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.089299852 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.988173502 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.780934132 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.779337107 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.581841491 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.776876956 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.845756195 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.936714745 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.649607624 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.784405139 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.000095503 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.779791146 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.912980565 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.785047077 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.77382068 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.128703934 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.8122473 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.776335382 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.818256188 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.777545528 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.779961763 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.007468276 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.805716959 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.50412585 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.914920308 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.030607985 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.088020825 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.048343045 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.825833184 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.780630742 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.040812175 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.827570909 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.849837005 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.777952001 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.804800403 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.028247158 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.779183532 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.049568531 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.068417103 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.827761708 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.830792162 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.778412403 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.130753874 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.778111909 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.921640214 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.877202257 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.780321906 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.785087825 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.895488382 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.912990417 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.975216872 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.781628903 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.810383934 seconds)
  done (took 933.957888375 seconds)
done (took 1243.241896473 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.781433956 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.777516675 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.765343198 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.778054113 seconds)
  done (took 28.818670869 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.78498406 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.784750377 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.78560898 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.782974743 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.785395912 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.783940947 seconds)
  done (took 12.421646665 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.812924621 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.775508511 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.777639836 seconds)
  done (took 21.080722177 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.853158218 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.195211042 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.885110939 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.231781148 seconds)
  done (took 9.879316178 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.787824841 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.785132093 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.784984234 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.785649006 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.785927059 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.788150217 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.786175709 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.786734872 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.787489264 seconds)
  done (took 17.793065155 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.946057086 seconds)
done (took 95.651984753 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.791324893 seconds)
    (2/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.855696025 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.80169462 seconds)
    (4/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.0583665 seconds)
    (5/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.121103712 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.920950616 seconds)
    (7/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.978511142 seconds)
    (8/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.193228495 seconds)
    (9/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.242927642 seconds)
    (10/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.195321091 seconds)
    (11/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.168405075 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.778078529 seconds)
    (13/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.786038013 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.127844808 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.778727585 seconds)
    (16/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.915106777 seconds)
    (17/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.782980615 seconds)
    (18/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.852687049 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.763083555 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.810969032 seconds)
    (21/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.804507618 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.778782375 seconds)
    (23/309) benchmarking ("sort", BigInt, false)...
    done (took 6.779138315 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.793672336 seconds)
    (25/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.781668899 seconds)
    (26/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.245619546 seconds)
    (27/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.144652784 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.077282094 seconds)
    (29/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.16048562 seconds)
    (30/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.779441514 seconds)
    (31/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.383260364 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.998373253 seconds)
    (33/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.886229534 seconds)
    (34/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.971479743 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.835450643 seconds)
    (36/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.780892688 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.45689801 seconds)
    (38/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.642373607 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.887710391 seconds)
    (40/309) benchmarking ("sort", Int8, false)...
    done (took 4.744123528 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.434220079 seconds)
    (42/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.862407039 seconds)
    (43/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.845515486 seconds)
    (44/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.78141562 seconds)
    (45/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.764496268 seconds)
    (46/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.799669423 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.371770792 seconds)
    (48/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.909192005 seconds)
    (49/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.878027207 seconds)
    (50/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.812973215 seconds)
    (51/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.914832892 seconds)
    (52/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.031101763 seconds)
    (53/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.914706518 seconds)
    (54/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.866068268 seconds)
    (55/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.006130785 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.896041174 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.686835252 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.047357206 seconds)
    (59/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.782473531 seconds)
    (60/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 3.451028 seconds)
    (61/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.180191983 seconds)
    (62/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.292040902 seconds)
    (63/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.763979528 seconds)
    (64/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 3.510252078 seconds)
    (65/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.838979348 seconds)
    (66/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.362223567 seconds)
    (67/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.837076448 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.889503668 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.159875465 seconds)
    (70/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.112498727 seconds)
    (71/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.995844609 seconds)
    (72/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.856341634 seconds)
    (73/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.161652265 seconds)
    (74/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.291282568 seconds)
    (75/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.81001292 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.827440352 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.021913489 seconds)
    (78/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.766716049 seconds)
    (79/309) benchmarking ("perf_sum", Float64, true)...
    done (took 3.133789358 seconds)
    (80/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.948916524 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.494912814 seconds)
    (82/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.30187649 seconds)
    (83/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.921419206 seconds)
    (84/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.068066958 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.692134881 seconds)
    (86/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.787155324 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.851510354 seconds)
    (88/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.774510907 seconds)
    (89/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.827138421 seconds)
    (90/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.774752413 seconds)
    (91/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.790032343 seconds)
    (92/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.808557783 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.88454115 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.784590998 seconds)
    (95/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.990131599 seconds)
    (96/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.847445887 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.857012521 seconds)
    (98/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.082155276 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.922295147 seconds)
    (100/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.786327446 seconds)
    (101/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 3.262471124 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.087761554 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.447177873 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.079119942 seconds)
    (105/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.872679379 seconds)
    (106/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.848195198 seconds)
    (107/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.865342323 seconds)
    (108/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.826306145 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.021887439 seconds)
    (110/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.288237631 seconds)
    (111/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.815432377 seconds)
    (112/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.103810024 seconds)
    (113/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.406648906 seconds)
    (114/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.14306916 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.170503694 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.784609135 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.084004572 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.854387307 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.951039569 seconds)
    (120/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.268447762 seconds)
    (121/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.863569711 seconds)
    (122/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.118302708 seconds)
    (123/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.865203201 seconds)
    (124/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.091070094 seconds)
    (125/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.809327947 seconds)
    (126/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.77150606 seconds)
    (127/309) benchmarking ("sort", Float64, false)...
    done (took 5.623250042 seconds)
    (128/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.803938137 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 2.238180358 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.812486157 seconds)
    (131/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.785413632 seconds)
    (132/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.143238993 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.770830602 seconds)
    (134/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.728566779 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.045085651 seconds)
    (136/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.065673249 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.715839393 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.011161516 seconds)
    (139/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.949555466 seconds)
    (140/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.874260873 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.0484661 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.894712573 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.79609497 seconds)
    (144/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.206058687 seconds)
    (145/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.169908798 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.036037351 seconds)
    (147/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.876746025 seconds)
    (148/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.777807546 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 3.464384626 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.818668006 seconds)
    (151/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.858622402 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.717067453 seconds)
    (153/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.05137687 seconds)
    (154/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.777331119 seconds)
    (155/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.034812189 seconds)
    (156/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.988050915 seconds)
    (157/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.784890883 seconds)
    (158/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.829239014 seconds)
    (159/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.862532754 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.816989936 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.595673001 seconds)
    (162/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.924859468 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.891142722 seconds)
    (164/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.890046408 seconds)
    (165/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.879095784 seconds)
    (166/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.960531313 seconds)
    (167/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.910394393 seconds)
    (168/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.741919799 seconds)
    (169/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.927728339 seconds)
    (170/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.123688917 seconds)
    (171/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.961815033 seconds)
    (172/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.937457579 seconds)
    (173/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.904703405 seconds)
    (174/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.085698822 seconds)
    (175/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.98440989 seconds)
    (176/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.797693934 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.844630488 seconds)
    (178/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.8882009 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.892120032 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.916293495 seconds)
    (181/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.924997306 seconds)
    (182/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.881896448 seconds)
    (183/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.795687566 seconds)
    (184/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.866242576 seconds)
    (185/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.88061941 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.593545769 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.04290504 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.177978276 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.820994082 seconds)
    (190/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.854460471 seconds)
    (191/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.879024466 seconds)
    (192/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.825889149 seconds)
    (193/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.726278723 seconds)
    (194/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.302796675 seconds)
    (195/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.896932958 seconds)
    (196/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.802111135 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.836419964 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.78343715 seconds)
    (199/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.486334418 seconds)
    (200/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.163946115 seconds)
    (201/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.919164103 seconds)
    (202/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.79688708 seconds)
    (203/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.95290233 seconds)
    (204/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.873476419 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.17678308 seconds)
    (206/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.065163618 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.8552468 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.485025362 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.195035265 seconds)
    (210/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.77925929 seconds)
    (211/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 7.210588896 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.128974325 seconds)
    (213/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.224636278 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.022304855 seconds)
    (215/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.37411197 seconds)
    (216/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.780327767 seconds)
    (217/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.871672287 seconds)
    (218/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.39096382 seconds)
    (219/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.963963382 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.933046809 seconds)
    (221/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.485498508 seconds)
    (222/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.948537321 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.517511082 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.001964813 seconds)
    (225/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.155322817 seconds)
    (226/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.927546881 seconds)
    (227/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.680483998 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.043180496 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.069137625 seconds)
    (230/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.88383412 seconds)
    (231/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.822963055 seconds)
    (232/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.155224417 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.08384266 seconds)
    (234/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.783040436 seconds)
    (235/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.254944061 seconds)
    (236/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.825150517 seconds)
    (237/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.177316853 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.835495746 seconds)
    (239/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.893448941 seconds)
    (240/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.968117824 seconds)
    (241/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.865799485 seconds)
    (242/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.103829986 seconds)
    (243/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.106434408 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.142131367 seconds)
    (245/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.012814538 seconds)
    (246/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.782433197 seconds)
    (247/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.795860904 seconds)
    (248/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.203554201 seconds)
    (249/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.934625941 seconds)
    (250/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.810764311 seconds)
    (251/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.927032039 seconds)
    (252/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.937875802 seconds)
    (253/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.819294571 seconds)
    (254/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.924615941 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.901479337 seconds)
    (256/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.795581519 seconds)
    (257/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.134491269 seconds)
    (258/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.298114653 seconds)
    (259/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.816150895 seconds)
    (260/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.927437662 seconds)
    (261/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.104598878 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.77974452 seconds)
    (263/309) benchmarking ("sort", Float32, false)...
    done (took 5.576481906 seconds)
    (264/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.861741631 seconds)
    (265/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.992537421 seconds)
    (266/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.892632888 seconds)
    (267/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.482786098 seconds)
    (268/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.974764908 seconds)
    (269/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.40419453 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.093522085 seconds)
    (271/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.37007734 seconds)
    (272/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.836175685 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.117158877 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.779673802 seconds)
    (275/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 4.335600736 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.808069166 seconds)
    (277/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.390334577 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.331808433 seconds)
    (279/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.090336496 seconds)
    (280/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.81079554 seconds)
    (281/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.822122171 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.799438309 seconds)
    (283/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.182633053 seconds)
    (284/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.967272241 seconds)
    (285/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.690004884 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.093982023 seconds)
    (287/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.701478386 seconds)
    (288/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.774400586 seconds)
    (289/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.445651754 seconds)
    (290/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.804128545 seconds)
    (291/309) benchmarking ("map", identity, Bool, false)...
    done (took 4.531445875 seconds)
    (292/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.805579941 seconds)
    (293/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.798524656 seconds)
    (294/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.017921914 seconds)
    (295/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.804459832 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.89341679 seconds)
    (297/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.881211641 seconds)
    (298/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.915864785 seconds)
    (299/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.892629552 seconds)
    (300/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.987734263 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.837001485 seconds)
    (302/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.098738123 seconds)
    (303/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.903425334 seconds)
    (304/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.42171724 seconds)
    (305/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.666012916 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.819187656 seconds)
    (307/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.884520267 seconds)
    (308/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.809237761 seconds)
    (309/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.315495394 seconds)
  done (took 999.691359186 seconds)
done (took 1001.418887157 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.833574702 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.824581736 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.80906567 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.829658365 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.920677603 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.836497872 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.819660437 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.810857176 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.856878584 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.858441177 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.808845895 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.836734577 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.810820948 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.808786793 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.809477014 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.82611009 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.120428321 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.837408619 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.827173297 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.819201284 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.827115124 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.809371271 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.85812143 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.836338952 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.813454808 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.813602193 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.814817159 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.830971885 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.923068295 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.815044859 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.814434211 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.822753518 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.120630894 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.834084777 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.804880271 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.830893629 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.822849455 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.820037409 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.814273704 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.844977929 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.263301235 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.814992246 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.812949356 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.811592767 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.810992672 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.815830023 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.81331693 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.818604722 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.82535153 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.826477437 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.266389714 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.831043048 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.815539977 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.812771006 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.821635273 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.812117958 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.815053169 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.828452323 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.832131557 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.828226428 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.115242914 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.839527996 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.813668736 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.830108049 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.820822682 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.297095876 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.811832883 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.816294579 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.265132748 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.821322662 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.298694675 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.827229979 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.814399718 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.82934188 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.846081081 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.122485037 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.832976694 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.811265182 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.821942309 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.813116542 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.822960941 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.82790217 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.81756013 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.813200207 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.827342859 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.843729868 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.824789473 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.817162365 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.823392855 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.833825202 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.821710916 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.824370381 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.817015386 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.808770423 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.823294213 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.81694892 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.818007911 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.818356724 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.819426179 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.824502177 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.262219103 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.835418215 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.810498004 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.810860822 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.813610002 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.829387143 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.261813748 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.819420007 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.835479623 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.861639496 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.816494655 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.115459917 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.844319049 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.831244023 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.823885322 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.818821502 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.809877025 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.115749323 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.286561627 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.834162477 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.816116521 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.815319711 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.832936329 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.817938316 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.811701039 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.1263051 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.841172717 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.830377783 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.938282725 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.826998503 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.848096316 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.816641525 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.81961712 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.844382089 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.832410977 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.84914166 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.819342487 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.833250662 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.832691356 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.813478528 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.828570218 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.827645651 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.817848625 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.823423612 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.809885394 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.84975868 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.829445342 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.829494361 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.837590837 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.937544785 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.813551668 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.114787217 seconds)
done (took 285.415443571 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.885395536 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.812694518 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.911566333 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.812208992 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.899887456 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.900824705 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.810267283 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.810030689 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.809667999 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.19489346 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.809600062 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.810840985 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.812796771 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.810238596 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.897405762 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.813101115 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.810730012 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.156149902 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.813396472 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.884479931 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.808970668 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.811081665 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.81489063 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.198980711 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.814126919 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.810388392 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.884550164 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.81383499 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.163305167 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.812989493 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.809884575 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.202144418 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.905333859 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.832612919 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.823972388 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.822918962 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.901348553 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.819391464 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.897073834 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.896857535 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.913215981 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.853915367 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.809618893 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.808927667 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.81776396 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.816078021 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.81086303 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.8420481 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.815993976 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.810796261 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.157561895 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.82377735 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.821758357 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.811096984 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.810787272 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.835639577 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.809670556 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.814988662 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.903575286 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.812557873 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.877294352 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.197315849 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.191751637 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.813405587 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.80530266 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.807969306 seconds)
  done (took 180.646335384 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.875105246 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.88485407 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.876209391 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.808947292 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.859411428 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.881216105 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.808508012 seconds)
  done (took 14.735894173 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.813513269 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.806871807 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.858234058 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.855470793 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.805068201 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.957349814 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.806057633 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.820863715 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.801899166 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.857859306 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.804373409 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.803631842 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.811045142 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.798477782 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.850534182 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.813175827 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.919789871 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.801149738 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.801062983 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.960636134 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.797612289 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.81127436 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.858428963 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.814063258 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.804063893 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.808783822 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.385343695 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.797678661 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.795759469 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.798015952 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.793514853 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.839276517 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.799059058 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.797942497 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.7941576 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.913471005 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.796609034 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.794661009 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.795987756 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.795767129 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.797670351 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.795128507 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.795484863 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.796009648 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.797323067 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.820461723 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.796454631 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.796471149 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.797584214 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.796518639 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.847795724 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.797125705 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.793096655 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.79415659 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.852829385 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.803463527 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.797078576 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.79262102 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.796458991 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.793843832 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.954721635 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.844169506 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.79536024 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.846089847 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.796755079 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.797471555 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.796486022 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.797067381 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.851347778 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.796564301 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.846114745 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.794482725 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.952864307 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.82135599 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.79806663 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.799820079 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.800709877 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.798395841 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.798803641 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.802901688 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.794650005 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.797559142 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.802505461 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.794673692 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.794370273 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.903953457 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.906192239 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.793675911 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.809528986 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.803123532 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.795120862 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.851033202 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.79632562 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.794771898 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.850101529 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.914846633 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.854506438 seconds)
  done (took 198.881644561 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.802280694 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.804491158 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.799262251 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.816254777 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.798907505 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.797947946 seconds)
  done (took 12.545522285 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.802539908 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.800192889 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.793757618 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.794703325 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.794824778 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.795247354 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.797429147 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.800161248 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.797786781 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.792028937 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.792265886 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.794357946 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.796230672 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.793270402 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.792659914 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.791884054 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.79290658 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.789764168 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.792602118 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.79171161 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.385304788 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.793424184 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.793103744 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.795323682 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.797948446 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.794574539 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.800291318 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.792348571 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.793140963 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.802128409 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.797979498 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.795954915 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.795383031 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.799261244 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.797721664 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.795292916 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.796837777 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.7945372 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.790623808 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.794414426 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.795528225 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.793865557 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.792561506 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.794824565 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.795853933 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.800167093 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.798491965 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.801140411 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.792724458 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.794313615 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.794018764 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.791076118 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.790709076 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.79299333 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.795023659 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.795151211 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.802211558 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.788586818 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.787440322 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.788950217 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.788671429 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.788202737 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.794595517 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.793643595 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.795410687 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.788092039 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.788603151 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.794126855 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.787658145 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.785059543 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.788356316 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.783921403 seconds)
  done (took 132.494201362 seconds)
done (took 541.059648696 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.967012054 seconds)
  done (took 8.684799575 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.928222724 seconds)
  done (took 8.7579793 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.503786631 seconds)
  done (took 10.245151749 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.819050227 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.828398073 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.809128696 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.798711608 seconds)
  done (took 29.008946072 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.107828973 seconds)
  done (took 8.840889703 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.810137538 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.786699948 seconds)
  done (took 15.396008058 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.93200033 seconds)
  done (took 8.658934562 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.185259359 seconds)
  done (took 8.924701977 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.791721444 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.795606351 seconds)
  done (took 15.329642967 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.773257358 seconds)
  done (took 8.496263021 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.374039702 seconds)
  done (took 11.11058676 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.801568879 seconds)
  done (took 8.542463211 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.853296814 seconds)
  done (took 8.578556499 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.028805517 seconds)
  done (took 9.754500727 seconds)
done (took 162.04183707 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.791722015 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.784166501 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.785271843 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.783819467 seconds)
  done (took 28.866873511 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.828795729 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.828849743 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.828756729 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.838871541 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.830676275 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.827813527 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.819055219 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.81899387 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.839279681 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.83004599 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.830315081 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.830846275 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.828257364 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.819207149 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.830413512 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.829635363 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.840837212 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.831064741 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.820983991 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.833135524 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.796125056 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.839905738 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.831840065 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.796458837 seconds)
  done (took 45.575887642 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.994406977 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.867408514 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.950193594 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.847126918 seconds)
  done (took 9.384228466 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.848248346 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.848268552 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.860355134 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.899875731 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.927883366 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.857882688 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.821853218 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.816435457 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.802666004 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.848019669 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.922951271 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.863733691 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.951706871 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.795106135 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.976572167 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.795426637 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.794874475 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.847861926 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.899838509 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.91778393 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.79697545 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.847627623 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.851630101 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.864586706 seconds)
  done (took 46.384664284 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.795056281 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.802463541 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.801369429 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.795740768 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.796974207 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.796665692 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.80326722 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.797668138 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.817199886 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.798517526 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.794952002 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.796479699 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.796236897 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.797821364 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.796446675 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.808563057 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.810604037 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.796693734 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.799087102 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.802772596 seconds)
  done (took 37.731656609 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.792556763 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.644298032 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.143087743 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.046299783 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.790695043 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.7920947 seconds)
  done (took 30.937098587 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.812450168 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.86183612 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.803062441 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.854247601 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.937532093 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.805803692 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.797469635 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.867194903 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.908317267 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.869771308 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.816102195 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.824911604 seconds)
  done (took 23.887869374 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.794337797 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.792251636 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.79263983 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.808961556 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.810952 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.804746745 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.806106437 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.792657822 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.810596613 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.816432025 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.804951577 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.812996976 seconds)
  done (took 43.381061453 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883363654 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.839834081 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.801390086 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.477751071 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.173090749 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.001931098 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.445599914 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.123343175 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.796399467 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.067086971 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.754161083 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907466377 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.059184249 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.348127283 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.839188942 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.256450565 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.100687719 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013977523 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829128508 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.465890484 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873679536 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.046719868 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.548766526 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.866388393 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.021142103 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.942663871 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.099836971 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.809215182 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942587272 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847354809 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820221206 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.811971969 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.08524983 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186374025 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913144514 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820717209 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.431649572 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.521615046 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.804511292 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.56941652 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.506970675 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.93310927 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823141819 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.810760922 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.746232615 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.013989041 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194697134 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.814451619 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.521971788 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.812836631 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.823377767 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9074851 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.816889461 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.627040096 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.758690198 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.811653326 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.809807581 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.820255926 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.386360384 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.912840375 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.052345724 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.794165954 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.909300485 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.55141335 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.195341668 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.960340969 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.816176688 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.817551279 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750820675 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.540468479 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870165317 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.143997078 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.832341715 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358175488 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106825735 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.845328753 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.757394804 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086723701 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.39272765 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.793871226 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042267829 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.816276167 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.750311857 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.761336356 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.748496658 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077686928 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852121434 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.56016162 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856475627 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.143873896 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.82283675 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832793504 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840156772 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.040928336 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.698888437 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.815236986 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.569258205 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.958417983 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83457446 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.14758914 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.747552522 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.817572127 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072964707 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.027047835 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.936123242 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.308552182 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973207992 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.42830832 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.874063223 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.020835965 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.86971275 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.082194735 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.874605666 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.908899404 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871289013 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.817744243 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124070064 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.45575488 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.95962795 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.830024628 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.943772675 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.128924364 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.844378193 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898882667 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.826132 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.817622928 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.583037076 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.369595399 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.818615646 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.819728903 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.950659594 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.872915959 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.820184926 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766277831 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.443399162 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.808223985 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.830911619 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.043156683 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.435706313 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.138825148 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.755097626 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.148439185 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.908699437 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.039282962 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.460888266 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.889855586 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.080353391 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.951538898 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.990812882 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874680352 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838168355 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919645126 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840709614 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.019751021 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.118074356 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.825634513 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.8223936 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.59911884 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.854727016 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82333686 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.826018703 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.575477829 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090430615 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.8433354 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.824848941 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.712156501 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.834948794 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885621796 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.82727855 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.832145018 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.367052797 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.530483309 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.826745522 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.412040705 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043499123 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.833774606 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.500015273 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939154747 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.906933996 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.088796177 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.88132868 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.757153406 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.534490263 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.516269701 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.823835061 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.758485557 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.822534187 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833088909 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.833471676 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.021250682 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.092483973 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864616786 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.494174222 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.86692179 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.834867768 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.830371515 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.826243408 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.33765611 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.927217992 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.069032919 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.880692798 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970443264 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.839470982 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.760413328 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.830751714 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.830171626 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.826968345 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.827006598 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861710543 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.499546745 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207724008 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085915214 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.439391003 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.838871112 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.532976652 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.884969005 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.825324913 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.603771161 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.053194951 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.874569023 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85600187 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.845430309 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.591690371 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.543384752 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.40182354 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135474564 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138953119 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.262049459 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.098248295 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.869600646 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.174141253 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.76729708 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.399187314 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.896976187 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.176514173 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779453537 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919066133 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.474124734 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176006538 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848018523 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065002441 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.214911937 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.674584641 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.858857504 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.047334417 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871416767 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.041558268 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.804399229 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.1209947 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980696256 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.501491888 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039491483 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168440857 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.610671903 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.851150924 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.835288767 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.50071448 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919545736 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.549166397 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.009400632 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.062335324 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.720652821 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31041152 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.840003294 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.06355778 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185073791 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.052791227 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.965144993 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.771379179 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.848538164 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.84765248 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.839552757 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.836066206 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.701971481 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.092610233 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848121259 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772482615 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.993796047 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130255036 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.752496672 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.843190773 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839800455 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132367358 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.426868001 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010684299 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.990694956 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.365845495 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846002748 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.773207029 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772091274 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.53256764 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.845378695 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.816431353 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041441475 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.946309157 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.756643811 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.971034187 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.926067111 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.097312536 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.852705036 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.106096622 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.11406219 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.538690171 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861859578 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.941431497 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.474574939 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.945766907 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.840900774 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.074926743 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.593559677 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.064681075 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.855851335 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.791725022 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.83761148 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.052652668 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.841255926 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.68594411 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070143385 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.561521731 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.850764973 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13722753 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913242889 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.72036854 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.883286016 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.931466067 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851882064 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92021587 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851199927 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.852338868 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.851141598 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886264166 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.724043272 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.962523073 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.854726057 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934851822 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.938963614 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.364230261 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.845071067 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.11060971 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.188964539 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.160135258 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90008734 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.841434036 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84184132 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.777111201 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987456965 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.07325677 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117386399 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.972284013 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.956871831 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866830191 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.477592673 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.09801643 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09146724 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117543739 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.740508006 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.408227087 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.891457235 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.843977397 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.856020004 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.055955816 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056247959 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152928116 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.150403705 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.969248164 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.212346403 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.119022596 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.848021115 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.846728719 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.436939669 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.870537883 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.513617601 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.885821356 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.731790311 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.119792281 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.855861186 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224800094 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.864911868 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.004152668 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.619189142 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.521231313 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.135297173 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.828396259 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.905073635 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.116876198 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.222287229 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157600358 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911342721 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.855940581 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.956453204 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993251158 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.755038122 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.845829789 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.845977716 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.895291087 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.554896602 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.856588113 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122397644 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154401847 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.84077262 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.761442697 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867155797 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.854646164 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.066406698 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100474073 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098350176 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850489206 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.849085673 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.65450943 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.106215465 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904276477 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.771963737 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.838736259 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936026794 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.08383324 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.858167022 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.288832999 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.546281155 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105031763 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.83420992 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85262011 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.056340908 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.190391949 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147261012 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.367595191 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042598929 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.41934165 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.459353286 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.135007106 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.835227647 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.038496393 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.138731239 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.836391724 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.965366207 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873909742 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.098607674 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.147178907 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.838861231 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.532884213 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.817592273 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.191963618 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.413765533 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785324694 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.856712608 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.911467642 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.84755351 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.978019075 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.859042668 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.749519349 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.057496273 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.633686334 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.129309348 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.85076284 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.83632179 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.556731514 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.196289934 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885616815 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995284688 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848076694 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.522439684 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.202440506 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.107595936 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.995578779 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.859661423 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.855245497 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851011404 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.83799411 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.049607228 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.045675024 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.123890016 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.022215963 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.889882825 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.853730182 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.067901937 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062876602 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.736964171 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988478834 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.985833209 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.895986591 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.760291116 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.353353761 seconds)
  done (took 1655.642631665 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.890867216 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.866730999 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.869429261 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.873784465 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.87950191 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.93466601 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.902336449 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.862098848 seconds)
  done (took 56.863816196 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.850168842 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.067899874 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.860392381 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.852044905 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.859762884 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.863301846 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.026103826 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.85962951 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.85732927 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.861174682 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.850285092 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.849588499 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.172015232 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.875480425 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.856282183 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.833795237 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.859416233 seconds)
  done (took 74.04108136 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.850823379 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.859196162 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.87277006 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.867769308 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.868350789 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.854614449 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.645635702 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.845669505 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.842167474 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.977852712 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.464530682 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.837703502 seconds)
  done (took 86.571444448 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.84536672 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.844363964 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.843721401 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.844422161 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.845437012 seconds)
  done (took 10.997104942 seconds)
done (took 2152.018041931 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.087299843 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.052439918 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.079078513 seconds)
  done (took 5.898697177 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.98117678 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.029404328 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.148323817 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.176505712 seconds)
  done (took 10.103970718 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.120350565 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.214686924 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.04266099 seconds)
  done (took 8.137835942 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.238124749 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.829112397 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.945043583 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.820423264 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.819510852 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.82127833 seconds)
  done (took 22.217442765 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.822844306 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.825416139 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.820449126 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.824605312 seconds)
  done (took 9.043382986 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.803884861 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.537587758 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.804123449 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.813647109 seconds)
  done (took 20.707989291 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.565882705 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.577482272 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.562241141 seconds)
  done (took 9.452856387 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.486585381 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.752001472 seconds)
  done (took 8.983925515 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.075869624 seconds)
  done (took 3.821505011 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.947222284 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.087984503 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.280080651 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.327686126 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.388894171 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.727524351 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.134814496 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.06498733 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.211683161 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.270709606 seconds)
  done (took 24.193633146 seconds)
done (took 137.425049173 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.190163126 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.048437766 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.004404239 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.145648155 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.097561061 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.007470273 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.22986674 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.129803374 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.650649549 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.650601807 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.144231489 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.061328733 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.964966191 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.04604352 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.963091645 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.045358468 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.030023459 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.204156411 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.880739922 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.042038601 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.232666543 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.781003977 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.982336206 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.791711979 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.029980555 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.952524079 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.35693445 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.044845909 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.03351754 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.368554602 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.950460313 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.188879165 seconds)
  done (took 170.989523442 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.721452568 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.806222834 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.806380724 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.807434568 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.177598104 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.808997415 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.811415534 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.807546187 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.071953455 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.074454567 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.82315163 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.20019372 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.833373805 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.804960427 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.823081379 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.820685252 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.199296944 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.836857311 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.838790179 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.838494073 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.838104305 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.086977352 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.836990335 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.131058642 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.218418556 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.833070513 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.807291683 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.836177735 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.8146864 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.823435492 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.829126617 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.810630316 seconds)
  done (took 206.523156143 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.81188414 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.809660579 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.811525184 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.808935468 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.817890314 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.812307008 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.81243433 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.80930495 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.385543695 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.380132352 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.818016899 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.818855036 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.814144627 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.809397115 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.817074715 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.812754942 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.824840931 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.82110834 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.812725336 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.816917144 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.814851431 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.508044631 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.818877335 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.499816537 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.805712864 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.81257815 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.792610984 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.802729173 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.805039124 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.804320232 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.799919299 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.793163087 seconds)
  done (took 218.251478067 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.988851034 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.789996482 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.793459879 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.748966865 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.792996291 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.792731076 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.779623972 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.98605548 seconds)
  done (took 18.408754168 seconds)
done (took 615.935767872 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.213600732 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.057091177 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.960812976 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.811801905 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.030556888 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.842856051 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.805375386 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.873089609 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.964489145 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.8810023 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.447566445 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.825002237 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.539170372 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.83120382 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.941292876 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.86570468 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.342371126 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.430560197 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.993274331 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.877366897 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.980259295 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.746835778 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.884358183 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.013344318 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.564214905 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.78870916 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.972783945 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.348117909 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.817417229 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.977793361 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.532513192 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.188432538 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.817949701 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.803785665 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.860477063 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.841415499 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.152686181 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.814313908 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.928283898 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.544253957 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.860511789 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.855333736 seconds)
  done (took 100.53863115 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.780092152 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.77866302 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.778875755 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.779697834 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.781453321 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.778469795 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.77856658 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.779664873 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.780918214 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.779149594 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.776590825 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.778882514 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.778612815 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.777621781 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.780947946 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.77939997 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.779186017 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.781675048 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.780910152 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.778629843 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.780641256 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.778784669 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.778279731 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.780037165 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.782294484 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.77938486 seconds)
  done (took 48.001907948 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.790583853 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.932636908 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.017009211 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.808756222 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.791894034 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.794004882 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.810840971 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.795828945 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.792522528 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.793341148 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.887139451 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.798960427 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.812363336 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.016180679 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.804983376 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.790799572 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.790471296 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.792210301 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.941787361 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.807599623 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.8116798 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.794107573 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.810782522 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.804795132 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.794160027 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.789667521 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.793789454 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.227173906 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.799951769 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.88697503 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.830110911 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.815899708 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.181478783 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.024647098 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.842918223 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.79756957 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.791941812 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.885843795 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.795337814 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.793520285 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.808396809 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.792961202 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.013163557 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.290913042 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.809602531 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.787686165 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.23345632 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.892795396 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.827983366 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.802020516 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.012724858 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.802210751 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.783977338 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.786844524 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.822395941 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.79883747 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.784958809 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.090906366 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.795188956 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.802008745 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.787917441 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.786579957 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.944571493 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.795209493 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.93467884 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.793496501 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.795167438 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.790094116 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.011462902 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.800866099 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.283477151 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.801817493 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.78996409 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.88056394 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.937274878 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.260603843 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.801676031 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.945664127 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.190702743 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.812145156 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.794003883 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.212923659 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.816883898 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.793044782 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.789467446 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.788425772 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.788738893 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.833265673 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.804198325 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.224023737 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.292613144 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.106811106 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.816118269 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.801679222 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.788637834 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.09385568 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.795248787 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.791010999 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.007054147 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.303908727 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.802419989 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.797956866 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.272151171 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.804635416 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.809706124 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.7966658 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.018888028 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.804997297 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.833413402 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.789614173 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.795490445 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.793574087 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.808102489 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.796126275 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.79050877 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.264354754 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.900759769 seconds)
  done (took 222.165753026 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.786197897 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.782887185 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.786563442 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.781918879 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.786772257 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.802531132 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.783890746 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.785552118 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.790836144 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.784819665 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.784662245 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.788793521 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.78541015 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.795174136 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.267046274 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.793215264 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.397595522 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.790429189 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.785154131 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.7833889 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.468523378 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.791410639 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.786224151 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.792978937 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.788974876 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.786834207 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.791769606 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.810096966 seconds)
  done (took 165.581906981 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.792558381 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.971420265 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.804338207 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.828321487 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.800348935 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.791539906 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.815626551 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.811631461 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.798259636 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.790594207 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.789205782 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.853520454 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.802356357 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.928210548 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.821985892 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.825554358 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.896878727 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.798569815 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.792116646 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.790118372 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.822268083 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.786118679 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.855678814 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.920747299 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.810727623 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.910711058 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.795648892 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.793642089 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.793791443 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.912552021 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.80862073 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.856588681 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.819779767 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.812130575 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.91369333 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.907536685 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.901419414 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.821739327 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.796348654 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.792356847 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.792116034 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.783274294 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.914516886 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.811269648 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.795744764 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.902064863 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.810062008 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.793317216 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.802463823 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.791833484 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.80787927 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.811863738 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.862095249 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.923878823 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.82508989 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.816409715 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.819438405 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.076390913 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.804588307 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.894065772 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.785793242 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.910579973 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.810481549 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.783761807 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.796108403 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.798992509 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.823121195 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.823417425 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.900462579 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.801189382 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.899221893 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.827348527 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.801103379 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.79235172 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.79768694 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.912807753 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.914196269 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.829379406 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.831890654 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.826215009 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.792645143 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.794882506 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.783739916 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.812807825 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.797820814 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.915595237 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.910920004 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.802407485 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.797389649 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.795980787 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.798238639 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.819992882 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.921160586 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.827870416 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.893074502 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.859964586 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.866757752 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.806210685 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.806606973 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.799506357 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.857331855 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.810596683 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.805825636 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.124077998 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.867997429 seconds)
  done (took 194.630562308 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.891237219 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.279584771 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.848939521 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.851707941 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.076477217 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.209180811 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.607400106 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.83917041 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.843279046 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.869042717 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.00647003 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.897738615 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.856138942 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.831948683 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.250886031 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.836262179 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.844348274 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.865222351 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.848129008 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.40383182 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.15955777 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.960153908 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.842906159 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.987080179 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.823577354 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.15203713 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.325006796 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.219174731 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.876481103 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.194166039 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.179672643 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.523112882 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.054916461 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.085499858 seconds)
  done (took 72.069500458 seconds)
done (took 804.698964213 seconds)
SAVING RESULT...
DONE!
