cset: moving following pidspec: 17807
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.978538296 seconds)
loading group "string"... done (took 0.514844884 seconds)
loading group "linalg"... done (took 9.383555712 seconds)
loading group "parallel"... done (took 0.169433946 seconds)
loading group "find"... done (took 4.062589139 seconds)
loading group "tuple"... done (took 2.0593864 seconds)
loading group "dates"... done (took 1.389989304 seconds)
loading group "micro"... done (took 0.195517477 seconds)
loading group "io"... done (took 0.516864016 seconds)
loading group "scalar"... done (took 57.174730196 seconds)
loading group "sparse"... done (took 14.508412263 seconds)
loading group "broadcast"... done (took 1.410976669 seconds)
loading group "union"... done (took 10.567512309 seconds)
loading group "simd"... done (took 3.631986232 seconds)
loading group "random"... done (took 13.424952488 seconds)
loading group "problem"... done (took 2.244143024 seconds)
loading group "array"... done (took 24.315490214 seconds)
loading group "misc"... done (took 1.14916554 seconds)
loading group "sort"... done (took 3.802055655 seconds)
loading group "collection"... done (took 22.268885265 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.696615185 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146138536 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.176523294 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.229605598 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.277913396 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166685938 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.15815459 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.170901079 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.677544196 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.209323129 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136100121 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.416262232 seconds)
done (took 6.227009253 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.417294551 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.061506994 seconds)
    (2/2) benchmarking "String"...
    done (took 0.170307099 seconds)
  done (took 0.952112177 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.093534722 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157588022 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.109333452 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094755292 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.092938054 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.110406532 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.155094324 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109442981 seconds)
  done (took 1.543029542 seconds)
done (took 3.721593375 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.503161301 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.947543485 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.55704481 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.182023899 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.309906214 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.308380496 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.264770316 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.222623106 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.091305653 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.08550051 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.175857478 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.480626567 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.390309213 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.000086267 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068998143 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094037894 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.153154552 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.870353701 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079328754 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.110080777 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.531569025 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.212610777 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115779499 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.107114698 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185297155 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135415066 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.142253314 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102756576 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.77099362 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.134158379 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.218225051 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083452885 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.139674303 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.165298023 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.215739683 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110578923 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.725445541 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201913402 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097206237 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102151925 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.733288164 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.122936699 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.204541152 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105997079 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068883691 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.167708541 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.101215123 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.095465665 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094314598 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086768099 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.173180554 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.496300075 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.10706897 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.195171095 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.094534798 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.752907281 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.097550274 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.287649428 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.125112858 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.094058164 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092040238 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088848931 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.179723056 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095886336 seconds)
  done (took 20.803093958 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.168562505 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.186691305 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078867802 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.15787787 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.122824807 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099464156 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084874733 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078708586 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12700226 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180437214 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.139605763 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.174650972 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095402783 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090776349 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.170158594 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.235500667 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.126983499 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104216423 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090235158 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.108705724 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123033993 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.09663556 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10891597 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.095940174 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.173942988 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.205870753 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109729907 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123575656 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091324571 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095777241 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14377735 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144045529 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.092365175 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089145388 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171883165 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123025594 seconds)
  done (took 5.345738345 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.236046206 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.103905303 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.249414971 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.125843067 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.179273092 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.154975944 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.187618104 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.17830823 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.302094161 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.234891906 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.177454397 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164048146 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13068614 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095862987 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097524265 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081753382 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078710832 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.838704531 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.151462303 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.172049571 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.187712069 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114185924 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082364216 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.719584139 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101692854 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085583266 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.112628457 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06570613 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.223172975 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095538758 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.492932395 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083211271 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.119243184 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133369208 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19315001 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124936332 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13867262 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096176882 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.102687368 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.199677001 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.12070372 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078613587 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.078899356 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134685869 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.129766085 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.093399974 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.125928246 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.135711189 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.087667971 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111607034 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.084336864 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.192983066 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.145489019 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.103352216 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.275877179 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.129205098 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100882196 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.110174034 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.805547018 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136824249 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.084689423 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100573003 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079867763 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095410956 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097391645 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.818130321 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10725581 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.605777115 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083935757 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159686549 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097086597 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.119198142 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086769448 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085817104 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.127632391 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.086502681 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.096793109 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.088121996 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080883557 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.100496237 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.091350262 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114009199 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103831194 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080884195 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147790243 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114831784 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.109260347 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125538619 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.091059506 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.087145448 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130311963 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082527962 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.105756147 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.169589981 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.117445405 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113678748 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116141653 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144631622 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.089392314 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.262724889 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.098080077 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122228955 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100782512 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113923787 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.115462435 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081611648 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085267679 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095570318 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082329022 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.149004381 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.102266506 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082165548 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.088373941 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110047426 seconds)
  done (took 28.473713983 seconds)
done (took 55.334694634 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.416454228 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082754065 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082585211 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104145334 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083670731 seconds)
  done (took 1.55784508 seconds)
done (took 2.319765548 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.308031955 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.204507805 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088754955 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.19276367 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087712399 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.198795393 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.184711966 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.103003997 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.209845963 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086602177 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.194146841 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085851137 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106895316 seconds)
  done (took 2.841141749 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.104511782 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107174582 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10329278 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122761976 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086968843 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.103092284 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.122537495 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109651997 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102534555 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114708366 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087212841 seconds)
  done (took 1.924826407 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101498383 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105596197 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093363267 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120191331 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087717363 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09971692 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117758265 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106853666 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100902234 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.114349896 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.087591924 seconds)
  done (took 1.901486269 seconds)
done (took 7.429731856 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.239445824 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.12948169 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.191625804 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.246506796 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.34670144 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.298229535 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.61853482 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.205029677 seconds)
  done (took 16.174121122 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.118278645 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.190878669 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096206916 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.093612398 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.116045369 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.097205098 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.095399599 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.116036025 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.092703141 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092474434 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091045275 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.110505391 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092374999 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.091282454 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.114715079 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.09757324 seconds)
  done (took 2.536580314 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.1379664 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117761617 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.117767404 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.100814391 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.095740265 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.118228283 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10302973 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.098464048 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.11616508 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.097270414 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.10407924 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.116283683 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.09989394 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.094890829 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.118324965 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.121043848 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.095449639 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.116545702 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.11857995 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.099311974 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.118220319 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098209407 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.099054795 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.117839608 seconds)
  done (took 3.475391087 seconds)
done (took 22.954490012 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.150089916 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.103609088 seconds)
  done (took 1.027448651 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.164672619 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.185518088 seconds)
  done (took 1.12735068 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.113154207 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.091481444 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.139555718 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104981957 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.092188547 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.110029484 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118107391 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.110259008 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.092765816 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.093811361 seconds)
  done (took 1.847261142 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.095090636 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096093921 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.124757104 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.169471461 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.119922068 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095332945 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097148256 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.11437952 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.098197552 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091171726 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.115769733 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110251197 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.096195093 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.128722952 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.0971721 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.098180133 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.118947345 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095692088 seconds)
  done (took 2.74653017 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.091879914 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092795594 seconds)
  done (took 0.968972392 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.094982511 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092025033 seconds)
    (3/7) benchmarking "month"...
    done (took 0.093230062 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111003108 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091494795 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.090828744 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.109858088 seconds)
  done (took 1.46733794 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.534022317 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.239119611 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.383295131 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074255897 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125203699 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.327930987 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.106164631 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074393741 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.094286377 seconds)
  done (took 2.777807872 seconds)
done (took 12.743479991 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.092614968 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.444221416 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.626553667 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.131905516 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.09205574 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.148723338 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.332029045 seconds)
done (took 2.656852104 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.357031287 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.167985081 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085993335 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.092927922 seconds)
  done (took 1.488168191 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082821494 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100937648 seconds)
  done (took 0.976419739 seconds)
done (took 3.259627204 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090720886 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.091257512 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.090299895 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.109774792 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.089143475 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.090596835 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.132011495 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.091027968 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.090191103 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.089983503 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.110644949 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.090631053 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090182616 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110096255 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090674667 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.090646777 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.213139079 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.109953033 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.091995669 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089794747 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107237426 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090888708 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090999914 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.089349343 seconds)
  done (took 3.256957513 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.113032184 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.0922278 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.112148781 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.095351813 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.095412335 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.112121914 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.094756358 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.093291669 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.112357136 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.093509879 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095389537 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.093739229 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.109767403 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.096289996 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09154233 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.113903631 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09555088 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092217657 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110444359 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.096456972 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.095808919 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110301375 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095664981 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094589873 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.113010385 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095681627 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.092357485 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.110322507 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095422474 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.096380033 seconds)
  done (took 3.803420324 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097597889 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088055554 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.090320252 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.117877329 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.089193329 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.091281715 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.107106553 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.091667634 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.093109169 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089393194 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.111303061 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091571577 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.090936704 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.11080848 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.093625405 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.094599818 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.097872814 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.109846952 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.090742873 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.09148015 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.112897053 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.091899432 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.090944034 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.089694395 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.110588032 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.088599647 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090213503 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.109362557 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.092093518 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.091436348 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.093296331 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.113378777 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.091861525 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.100625876 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.113506857 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.091171329 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097653072 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.106725918 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.093576479 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.088426267 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.086998907 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.108543164 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.09179604 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.096918819 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.109319761 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.092784837 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.090677992 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.091309909 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.11056235 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093958292 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.087385416 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.110304598 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095232901 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.092271656 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.093000667 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.107451878 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.092291449 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.087127072 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.111306056 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.092584199 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.088224902 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08749677 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.115255677 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.092949353 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.10601412 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.117697311 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.091006538 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.091863117 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.112581941 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.097768607 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.092881355 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.119973685 seconds)
  done (took 7.852214384 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.114822303 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.099824221 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.110696921 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.093377133 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0917992 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090700125 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116182023 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093245867 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092813162 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116969843 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091851981 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092882708 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110589204 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09376753 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09138976 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.092732671 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11714707 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093108496 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.09065747 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110769738 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09340858 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097041611 seconds)
  done (took 2.994023862 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.241763519 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099200886 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140737047 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123959606 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111017469 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.123440316 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.097712207 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096572268 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114370293 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102907983 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101479401 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115890549 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109740147 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100728333 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121331699 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10523971 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115749166 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103784039 seconds)
  done (took 2.929105253 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.106832512 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095432848 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.156770506 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094451323 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.093339661 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.112535965 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100116239 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113484482 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.114446205 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.095009188 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.101146976 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112455262 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.09442768 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093275654 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09439007 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112708313 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094641574 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09333953 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118641623 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099469254 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098349878 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.120865937 seconds)
  done (took 3.121329176 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10711947 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093612065 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.130673197 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.097604042 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093168969 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.092689438 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.120572803 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094271827 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.098689632 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.112622947 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094873744 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093629613 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.127484058 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.094187873 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.099457612 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11292662 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.095129308 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095089216 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114530293 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.094295383 seconds)
  done (took 2.867956053 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.196663413 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128858105 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110287555 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11671266 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129368773 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110026877 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.137424585 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110963748 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113233059 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14164999 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111662845 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111388971 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.138495057 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115498878 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127927146 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118717846 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11657264 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137822922 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110565947 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.129072724 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123140046 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109871938 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136969143 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.111308136 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109609571 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129548887 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110074963 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133148405 seconds)
  done (took 4.285386669 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.092032878 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.092488166 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090401605 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.111252012 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09329408 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.092860145 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.091113811 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.112242561 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093235576 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092075135 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.111813323 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.093188263 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092903159 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.091782084 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111818207 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092623497 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092206508 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.111753159 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093818658 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0922985 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.09155971 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112252294 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.093307181 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.093015042 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091567099 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.112737557 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092494985 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.092722828 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11197325 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094792034 seconds)
  done (took 3.740464143 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.10575955 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103098983 seconds)
  done (took 1.020858498 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.101328875 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107847375 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091782206 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.112885646 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.099803486 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092491759 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.121219367 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100717096 seconds)
  done (took 1.641002029 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.167734919 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.192092355 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.098240681 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.124903947 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.170324551 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.184222324 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131315359 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.118202833 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.094512435 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085201205 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.185793158 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085112606 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.113472058 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091062226 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092232376 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.121228061 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095351674 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.101503145 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.120260674 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096552032 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098714952 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.117118318 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096542298 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.104028704 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.107535955 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097039224 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096397462 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.124254302 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092352744 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.09579303 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.110834574 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095306797 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.097659107 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.097714285 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.115311108 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.171349022 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122042753 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091399641 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09422656 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120099267 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126939911 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.093743408 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.116601309 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09368178 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095036797 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.117854916 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099343195 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.093736895 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.10690968 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.091522612 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094607022 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108077371 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095017749 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095996811 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.093877548 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.120168468 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095818745 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.09021087 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.110043845 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.090188865 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.092411081 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.109731924 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095855769 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.096288674 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.115006599 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095546029 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093032748 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.113167105 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096788478 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.095435214 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111756496 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11021105 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.095978629 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.11850763 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100997534 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095823843 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110672939 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100735206 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.094353961 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.114754187 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099868062 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124326121 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114250196 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09050944 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.091088073 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.101935761 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.115659116 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.097161378 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08745543 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121784638 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09709563 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.095503603 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.106530049 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093605472 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.091093089 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.116857757 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.088375152 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095444272 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093845034 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.119511917 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099925521 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.094213075 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.116306977 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100226776 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101503593 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.113119703 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.160514469 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112937032 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089994141 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09636852 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118921525 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.089352392 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.095310645 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093239678 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113208086 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.090378091 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.09935838 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112813851 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097417695 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.098926065 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116494792 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.097339555 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.096273003 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.113351061 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.091568194 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098867868 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103238362 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.116446265 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.095683515 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095791761 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.11550471 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.09497863 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099034151 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.111889203 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10118325 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092338114 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.113297402 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097120791 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.099475535 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.114259369 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.091177167 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.094271972 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.114267595 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.095102826 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.098048038 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.09529565 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.110416132 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087723073 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.095114287 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.109581612 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096627799 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103328167 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.111576785 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098421092 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.09090627 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.122550401 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.09218774 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099566318 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.116762508 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.101349155 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10093138 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086734627 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112638733 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.097026143 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095458856 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.111315882 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096948301 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096138886 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.120682406 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.088681056 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.100130916 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.108032952 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.093398614 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100428318 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096035775 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.118533938 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.09201517 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.134554147 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.127394358 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101533043 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.094695118 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.115345833 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.099703128 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.094843321 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.119381344 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103086107 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100983439 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.112219954 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.097605956 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10026216 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.11011682 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.099507589 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093528962 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094880748 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.108441976 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097394199 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086191057 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.118319737 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.098251463 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.099700089 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.119880546 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097435012 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093712842 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12393187 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092277674 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.098797152 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.0867881 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.120036557 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.105478858 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.100609073 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121514421 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.098300593 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09195471 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.116336132 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103830504 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097050665 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.114640135 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097659766 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.088112589 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087903426 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.121311145 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.09845043 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.093789745 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.115341684 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096926216 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.097108886 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.113246694 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.089839694 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.0995255 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.117177793 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.091966081 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095536191 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.110820548 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.093868039 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102362455 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.108524082 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.09246205 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.098672461 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.099543268 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.116720536 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.095271202 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.097282298 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.120872845 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.09847686 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098790036 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112294488 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104540764 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.094452204 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095110782 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.112985958 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.108620663 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.088087232 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.11708094 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09518944 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.092378169 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.112351658 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100067624 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100704151 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.120865255 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095217952 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100555242 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.120809272 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.101908187 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094165139 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101027578 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.112294336 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.088092599 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091943559 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.108015266 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09879747 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.091643116 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.11924744 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.0947695 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094244181 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.118504721 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099188653 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.092247807 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.120058124 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107465632 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088995325 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.108460733 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09417016 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095584222 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.111616893 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.092742405 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097267622 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096475016 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.131963378 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097476114 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.091548347 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.115705011 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.102453731 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091952934 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.122577952 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101946749 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101109415 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.110661585 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100892425 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092876777 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11814874 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.091113593 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09485659 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093729151 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115189061 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.092233106 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093418069 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.112226677 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.089779753 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.092976448 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.120516307 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.095194854 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100445407 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.114164548 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.093638821 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.092204206 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111798625 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102972714 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.095073492 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.101537899 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.117692281 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.089677175 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.089310081 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.121358308 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096720554 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101267216 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.111173854 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099427973 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102629922 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098690673 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.117061952 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.104348514 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103781224 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.123650905 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101284357 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088446245 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.114490811 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100047909 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.094822662 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.120019241 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098990873 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.090268951 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.118253879 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103554761 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.096476823 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.092854612 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.1112623 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.096037047 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101279515 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.11898501 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.099737493 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.097722195 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.11685714 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.091562238 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.09875513 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.099998326 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.11821642 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101900232 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095789901 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.121037019 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.09284437 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100545316 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.117493183 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.090128007 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.089204741 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.113984881 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102182552 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.089839386 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099246159 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.120726575 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.0926916 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.095527489 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.120677602 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.093368191 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097058296 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120696666 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.09405844 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104400792 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.116414075 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.094834353 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100178368 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099692024 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.110063845 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093986842 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093254277 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.123143432 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094139076 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.099305908 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116040148 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100890283 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097576551 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.122279694 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101589407 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.100670477 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.088577129 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.122666159 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098607428 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.096699417 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.114296119 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.095227662 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.089284493 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.115098095 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102766511 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.092153287 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.123443202 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.102926429 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093109692 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113926775 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.101560786 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094992821 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100690919 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.113907018 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097266986 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.089236242 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.118853074 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.094644135 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.100121983 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.114188175 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.08970758 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100119467 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.120115339 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099974487 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.09786055 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.122458766 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.090930071 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.089544304 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.09705138 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.115015409 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107048389 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097053141 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.115446913 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094260907 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097085822 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.117097448 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102831433 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.090151707 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.113253393 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.097838078 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097458071 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.114059552 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.092775304 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100075554 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093524273 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.118859189 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094824989 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.091202422 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.115218836 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.104321796 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.093718517 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.111949363 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.094124246 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101617993 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.114929515 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.092760219 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089637387 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.121739438 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.099644597 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101575115 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091583741 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.117988032 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092438583 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096558547 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.123561333 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.094947588 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095598697 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.114827743 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101674298 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10096107 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.109494971 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093619414 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10572744 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120830324 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.098126693 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098242876 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.11531835 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103339626 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102576025 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097348565 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.111045696 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.090735772 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.093763827 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.110883895 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09904937 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100011685 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114401754 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.094763618 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099697905 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098863499 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.120045057 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098712941 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089101472 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.123396893 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093863583 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098729239 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.111324997 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.091149268 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098681184 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121468767 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096316437 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096575821 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096366442 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.120310178 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.091352147 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.09374708 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.120771539 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101029914 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100789628 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.118168318 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.095593016 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098867479 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.126703821 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099823728 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094922941 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.102575495 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.123862042 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097783862 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.095205412 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.121944158 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102039437 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098022808 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.123911694 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094269389 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095018919 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.124361403 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103021649 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104280064 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116348732 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.091026063 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.0993963 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.114139658 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.091811437 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.100267371 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123099389 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.103263345 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096000933 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093363523 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.125697323 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101640292 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09593932 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.116176565 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.094314165 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.09949693 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114972718 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100566042 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.093442388 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.123959049 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10371226 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101431421 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.126026624 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.09152023 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10222592 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.097932896 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.126931606 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.098049562 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089976811 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.11186087 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100413326 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103364028 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.12259921 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10144616 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100549782 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.099056385 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.119103426 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097148002 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.093281206 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.125976523 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10225036 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096565901 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.119167824 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.09651702 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097652928 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.118482759 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.104955858 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.102246638 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.096394446 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.129183465 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102725376 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094600693 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.115115589 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097238934 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.0984849 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.118912861 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10132745 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.094318588 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.111769003 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103382845 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103861364 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095106669 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.126067141 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104753273 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.095305248 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.121166926 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105195542 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.10050644 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.119358603 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.098076368 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.098881309 seconds)
  done (took 62.866254242 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147403512 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104816328 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120700417 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099503044 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116181492 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121078733 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099352528 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099763635 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.121302078 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108959307 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097723667 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11851372 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115215319 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119048003 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138689583 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108618741 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118240695 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101544879 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098570277 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099211535 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.1359091 seconds)
  done (took 3.257245572 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.117172263 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.112298419 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.132491182 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113270544 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105257323 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.132396124 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.10867937 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130875503 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113646347 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106320186 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134584754 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110535912 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.128285929 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108054496 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106400421 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128320703 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112831194 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105327166 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.131900411 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109785259 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106389848 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.131997107 seconds)
  done (took 3.45061873 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.129377417 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102119849 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096725854 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.121448239 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103095683 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098411263 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.122535718 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101112887 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107788525 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.093742269 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.112528761 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09458622 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.09612235 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.121043126 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.09494658 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.099536107 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.128731367 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103691019 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104757861 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.097609835 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.111795107 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.100402823 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099092499 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.1108996 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105578511 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105366189 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.098613173 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.123313939 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089907921 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.100799774 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.120075839 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093587492 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090538196 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.08863622 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.11190485 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.10270353 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10109638 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.12042824 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.09960236 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08961375 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.100179132 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.126214642 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.091177148 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.099225631 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.120738981 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.094278245 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103121519 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.120706367 seconds)
  done (took 5.918014182 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128113203 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.15910867 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104335846 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.128086411 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.136443012 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.110299577 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.102001394 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.13141345 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102680138 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124722163 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.1168612 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.112614991 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.128589693 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.107558521 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.106498107 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.128781726 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107135202 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102202214 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.129278985 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104127406 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107795284 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.12678735 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.114609814 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.133407594 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106852386 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103124362 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102243681 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.12966824 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.112857364 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.129850311 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10800825 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109108499 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.13623531 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106932464 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103115865 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.126928028 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.117133128 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.359215915 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126934003 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102681955 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.103313717 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.129076493 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104952083 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.114200485 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.126734509 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.106002996 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103343206 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.124978908 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.113430531 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.10368586 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.132377846 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.115610922 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.127222236 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106907855 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.106200333 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.135766088 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.10556291 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102448707 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.127799253 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.113421642 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101029939 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.129540296 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.115008882 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.10291 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.131769731 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.115452763 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.125201663 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107529197 seconds)
  done (took 9.16826351 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.134127547 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.106952302 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137385063 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114754936 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10609814 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.130505172 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106915939 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.106005267 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.130648147 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112266292 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128999431 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.226926432 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.127333135 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112833746 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105947753 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.131290014 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107705223 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106344828 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.131370899 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107225625 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.106207762 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.137311465 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107400617 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.136313447 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119179355 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103282184 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.129669337 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107796895 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.136713639 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.1091327 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118530292 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.129602207 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110770898 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114564176 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.141456705 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107805776 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101514575 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12947206 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.10850619 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106882574 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.128775283 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116288152 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.128956622 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106917615 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109136765 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128250941 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116977217 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.118856803 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.13568142 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113484403 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.128511478 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118024179 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107180468 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.130445803 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116922723 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.121899871 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.139730181 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115623781 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12992563 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117709665 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114984228 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.145496514 seconds)
  done (took 8.401702315 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102862222 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101216475 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099735274 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.123649046 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.103771875 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.102414326 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099723473 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.123110283 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.101114588 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100516279 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122990331 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101998745 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100684118 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100171675 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122647784 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101716188 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100824639 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.122148219 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102246914 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101598816 seconds)
  done (took 3.015263925 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.112004294 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117944237 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.124248904 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109893767 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102692213 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.130116449 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104183019 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102788734 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102359443 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.126369582 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112106297 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110437209 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.126292491 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108221426 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.132150887 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109724984 seconds)
  done (took 2.714095889 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120982255 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119383639 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.211667017 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.105679941 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.128088114 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110511599 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.103491038 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.128286955 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102214793 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108732465 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.105893126 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.129522054 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103217607 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.103889705 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.126153114 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.107193392 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101465978 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128738211 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103984294 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.218865358 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.107162336 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105891796 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.127884958 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107230526 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104939031 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.132307886 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109500684 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103225785 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.128035669 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105292544 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104916964 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.132171848 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103545646 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107358679 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103941286 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.126764674 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104650894 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.102797882 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.129345855 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103575118 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104912892 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125695037 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.105642828 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105263025 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.123972444 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106958672 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.104028434 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.108407223 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.127315563 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104597123 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103162326 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.131445256 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108405467 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110054269 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.132076907 seconds)
  done (took 7.306451171 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11498906 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105649463 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136134383 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103590583 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104113707 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104026442 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.127384479 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105874926 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104488357 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.124472741 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106776033 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.10519666 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126894084 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107038317 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104826594 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103721506 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.124873199 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.105347442 seconds)
  done (took 2.901339974 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109899027 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103786433 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105974898 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.127921375 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10296682 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103727483 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124399852 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103069056 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102660356 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102496288 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.126233199 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103534334 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101758181 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125955391 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104199524 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103361541 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.125711459 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103956178 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10359711 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101906829 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.127353084 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103752592 seconds)
  done (took 3.308659628 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.11617087 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.214711546 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109268023 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.223543123 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.101315653 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.099273367 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.135987071 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100694837 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.138512596 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100306627 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.099210175 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.122004298 seconds)
  done (took 2.453057997 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132459536 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141514497 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127531859 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106626557 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112538463 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13138528 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110658972 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107007504 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140720724 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119305667 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129617288 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118998257 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116331363 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140958832 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113987164 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135919376 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111264811 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108613293 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126079007 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124068619 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107085113 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1401112 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108351394 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108278601 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132198291 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117265834 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137822065 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120500956 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108477858 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139173642 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113644123 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107884069 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139186149 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118741692 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128345792 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11765082 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108669286 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145317578 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113765117 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13881048 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105931117 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113109389 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138482099 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114891615 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115910221 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131293313 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113739095 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129899032 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110333676 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127945446 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136814671 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116615394 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134751683 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117294954 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117519147 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.152792744 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120388045 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140788711 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113687532 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142442162 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117168916 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111860743 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139620689 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120198175 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136006864 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117206006 seconds)
  done (took 9.034796819 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143445057 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105033173 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130941734 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11993925 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138373464 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110729426 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109148535 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130219342 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109971685 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105478176 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175189729 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110136045 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116277138 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140376208 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110105468 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130327115 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110934991 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116857429 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128926507 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130805974 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109215647 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1402628 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116606647 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139971151 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120936473 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135002136 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109729034 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110247666 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132326181 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111433142 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114132544 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132076423 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117254769 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105730505 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139650357 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109778329 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108868015 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137169159 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110833327 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135429849 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119443631 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124126428 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132567178 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109796278 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142333284 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112860963 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109382753 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128534773 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110506204 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105533142 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144749765 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120912771 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.142250028 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118532818 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109214262 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131035393 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109885372 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109555587 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131536026 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114805614 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1168201 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132594276 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129739996 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13176199 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110240451 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116312678 seconds)
  done (took 8.975314366 seconds)
done (took 171.076896155 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.175365421 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.2176987 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.198786938 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.18982362 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094377079 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.165989821 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.128778371 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.199580975 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.096697931 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.095089309 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094505294 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.12183516 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.209176628 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094976429 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.12016474 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.099317901 seconds)
  done (took 3.195743883 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.185462017 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.34540562 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110908312 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.124050607 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103183571 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099878556 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.124932235 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102608756 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.100457588 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.131914343 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101283116 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096397854 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.130776985 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097893286 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.100134073 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.121985727 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108503828 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.101159058 seconds)
  done (took 3.193694075 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.122901128 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.154845047 seconds)
  done (took 1.18522515 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.131682955 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.218143211 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295834936 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.173103708 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.121317237 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141709097 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15072291 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134827808 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.192310423 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.137483981 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113594251 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098512464 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.150441906 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105727945 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.139621633 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.100643891 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.129541232 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.13811131 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11607664 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.103519115 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.147069282 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104597354 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.106164063 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.138675304 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182876303 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.134817117 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10435295 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102859052 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.125687515 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114829332 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106552054 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.142392959 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.113476839 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.181977133 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10364445 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177135155 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.107514419 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.12465441 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114175399 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.100586044 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.127590586 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105429937 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.113749379 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.122339079 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104860685 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.105871074 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.127233317 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.104635077 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.130012989 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.109673524 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107321902 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.130944454 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153709871 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.131350603 seconds)
  done (took 8.010186376 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.888638688 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.143879753 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099897505 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.03464267 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14620668 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114509053 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.873437614 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.148661788 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25193689 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.907052296 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117457859 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107666778 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.260234878 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.25858671 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.266789801 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.383006691 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.715284341 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.137095945 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.131132775 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.16300692 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109496535 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145623971 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121675811 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.520046767 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101760933 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100120762 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130636595 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.109844029 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.177401742 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.10157298 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.104338018 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.195896802 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291940736 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212683606 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101315603 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099795424 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123494434 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.184750111 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.274810279 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221615205 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.173918254 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097248938 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.124184484 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108593147 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.141475424 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099158776 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178203619 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.169210395 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.18957929 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.104898161 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.132637416 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.110631483 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.130269897 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.154973787 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121136399 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.361865049 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360695712 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100521841 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133087632 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.114093407 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269405512 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101840837 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.261113356 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129170703 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216934851 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099848145 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.836549026 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.186010659 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100684916 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.130169583 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107803212 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129801957 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.10804614 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16689488 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.50427366 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109709037 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.131170054 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100830445 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.236081989 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099878741 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123779376 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.157766516 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124492478 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110086359 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11181154 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133796991 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.187027962 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.247085857 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.134995863 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110724791 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105243235 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13810179 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102209397 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.234484802 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.230525325 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.176949415 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.230072669 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109737657 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.179775591 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.161849131 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130881997 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.164707661 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.132052203 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113651616 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130448396 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228426025 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133932755 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.125542204 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107001466 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.10957733 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159299223 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105287841 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132735835 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.165037135 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.561810515 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.186541995 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099178423 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105859726 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134577361 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.178806358 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109059813 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265218673 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.111308354 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.186739551 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108216014 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.122607898 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110141045 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.18035551 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108920186 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133374553 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10980843 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110118668 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.280795521 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223377122 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.132548481 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.255168791 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.178387201 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.106620978 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191859934 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133717642 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165952244 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.135428634 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108197714 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102444652 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.830074167 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.138826672 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108517787 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129446068 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186198415 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100520569 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128283798 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101649718 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102256993 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.813417469 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128285138 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.100385807 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103504809 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129551861 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110787117 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109649841 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.130446804 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.155769616 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266054244 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111244966 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.107728797 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.124524035 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.156405006 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.125137455 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101576044 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101216093 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124411145 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111933584 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.106898094 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127190991 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167365026 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.176069749 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.231631154 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.657233673 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124173589 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10280881 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242611724 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100649794 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.328968731 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135930268 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.237527427 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182719473 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099037004 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360330947 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185675716 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205964746 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.10577234 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.189094454 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.1001762 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11029059 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179426532 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101151144 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.13169285 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.153748348 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.137363253 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.112447836 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.282448412 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.124163487 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.228430691 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.123312001 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.166195367 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126819346 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107889945 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.32651649 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123495553 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117092901 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179378837 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107734018 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101809407 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.678448676 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124787655 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114484402 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107545638 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232109971 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184493695 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132522447 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112355653 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110927086 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.179759475 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.23301783 seconds)
  done (took 47.977748724 seconds)
done (took 64.468015324 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.260243982 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.172637497 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.377139408 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.152243105 seconds)
  done (took 1.967417034 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.271440393 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.16954431 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.254505488 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099727346 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.260453327 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.098873644 seconds)
  done (took 2.091666951 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.179828779 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.172217353 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.148245206 seconds)
  done (took 1.44122755 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.207390279 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.204958601 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.345120517 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.238396167 seconds)
  done (took 2.020932722 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.287535088 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.119656395 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.126247573 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.240083837 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.254448552 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.209725912 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125043321 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.177151081 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130967812 seconds)
  done (took 2.652958293 seconds)
done (took 11.1073629 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.235838949 seconds)
    (2/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.411264464 seconds)
    (3/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.247877678 seconds)
    (4/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.285132369 seconds)
    (5/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120533977 seconds)
    (6/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.39546774 seconds)
    (7/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.331713192 seconds)
    (8/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.22691104 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.144807586 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.134560795 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.122615535 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.111887423 seconds)
    (13/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.269707948 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.123187176 seconds)
    (15/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.223888795 seconds)
    (16/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.297091772 seconds)
    (17/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.212087458 seconds)
    (18/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.111255683 seconds)
    (19/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.264381733 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.104652532 seconds)
    (21/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.145820502 seconds)
    (22/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.211695998 seconds)
    (23/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.225914587 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.133175738 seconds)
    (25/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.123268109 seconds)
    (26/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.204739358 seconds)
    (27/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.112828784 seconds)
    (28/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133992615 seconds)
    (29/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.325688492 seconds)
    (30/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.130298909 seconds)
    (31/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.200996288 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103253802 seconds)
    (33/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.129101211 seconds)
    (34/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.203703993 seconds)
    (35/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.231502673 seconds)
    (36/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.086166859 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113665427 seconds)
    (38/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.338374603 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.147258168 seconds)
    (40/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.260906526 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.130270151 seconds)
    (42/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.0806102 seconds)
    (43/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.146725758 seconds)
    (44/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.13644177 seconds)
    (45/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.377361792 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.142323342 seconds)
    (47/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.124009073 seconds)
    (48/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.134069243 seconds)
    (49/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.180531301 seconds)
    (50/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.262080213 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.146037244 seconds)
    (52/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.111162354 seconds)
    (53/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.086661525 seconds)
    (54/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.129742978 seconds)
    (55/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.25361186 seconds)
    (56/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.163474344 seconds)
    (57/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.156830713 seconds)
    (58/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.082208311 seconds)
    (59/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.185852771 seconds)
    (60/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.198063221 seconds)
    (61/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.181828307 seconds)
    (62/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.193260545 seconds)
    (63/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.125654059 seconds)
    (64/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.201167299 seconds)
    (65/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.08016587 seconds)
    (66/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.102339197 seconds)
    (67/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.087463593 seconds)
    (68/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.261394231 seconds)
    (69/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.082548292 seconds)
    (70/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.136033942 seconds)
    (71/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.111159982 seconds)
    (72/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.087906181 seconds)
    (73/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123505242 seconds)
    (74/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.130035367 seconds)
    (75/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.135895061 seconds)
    (76/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.087762776 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.106738614 seconds)
    (78/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.150255134 seconds)
    (79/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.083115954 seconds)
    (80/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.152192498 seconds)
    (81/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.137697799 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.128931606 seconds)
    (83/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.198464725 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.128240707 seconds)
    (85/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.114034335 seconds)
    (86/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.154785903 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.130589141 seconds)
    (88/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.080552634 seconds)
    (89/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.081969976 seconds)
    (90/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.083124225 seconds)
    (91/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.22323622 seconds)
    (92/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.181424669 seconds)
    (93/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.087817974 seconds)
    (94/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.137445741 seconds)
    (95/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.130446595 seconds)
    (96/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.175810185 seconds)
    (97/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.129744654 seconds)
    (98/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.083695818 seconds)
    (99/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.102931984 seconds)
    (100/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.080260485 seconds)
    (101/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.112342708 seconds)
    (102/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.135212543 seconds)
    (103/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.237373435 seconds)
    (104/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.179987654 seconds)
    (105/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.081929665 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.12964371 seconds)
    (107/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.106648092 seconds)
    (108/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.086674907 seconds)
    (109/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.112662104 seconds)
    (110/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.107736161 seconds)
    (111/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.081223858 seconds)
    (112/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.082823734 seconds)
    (113/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111636717 seconds)
    (114/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.174556627 seconds)
    (115/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.146545077 seconds)
    (116/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.103690773 seconds)
    (117/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.081561111 seconds)
    (118/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.083337905 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.131338493 seconds)
    (120/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11475931 seconds)
    (121/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.087479961 seconds)
    (122/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.168406861 seconds)
    (123/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.122998418 seconds)
    (124/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.090432971 seconds)
    (125/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.081852379 seconds)
    (126/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.086185439 seconds)
    (127/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.153114558 seconds)
    (128/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.127533241 seconds)
    (129/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.086299425 seconds)
    (130/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.111961179 seconds)
    (131/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.082332737 seconds)
    (132/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.08915962 seconds)
    (133/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.111662222 seconds)
    (134/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.159469111 seconds)
    (135/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.138545504 seconds)
    (136/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.08242338 seconds)
    (137/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.088328501 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.130101066 seconds)
    (139/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.114179327 seconds)
    (140/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.102688133 seconds)
    (141/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.08302327 seconds)
    (142/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.10513092 seconds)
    (143/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.167068218 seconds)
    (144/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.086164657 seconds)
    (145/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.107319362 seconds)
    (146/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.155150598 seconds)
    (147/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.112354721 seconds)
    (148/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.113091507 seconds)
    (149/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.112722351 seconds)
    (150/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.083778731 seconds)
    (151/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.144663727 seconds)
    (152/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.083042084 seconds)
    (153/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.108504366 seconds)
    (154/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.08159608 seconds)
    (155/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.081701584 seconds)
    (156/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.103490699 seconds)
    (157/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.081698948 seconds)
    (158/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.134536257 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.106782161 seconds)
    (160/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.111803659 seconds)
    (161/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.080997565 seconds)
    (162/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.15224317 seconds)
    (163/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.084515791 seconds)
    (164/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.144257893 seconds)
    (165/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.083904379 seconds)
    (166/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.128656557 seconds)
    (167/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11241524 seconds)
    (168/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.087872229 seconds)
    (169/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.113013715 seconds)
    (170/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.083295162 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.105775369 seconds)
    (172/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112969121 seconds)
    (173/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.13870102 seconds)
    (174/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.084118095 seconds)
    (175/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.087322897 seconds)
    (176/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.217638048 seconds)
    (177/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.084224017 seconds)
    (178/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.102054023 seconds)
    (179/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.088118415 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.151262223 seconds)
    (181/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.112926601 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.106126964 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.132353553 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.1063888 seconds)
    (185/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.080747706 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.105815191 seconds)
    (187/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.112662105 seconds)
    (188/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.081342282 seconds)
    (189/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.081488397 seconds)
    (190/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.083489422 seconds)
    (191/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.081870466 seconds)
    (192/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.139546445 seconds)
  done (took 27.745728146 seconds)
done (took 28.690053973 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.226673364 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.132931864 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.11278254 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.111812958 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.235591302 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.119282313 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.155065597 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114541962 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121847317 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.138425538 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.103845522 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125564986 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.137828875 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.206231221 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.141058082 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104950972 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.104112054 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.148842468 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.128601165 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.129316009 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.237122421 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105597839 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.14927113 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.104905422 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.236976346 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105903018 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.11188459 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.139356228 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.126362696 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.113897538 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.139429471 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.10453177 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.129768735 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.151908508 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.105065504 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113266513 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103250405 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.112360444 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.114748175 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113936456 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.152836776 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.114060859 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11280973 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.129333311 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115497875 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113561686 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10314662 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.141988296 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.102363025 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.113635136 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.13151758 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.129084844 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.112038564 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.126872699 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.103523987 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.104256089 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.147475168 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104880085 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126426511 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.127705433 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105603699 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104472716 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.113681748 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.129259861 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113412437 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103640584 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.13788896 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116244746 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110886343 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.130888185 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.105192929 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112501916 seconds)
done (took 10.193001773 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108818547 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.148512876 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.236524657 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.236940756 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.132582287 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.14675636 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.118693422 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128256661 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.142675969 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.123964202 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.141808914 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.160980248 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.240709767 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.11966844 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119727465 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.143034633 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115944228 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111966076 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.242390607 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.128357595 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.155515003 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.120446732 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.156861746 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.121108689 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107071377 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.166925638 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113220305 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115173893 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.131916751 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.117216177 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.129444342 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.132415644 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112278189 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125325551 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.149950756 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120532221 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.119406173 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.140553261 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109838096 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107258866 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141052758 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.124671353 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107370202 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.145465993 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.11759171 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.123427793 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.140771889 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121862473 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108680926 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.140550948 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110447356 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133834509 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.144618199 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.126034548 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.120541227 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.145791688 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122192176 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.120736636 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.136872707 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.120560815 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107929184 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.13376381 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110238057 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.130308486 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.136615125 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121210167 seconds)
  done (took 9.871803507 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126891739 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138583416 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.143628306 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119531399 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11378524 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.12699893 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101565634 seconds)
  done (took 1.862421433 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104203384 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.247481428 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.244108671 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.219343804 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.24372963 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.255371159 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127936433 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.129402398 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.139837013 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113923037 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.247379997 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.276523539 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.114548662 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.146851348 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.22258786 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.130886088 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.248496514 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.104987009 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.119391258 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.247720297 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121408402 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.163780319 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.118283671 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103637957 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.242764115 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104103171 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.294561957 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.150506317 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114610352 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.11784657 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.146157284 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.185723794 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.243338932 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.11730956 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.140875252 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.245414559 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.216244775 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.144698354 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.232105657 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.136147553 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.242111679 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.12084938 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.119654123 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.147093333 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119137862 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.233501696 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.125147328 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.119599664 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.144423513 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.226823214 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.142101389 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.217806233 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.143628935 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119309826 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114770642 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.148193208 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125544474 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118941478 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.255230966 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.149396192 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.220652589 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.246759367 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.245455319 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.248211656 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128742012 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.248383596 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.233495612 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118727585 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113348652 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.146941869 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.223704453 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.14548169 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116347633 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.2388467 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122297744 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.251900945 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.250709713 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116487021 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.117927708 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.135444031 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118732525 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.106004204 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.242600149 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117779797 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.143862088 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123961945 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117749495 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.147580281 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.110116001 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.15476664 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.119462201 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116758459 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.149408796 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.119876006 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.121903078 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.253080835 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115578061 seconds)
  done (took 17.203426815 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.107404488 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105949216 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.111160854 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.132834505 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106501508 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.107149754 seconds)
  done (took 1.691675093 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.14345572 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119806157 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.154517127 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122030396 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.168438428 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.253717646 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.26208615 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.112868698 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.165793696 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.132375869 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.255374669 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.257812871 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.256667255 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.124964069 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.26083807 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122893871 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.265056662 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117380817 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127550527 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.144387851 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.120084827 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123957946 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.143722263 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.245158219 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120600216 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.120563029 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.140399865 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.12904011 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127813346 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.141910739 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123975371 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.12002978 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.138141074 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.114474702 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.261452862 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.112107849 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.143021776 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.124332622 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.122657905 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.147177164 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.232498377 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.14453146 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127254689 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.12093036 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.141952488 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.111747837 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122585025 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.140549223 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.262466398 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123209358 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122886131 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.14896779 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121198869 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122746018 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.161608242 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115380469 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.123238362 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.261701698 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12358627 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.1407098 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120650302 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121177832 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.141955136 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.124039372 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.147577061 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122389459 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.112260755 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.145920825 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.118051014 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.120558382 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.147994577 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.121048607 seconds)
  done (took 11.921052066 seconds)
done (took 43.538685429 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.624602317 seconds)
  done (took 2.642352727 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.104987113 seconds)
  done (took 2.127024206 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.153294207 seconds)
  done (took 20.203754206 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.444713975 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.480381408 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.146579622 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150280404 seconds)
  done (took 3.241440564 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.839177997 seconds)
  done (took 1.879652632 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.298634317 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.266497803 seconds)
  done (took 1.588255013 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.818281304 seconds)
  done (took 1.853925591 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.557757423 seconds)
  done (took 2.586813571 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.305523904 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.241930989 seconds)
  done (took 1.588130044 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.653845594 seconds)
  done (took 1.692170315 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.351365247 seconds)
  done (took 20.39377776 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.261799713 seconds)
  done (took 1.304257066 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.285678589 seconds)
  done (took 1.331172568 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.72960902 seconds)
  done (took 4.77420319 seconds)
done (took 68.236553597 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.116076686 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.118126568 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.1181822 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.142515728 seconds)
  done (took 1.527833399 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125523236 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120646329 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.149501175 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120521618 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127011799 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.11927102 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.146437253 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122700618 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119372863 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.148848477 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120254554 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119196851 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.149185557 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119469705 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117240461 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.149531521 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.12459018 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120353698 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.147772792 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.121667146 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120547496 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.148660997 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125085872 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.12354149 seconds)
  done (took 4.151666889 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.116520684 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110328559 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.11278845 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.135142861 seconds)
  done (took 1.523570659 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128209962 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.133136399 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.156290305 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.129578974 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133400606 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.157410869 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119940015 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117050198 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.144915026 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.129501354 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.135469685 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.161724229 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132707176 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.121379757 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.157624257 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.11441045 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119864979 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.158416329 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126834837 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.129693997 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.147851184 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128197078 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.124729222 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.156055115 seconds)
  done (took 4.30885717 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.19506454 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.133305132 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.179170692 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.16576169 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.181003183 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.118640128 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.148150913 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.153212505 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.126809134 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.122807379 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.151040077 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.167334535 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.152720827 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.122339379 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.120635104 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.152160662 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.132715299 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.125321097 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.195545959 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.124947621 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.153451811 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.133483785 seconds)
  done (took 4.301036792 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122774364 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.111037999 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.106113154 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.1392564 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122684903 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.112585857 seconds)
  done (took 1.767262914 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.110642745 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104596803 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104705676 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.131297289 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108861953 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104740857 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.103647391 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.132407872 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104952141 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.104130037 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.132061916 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104580539 seconds)
  done (took 2.398492694 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207637499 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149312823 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259739893 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.400260741 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191903418 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162828684 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.316319015 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193342275 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.179836329 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166987766 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217031419 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164647426 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182051327 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189433908 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168500613 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.161421637 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196005786 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21109872 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172953191 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216333776 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187285673 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204689882 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190843757 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179354031 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141994865 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191902715 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.12070264 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12969379 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199196502 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194960028 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178791531 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180075581 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14268599 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224101147 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264261178 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180292801 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274628732 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162052956 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.200127082 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.192632228 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263196916 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141291262 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222419399 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18285189 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131412326 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216322786 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154747225 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.216098247 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134705823 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173108148 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21424074 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181981953 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.200777982 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138230727 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.331461056 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135761915 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.170385092 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181540372 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217872247 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231773007 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180224951 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.153053556 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202142341 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192164252 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243327073 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141015765 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.193375264 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12536228 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194073919 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.236026848 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183324769 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189630535 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.239866645 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131610906 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202882789 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170019733 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185848072 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23601277 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174174685 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.146745138 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153358977 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132961673 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155408571 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.190928002 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149569642 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217039344 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161588288 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.346274837 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180357289 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185462601 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163140836 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191358479 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162418981 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178780533 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.104008324 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170929377 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.162138556 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189895392 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130233388 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154912382 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170726945 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126173904 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182449829 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122989099 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197964688 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.136962624 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191964421 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174368676 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.159144888 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179446458 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177246948 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.164597183 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199337382 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193251623 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160021316 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132991788 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250922469 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197651628 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.139178846 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202055396 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197191092 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.179972854 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135774766 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195904827 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194051877 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172316601 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226822862 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139922161 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134738989 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.170621487 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173518436 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190731185 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159548231 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15709961 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.164575166 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222616606 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126439444 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169229526 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180741816 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162630254 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124337698 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165331576 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136291697 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.142292957 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.178230525 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.139729397 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182700584 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167631792 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195098377 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159457469 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164616528 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173534935 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160973852 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.169592886 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179121473 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120402917 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.205639728 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196149216 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158879711 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181961988 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.192387238 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209452539 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173517965 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159227387 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184378618 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157549388 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.121419143 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190484729 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169642818 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193730315 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.189941132 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209648113 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.19470277 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.163365328 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179594658 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170587028 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.214759632 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186056792 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.145361629 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203807038 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170691395 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.148814193 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.124441236 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.128621684 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165946942 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130623242 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138240122 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212201657 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19584375 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203840101 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168169666 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137499176 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.220568463 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.12545719 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191528597 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203314922 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140398258 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.218127515 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191936738 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208384605 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141913242 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193596777 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121065802 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15410107 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.135746061 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161005196 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166428553 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136028869 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172202658 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191895249 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202487232 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149956048 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21964118 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194006377 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.232026212 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.121729635 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.160349904 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199021319 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16773059 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.215645508 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134106373 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.191492942 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193037664 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171687055 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222119265 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1684735 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209823008 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196037361 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.194823207 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131223832 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176633175 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161928863 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168784797 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164347813 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174940505 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131965256 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153782078 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.168714951 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141868767 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217419675 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173347789 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179567335 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.18818705 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173585854 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15557102 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142569989 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204071582 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145937757 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.106420449 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200407198 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225796422 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150022812 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186382593 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174375201 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159929299 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.316383585 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217777445 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208177271 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136700965 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139471334 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201679613 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160639487 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193887388 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213712953 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142368012 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239116353 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173341261 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.173573824 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130469999 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177596288 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151912285 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.17081002 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151708723 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.1914913 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.145470866 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219374773 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137833288 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200266464 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178509491 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.174788347 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.150444765 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138840406 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257477087 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198690691 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202754449 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.166063699 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.194612067 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184602299 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122619781 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156159999 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131849855 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21665289 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13024975 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206422134 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.166687952 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212672937 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203753238 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163051832 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17138571 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.127495762 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196649442 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151917841 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214894989 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135838068 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.165743347 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191417739 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.159242427 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130555788 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191684519 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.291978094 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176550059 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173345676 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.138576077 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.288299399 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157159657 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132730627 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191963018 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170569116 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.163018276 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.183931053 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2036037 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142801446 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162378461 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165972989 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208895567 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184993186 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198435389 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206720476 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.146229982 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190891822 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163565439 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206126749 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146842427 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.177071702 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16087585 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225734891 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.178508678 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.161250777 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169656376 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200249919 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170412126 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205082827 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139409907 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214697003 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128473864 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196136187 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138273363 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153650416 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161598306 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193905991 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131951367 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208493978 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169939069 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161492442 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128274879 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176600436 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16601202 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168772183 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.13085144 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219187836 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.129319408 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209956743 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21330851 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15853324 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167752362 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174176369 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131986098 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13842312 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174355703 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133193276 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.176495255 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208790395 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130872764 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208246327 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196854816 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165970217 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188715299 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143787538 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.296421168 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128588557 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222104792 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152002168 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228300974 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150852533 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206518759 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170225083 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182431787 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164924617 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179683423 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219101104 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197576615 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.166308349 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161896537 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14419838 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168474549 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.134021244 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152057407 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198964032 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142027057 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.16726299 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.167487331 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17664693 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.147704894 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171462427 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203302412 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182079533 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218798178 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188239912 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166846785 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175779282 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207871688 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12851947 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.19635515 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173636513 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17523234 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152777547 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.16451052 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.138314323 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247008947 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125776488 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190155319 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174597234 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198333328 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173653021 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.16375839 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178796172 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169971714 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176257553 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127012834 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.182452979 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169821196 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163089775 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126476017 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202051901 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162740506 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.195054862 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143726376 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.204557261 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198140658 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124045685 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16574811 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313787072 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163110265 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226551426 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138328917 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16680424 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148388467 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158638798 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.197922238 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201096307 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.131938284 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129347006 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.176795063 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.160750771 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.170875018 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170691245 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213728596 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163145015 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217356581 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135683313 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283394617 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144180142 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201276143 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118948112 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.129246682 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17080965 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134902771 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172830548 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182859244 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247011206 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.192396908 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.149026665 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136222054 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.157968979 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131962778 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194359168 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153214199 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198374695 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149636621 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.105215297 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172754892 seconds)
  done (took 86.305521936 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.226334738 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.246778094 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.191687546 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.2401012 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253098868 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.312677665 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.282817482 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.266748904 seconds)
  done (took 3.153894567 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.128765503 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.162956768 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.144906802 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.146295073 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.111140925 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.492803277 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.163150001 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.123234503 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.161917286 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154924008 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.138440474 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.57659203 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.118420647 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.147359836 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123711348 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137544624 seconds)
  done (took 4.166474733 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.494486824 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.55685806 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.438501107 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.285452436 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.268650184 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.208012647 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.809854179 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.20453875 seconds)
  done (took 13.404665481 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.174904162 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.165370827 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.46182399 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.312013671 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.184703409 seconds)
  done (took 2.44533109 seconds)
done (took 130.489872555 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.131358958 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125578359 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.124323363 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.15687475 seconds)
  done (took 1.673117617 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.20172516 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.093446473 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.095782818 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.121935638 seconds)
  done (took 1.658151166 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.469697963 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.093301066 seconds)
  done (took 1.736970997 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.15603276 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.143950361 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.168218359 seconds)
  done (took 1.626911653 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.142500824 seconds)
  done (took 1.291595523 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.124453883 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.132797238 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.280507025 seconds)
  done (took 1.69210202 seconds)
done (took 10.832874574 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.128321003 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.932595619 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.435747306 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136461407 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.71478093 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.43006234 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.461281028 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.177624421 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.177847552 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.139307506 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134144648 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.692683771 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.477392832 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.876280096 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.425311908 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.900114243 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696475478 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112936949 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.146513336 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114141894 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.441855404 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138135974 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114132468 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113338713 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.717709135 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42341682 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111094712 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.917828263 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111885408 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116139645 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.428677202 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113365455 seconds)
  done (took 21.195761116 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121795855 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.169661043 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148575568 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114348259 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115259111 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.141512564 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124342352 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124354227 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207348128 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112082749 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.163368498 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111953608 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117582349 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.14016409 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.13807477 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111229094 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115110456 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.145517779 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120251402 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113817824 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163572525 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.11223001 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113319918 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143482058 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112639221 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134658827 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.14128292 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124864369 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111726849 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.146199886 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117174088 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112182337 seconds)
  done (took 5.350140145 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.169292596 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179767712 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.151126403 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151094898 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.193527982 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114439948 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.201104043 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.180122493 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.209201718 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113391791 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133704659 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.140715514 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155880468 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112775633 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.167205904 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112311341 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115424991 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142891108 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121252503 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114113132 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.164391308 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112349672 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113384945 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143724267 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.113428932 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136481938 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141562319 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.126030671 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112343491 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.146333848 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118960594 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112637661 seconds)
  done (took 5.685214886 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.135961501 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127528146 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135428922 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.165895056 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121512837 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125202336 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.158109517 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123265043 seconds)
  done (took 2.257778927 seconds)
done (took 35.644562226 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.145288469 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130610188 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132984083 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.157524372 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.226775279 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.152126764 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.13095286 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.119339777 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.157932997 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134695387 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.115357884 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.15117959 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133894618 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.122913618 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.25943842 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.127543318 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.26507251 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.261373249 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.120916495 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.128695905 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.152026413 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.234191528 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.157198927 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.121662996 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.258551143 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.116568806 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.255187496 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123102521 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.122672375 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.113413724 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.261331075 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.156688172 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.121238626 seconds)
  done (took 6.515523221 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.249767366 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.155295281 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.122918519 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.121882744 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121713677 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.151908757 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.248133162 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.154562779 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.12086069 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119628515 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.153074639 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.229508607 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.159977218 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.118974102 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.123104076 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111877594 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.281090986 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.123225543 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.146990085 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.096474807 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116686257 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.120114201 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.292986917 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.149397356 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.122509935 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.122229189 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.123218422 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.158134356 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.123916307 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122521673 seconds)
  done (took 5.733807207 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.133904744 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135239137 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.140464456 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.222924785 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.151794715 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.165269948 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.141266114 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.136370608 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.174493895 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.116380452 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.130123263 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.182930529 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.132240165 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125407202 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145339442 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133912163 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.137800721 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.147085421 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124618537 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132604594 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.1665649 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133505615 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138876541 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.154994169 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.114562004 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122045715 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.154962694 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127643498 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123125636 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.128931135 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.147622513 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118885178 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.117205025 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.180765017 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.116972141 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.158920487 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143169701 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127915099 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.158301603 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.149923193 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.118004144 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.146983612 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.142472832 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169860729 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.146909307 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128590497 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127605028 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.128716911 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.144662291 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133832212 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.156980263 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.144795532 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.135993277 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.113838253 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.144635659 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.125212454 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.115631507 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.148394429 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130644452 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116943264 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.171124426 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123964238 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126122362 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.147507351 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.127568537 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.115206125 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.114047797 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.150138918 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142987101 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122683419 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.182795376 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.11630343 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.126429483 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.159958357 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126712534 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12657302 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.144452381 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.128129196 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126306605 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.151168088 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.130049083 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.117681935 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117828614 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.16349192 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.136879526 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.129570357 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.158332612 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129790817 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117772487 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.148480205 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133300832 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115748565 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.151704178 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.129547546 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.115985226 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.148864256 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129898512 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127910341 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112242167 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.172636967 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.119954792 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114509937 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.172080349 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119004746 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.121067262 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.157225636 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.157943898 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.115453522 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.159125629 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.130766042 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114787366 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.154589251 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.120114484 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.114344345 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.165313103 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.132312474 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.123196608 seconds)
  done (took 17.308364483 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.368434627 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.348982252 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.19013753 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.437684517 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.12921593 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.277976071 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.347111525 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.348938574 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.115981429 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181880628 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.177020259 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.315772019 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.115569223 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.178182104 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.350464615 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.410092749 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.179257468 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.152717942 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.183855802 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.129592741 seconds)
  done (took 6.129433689 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.142322546 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.151997647 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.169395645 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.144987753 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125914424 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.163801594 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116824716 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138115701 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.159230046 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126766235 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117920798 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.162731583 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.129908603 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.133952593 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.161442648 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.150988063 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.123267173 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.151645639 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.139736224 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120413585 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134712885 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143237626 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.125329309 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.16899202 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.137444129 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126423136 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.1457769 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122675628 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.123433561 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.124246483 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.15177814 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136100423 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.123407739 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.138229736 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128978751 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.131309289 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.155390954 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.120310844 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.121272513 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.118340708 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.162084964 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.129420393 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124071515 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.134138901 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.136309721 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.113188102 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.12850886 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.159199108 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.108668017 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.13529743 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.160325573 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.130214176 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.122910949 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.168839279 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.123105527 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.132181076 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.156726011 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.130714553 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120438455 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.143606269 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114874691 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.120288412 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.124167965 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.161553773 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128976779 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135196253 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.162370611 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.116256748 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119060595 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.150245519 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119875082 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.129556311 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.166692362 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.12569486 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.121963243 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.157646393 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.124293776 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.097017513 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123824583 seconds)
  done (took 11.933742817 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.146275112 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126377807 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.133548976 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.181329556 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.128927879 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.121600947 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.156870207 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.13560457 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12985065 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.168525106 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.131128903 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128857541 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.169652234 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126270871 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126320634 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.16302809 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.13107068 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.153489668 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.165695942 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142968951 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.130383696 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.15322331 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.129050914 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.127495972 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.177098161 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127235225 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141833337 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.161744127 seconds)
  done (took 5.221301648 seconds)
done (took 54.0082016 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.356085922 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.531024693 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.301223708 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.302204857 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.325902328 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.32961685 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.298859332 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.302828926 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.841521812 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.265268834 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.30410366 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.302821804 seconds)
done (took 29.657719178 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.599865225 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.451806495 seconds)
    (2/2) benchmarking "String"...
    done (took 1.586363287 seconds)
  done (took 4.242621929 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.292604091 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.293101841 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.545142125 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.294262558 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.293481085 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.29370492 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.29450989 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.299116966 seconds)
  done (took 16.500008252 seconds)
done (took 26.824697181 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.354254624 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.593708963 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.564418206 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.281220646 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.288172542 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.28836519 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.29341396 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.336365089 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.297727072 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.281378502 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.724209556 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.58369023 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.297113663 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.706572563 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.277835251 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.305341997 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.305869068 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.638155898 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.288117121 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.328457712 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.265435504 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.267425167 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.320873649 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.292529821 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.29901448 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.305541346 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.334853185 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.289004172 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.635150853 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.316693204 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.328949975 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.292944973 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.330604108 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.290687454 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.307736582 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.295711035 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.644878792 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.30286665 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.271808512 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.319463721 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.643041688 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.301313283 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.291797497 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.298461111 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.268860501 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.298645432 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.294511782 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.412483808 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.327163572 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.296835427 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.387108223 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.742787624 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.294705339 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.311585688 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.306312642 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.686717223 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.323032097 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.417143954 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.318919953 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.308923255 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.291583868 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.291548427 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.380036964 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.305458511 seconds)
  done (took 150.731141143 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.293175198 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.296842948 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.297371778 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.316932989 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.29555554 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.297144692 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.290975235 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.29153012 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.297658283 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.32407976 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.297598734 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.292264311 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.297909853 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.26033713 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.302782917 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.311461536 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.299275133 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.293533466 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.322270844 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.293483803 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.296107853 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.298325133 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.315552681 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.293590932 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.339968626 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.379979027 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.307175035 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.297954413 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.304507568 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.292591683 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.305221943 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.299925406 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.979365072 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.166680036 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.302660895 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.330140018 seconds)
  done (took 83.67237804 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.293624708 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.294663907 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.294115416 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.293565922 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.329352212 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.292473085 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.908096114 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.909010997 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.343776817 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.414373149 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.296958861 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.8224522 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.587034103 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.296204737 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.389439701 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.30774549 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.29930845 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.392176843 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.323282199 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.295897417 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.295547461 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.910916316 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.3066471 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.6387553 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.485977359 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.312368399 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.33026885 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.688022442 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.296275258 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.333175912 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.638168901 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.348795128 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.29514335 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.678949135 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.595573332 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.410639272 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.296640922 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.332946361 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.295849089 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.584728089 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.296017167 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.29868331 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.300761812 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.97537153 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.296908447 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.912525924 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.299435797 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.32884847 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.296713888 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.297500054 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.354235504 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.060747212 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.298069977 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.297404199 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.298721713 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.299058246 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.298142077 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.333370292 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.319705243 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.219874135 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.297009711 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.297730166 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.300435912 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.332463327 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.297434941 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.810851369 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.297647306 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.442758097 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.360634495 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.397440898 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.914651133 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.298754829 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.396808396 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.420312518 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.298854322 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.299347895 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.298787249 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.298934093 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.412931488 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.299430657 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.298510818 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.032080829 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.48549688 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.317399367 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.807511212 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.398854119 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.298543507 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.729270376 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.303828609 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.298556974 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.088397068 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.397757405 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.3004193 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.298646964 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.300439215 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.034989373 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.918587292 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.668493744 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.305925605 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.836644753 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.305460837 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.208036012 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.916280418 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.972842178 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.300935114 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.415448688 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.487559068 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.319517725 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.301451312 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.801238426 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.300904844 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.35468178 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.306852762 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.704329505 seconds)
  done (took 390.324232013 seconds)
done (took 625.913380413 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.181101182 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.124819275 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.279547 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.132500183 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.122990864 seconds)
  done (took 12.037659033 seconds)
done (took 13.235321864 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.505580011 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.505499825 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.368173829 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.508037834 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.337211827 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.524503006 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.488851584 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.318228314 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.419018433 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.390774959 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.419430192 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.360055377 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.339671631 seconds)
  done (took 19.681969227 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.602852221 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.314461129 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.368837517 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.58121423 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.34952455 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.604583162 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.637472076 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.314516352 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.475640933 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.326364857 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.32508065 seconds)
  done (took 19.099914463 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.620839961 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.315016595 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.390221433 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.582346589 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.350620623 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.613280595 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.663138974 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.31555271 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.486356264 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.32824114 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.324588543 seconds)
  done (took 19.188133792 seconds)
done (took 59.168900973 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.342285979 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.409357518 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.338144043 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.322204418 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.322459612 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.321059185 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.324618492 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.321953386 seconds)
  done (took 11.901114156 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.322746095 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.322550051 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.320406891 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.320462505 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.322611249 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.319216896 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.320568042 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.320123133 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.321893804 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.32140452 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.320721274 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.321976768 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.321972627 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.322707827 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.322451456 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.321606858 seconds)
  done (took 22.34397544 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.323454957 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.320229456 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.321721722 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.322517074 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.32099083 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.323178735 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.322250537 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.322996188 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.321868311 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.323209535 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.323212662 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.324306601 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.321215739 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.32184648 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.323264839 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.323825195 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.322026194 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.322441659 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.326295672 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.323458275 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.323397084 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.32249574 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.323399805 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.323340189 seconds)
  done (took 32.948343964 seconds)
done (took 68.39511433 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.318772903 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.329240052 seconds)
  done (took 5.849325755 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.38108813 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.37985337 seconds)
  done (took 3.9642937 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.323111667 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.323029179 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.322568315 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.323184548 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.32300723 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.324562744 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.323869305 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.323960603 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.324115403 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.323656108 seconds)
  done (took 14.437984956 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.324102912 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.324752955 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.324994209 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.325491077 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.322124511 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.325203407 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.324120151 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.324796697 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.325276044 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.324477825 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.325992039 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.32424678 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.325687166 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.325905304 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.324377448 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.325366088 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.325168874 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.32534317 seconds)
  done (took 25.051569505 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.336105977 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.343310291 seconds)
  done (took 3.883194632 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.451727661 seconds)
    (2/7) benchmarking "second"...
    done (took 1.365846925 seconds)
    (3/7) benchmarking "month"...
    done (took 1.429015114 seconds)
    (4/7) benchmarking "year"...
    done (took 1.420360371 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.366771082 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.345692709 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.365148937 seconds)
  done (took 10.947848024 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.310206074 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.617177543 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.79906854 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.470228585 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.301665324 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.327757139 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.289768148 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.349259196 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.329348031 seconds)
  done (took 14.998434404 seconds)
done (took 80.337947085 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.30970252 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.389819806 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.330510001 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.328811006 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.621512219 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.370977065 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.316875732 seconds)
done (took 16.875300504 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.295558545 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.293449575 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.303977815 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.321628569 seconds)
  done (took 10.420786962 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.312198463 seconds)
    (2/2) benchmarking "read"...
    done (took 1.637338296 seconds)
  done (took 5.154583812 seconds)
done (took 16.78385124 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.328161134 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.32697073 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.326067749 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.326233449 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.328390147 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.327725709 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.32684942 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.329232515 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.329151004 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.32849484 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.329351463 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.328688163 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.328660517 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.327243111 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327948485 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.329048737 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.32782763 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.32848811 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.329463149 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.328334429 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.329064648 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.33079002 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.329404271 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.328816333 seconds)
  done (took 33.087774727 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.330411813 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.327859528 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.32727986 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.327900043 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.328659027 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.329925573 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.327803295 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.328802404 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.330165206 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.329977654 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.328914794 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.329156975 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.3302535 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.329352045 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330038877 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.329179738 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.329754347 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.328862283 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329330514 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.331966846 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.330023598 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329062006 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.329969777 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.33004268 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.330545228 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.329482022 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.330112746 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.331702246 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.330634722 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.329082646 seconds)
  done (took 41.095927545 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.336364769 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.336324383 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.331123036 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.330886474 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.331029743 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.33017624 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.330872806 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.332763385 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.333367664 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.330768275 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.330998154 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.331604176 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.332223561 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.332851134 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.332565761 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.332701739 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.330488762 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.332391608 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.331734496 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.332325652 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.332397931 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.331711186 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.332127444 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.333132704 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.332670164 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.333271746 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.333205903 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.33095456 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.331915118 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.332255958 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.332078057 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.331891289 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.332415322 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.332446439 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.33204856 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.332958032 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.337644367 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.340393765 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.332040819 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.332334599 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.332310195 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.333169719 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.333729204 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.332919141 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.334307152 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.333650291 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.332578338 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.335242401 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.332615576 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.333022475 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.333737104 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.333867761 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.334768391 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.333479808 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.33289011 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.333765687 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.334656991 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.333967008 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.335381825 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.334098238 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.333635172 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.333946113 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.334409521 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.335615218 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.334971328 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.335736057 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.33324643 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.335936735 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.335422174 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.335389192 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.335645434 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.336234839 seconds)
  done (took 97.209139829 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.33433349 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.336095018 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.335522489 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.335240761 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.335161089 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.336029183 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.335064698 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.337538602 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335343297 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.336880603 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335999998 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.334723165 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.335493949 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.336810667 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.337282057 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.336298111 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.335495677 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.336836865 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.336877167 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.336354512 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.337388335 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.337202382 seconds)
  done (took 30.60747732 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.338019439 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.338600353 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.336331511 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.338340925 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.340015216 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.341094607 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.339069619 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.338537267 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335936433 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.337522937 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.337195819 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.338152492 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.340438984 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.337415009 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.34064687 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.340331247 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.338511002 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.343107096 seconds)
  done (took 25.314561161 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.340050996 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.338792312 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.338603032 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.338012578 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.339501572 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.339144975 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.339318233 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.338713615 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.338077139 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.339021971 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.33829992 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.338568675 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.338646336 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.338207376 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.339067579 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.339016616 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.339454939 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338365194 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.339918402 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.340213616 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.34147933 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.340288192 seconds)
  done (took 30.677139359 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.340589034 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.337608134 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.339841066 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.341318597 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.33885762 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.339898761 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.340041577 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.338685372 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.341811788 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.339463179 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.339796616 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.339153327 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.341923676 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.339331684 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.34186281 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.341021994 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.340489814 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.339995392 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.342945575 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.339266903 seconds)
  done (took 28.020388663 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.342475179 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.341368226 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.342018085 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.341492952 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.341255222 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.341828438 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.342020724 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.343448929 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.342498269 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.342550398 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.341725379 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.341366167 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.342975389 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.342712472 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.34232683 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.342688008 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.34261434 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.343362706 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.344575586 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.34306394 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.343820351 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.343730061 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.344439752 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.344259678 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.34330961 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.342102513 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.344095231 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.343211621 seconds)
  done (took 38.815799419 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.344978289 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.343897185 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.341734174 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.34394935 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.342587871 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.342812834 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.343748501 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.342661922 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.3424563 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.343556538 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.343156756 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.344321418 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.343513422 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.342777102 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.342769926 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.344226253 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.344261089 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.343768497 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.344111852 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.343834388 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.34323762 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.345106483 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.344612046 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.343274948 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.344048583 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.344470604 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.344452456 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.346069104 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.346446778 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.344036793 seconds)
  done (took 41.533566691 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.364576427 seconds)
    (2/2) benchmarking "in"...
    done (took 1.362831965 seconds)
  done (took 3.947414996 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.346846545 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.346962583 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.345840033 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.346552203 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.34519324 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.347251891 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.346602424 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.345273968 seconds)
  done (took 11.991691744 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.33780806 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.348287039 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.346136745 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.347062616 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.345228687 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.33824893 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.34691887 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.352239633 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.338610724 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.3410635 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.346533786 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.347875977 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.342136264 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.340799101 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.340405274 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.342363791 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.349763258 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.348797643 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.346856247 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.347732398 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.347022084 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.342110515 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.344157911 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.351403763 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.342338597 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.352223799 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.34856703 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.351480525 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.341585875 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.347843301 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.344042261 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.350946927 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.347948935 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.348707139 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.350931773 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.349700642 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.350904684 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.349876764 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.349330837 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.354219934 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.349743605 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.347472588 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.343771769 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.346255651 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.347142943 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.354321569 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.35018251 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.350674999 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.342653213 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.347626566 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.357008115 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.343091156 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.351185037 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.346149353 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.348487349 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.352693482 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.357155101 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.345358672 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.349543643 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.354550487 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.360347014 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.36074647 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.350734793 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.356957814 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.354295821 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.368999842 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.355149454 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.358132208 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.351327051 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.352495324 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.354181887 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.364251144 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.364249298 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.356764361 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.353232681 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.351888007 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.346323516 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.356227071 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.35374008 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.355827444 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.358600226 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.353350125 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.353800058 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.36708704 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.347602015 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.356129609 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.352548045 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.352222854 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.344447101 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.35652812 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.362633676 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.353241349 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.345656665 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.348095597 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.351181789 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.354824048 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.344938971 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.349412714 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.356882362 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.354193976 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.353657421 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.348996331 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.358167456 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.358380131 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.354954969 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.356111815 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.361817944 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.348195869 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.358960018 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.362945186 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.354739545 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.348367702 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.353753697 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.358954173 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.349485304 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.35668888 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.360063876 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.349919573 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.360454288 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.355850086 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.355556698 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.375036467 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.361970247 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.356309304 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.350455001 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.36656978 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.355519072 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.353107637 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.362497257 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.355644321 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.355822032 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.354230741 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.362309173 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.350774754 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.359009496 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.350471552 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.3593278 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.355457345 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.357433986 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.352945213 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.355757193 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.353544212 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.35665668 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.359730002 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.361792601 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.353704399 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.362523017 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.356454711 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.355905261 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.359256624 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.364264163 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.357398914 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.349728278 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.362017083 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.349876243 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.360447173 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.351220118 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.361487129 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.357667199 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.356984388 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.358005158 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.350954432 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.354915746 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.362186845 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.356817633 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.357416274 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.3630266 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.358245159 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.357670569 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.351991513 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.3604128 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.349488601 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.357270594 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.366358044 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.359120159 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.358578557 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.357488069 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.364675249 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.359031745 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.358818308 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.353739167 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.360390361 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.362962023 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.36067166 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.368475076 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.358979024 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.360255462 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.353504155 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.3540682 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.361139433 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.353234736 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.368719366 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.366919724 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.372286463 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.356688598 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.361843626 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.352545938 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.362493017 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.359045061 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.366858345 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.360616194 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.360347814 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.356075606 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.363877272 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.355832968 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.365091225 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.350670885 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.363059572 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.360854267 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.360322009 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.361015709 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.354043932 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.358249223 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.36458808 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.360475177 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.36165017 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.353499954 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.365106664 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.353977883 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.356061574 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.365242979 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.362318676 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.363476785 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.36937767 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.361176369 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.367257985 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.363912022 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.358086958 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.364610162 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.359361916 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.361575288 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.366649032 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.365905984 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.359355119 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.368552692 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.364716897 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.356236176 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.364942193 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.371828559 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.362692214 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.358348266 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.370542616 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.362484779 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.364054724 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.363684963 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.35664817 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.366798073 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.365865274 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.374512297 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.357334978 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.367754013 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.360140419 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.367773623 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.3610804 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.366062888 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.363328275 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.367248986 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.372463645 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.364808594 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.357138704 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.369484832 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.364494639 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.363352238 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.359991959 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.371417967 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.367209702 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.367292516 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.363190718 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.363120793 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.368223611 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.356811444 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.367050078 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.358835275 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.376356663 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.38722234 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.368439611 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.370080454 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.368505775 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.367573952 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.368986549 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.361389273 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.360783549 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.364393648 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.3619761 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.360470406 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.367601213 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.360774189 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.369527151 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.364366903 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.369248674 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.370048309 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.36705095 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.358789881 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.370651645 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.366426904 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.366039283 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.35899835 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.369695168 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.362637498 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.368353178 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.368303823 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.362953326 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.374075078 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.372281166 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.36523354 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.364350696 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.364578345 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.362244742 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.362575592 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.374102448 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.362008565 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.374551634 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.362542813 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.368653373 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.364553134 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.372856647 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.378607557 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.363045035 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.376506757 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.36929555 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.360050844 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.360887564 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.371458165 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.373390918 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.380901932 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.361875903 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.373995244 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.369467083 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.370473616 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.368260609 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.369115847 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.370886761 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.367918005 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.375131552 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.374448923 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.366878142 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.371609418 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.379450917 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.369101653 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.369493983 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.359840809 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.371903567 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.381117725 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.365509146 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.369430071 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.364882158 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.372450109 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.371413323 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.369282571 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.371334754 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.371461664 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.374250906 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.377081112 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.373004717 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.370385332 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.37405644 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.3832871 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.376271586 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.383091884 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.366960008 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.376185815 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.37099144 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.365323929 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.367666999 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.366518272 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.374952651 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.362822547 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.376056805 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.372587304 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.368945788 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.374586887 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.378961302 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.365453233 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.375832655 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.395559856 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.362963131 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.375232783 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.371931109 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.364578643 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.374515135 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.373545708 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.363843837 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.369056375 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.374533813 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.378712407 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.367195153 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.376608218 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.3675444 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.378156047 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.375299115 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.373126001 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.372586402 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.372467704 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.366024247 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.377881783 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.373311143 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.383138411 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.367732099 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.374273697 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.369585044 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.381404051 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.385404719 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.369265701 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.379370593 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.3763485 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.366908769 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.37321242 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.381434638 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.368742817 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.378237378 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.368085291 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.371919409 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.372489604 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.375993609 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.379309986 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.37983576 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.367575417 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.368922491 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.376724055 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.375050713 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.37532442 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.371005519 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.383103603 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.368896404 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.368886463 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.377447263 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.370214453 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.381768089 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.369619331 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.376160349 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.373762003 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.378697955 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.374988303 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.376013907 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.367915143 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.370739485 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.383010553 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.384154774 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.37644544 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.376281793 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.379767377 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.370249658 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.375749893 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.376849096 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.37220409 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.372967598 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.379994925 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.370803401 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.374980478 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.373304281 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.378493099 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.381091014 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.381687 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.37188102 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.384038899 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.386259055 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.384660544 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.370675116 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.372794645 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.373556916 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.377934313 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.379282286 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.370883368 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.386406883 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.385993108 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.381679216 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.378348558 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.382146018 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.370947048 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.383415582 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.379228288 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.376949799 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.386729719 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.375110165 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.386663747 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.379858791 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.379217164 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.372321531 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.372905433 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.375229804 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.37887143 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.38110123 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.380271178 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.38499031 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.378853944 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.386385865 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.379070095 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.380277199 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.380250444 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.37111829 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.383155584 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.373423194 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.381249494 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.384621451 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.375388546 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.384785369 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.379137248 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.375756769 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.381713503 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.387245508 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.380150287 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.374377875 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.378413161 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.386739522 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.39459945 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.381252497 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.374601943 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.377837896 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.385317046 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.381312833 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.379859791 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.376393029 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.393236213 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.395484364 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.374915368 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.380828145 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.386377853 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.392685016 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.379867297 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.381697036 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.37814833 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.382410333 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.389593999 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.382190959 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.384442324 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.38867344 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.37942115 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.385735581 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.376191594 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.38204827 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.385345912 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.394444671 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.384021039 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.379260354 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.39859459 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.396533361 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.386629521 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.410886449 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.391082161 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.385359106 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.389276927 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.377224648 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.386364776 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.380571941 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.389062509 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.383050874 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.384016886 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.383309531 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.37643303 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.386974918 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.392987506 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.394788132 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.383849018 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.374997118 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.381339488 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.386675618 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.384194789 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.385711508 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.385192416 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.384476101 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.383921696 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.378217564 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.39636971 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.404829474 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.391069883 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.384718138 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.385169381 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.385316111 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.392779978 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.387241252 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.392574201 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.384785441 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.385116351 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.383226677 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.395321419 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.388165261 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.380628309 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.380919142 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.381018792 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.388646991 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.395900181 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.410422134 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.390697315 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.390244063 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.388714307 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.385678357 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.380440085 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.390933712 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.387531079 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.379878855 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.382378806 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.389853556 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.388445005 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.388665534 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.381287722 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.393643716 seconds)
  done (took 816.358660823 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.385901606 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.385600435 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.386479192 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.386641769 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.386955902 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.386057463 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.386523572 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.386786144 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.387076925 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.3872855 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.387216277 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.387632034 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.389127613 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.388222346 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.386712171 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.387313162 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.389866278 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.38878036 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.388712777 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.388078058 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.386870365 seconds)
  done (took 30.389743141 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.389849309 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.388781909 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.389278516 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.389364176 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.389587864 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.390358526 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.388916028 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.391363686 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.389099468 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.388946372 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.389626862 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.389500411 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.389111357 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.388113935 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.390740893 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.390456672 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.387839525 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.389843004 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.388580626 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.389320169 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.388642841 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.39088306 seconds)
  done (took 31.825260137 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.389702426 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.388882743 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.382874547 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.393574339 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.38883794 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.388592556 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.38994647 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.391114584 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.390936186 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.383951763 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.38488237 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.384822888 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.38981927 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.397701172 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.386821899 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.396867965 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.390298508 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.390189063 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.392196611 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.391116957 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.394567243 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.403664215 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.390891693 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.382368273 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.393468381 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.391503585 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.391167382 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.390882176 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.383167709 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.395079325 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.391981197 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.38653414 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.394780768 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.394375187 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.387196127 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.39584417 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.392687329 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.392575711 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.393538802 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.393568732 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.415920119 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.394522325 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.396015218 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.405828275 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.39331116 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.386022618 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.399864299 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.392475069 seconds)
  done (took 68.076641976 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.393989605 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.393308526 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.394071643 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.391333876 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.393682531 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.394121058 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.394328987 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.393846884 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.392543131 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.393906602 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.393848157 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.393660272 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.394256116 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.393735397 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.394718859 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.392783922 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.393140772 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.395653248 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.393669489 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.393733665 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.393356469 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.394108595 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.394492158 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.394021713 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.394796172 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.394430453 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.392475947 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.394440929 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.395248234 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.396590487 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.394686687 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.39391975 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.394773516 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.395324904 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.394408417 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.395847885 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.395581657 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.395295857 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.394966417 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.393993711 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.39656527 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.396978105 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.395241061 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.394575938 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.395672742 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.395958274 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.396413175 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.39482209 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.396397972 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.395984146 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.39502951 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.395441674 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.394295706 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.395139417 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.396159726 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.398031436 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.395398144 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.395336329 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.39592109 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.39714493 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.396011334 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.39717777 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.396988926 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.396554727 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.396558945 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.396627534 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.39720711 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.397969351 seconds)
  done (took 96.122505478 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.397236752 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.398482277 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.396871438 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.398446915 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.398805428 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.398745902 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.397866651 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.398613309 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.39858758 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.397446848 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.39798763 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.39801949 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.39852888 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.39780141 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.399157994 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.398834215 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.397633462 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.397959321 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.398156099 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.398897026 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.399413774 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.399985998 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.400305332 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.39986571 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.401025444 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.401453104 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.399403015 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.401180772 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.398559462 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.399734714 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.399009193 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.400903091 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.400937277 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.399477984 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.400426913 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.403111542 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.398993379 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.400255449 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.400584662 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.400305503 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.399514886 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.401741496 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.400474608 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.400273811 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.402166681 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.399412938 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.400269467 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.401960874 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.401709579 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.400471549 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.401695008 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.40231148 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.40196365 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.402267913 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.403348954 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.400701287 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.402132862 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.401777781 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.401098809 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.402637874 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.402829661 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.403287722 seconds)
  done (took 88.06999565 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.401326259 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.402874389 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.402409522 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.40115217 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.401886477 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.401034229 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.403111777 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.404250323 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.402750038 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.401967645 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.402596079 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.402982303 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.403771113 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.40407663 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.402016109 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.403673971 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.404136939 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.403809625 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.403742911 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.404018014 seconds)
  done (took 29.326421932 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.403862525 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.404973397 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.402605229 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.404464658 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.404111432 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.403630081 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.403467314 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.403528396 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.403870852 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.40263785 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.403808836 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.404439647 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.403049998 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.404469354 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.403783829 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.40477353 seconds)
  done (took 23.729986676 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.403915069 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.405216916 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.404675409 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.404926758 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.404499071 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.405223171 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.404891358 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.404455227 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.404113924 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.405866965 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.403533005 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.404751411 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.403835575 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.404462783 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.405372729 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.404988853 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.405164413 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.40516737 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.404813262 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.405439333 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.406429617 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.404334789 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.40553361 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.405025374 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.405686307 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.405314587 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.405635593 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.405568566 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.406568689 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.406932681 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.406245617 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.405678083 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.406297492 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.407181867 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.407255077 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.40655655 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.408105939 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.40653557 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.408316736 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.40742179 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.405892844 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.408089387 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.408190374 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.407405376 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.40907434 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.40774923 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.407883416 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.407968649 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.407283764 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.406467877 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.408308931 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.408113225 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.408008164 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.407309523 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.407659869 seconds)
  done (took 78.609424607 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.407715818 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.40856688 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.407871981 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.407403779 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.409537174 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.408790385 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.408260581 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.410247181 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.409470628 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.408768244 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.408124352 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.408938461 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.408722748 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.409288762 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.408454723 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.409661714 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.409075247 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.409358569 seconds)
  done (took 26.631596218 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.408522513 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.409722197 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.410018267 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.410607072 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.409272168 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.411493828 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.408306724 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.40987635 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.409672961 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.409257723 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.410321175 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.409611051 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.409986485 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.411107789 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.412479835 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.409313302 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.410594058 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.40896867 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.410270051 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.411169289 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.410582119 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.410128098 seconds)
  done (took 32.296782204 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.401943682 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.401340487 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.401183497 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.419649463 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.418910602 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.401979027 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.402485169 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.400620271 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.425547088 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.452381529 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.446338999 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.418933362 seconds)
  done (took 18.267036969 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41301148 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.411669592 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.411808406 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.411416004 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412746643 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.411156917 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.410938305 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.411952437 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.413403459 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413512243 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.41267649 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412101079 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.412851371 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.412867537 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.412674516 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.412789047 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.413909739 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413512359 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.412737002 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.411914707 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413910458 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.414225473 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413289759 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41457752 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.413042979 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413925264 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.414759287 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.412396904 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.413449481 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.414077137 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.413805246 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413341792 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.414751605 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.413447653 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.413813979 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.412927717 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.413716638 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.414038055 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.414214495 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413551471 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.413737957 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.414167749 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.41354558 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41541042 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.414431598 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414844258 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414318751 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415210103 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.413853914 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.414603651 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415790478 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41586987 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.414484341 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.414809972 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.415824795 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.415797994 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418505776 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.414206969 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.415303011 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415195348 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.415294545 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.415503954 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415632457 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.41518211 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416851694 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.415032763 seconds)
  done (took 94.596507991 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.415618899 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.416514208 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.415388428 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41702187 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.414747907 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416790825 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.415244225 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.417052406 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.416696545 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.415503219 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.416909884 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416773879 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.415756852 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.416705958 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417742373 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.416930975 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.418054721 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41711367 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419028931 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416959331 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416215263 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417275354 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.418726527 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418397441 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418223054 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.416772415 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.416077927 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419364487 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.418059889 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417033739 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417398268 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.418328276 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.41745499 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.418342104 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.416756299 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.418682121 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.417537351 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.419045017 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.417165095 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.417203774 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419986056 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.419173937 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.419400241 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419053979 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419674446 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.419258047 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.418943767 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419580661 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.418466655 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419542605 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.419339979 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.419687098 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.419633047 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.418510556 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.419444654 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.420721207 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421067375 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.420247764 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.420014532 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.420753869 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.420563746 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.420756861 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.421652058 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.41993937 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.420606497 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.420404118 seconds)
  done (took 94.885741633 seconds)
done (took 1912.695266237 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.576860425 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.538813401 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.410263437 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.478845634 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.41196541 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.411367562 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.430334413 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.410668254 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.411378507 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.41161585 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.410184954 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.610164093 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.466284832 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.411151306 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.410348518 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.50862133 seconds)
  done (took 28.591397012 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.443002892 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.424130777 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.548368177 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.417405115 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.443471138 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.633774882 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.480608999 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.417924761 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.62280425 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.444680004 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.413604235 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.442160559 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.418564918 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.42851928 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.438967592 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.63320223 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.713648569 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.416184498 seconds)
  done (took 31.065415882 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.948317641 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.416237438 seconds)
  done (took 5.650006235 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.441007393 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.417798787 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.420435309 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.41598489 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.409736433 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.408146586 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.416315711 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.412408421 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.417173506 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.564226413 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.418253759 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.431952167 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.436971283 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.417754012 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.425554866 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.468931041 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.571182576 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.426592067 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.425704666 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.425690852 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.417442694 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.519127827 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.465379182 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.426921416 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.564497007 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.421473611 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.421682114 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.425170475 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.542969966 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.428682791 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.417456719 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.418225219 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.42096881 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.417721167 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.000307985 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.413263608 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.448032201 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.426827269 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.427235323 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.579479364 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.420845954 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.427682421 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.411649181 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.996091297 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.548774983 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.55441956 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.43997442 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.420035201 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.420003632 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.491629178 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.419192104 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.421401469 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.489533015 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.261883582 seconds)
  done (took 90.395302229 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.462632402 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.41380773 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.600703723 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.437092557 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.410897115 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.433281824 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.434038704 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.754567804 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.433986089 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.415859554 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.757869651 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.088003854 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.416611746 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.478570682 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.449611413 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.465495317 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.415592671 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.436626761 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.415294402 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.415997975 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.020349079 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.41696108 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.433494465 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.504119726 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.457308257 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.020646354 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.413598886 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.415445733 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.436584009 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.412955981 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.061879379 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.421729682 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.461653404 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.416119636 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.728694123 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.875722823 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.831219266 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.417540036 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.445651624 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.416609969 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.439518311 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.021911617 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.853880188 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.415366306 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.423905893 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.022958269 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.4153811 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.421790596 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.42212558 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.691794263 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.41505464 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.418752078 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.416646787 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.416053015 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.417325578 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.465419077 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.47043596 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.026897526 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.429383796 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.41563805 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.418289999 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.415777661 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.425368184 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.419976854 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.422018891 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.856786507 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.667473762 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.426712538 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.857275217 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.052739756 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.417443558 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.130337365 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.418835591 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.456662868 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.464606477 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.417626751 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.436196329 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.01880224 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.4330902 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.416197502 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.836000483 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.42225807 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.748946644 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.439318625 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.417940388 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.042182881 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.431462194 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.461269225 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.419125133 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.431012942 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.418216565 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.421271198 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.738670714 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.464395876 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.419176399 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.420561285 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.421594061 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.418205527 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.419463509 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.428762889 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.1309287 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.423092812 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.418376159 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.441672717 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.418931261 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.419833589 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.420696194 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.420543562 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.707404611 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.420110795 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.426704895 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.419835985 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.421150315 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.431296207 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.513813389 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.422290236 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.791859221 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.423202996 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.437022666 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.42012175 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.42037019 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.449464371 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.420527615 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.42406636 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.420251364 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.742123445 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.441936746 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.420134532 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.422967441 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.420837538 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.442319603 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.421609671 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.474916307 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.425469921 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.256762557 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.460698016 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.468202362 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.421444266 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.434081887 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.422418373 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.426026814 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.42268887 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.740741897 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.738897116 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.669798015 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.423326524 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.422103411 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.283946743 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.428366339 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.613378236 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.44279631 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.422037444 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.729390326 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.645199921 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.424086455 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.423446047 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.424326298 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.71935565 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.425367326 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.760445122 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.089097817 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.424193086 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.429879693 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.25557668 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.272164666 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.425006285 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.428876863 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.751280459 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.445429017 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.423529346 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.42467929 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.425251061 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.423593644 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.426062106 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.431099932 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.42463213 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.422941898 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.765605871 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.625824206 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.445213782 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.425489141 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.029201206 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.44767409 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.425804219 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.430471494 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.424039671 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.424404498 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.473223811 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.427787654 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.424987252 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.426029866 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.434320101 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.064830044 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.424921085 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.445707852 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.627692048 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.221773179 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.42640279 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.428449576 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.427310804 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.482056816 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.064319114 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.459972911 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.798570175 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.430020893 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.470906215 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.436814298 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.436496631 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.059221463 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.433490147 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.425537097 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.229798441 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.428071182 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.909161887 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.426166792 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.427036785 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.159953511 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.42537071 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.429565547 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.429111216 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.427561399 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.737482199 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.426743831 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.431399968 seconds)
  done (took 521.186215953 seconds)
done (took 678.175264098 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.427848659 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.427841077 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.427370673 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.432656315 seconds)
  done (took 11.018333395 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.445959461 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.434821902 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.444469117 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.434529066 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.446237416 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.435760257 seconds)
  done (took 9.944645646 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.428274822 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.429338372 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.429256063 seconds)
  done (took 8.590608937 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.67782341 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.456388768 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.855621285 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.437212652 seconds)
  done (took 9.730809051 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.446154292 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.445520603 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.444997018 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.447472369 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.445983311 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.448116263 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.446873563 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.446580275 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.44749669 seconds)
  done (took 14.32088049 seconds)
done (took 54.909637247 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.407271371 seconds)
    (2/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.537161977 seconds)
    (3/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.557739038 seconds)
    (4/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.602663903 seconds)
    (5/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.430662931 seconds)
    (6/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.421821188 seconds)
    (7/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.54978954 seconds)
    (8/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.520551667 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.538426081 seconds)
    (10/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.50354303 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.562099806 seconds)
    (12/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.467626332 seconds)
    (13/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.742221713 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.701042905 seconds)
    (15/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.823548572 seconds)
    (16/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.756962403 seconds)
    (17/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.408089342 seconds)
    (18/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.482626673 seconds)
    (19/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.407828743 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.70318273 seconds)
    (21/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.490625846 seconds)
    (22/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.418790559 seconds)
    (23/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.57313727 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.517291466 seconds)
    (25/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.43177392 seconds)
    (26/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.675090023 seconds)
    (27/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.470513203 seconds)
    (28/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.515829496 seconds)
    (29/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.578816346 seconds)
    (30/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.43334272 seconds)
    (31/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.434629956 seconds)
    (32/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.553113888 seconds)
    (33/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.528439326 seconds)
    (34/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.568172052 seconds)
    (35/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.674608747 seconds)
    (36/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.664782996 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.510655945 seconds)
    (38/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.414942984 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.62383033 seconds)
    (40/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.408091685 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.602508971 seconds)
    (42/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.40987337 seconds)
    (43/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.569505078 seconds)
    (44/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.589653369 seconds)
    (45/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.700845895 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.544899414 seconds)
    (47/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.472243972 seconds)
    (48/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.53358091 seconds)
    (49/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.838584824 seconds)
    (50/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.707938928 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.599378166 seconds)
    (52/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.467484369 seconds)
    (53/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.705436758 seconds)
    (54/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.433940521 seconds)
    (55/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.783125328 seconds)
    (56/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.414068872 seconds)
    (57/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.735858483 seconds)
    (58/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.515277674 seconds)
    (59/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.518263723 seconds)
    (60/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.777836392 seconds)
    (61/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.411320118 seconds)
    (62/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.411133469 seconds)
    (63/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.52425998 seconds)
    (64/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.674395971 seconds)
    (65/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.421305423 seconds)
    (66/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.557037415 seconds)
    (67/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.759094206 seconds)
    (68/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.7602775 seconds)
    (69/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.411837005 seconds)
    (70/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.679213504 seconds)
    (71/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.600465214 seconds)
    (72/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.010081859 seconds)
    (73/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.52105808 seconds)
    (74/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.505484855 seconds)
    (75/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.478140831 seconds)
    (76/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.412717482 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.574012363 seconds)
    (78/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.522336119 seconds)
    (79/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.412400366 seconds)
    (80/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.571225699 seconds)
    (81/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.530040759 seconds)
    (82/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.606974894 seconds)
    (83/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.597882938 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.570571881 seconds)
    (85/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.471615851 seconds)
    (86/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.619440495 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.554247513 seconds)
    (88/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.465754628 seconds)
    (89/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.412311415 seconds)
    (90/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.941157068 seconds)
    (91/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.850780399 seconds)
    (92/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.781093887 seconds)
    (93/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.412700447 seconds)
    (94/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.482739073 seconds)
    (95/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.515761879 seconds)
    (96/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.634199 seconds)
    (97/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.437069359 seconds)
    (98/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.583082354 seconds)
    (99/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.565012777 seconds)
    (100/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.529055478 seconds)
    (101/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.629745908 seconds)
    (102/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.537092552 seconds)
    (103/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.507983136 seconds)
    (104/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.414720554 seconds)
    (105/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.436433999 seconds)
    (106/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.615530694 seconds)
    (107/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.439548017 seconds)
    (108/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.622191173 seconds)
    (109/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.47924243 seconds)
    (110/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.414738531 seconds)
    (111/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.589409793 seconds)
    (112/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.416004731 seconds)
    (113/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.481901993 seconds)
    (114/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.548010059 seconds)
    (115/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.559553244 seconds)
    (116/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.557240608 seconds)
    (117/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.661000721 seconds)
    (118/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.634118299 seconds)
    (119/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.457355812 seconds)
    (120/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.47179143 seconds)
    (121/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.708350657 seconds)
    (122/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.51238258 seconds)
    (123/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.473676629 seconds)
    (124/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.854197554 seconds)
    (125/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.416353749 seconds)
    (126/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.831176571 seconds)
    (127/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.593321579 seconds)
    (128/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.529499434 seconds)
    (129/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.682060019 seconds)
    (130/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.01385362 seconds)
    (131/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.41563993 seconds)
    (132/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.421716985 seconds)
    (133/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.477453674 seconds)
    (134/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.763768215 seconds)
    (135/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.478513157 seconds)
    (136/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.426164801 seconds)
    (137/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.416837889 seconds)
    (138/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.582792418 seconds)
    (139/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.506465466 seconds)
    (140/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.568648116 seconds)
    (141/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.632073928 seconds)
    (142/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.418271024 seconds)
    (143/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.811521472 seconds)
    (144/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.678818471 seconds)
    (145/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.652424508 seconds)
    (146/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.515502873 seconds)
    (147/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.485108742 seconds)
    (148/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.53085963 seconds)
    (149/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.416426898 seconds)
    (150/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.624475272 seconds)
    (151/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.428438836 seconds)
    (152/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.662847391 seconds)
    (153/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.439969109 seconds)
    (154/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.429027543 seconds)
    (155/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.420124989 seconds)
    (156/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.528923595 seconds)
    (157/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.467467587 seconds)
    (158/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.51740526 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.719528281 seconds)
    (160/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.485093988 seconds)
    (161/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.530862517 seconds)
    (162/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.55559442 seconds)
    (163/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.546599543 seconds)
    (164/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.55265099 seconds)
    (165/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.61218487 seconds)
    (166/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.511268007 seconds)
    (167/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.474486844 seconds)
    (168/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.680636206 seconds)
    (169/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.440290764 seconds)
    (170/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.527484668 seconds)
    (171/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.611325615 seconds)
    (172/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.526472558 seconds)
    (173/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.541013969 seconds)
    (174/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.749430357 seconds)
    (175/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.627662579 seconds)
    (176/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.472312239 seconds)
    (177/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.635223265 seconds)
    (178/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.656007405 seconds)
    (179/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.720955102 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.645132156 seconds)
    (181/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.481295754 seconds)
    (182/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.456401479 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.549712513 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.556383293 seconds)
    (185/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.420048335 seconds)
    (186/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.641622712 seconds)
    (187/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.442406295 seconds)
    (188/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.419990273 seconds)
    (189/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.472628741 seconds)
    (190/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.61188292 seconds)
    (191/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.519204963 seconds)
    (192/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.619998549 seconds)
  done (took 348.447630071 seconds)
done (took 349.754742916 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.473121279 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.547078837 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.453690492 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.454840245 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.454312211 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.448062137 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.476656963 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.454657175 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.469487544 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.469583145 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.447515514 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.46559037 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.469604371 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.464936198 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.487333342 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.455266424 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.453534466 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.466020919 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.46968526 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.472012368 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.456190416 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.455520778 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.483577944 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.455082396 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.464172971 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.462881689 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.461414204 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.450274264 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.464918743 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.473052049 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.444971767 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.46722892 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.472733803 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.468736144 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.456751907 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.467561818 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.456880741 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.550125131 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.479629227 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.469519002 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.465937655 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.475351041 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.459817464 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.462192359 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.469238423 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.485487411 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.464104845 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.471059327 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.463102329 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.447183458 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.477263307 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.469562627 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.465826292 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.446998912 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.45501696 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.472664017 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.46898932 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.47703459 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.466292155 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.459452091 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.491292418 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.476915659 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.470117239 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.465722178 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.467511575 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.473361509 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.468692778 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.475620139 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.466022581 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.462471046 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.459815338 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.467536396 seconds)
done (took 115.004255574 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.581055799 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.453220872 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.61690642 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.465425879 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.628906598 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.579718583 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.463837475 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.464630679 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.465820737 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.263413924 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.46542579 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.467053288 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.455177523 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.464321281 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.57746103 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.468008872 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.467277782 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.159137528 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.468195163 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.595896526 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.457804516 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.46639627 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.468219562 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.269621054 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.459177285 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.450802634 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.59566964 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.467403054 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.167168749 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.452323025 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.453616838 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.167780336 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.596358619 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.485592768 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.478175358 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.479098216 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.631390921 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.472935777 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.586299034 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.587023505 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.62063562 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.506633155 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.453452171 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.45743811 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.470605977 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.47033279 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.467923194 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.497277565 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.456544009 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.468751151 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.161768822 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.480971222 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.479476631 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.469423088 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.468897111 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.488994074 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.472040631 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.472132958 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.598122843 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.471125464 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.586054717 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.270398332 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.267221587 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.470562415 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.456965861 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.472599549 seconds)
  done (took 117.042852051 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.531581903 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.536567466 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.584128376 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.462336 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.511849669 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.58646828 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.461703212 seconds)
  done (took 12.000344162 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.468267586 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.47192587 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.511135798 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.510261523 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.471282504 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.633526449 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.470650761 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.474215375 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.471068248 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.512395883 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.47225034 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.470759547 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.481058605 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.461212316 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.509674775 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.473513599 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.582811916 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.464985666 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.471830698 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.618529253 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.471621833 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.482016651 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.512486582 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.473784438 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.471811077 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.472506715 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.243617051 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.472163612 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.473075171 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.47497337 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.472662972 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.531593154 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.471132239 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.46192556 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.471617977 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.581617957 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.474141902 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.472801692 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.472826687 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.465587971 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.472374788 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.474000754 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.474039449 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.472125297 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.473509271 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.488733302 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.474304598 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.472698174 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.473708839 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.47448611 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.513338753 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.474095177 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.474758489 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.474599653 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.519855405 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.482860177 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.475086563 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.474424159 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.474371831 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.47350642 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.621040934 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.514559941 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.474647601 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.513316394 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.475076922 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.475493216 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.475810362 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.474883091 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.559038806 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.474712889 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.512856812 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.47616177 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.645993842 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.490209491 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.475906802 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.468151438 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.469336754 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.475150549 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.466161007 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.473449812 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.474161263 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.467545575 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.474323499 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.47576213 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.476523971 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.625379279 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.575392679 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.475230936 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.482915282 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.474075028 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.476390499 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.517536743 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.475449582 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.476162897 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.517949975 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.586752521 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.518533918 seconds)
  done (took 150.92413764 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.481780173 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.481426287 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.471311703 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.49701244 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.468384579 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.468224134 seconds)
  done (took 10.199043083 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.470724593 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.482203452 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.477497366 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.476839365 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.477729312 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.47900613 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.478700165 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.470398226 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.482657832 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.476682231 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.478937777 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.480061288 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.479122895 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.480051516 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.478494423 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.4794135 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.480212992 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.479064048 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.477423645 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.481837317 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.46769518 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.481204403 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.481824952 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.473244767 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.483673985 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.480467628 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.49485542 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.481791289 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.479483721 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.477095724 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.482534593 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.480901082 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.473430021 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.477476627 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.483020318 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.473056533 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.482686285 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.480320262 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.479573379 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.480959728 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.480840056 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.483239809 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.481267475 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.481480846 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.473306911 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.476882903 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.484346574 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.495368091 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.479573116 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.482845763 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.482320894 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.480324732 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.481446686 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.482671484 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.474206872 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.476145021 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.487023016 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.483048643 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.482163278 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.474897983 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.484785777 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.48358581 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.475306287 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.486188505 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.481928686 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.483593178 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.473697073 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.488006913 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.48392727 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.483013097 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.482541744 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.481820407 seconds)
  done (took 108.90749089 seconds)
done (took 400.396247904 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.956546064 seconds)
  done (took 4.292343933 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.804105641 seconds)
  done (took 4.141455655 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.420262637 seconds)
  done (took 26.764892505 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.526262963 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.491361876 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.497829796 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.473199424 seconds)
  done (took 11.325548249 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.824759054 seconds)
  done (took 4.16182928 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.48605211 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.475739495 seconds)
  done (took 6.301017181 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.850589478 seconds)
  done (took 4.186909559 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.911724485 seconds)
  done (took 4.257558482 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.498520585 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.484070638 seconds)
  done (took 6.329086016 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.447014197 seconds)
  done (took 3.783075 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.418293568 seconds)
  done (took 22.758024689 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.495469465 seconds)
  done (took 3.83500304 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.506882116 seconds)
  done (took 3.844543553 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.739908106 seconds)
  done (took 7.07654253 seconds)
done (took 114.395588064 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.467910862 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.473291093 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.47574557 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.475189724 seconds)
  done (took 11.22982589 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.548658199 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.549813022 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.557040834 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.543157253 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.542814302 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.551726107 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.512753259 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.529622869 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.543576661 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.53829319 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.554324457 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.538581401 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.551976325 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.511417376 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.536229666 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.553463452 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.540996517 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.559524153 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.512536191 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.54334854 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.485905214 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.54278607 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.537348131 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.486253601 seconds)
  done (took 38.2133471 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.976768777 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.550593708 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.633897857 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.535097507 seconds)
  done (took 8.035111434 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.58963838 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.590749783 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.610559835 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.648072905 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.68379445 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.604735993 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.509394407 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.508060431 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.495646863 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.592655888 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.671414484 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.590618327 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.813370976 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.488211965 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.807726325 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.486938656 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.487629919 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.593500096 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.640701828 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.671941158 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.488042463 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.594069073 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.598148688 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.591246376 seconds)
  done (took 39.696463914 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.49595256 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.505567443 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.489608724 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.504141978 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.489400908 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.491110198 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.491581715 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.495143339 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.489748976 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.488752848 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.490846553 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.501655257 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.489876535 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.487783309 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.497510479 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.491392431 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.491060727 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.495708994 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.499306868 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.490737064 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.49102407 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.497739649 seconds)
  done (took 34.20651197 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.474181795 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.471886775 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.827099408 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.731350208 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.474118944 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.479356493 seconds)
  done (took 14.799024649 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.568561094 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.726837198 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.482730258 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.914307357 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.00032925 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.481834653 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.483116477 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.769798003 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.149538289 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.173660636 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.554813244 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.561905564 seconds)
  done (took 22.214291178 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567407577 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.484403987 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.49186454 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54690734 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.484722862 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.486683128 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.553115686 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.258497243 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.491580474 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.762613121 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48423659 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.589242013 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.736126924 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49895642 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.491008074 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.456471956 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.715649886 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055155587 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486957359 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486571673 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.517863905 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.501758471 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.490957528 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.759687857 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.489143277 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488096548 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.749293241 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.485424013 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.82995063 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.805736978 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80475702 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492431799 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.764170967 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212257868 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.592516932 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.733825243 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.480418781 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.509313962 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.462172291 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.489114724 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.515242586 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.489943379 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803389185 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490112448 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.488370819 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494692251 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.274942374 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.497103929 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.488374967 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.48766798 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.806333488 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573172427 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.493979002 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.489465824 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496326596 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487927764 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.493773611 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.621992297 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.128501035 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503296446 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494961758 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.493610727 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.484303514 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499787331 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233755699 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.49919591 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.496946528 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.495133413 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489492676 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.488821601 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.510631612 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488980092 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.510381681 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490407988 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413699549 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.49163121 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.491843091 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.111247832 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502517313 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.492910503 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.718031055 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488919738 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489738925 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.489330034 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.489253663 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.346197378 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498344051 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.455865356 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556167959 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.267800407 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.741736984 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514565199 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522442474 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.715180772 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.458268867 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490639621 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.491155783 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498747073 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515197078 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.272976289 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491875176 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.49815762 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.740424968 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.707714282 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496023941 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.467501185 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03999156 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50803042 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.520907501 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.498827693 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.758303431 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.21793332 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823923533 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499686635 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529679082 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.494454217 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.409950108 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509637266 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.503966078 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.493996628 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.833334991 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.438817422 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493234428 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565778782 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495166654 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.492805411 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492875252 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495735403 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.492705091 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.727512158 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.511607508 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.817115323 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.497114978 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49382926 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.494955694 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494394814 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.495842686 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.718040992 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510875196 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.775930786 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493485314 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494764382 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495009666 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.713128881 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.5047752 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.50113975 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.835414904 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501123003 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.508136592 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81919963 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529522205 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608862548 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526953243 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.502746641 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.750802212 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.502999148 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.502473377 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49649952 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.498149261 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503994448 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.505425204 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489616037 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245600764 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.490422486 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.503675271 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.496867924 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.511938633 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570738201 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.506499859 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.757189665 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.518573032 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492416313 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.505660358 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.494406582 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.719331922 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817540852 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.499843474 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674979655 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.043243751 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.217899968 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.514435066 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.495361667 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.497850222 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.498265452 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498774883 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496609475 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.498178914 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.747498535 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826441236 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.49906917 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.223700636 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500866222 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.497064577 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.505821017 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.816508827 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.50813344 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499797473 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.501974766 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497715768 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510893488 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.823141386 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.722543532 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.515632357 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.499279683 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.019302961 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.508076379 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.500133421 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.498403859 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528060684 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.498347349 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.448253373 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.842008273 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.512044833 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.823886583 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.503001703 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.518359195 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.499294307 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498532481 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515874337 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.512432779 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529437234 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.754202242 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.502983928 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502071975 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138659366 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443827633 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.189242704 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.526704019 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.519162154 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.501054845 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.287707138 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502260827 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.500519534 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.787029369 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.29000452 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501069474 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04979886 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.509958349 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.413500563 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.824731435 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.730218048 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.517442024 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.505368524 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.827396083 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.717536419 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528581568 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.501649473 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522538035 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.470741429 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.135816294 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.509545842 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.682494771 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.291348036 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.501304819 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.50686632 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.566932488 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.504547634 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978287625 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.503424863 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503218783 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.503315767 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.504162383 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.452773998 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.510060209 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.503914028 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253318801 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.506935264 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.055082899 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504220275 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.757675817 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.827306579 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.801867827 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.506249018 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.509656151 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.750896845 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.838253075 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511457146 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.502634772 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.197606908 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.369041063 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.513215752 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50655296 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.429743524 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.52335877 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.866511477 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.515862245 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.530177193 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511214794 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.505371696 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506505585 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.505022149 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.514067617 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492775561 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110769545 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.507785644 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505776461 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.512074852 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.528151664 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.756528792 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.521671854 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.259804319 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.744703905 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.49566764 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539796113 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.512556844 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527048413 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.481218598 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.505945523 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.506332201 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.59805013 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.728187512 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.512432069 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.479040544 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.577268052 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.721075839 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.506898527 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.521500743 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.788921429 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.513696681 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.513121791 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491805696 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544301376 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.522384923 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514416757 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.507589811 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554593048 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582611763 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.771924059 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.850030583 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.849940317 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009774928 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527260772 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.514616063 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.524244871 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591565087 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.506303819 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.544532942 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.508670564 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262837235 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495273248 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.276872516 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.853392766 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.51742389 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520639778 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510048369 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.74948609 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.509169114 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.78601367 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.508955712 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.522087226 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536446988 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507505751 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539854321 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.728422694 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.785703654 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.509730297 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.526376731 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509849918 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.510623292 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851939952 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.729684997 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08508399 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138764312 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.514111756 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.510832153 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.300406986 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.788173906 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511731429 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.513025147 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509749132 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.518092847 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.51576104 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.523307404 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.530003499 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.741474732 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.845306433 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.251100405 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.846778539 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.546734538 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.451872238 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.510940532 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.768285142 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34434876 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.776312644 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.284169543 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40669325 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.774565617 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585817829 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.777006209 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.51831292 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.751930465 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.52257573 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.512846691 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.5130458 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513345865 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.512459254 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.849920412 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278026086 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.776645375 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.517903281 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.523470294 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544268984 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.779314231 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.745563701 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.381328498 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.735622789 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85705833 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.526640717 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.514279408 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.281814872 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.861316772 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521276987 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.519240933 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.789064515 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.522194232 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.550809521 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.391895722 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.51345374 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14577805 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.730121342 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536615699 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516937582 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.408494664 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285155401 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.533356171 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12328207 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.521590095 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530242683 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.797757367 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.522639062 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.516423131 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.802304489 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.521421415 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.51592809 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789001853 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.281855506 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.471122366 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.538697836 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.522281942 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.523887422 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516805438 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.563826599 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516666554 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.516768296 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.000384892 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.518682026 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.516627813 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.530430191 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.523298214 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527555591 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.521583109 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516560978 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.525817631 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.502023322 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.490485869 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.529569068 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.655285452 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16421474 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519942666 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.135457979 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.856136183 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.767707643 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.519431772 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.49140625 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.525448626 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519016245 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517853571 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520781382 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.52098428 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.156230948 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.520453393 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.86058873 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.534623047 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.731862908 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.73059919 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.539132804 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791835066 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.531519392 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.543065599 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.486914076 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519646852 seconds)
  done (took 1053.313983207 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.554839036 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.577530343 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.575499481 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.533103682 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.575571474 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.669221726 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.578218923 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.534302024 seconds)
  done (took 21.972283382 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.520497551 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.520279466 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.517063512 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.520247769 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.528014689 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.080789615 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.520539884 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.520986382 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.5350542 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.515409239 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.517143793 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.250813959 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.522872514 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.527824309 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.526796293 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.523718827 seconds)
  done (took 35.033001352 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.790201147 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.751121322 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.090342624 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.528137536 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.538836982 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.541103807 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.933839592 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.513407423 seconds)
  done (took 29.062549351 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.527095281 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.526257502 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.52829841 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.528337623 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.529403681 seconds)
  done (took 9.014742391 seconds)
done (took 1318.129595197 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.527619061 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.528700945 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.529486364 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.529088388 seconds)
  done (took 7.491023195 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.490497093 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.498823681 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.496650156 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.509917832 seconds)
  done (took 10.372207251 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.365869598 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.150689354 seconds)
  done (took 5.891997658 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.086306326 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.075083984 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.079931626 seconds)
  done (took 7.61753639 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.832875149 seconds)
  done (took 3.212356213 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.51430995 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.515180932 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.515128289 seconds)
  done (took 8.919471232 seconds)
done (took 44.88310818 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.529710078 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.285160842 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.67504769 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.519063538 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.678556959 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.676243116 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.827847346 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.514408805 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.533415742 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.53062492 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.524364165 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.681731923 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.81349204 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.285674705 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.807156783 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.283851477 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.678483408 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.516357188 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.527477994 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.516400572 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.82893908 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.51962059 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.524776221 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.522272799 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.680947051 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.690207322 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.523620314 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.281436607 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.519730845 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.525134252 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.666791808 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.526808288 seconds)
  done (took 87.592701914 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.530825602 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.517664276 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.539054975 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.539962001 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.539771528 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.521787592 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.539295353 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.51522055 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.525293292 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.524174967 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.515833251 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.516987253 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.520719792 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.518488934 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.519897403 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.517891343 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.535774048 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.517994366 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.537993842 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.539363588 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.519872339 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.518366333 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.538139009 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.54147089 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.540463545 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.539416234 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.519710307 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.518183174 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.520321399 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.519370557 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.520110084 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.52139605 seconds)
  done (took 82.229728209 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.520962489 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.519444705 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.521573821 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.542177372 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.519495302 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.519727733 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.542623365 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.520170445 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.534110135 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.532217084 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.527710692 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.520897511 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.522220427 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.520202987 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.524101099 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.522299545 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.521968218 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.520386855 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.520753966 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.540841742 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.522813198 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.537578846 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.522009196 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.537109917 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.520374665 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.522274408 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.520365903 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.535658439 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.522933163 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.522524643 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.524128368 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.521912923 seconds)
  done (took 82.206664808 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.766853006 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.540988479 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.543789585 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.532787358 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.544839441 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.542513657 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.535821796 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.772390722 seconds)
  done (took 16.162845539 seconds)
done (took 269.571914655 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.5384662 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.104759421 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.563263105 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.549275455 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.54973755 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.561321649 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.767076782 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.561093024 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.760798996 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.535730849 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.566097705 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.532353047 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.503480583 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.680076805 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.416449256 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.545035441 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.52295824 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.527891903 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.187205594 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.789318996 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.564495823 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.526821748 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.449824466 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.553878936 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.499620546 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.607987816 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.609271767 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.702473928 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.663442269 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.609564538 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.105208318 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.53342899 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.533074706 seconds)
  done (took 70.105002957 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.535354607 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.541578131 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.542389565 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.545809441 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.543728022 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.545205497 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.537262834 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.544603419 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.544258291 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.545277388 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.548539938 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.547485359 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.546680134 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.544190719 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.54718598 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.518803721 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.530714346 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.54033998 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.533060906 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.515044366 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.544427671 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.544991795 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.542860256 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.543976509 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.545041087 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.544062606 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.543244912 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.544945637 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.5416078 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.544890894 seconds)
  done (took 47.624829826 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.546167761 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.208440933 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.436406981 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.546327135 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.535384125 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.539547609 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.910106486 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.551463257 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.537197384 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.537482505 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.083033123 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.548121299 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.571023823 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.438378303 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.544312454 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.545046995 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.543650031 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.537984064 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.207784727 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.550854854 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.89613661 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.545092027 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.893379847 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.544131825 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.538843953 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.539207622 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.541658216 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.41269833 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.562611788 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.087679797 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.532059726 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.893977316 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.344020795 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.48476863 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.544808305 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.552932294 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.545075775 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.094300568 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.53794762 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.535717533 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.893528902 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.537549238 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.417662294 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.260226925 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.558817808 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.546673525 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.45081919 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.089546215 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.840369462 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.545248844 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.481334732 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.548090491 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.55155285 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.538774279 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.841011555 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.5420018 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.538853752 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.513792075 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.545743164 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.895066267 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.547435178 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.538285264 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.199518595 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.538531634 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.195636848 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.540072488 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.547944961 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.541707332 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.42366071 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.542952381 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.281030769 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.560367833 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.548425329 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.092027535 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.194645004 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.509469587 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.54439098 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.202773569 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.376284969 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.915138929 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.543204925 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.392034775 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.91836792 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.54348539 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.552436512 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.551745563 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.550120322 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.630787675 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.896407636 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.197172308 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.283093493 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.528857705 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.900774629 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.54893039 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.544347241 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.520906127 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.55137886 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.552522545 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.45824924 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.28633306 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.562154574 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.548929788 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.268549393 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.566106997 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.904043558 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.547971097 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.474164888 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.545291004 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.615560487 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.550929369 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.551682698 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.545795753 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.901502997 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.547371801 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.552936481 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.265613719 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.123055885 seconds)
  done (took 216.936506887 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.536491655 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.534629066 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.53752621 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.539413441 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.538439381 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.547628539 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.538518805 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.536152317 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.543770234 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.537154792 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.540079299 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.545327819 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.543569858 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.53699914 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.549724531 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.537818284 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.536894325 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.552661342 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.536848666 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.537999715 seconds)
  done (took 48.202981706 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.554209179 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.235783646 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.211479207 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.55502702 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.554166837 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.544296167 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.615364496 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.55356049 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.553437352 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.914390869 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.762077311 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.556000747 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.553779702 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.554162359 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.213935283 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.525114098 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.916393954 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.236854127 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.55488777 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.236932765 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.524889403 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.555391552 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.543677371 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.236648505 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.922027373 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.902677499 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.615887597 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.237018637 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.553943249 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.555544342 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.237871807 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.556375252 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.547153659 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.221863037 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.557159278 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.568182768 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.555264823 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.61818546 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.616415885 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.914573767 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.245158717 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.912526332 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.567737014 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.726547744 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.557939406 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.526271105 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.248137908 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.556570446 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.524705448 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.557764307 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.561559348 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.24683925 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.555230116 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.241185515 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.562951947 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.556991364 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.242328174 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.229165847 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.222120506 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.765029338 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.54767397 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.90748659 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.557248731 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.252832055 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.558618219 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.55874615 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.558213395 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.768779168 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.246731073 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.905314046 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.920233764 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.917986275 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.559576934 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.629441257 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.559271771 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.920532991 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.627865172 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.979528929 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.920573598 seconds)
  done (took 142.343972746 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.865727339 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.679606642 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.999817504 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.194564311 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.122791488 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.696999115 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.68353252 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.825102885 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.561728291 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.661010174 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.343941436 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.657603349 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.37872552 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.628285472 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.671767455 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.685132538 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.020441103 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.560063567 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.249972686 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.310210398 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.564996764 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.667554985 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.07884682 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.774480227 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.544647006 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.174680751 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.56643273 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.141621627 seconds)
  done (took 58.711108834 seconds)
done (took 585.309845863 seconds)
SAVING RESULT...
DONE!
