cset: moving following pidspec: 12424
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.328728296 seconds)
loading group "string"... done (took 0.527383342 seconds)
loading group "linalg"... done (took 6.833518102 seconds)
loading group "parallel"... done (took 0.155703048 seconds)
loading group "find"... done (took 1.188002651 seconds)
loading group "tuple"... done (took 1.700949859 seconds)
loading group "dates"... done (took 1.177420752 seconds)
loading group "micro"... done (took 0.221323775 seconds)
loading group "io"... done (took 0.977055638 seconds)
loading group "scalar"... done (took 37.239884177 seconds)
loading group "sparse"... done (took 12.63179767 seconds)
loading group "broadcast"... done (took 0.941912409 seconds)
loading group "union"... done (took 12.445611461 seconds)
loading group "simd"... done (took 4.255135797 seconds)
loading group "random"... done (took 8.54886751 seconds)
loading group "problem"... done (took 1.998778295 seconds)
loading group "array"... done (took 20.713890672 seconds)
loading group "misc"... done (took 1.792558969 seconds)
loading group "sort"... done (took 3.240625368 seconds)
loading group "collection"... done (took 17.088645812 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.509979793 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14034613 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131882624 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.114426215 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.172896464 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116008083 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.141929766 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099637323 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.085078719 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.155562564 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.133124134 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.464900712 seconds)
done (took 5.153359496 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.236483297 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083204599 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096090262 seconds)
  done (took 1.018019206 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065855998 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.121103389 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065492365 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.082830316 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067595612 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06496703 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.082823695 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066208218 seconds)
  done (took 1.394659797 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073254731 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067755179 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084715446 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068040571 seconds)
  done (took 1.138720429 seconds)
done (took 4.704752886 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.794706159 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.238833576 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182888106 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.446210286 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.147810305 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.182214062 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.672393197 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.348921889 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.20280611 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081699835 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.120315506 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.35628551 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.123776803 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671735112 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074893387 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106906492 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.168827833 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.416592322 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068732135 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081775944 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.10425693 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.134302076 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103062001 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091401489 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.159170698 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081988771 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146957134 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.08245693 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.083118724 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.224219212 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.18824877 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.680206762 seconds)
  done (took 10.449238793 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09579116 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.113592316 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068551283 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140017077 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096518283 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086945292 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071124512 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06628024 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.102694361 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.144564594 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088750802 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.117775778 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065262986 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.085557455 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083893889 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.220715939 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079320422 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.097542064 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069935152 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.091158015 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106383914 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093638489 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078291998 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09392018 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128748186 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194336004 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096509679 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112455327 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068184695 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09741869 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.129279425 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127182078 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065295651 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082965612 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123867611 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.11090362 seconds)
  done (took 4.551329895 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.029172812 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.154883054 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09073181 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.149248942 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067240502 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.124589822 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082437109 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084536566 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.23156594 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.144303405 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.108925542 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.482524841 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128009202 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.086139368 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066257164 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086857325 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066342351 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.531126009 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.144335482 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.120275402 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084106874 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089301629 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.070022173 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.35667349 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067582939 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06578613 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084851996 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058623551 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.141789056 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068383631 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.139734908 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086203157 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065713722 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120875522 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.179681975 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089003287 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.15158114 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08325846 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064178003 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064344386 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.164846447 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.092105608 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063702216 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.082554335 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083700796 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118312824 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.103554926 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.083328956 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067011559 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.176579788 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068765604 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100080411 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.83652028 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.16765678 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076457373 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065130629 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.280083145 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083957042 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084821944 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064123019 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.248320599 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.146759962 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067575209 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08324818 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06600056 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066966025 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.385385112 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.085849162 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.609715647 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070709889 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077450515 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.067897218 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065048519 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091381425 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072005969 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101136188 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064997746 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065812089 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.08475915 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065998027 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065356033 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.086007239 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083929712 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202128954 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.084644889 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066640729 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080368631 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086640553 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11222668 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069859292 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06497073 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116308395 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06823473 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084526127 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.101584534 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085489144 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083811767 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086907818 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128737561 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067512024 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.134417441 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067411817 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111266931 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.071801651 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115728883 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.094585618 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068388409 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.149106588 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064688741 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06415866 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084688952 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067979026 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084158408 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069268688 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.077697379 seconds)
  done (took 20.690388415 seconds)
done (took 37.563980451 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.289130435 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093616309 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074617261 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073098206 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.095261407 seconds)
  done (took 1.5458062 seconds)
done (took 2.439262545 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.1176446 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117456739 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.062797729 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113460997 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063458592 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118297866 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098140509 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098865153 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115239493 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064555878 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095038828 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082379219 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06402772 seconds)
  done (took 2.133426772 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082896818 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082428008 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087510404 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081912441 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063407882 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099224218 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080321046 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106010844 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081268488 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072087964 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081783884 seconds)
  done (took 1.807497582 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082285623 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082806496 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08671773 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081464019 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062582313 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.09878134 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080082716 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102725914 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081077201 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089907653 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064913793 seconds)
  done (took 1.800674562 seconds)
done (took 6.626429214 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077989887 seconds)
  done (took 0.960015312 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.667984412 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.031524262 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080081811 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133678522 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.200255448 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.138441118 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.341328891 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087450717 seconds)
  done (took 9.759574774 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087529368 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.087600082 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.083285458 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.087129965 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069174479 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071477279 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090519008 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069217366 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.088186225 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069318893 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070970263 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.088411662 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071532233 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087367851 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069258116 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084331985 seconds)
  done (took 2.222663601 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090785424 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.109755584 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072967949 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.094237877 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071376024 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.091143136 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074242796 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.092076386 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070918755 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.088689723 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07514088 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.091121029 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071543813 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082320897 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074444198 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.092909546 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071654134 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.091351839 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075801685 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091888119 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075714021 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06410347 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090186735 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073794863 seconds)
  done (took 2.952887339 seconds)
done (took 16.783185064 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112467373 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.089302206 seconds)
  done (took 1.089259071 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082139652 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098990534 seconds)
  done (took 1.07365925 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083872807 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081904407 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090715575 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095722103 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065470096 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.08278307 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104266312 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067032951 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065134802 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08429833 seconds)
  done (took 1.716101634 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06918374 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093525962 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071098446 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098301324 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075357554 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081491719 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073211395 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.083791697 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078705217 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06201548 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.089093421 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.099124522 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071694433 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100973204 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072662451 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086410669 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07078316 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.084713078 seconds)
  done (took 2.355165666 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066912111 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066753039 seconds)
  done (took 1.027604998 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068140981 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063669883 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084570947 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06648221 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080743113 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063381484 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079731645 seconds)
  done (took 1.40357915 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.409733765 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110837208 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.329667733 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071331822 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.101291617 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.267088469 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064310743 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069294522 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.09279543 seconds)
  done (took 2.452118575 seconds)
done (took 12.011645274 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080024686 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084614313 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11183697 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.414374829 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093005074 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.083681049 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.133489006 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.228329183 seconds)
done (took 2.129382217 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125233607 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.614235878 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404929262 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.211666047 seconds)
  done (took 2.133818721 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.312126258 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.109772612 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060123438 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.084627866 seconds)
  done (took 1.470564798 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066936941 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068342269 seconds)
  done (took 1.039490491 seconds)
done (took 5.672824831 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085174905 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064289411 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.085926739 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063553012 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084337742 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066724784 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063835049 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.082127393 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063973515 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062882618 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083014793 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068914193 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.065627118 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.083636321 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065961245 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062612892 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081288396 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0661169 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062549242 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08124079 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064227605 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064984603 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080861368 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064253825 seconds)
  done (took 2.661000236 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084097143 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083165084 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072326593 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070759502 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.091923425 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071060252 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.090105474 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066325333 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088376168 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068301952 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08646357 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071139225 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.06820249 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088442182 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067662086 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.088164288 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071456373 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084136749 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069448659 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087319061 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072284136 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066103904 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.087618543 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071261678 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.088413893 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069608712 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.087647243 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066504979 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088523692 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071363805 seconds)
  done (took 3.248236078 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.07051987 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063273712 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08175565 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071237397 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063150227 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082614986 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064288728 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063509047 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.082821182 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063265555 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064726252 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.082292665 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063412299 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081813211 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06605005 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066770053 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.097097198 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064124689 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063238985 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.082929516 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066989367 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063473413 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.082913658 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063594812 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.080969472 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064271441 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064062814 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080846968 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065551001 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063165823 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.085090361 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06826246 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062513958 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.088930717 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067832929 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062280084 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.085907137 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063527774 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063280438 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082983753 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063342702 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062419621 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062453833 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068952137 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.083302152 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065879521 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063636213 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083787419 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06499127 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065132825 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062088291 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062893002 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.084949247 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065687701 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067385975 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.08108839 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065921633 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063345437 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.08262142 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06410572 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062273525 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.0812821 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066798641 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063600187 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096371196 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069994248 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080537387 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066569071 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064221195 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08463675 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065837437 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076006534 seconds)
  done (took 6.040289677 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09141623 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105790028 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064642687 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.08433039 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062129031 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081949511 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068974832 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063238926 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084081691 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069822989 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081993118 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066138073 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064556662 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094612744 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064353331 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083170441 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070971903 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061325555 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.173125226 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066316815 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08329045 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067780184 seconds)
  done (took 2.668965293 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.175009951 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070363401 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.124703581 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071992728 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066479792 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093216171 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070988517 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069342613 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08963966 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06790258 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08674213 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070628863 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086094791 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068652953 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086243655 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06905167 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087902552 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069713739 seconds)
  done (took 2.441992921 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078934673 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065104479 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105575083 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065955053 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085224426 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068290304 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089761183 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074729081 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085441134 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067354982 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073561597 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087672059 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067860019 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08364862 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069222948 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06514609 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.087640939 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06611834 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091826117 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07120832 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089141545 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073954351 seconds)
  done (took 2.632386724 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07989619 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067317561 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10166608 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068447091 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081376189 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065043609 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.087987648 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067478299 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069901979 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.085983864 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066678553 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081792383 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070318279 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066156625 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.088362957 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066587013 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.08572593 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067115408 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067934688 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080910975 seconds)
  done (took 2.435639884 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088148129 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085307085 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068657557 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093541271 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068612012 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08521191 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076932195 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085084315 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068304057 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105586668 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068874897 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066913027 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095076333 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090051371 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068115632 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093951855 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076134884 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094419558 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067813505 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085637317 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088015917 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066540134 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073438169 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088484359 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068855782 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086081293 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068177651 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091292116 seconds)
  done (took 3.181065701 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06728009 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065862365 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081317223 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064352089 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063416539 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081681382 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064317876 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062901796 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084618371 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06445921 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066081298 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084767811 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066368647 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064965984 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084236029 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06623526 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065055819 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.081778941 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063596282 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063119803 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08487172 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066311653 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065779202 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082325696 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063459955 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.083066644 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064314992 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063679493 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083344902 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064517878 seconds)
  done (took 3.048159599 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076245969 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072148599 seconds)
  done (took 1.072730551 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064747332 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08002666 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.083534635 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070770907 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088794246 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067394136 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072988759 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089673247 seconds)
  done (took 1.542418032 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082618033 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077277305 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087406007 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079594203 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096018809 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082535091 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.15495425 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.08640374 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073727072 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063550285 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.09971183 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065794928 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091184728 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067770195 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070807632 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092247742 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06447874 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.091171059 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069760342 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064399639 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086827311 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07502963 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087151217 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062592976 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066665399 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.108244198 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095737528 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067842615 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068763115 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092922744 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072448623 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078285324 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067446587 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066519575 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.08332045 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076178306 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099291478 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069768069 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093042167 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068495461 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095232839 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062572112 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070869828 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091324615 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076454479 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084284345 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06790119 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061291559 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083323065 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069273917 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06115722 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085473659 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061506214 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091778892 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071163277 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079255883 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084687497 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067894912 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087412047 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070061166 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072390666 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087376371 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068915529 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084390065 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076790558 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070118939 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094531275 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06159851 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.079456723 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065271505 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075488325 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108205537 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071115871 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065888966 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06593216 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.084701908 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070766575 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067350422 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091686069 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072596716 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08524365 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073001839 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092014467 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067393226 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068518883 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073237996 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063869147 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067821714 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06299578 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10509408 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.0667374 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06489522 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083994185 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07625223 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088767771 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066940529 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063911062 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092242794 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060986895 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08561043 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069487133 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067221093 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075545115 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069682451 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093214835 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075053609 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.093507564 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066905031 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068595616 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062430846 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066316314 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.0860551 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073797721 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060023787 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08919217 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067642927 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.084986329 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076392217 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063516687 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085622472 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073818255 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091544748 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065765948 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063247814 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.0890218 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066615681 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089003121 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075218621 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064339822 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.081858837 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062236604 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088259922 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067697185 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070056769 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090567365 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070178277 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.080453653 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065172204 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089763854 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076828052 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066752255 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.086391472 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072659257 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.086614472 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067089533 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072016232 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088209241 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066428505 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.090683834 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068130686 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061633579 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089409791 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069513081 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083195765 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071011715 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069873736 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087630882 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067240318 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083963641 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075639388 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085437099 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067368424 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066742522 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.084342063 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077127565 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067372286 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081023652 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063526943 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.09533787 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065302025 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065496046 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064657444 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067015047 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088157968 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065499604 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065592811 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087549609 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077743813 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06921077 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065908845 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092208275 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07820166 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065219067 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067472014 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064762022 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088845548 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068087048 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093597104 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072612583 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071301795 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088578288 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063247233 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090587316 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074753427 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065041893 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083544227 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065975335 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089769536 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072541315 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088855875 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068387609 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064967425 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085848131 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069897624 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087378146 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067462729 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065393998 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.092581079 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064450664 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.093824668 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067850602 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075259394 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068898592 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060777427 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091164806 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064897106 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091190425 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062480018 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064368498 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08471859 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068458892 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064929316 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088154548 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060923574 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091620368 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075270815 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066017217 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.08612095 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066531885 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091496042 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068643809 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069737455 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.089322266 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072602092 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096295416 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066568683 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069181132 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096123192 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066615349 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079646688 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072571802 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064697504 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.085350884 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065937699 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08348169 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070072401 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094001576 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073905795 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059814149 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088751768 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065540782 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064602104 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081919551 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071129295 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087967821 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068133348 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07270569 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087939369 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067429459 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08937874 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066266924 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066439733 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087793911 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069166096 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085802854 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068651946 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065660655 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089731237 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066287846 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083145681 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069955287 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066508689 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086578685 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072718845 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08469436 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06888699 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069043841 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.087178076 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067694395 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085946099 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067283672 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06954593 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086877848 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067611442 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068338857 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06109853 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072667708 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086523195 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075366329 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066650263 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.083650145 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073944789 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088006244 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073164687 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08605558 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067944285 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067539225 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.085387794 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070201985 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09184381 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065147142 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076950208 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094027818 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067150342 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088532333 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067795381 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067434099 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.085327347 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067226273 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066693252 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065407116 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065043552 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.092993856 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069700678 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.08581729 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069463493 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066601835 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.086050818 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068095951 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060979039 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085621331 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066170199 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.084664749 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077774013 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066490272 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08652471 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065264036 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087008208 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065765967 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06273035 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.094494954 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076262345 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087848985 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073521337 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085086748 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069332186 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095333879 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061952684 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064143607 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083788811 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065348626 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073490803 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086957326 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075413472 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086407717 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067112807 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063594005 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087154651 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065533134 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060502654 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063412705 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068574049 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087063641 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067283014 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066194073 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089402673 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067569291 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095512716 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066567005 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066417701 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086870949 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064001525 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084397646 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067582654 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069437506 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086946013 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065990383 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063084769 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.085819844 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067792617 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086764418 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066992443 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067820206 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092229708 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066804975 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088768147 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070931465 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064353429 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089580893 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.0667388 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085221624 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066513819 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069569653 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089024722 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068045172 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094228838 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067741173 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066944212 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086195036 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06447741 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.084694318 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066969439 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.065803555 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085719085 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068867956 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092570068 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065515253 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068919266 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086009312 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067530925 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091513975 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068766464 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069284417 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093074751 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066651334 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08804825 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075665561 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089743757 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07119032 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067489578 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08849259 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072819261 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084920115 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07480553 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066951906 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086962897 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068304238 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063951662 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086208341 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066579849 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084839085 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074011882 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066887867 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086079878 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066014443 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083734199 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068992864 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070016903 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09357081 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068801612 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089045012 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062771395 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063637903 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086782974 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.0653164 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067217073 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089553019 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071590966 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088406876 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066851055 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065417029 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.095250465 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071764072 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.08982698 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065118177 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088891439 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068815187 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06908863 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087408573 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067475121 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067491217 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091199396 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068112215 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085139035 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074792614 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069955422 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088111461 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067829563 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06676384 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065537391 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060621833 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.089628793 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069507637 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090787881 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069778114 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065885125 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097533251 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064427808 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085657177 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070849082 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065467839 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.090950738 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061691506 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087006636 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06822199 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067498413 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081895368 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066261253 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063998757 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.089498348 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065762542 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081407044 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07783899 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094934219 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070189634 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065044285 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084922862 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062398415 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061608321 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086199451 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067181496 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087741891 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077237804 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065452385 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086091237 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062468037 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085505594 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070788437 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068537516 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083850812 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061984957 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065148962 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.09041294 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07188687 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085134713 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066828901 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068632719 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088623612 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064347073 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.089826977 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064205377 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069504895 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099434735 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066987682 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087979002 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073280331 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094065708 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067914527 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061736668 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087620566 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069704412 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086202451 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068259021 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067081244 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101998821 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068680111 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085328864 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066102063 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068507314 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087162945 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074251791 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087568623 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067563244 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090212132 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069507105 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075593916 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089932086 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073777422 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090004953 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069721369 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.084504073 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067732077 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064605571 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084951453 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068219117 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06701185 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092723568 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074480916 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086820056 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077123769 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096465509 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068682077 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.082780876 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068098433 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066354842 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081645208 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069260714 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064635725 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.085210407 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065531104 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064688416 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088457515 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072115327 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.088101458 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068682418 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066071069 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.081271716 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068669391 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088103717 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068766647 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063033628 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086182014 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067407903 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069212023 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091675986 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064346388 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088227733 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069059942 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066287104 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082451922 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072708067 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084685775 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069758345 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065863823 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0866465 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068539547 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.088226732 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073547194 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067453253 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.08877527 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070495027 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088737801 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064681009 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063678145 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092145582 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064710487 seconds)
  done (took 46.273102776 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099836326 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083209624 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063269231 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061918994 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095018667 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062851933 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082817428 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063482756 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08160382 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066334176 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061683458 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082334064 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07159821 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09853915 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074389108 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088035825 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061755357 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083278686 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062750119 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062488466 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.09158568 seconds)
  done (took 2.572347454 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075780961 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.06911476 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071128448 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074560522 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06611215 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094971746 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073247787 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091920107 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076266026 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087788315 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.076080433 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092043184 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.068048967 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.088377579 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066661095 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091740333 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075856373 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088345741 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070373791 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.092922361 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070374587 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094359811 seconds)
  done (took 2.727333227 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068011511 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065553911 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087383216 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062131551 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06487933 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.081364427 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069936935 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063777863 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.075811106 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064026128 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.087702057 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065881943 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067282369 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.081908999 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066547587 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06291431 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.130170279 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.090286881 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066056976 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066326145 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060742314 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066382822 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.084546324 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062722838 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064980539 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.0911469 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066577079 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084245801 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066416212 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064410448 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085968216 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064205339 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.066931481 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.086965467 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065179343 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.0644137 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.08693332 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06573221 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080996559 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064871633 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065577732 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082692886 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066190484 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066511353 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084857043 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063985095 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.0870273 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066989132 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061484001 seconds)
  done (took 4.552024521 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080897427 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129679789 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066769629 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088903902 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.101644692 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072786021 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06824463 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110621074 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064752666 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064086275 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.104738187 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.104254618 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066392575 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091707768 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072993782 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085442759 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068356711 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063761273 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.091157531 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064893767 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090010462 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071799135 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100971567 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.099597975 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071008867 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084152872 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066787922 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069768812 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.100339853 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.090667073 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071581961 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091107774 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081517209 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.092209621 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065021264 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088875376 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082778486 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086727036 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068666643 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.083679201 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.069810628 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089793431 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073583494 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102458027 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066781266 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.091039269 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067491581 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062314955 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.100363795 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067713213 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095106095 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101224427 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069864023 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086176141 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072026792 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101616952 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066418319 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083816955 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070530855 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098829487 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065052562 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088882843 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081398764 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088171626 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074484574 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101068084 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071774046 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089944293 seconds)
  done (took 6.739935456 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075758511 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092868469 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082140523 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101905878 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071839597 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071198308 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.093951842 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073591899 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.093321579 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078301987 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093405333 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114466112 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069502882 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095275097 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074055755 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09343914 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073828697 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093015484 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073030405 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093288177 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072876517 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.101452841 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092145117 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081423085 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097175104 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066757366 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.094456477 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072369967 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102340202 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.09285014 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081419915 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.093031188 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.073267297 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101884458 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079738863 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093688981 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064704708 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093950679 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072448889 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070468692 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066334233 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104157803 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092507223 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068271646 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092833709 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073219814 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102111471 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.080403385 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09622829 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097913083 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073516304 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102347244 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073403944 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093774791 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100621265 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105438027 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102237554 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101476176 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073235527 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101805477 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100169626 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087649891 seconds)
  done (took 6.376935776 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083860928 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095487856 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076544609 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.083336864 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064492538 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069404655 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063042609 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063247847 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098240707 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073792469 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099230361 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090398638 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074106262 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097898665 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070334579 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094396861 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07057193 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091556815 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075012165 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091758649 seconds)
  done (took 2.612798655 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075638254 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082359046 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.089035737 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072130832 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090904603 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072585501 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090465277 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069736275 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087219589 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070899827 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0769486 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098253658 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067321933 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093214858 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096142382 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073852147 seconds)
  done (took 2.293917179 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07666693 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.092755747 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080990122 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087018987 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065271209 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062382391 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.087802634 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062329119 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061534986 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.100071171 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065488011 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090220474 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066606363 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085081936 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06533366 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068637007 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.084338585 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064067256 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.085532506 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080170285 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097056409 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065897627 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066423842 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087097358 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066482169 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093023254 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066734589 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.084169088 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065299717 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066400191 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.088160008 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069996883 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084246146 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064992256 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064543015 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084635347 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066331534 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08639199 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069912052 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065704697 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085943111 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066446266 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086798072 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068102713 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06219088 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.088270946 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062492887 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.088984855 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064657641 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085679964 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067210274 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068880461 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.088385231 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.0731623 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089942327 seconds)
  done (took 5.172892325 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080394492 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068779922 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08344767 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064805043 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068245694 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.089341317 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0697013 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088863917 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068306658 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083698654 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070095486 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068291699 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089238595 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06988115 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067165117 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068055277 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060902707 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.090553265 seconds)
  done (took 2.339221885 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072299699 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065836345 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094383465 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066338206 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065595669 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090200063 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061647804 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085812796 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066510755 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065774846 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086762964 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068295019 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085172501 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069615318 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.06579534 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086588114 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068338641 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064819715 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087780005 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062283352 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088752007 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066609872 seconds)
  done (took 2.626155058 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07336482 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.090949997 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.159744873 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.105486501 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082825302 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078188593 seconds)
  done (took 1.586010291 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091998869 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100458544 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067173418 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087079865 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095951395 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066939122 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089630644 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067901114 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098403271 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097928324 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068911613 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097050599 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076991159 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098283896 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093335365 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075458799 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088407155 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069644834 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066299624 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082447946 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090401466 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077680518 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089247133 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068072124 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089435855 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077101039 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098778855 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097650902 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069229473 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097801472 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074738857 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088444054 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077659494 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098392679 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069640477 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098099504 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068039559 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106749535 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093748407 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077089071 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090054026 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074964233 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09830516 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073088249 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098595003 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068645913 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093620931 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067402679 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090430732 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108627702 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07467765 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097770754 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073996951 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098511857 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096405127 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087400663 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098640975 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09637068 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076112397 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097270565 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07609988 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094718178 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095953004 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077855156 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095138218 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07932015 seconds)
  done (took 6.668083705 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083358822 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106783239 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068143939 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098180509 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076044439 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089700612 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067961619 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089637684 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067676133 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088818526 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129177337 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068699831 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096836331 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076408183 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089135786 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067633627 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089032601 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0764344 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089487079 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107386326 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069296764 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096784268 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076012972 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097641424 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098321678 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075255602 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089259883 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068285639 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088824965 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068658044 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093838804 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068523276 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097520763 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067957107 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097718502 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068302468 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089936714 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072380693 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09001577 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073870493 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098017295 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105807869 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068223373 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089638901 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07708102 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090362541 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06765757 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088267371 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068012537 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089584641 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077442426 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074890391 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074467689 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073413097 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09281854 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069156295 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08950275 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069463571 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089086978 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074380318 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097080326 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068951833 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108952014 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067951736 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09015762 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096636642 seconds)
  done (took 6.535110599 seconds)
done (took 130.955440039 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210429805 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.188385479 seconds)
  done (took 1.394690486 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069510984 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095449453 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099164485 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128517837 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088275982 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.1030457 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098371332 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.101171819 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067413581 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088276996 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067979177 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067914516 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.182627751 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06730889 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065897033 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.08983378 seconds)
  done (took 2.483401957 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102394512 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.195580356 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109544309 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065468054 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099855923 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.078904847 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064697246 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.097264097 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071192846 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086092856 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.078104699 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096387405 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065740508 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074476939 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069594747 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.09847637 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067449723 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076684027 seconds)
  done (took 2.603069493 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10218418 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144608248 seconds)
  done (took 1.255493785 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.183863979 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.143229407 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.190289851 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.422795904 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.205611705 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.264518984 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.179513579 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.1763284 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.158691511 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.174163822 seconds)
  done (took 3.099611021 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.09877747 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.171386113 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.303755762 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.116986108 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.09571265 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.114834133 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118809599 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.100232087 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078256856 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076692795 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.100911504 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07808954 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.119460526 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075255098 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073379388 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075162305 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098641113 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07196911 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.101886421 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075958571 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119466358 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067514925 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095471489 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074973265 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07524006 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.09819465 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066665712 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.088215707 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075162026 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095399436 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080002192 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113677304 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075376106 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.129700234 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.093238723 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.130959071 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076969432 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070953327 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073030494 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096685286 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077127294 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099541932 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073103623 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097903371 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066744629 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076494352 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.088447466 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066262745 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.101058968 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068227826 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.101204536 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078856285 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.128926719 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.08926794 seconds)
  done (took 6.159335807 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.708758949 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.127259718 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070098563 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.131472257 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117995024 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074525938 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.762461764 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.114157457 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.199913868 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093374754 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109852362 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071837868 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102188334 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08574816 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.130883864 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101833003 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.114872814 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070601201 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.12382078 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.120805383 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068689996 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115046056 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090787846 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.399932163 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068319297 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091873391 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068301973 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069263124 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.13427851 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100331819 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07030153 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.167306574 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08611223 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.145741919 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.089628547 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068950615 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067851348 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.102850099 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.204579774 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.181872229 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.153074476 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068375469 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068271964 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.090718403 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089724986 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.08893633 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.13436883 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081053313 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.141576343 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091961991 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070682366 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088372486 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070538234 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100104159 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078864169 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102173909 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.257623773 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089015676 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069664737 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07106729 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.224411361 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08011167 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102121027 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092149542 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.15415584 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068956647 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.739580193 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.0871065 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067388709 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.092286634 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068388576 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091338681 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069906821 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.140794488 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.363429069 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071652332 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069681216 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090033109 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.187188104 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077687737 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.090829897 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.135165148 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067280194 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089905713 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070490669 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068868007 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.139476973 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078521058 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069038161 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092074335 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070396279 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.089790333 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068291768 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.185437619 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.101121601 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080211163 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.18088724 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.089845303 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.13639313 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080950675 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091828137 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080661364 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.08936737 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071203436 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069472902 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.101915587 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.118034656 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080132563 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090552127 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069607985 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.120250494 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080665886 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.089901892 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079213105 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.421051011 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.078705214 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066438409 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105067739 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067928868 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.135706034 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091417052 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.202903386 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068538938 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101781791 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06794178 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089326846 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068561883 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.133427567 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.091551195 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069699994 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068613949 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092110372 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07980359 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.180914481 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070592196 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.183862777 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.156926335 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.090890167 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.142900683 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06872826 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.140247887 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069374775 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.091556069 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06999795 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.754190978 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068925887 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067997399 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092360367 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160860082 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069502345 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079440348 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100452244 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066870787 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773389103 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080205786 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099476229 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08055696 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091622497 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.0687293 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.088687092 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071565258 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.134681991 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.191472208 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071363741 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06854708 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.099395934 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.134775609 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067392389 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.100289918 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077575919 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100548115 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068647928 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091488955 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080910125 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.14126184 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.101007938 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.15886045 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.561956112 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069720579 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.09829015 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.170480467 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068017275 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.108093922 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067750731 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.10509122 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.136314355 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099121715 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.255155553 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.137951814 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.161515665 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080565085 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105366506 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067135869 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.090339204 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080011687 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090115624 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071654018 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.099563915 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071412694 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068824239 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082145499 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06743492 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.171041246 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.093909234 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080039572 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.089469836 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070264684 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105060909 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069266696 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069308685 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.101681377 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069713048 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.099913548 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.66162912 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100153286 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06928035 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068954351 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.184453463 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.136145514 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067885795 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.090543 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070388536 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.133378467 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.156134849 seconds)
  done (took 30.648349188 seconds)
done (took 48.644684458 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.257976602 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.173842037 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.251300712 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.141021087 seconds)
  done (took 1.928078137 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.145204996 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10176206 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118041859 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065414049 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.125579999 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086681609 seconds)
  done (took 1.669254568 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.409832935 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.23696218 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.230103348 seconds)
  done (took 1.903439909 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.219480121 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.235273894 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.415485656 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.299870994 seconds)
  done (took 2.305101991 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.166103843 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.113312789 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067333562 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107158054 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.160928661 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.210060236 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124630346 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.173042043 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07827718 seconds)
  done (took 2.277776912 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.192453899 seconds)
done (took 11.309274777 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.2597112 seconds)
    (2/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.250436063 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.10179121 seconds)
    (4/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.21152463 seconds)
    (5/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.101690764 seconds)
    (6/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.230362041 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.146590971 seconds)
    (8/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.22904917 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081716401 seconds)
    (10/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.096476433 seconds)
    (11/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.141525206 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.101609888 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091216976 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094985416 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.113612104 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.166928065 seconds)
    (17/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.20931276 seconds)
    (18/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.14822521 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.185979948 seconds)
    (20/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.2029865 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.103263029 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.125414247 seconds)
    (23/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074620906 seconds)
    (24/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.147499035 seconds)
    (25/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073884756 seconds)
    (26/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.112682618 seconds)
    (27/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.098404338 seconds)
    (28/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.182505249 seconds)
    (29/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.106155997 seconds)
    (30/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.109401898 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094642381 seconds)
    (32/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081073184 seconds)
    (33/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.181040619 seconds)
    (34/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.090683037 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.185724136 seconds)
    (36/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.184307991 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.120594436 seconds)
    (38/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065171728 seconds)
    (39/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.10625163 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.174580189 seconds)
    (41/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07380703 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.210613544 seconds)
    (43/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.1946205 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.097547445 seconds)
    (45/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.099669938 seconds)
    (46/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053460086 seconds)
    (47/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.195715955 seconds)
    (48/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.095125795 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.097080405 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.233060885 seconds)
    (51/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066679155 seconds)
    (52/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.095074762 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.07349316 seconds)
    (54/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07701358 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.118846123 seconds)
    (56/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.138056382 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.1324418 seconds)
    (58/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.161118081 seconds)
    (59/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.098107389 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.092329182 seconds)
    (61/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090398901 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.115998216 seconds)
    (63/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089607927 seconds)
    (64/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.224970825 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.168673188 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.14872844 seconds)
    (67/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.13339265 seconds)
    (68/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067706172 seconds)
    (69/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07380011 seconds)
    (70/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.167644205 seconds)
    (71/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.050596033 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.120235655 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090353378 seconds)
    (74/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.100515757 seconds)
    (75/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076711025 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072331226 seconds)
    (77/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.077132125 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095873532 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 0.088866156 seconds)
    (80/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080492676 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065392735 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.090580148 seconds)
    (83/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08518084 seconds)
    (84/309) benchmarking ("sort", BigInt, false)...
    done (took 0.209079397 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.119361776 seconds)
    (86/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086668451 seconds)
    (87/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.076071836 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.115733386 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.08816947 seconds)
    (90/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089525186 seconds)
    (91/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.179484681 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122524605 seconds)
    (93/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.099096197 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.0658685 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.116298708 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06637818 seconds)
    (97/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072386703 seconds)
    (98/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103687206 seconds)
    (99/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.145652401 seconds)
    (100/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.175787975 seconds)
    (101/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.097641588 seconds)
    (102/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07542705 seconds)
    (103/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.157518053 seconds)
    (104/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062968474 seconds)
    (105/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117737884 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.096699526 seconds)
    (107/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072188542 seconds)
    (108/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.192447358 seconds)
    (109/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087133176 seconds)
    (110/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.132792362 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.16702545 seconds)
    (112/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074517541 seconds)
    (113/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.161645861 seconds)
    (114/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076677002 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142309716 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.064871934 seconds)
    (117/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.05041598 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05022846 seconds)
    (119/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.094022635 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.199398174 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.138850068 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.142608838 seconds)
    (123/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053993886 seconds)
    (124/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.077100046 seconds)
    (125/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.076073026 seconds)
    (126/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.391838632 seconds)
    (127/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.095048007 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.157816857 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071894023 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073141761 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.088996938 seconds)
    (132/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053284073 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072083883 seconds)
    (134/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.196623474 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06588538 seconds)
    (136/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.121885073 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071488306 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.11391099 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07249655 seconds)
    (140/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.099612471 seconds)
    (141/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067633367 seconds)
    (142/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.136272218 seconds)
    (143/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.051774752 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070502319 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.162555467 seconds)
    (146/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.06201459 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065485413 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.090131573 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07309377 seconds)
    (150/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.175297596 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051867591 seconds)
    (152/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.192676588 seconds)
    (153/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080611166 seconds)
    (154/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.131752557 seconds)
    (155/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083809949 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073799699 seconds)
    (157/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.075371137 seconds)
    (158/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.11505616 seconds)
    (159/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137419803 seconds)
    (160/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078512186 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.089864285 seconds)
    (162/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.137926977 seconds)
    (163/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092151375 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088601002 seconds)
    (165/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066457069 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089983577 seconds)
    (167/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065695 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.119403789 seconds)
    (169/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.052534346 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.19834808 seconds)
    (171/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.155921422 seconds)
    (172/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.076200775 seconds)
    (173/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.077005411 seconds)
    (174/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.08842021 seconds)
    (175/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076509026 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065872005 seconds)
    (177/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.112214131 seconds)
    (178/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065942303 seconds)
    (179/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.189067315 seconds)
    (180/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.06027426 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091260871 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145633991 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.125587646 seconds)
    (184/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.078078865 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.099173011 seconds)
    (186/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067891404 seconds)
    (187/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071106224 seconds)
    (188/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096177421 seconds)
    (189/309) benchmarking ("sort", Int8, false)...
    done (took 0.162993309 seconds)
    (190/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069786554 seconds)
    (191/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.166595845 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073900378 seconds)
    (193/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.160235951 seconds)
    (194/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073690888 seconds)
    (195/309) benchmarking ("sort", Float64, false)...
    done (took 0.149429473 seconds)
    (196/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052116236 seconds)
    (197/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.203458694 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.09701363 seconds)
    (199/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.075781632 seconds)
    (200/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.102288951 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065029822 seconds)
    (202/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.092464364 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064690038 seconds)
    (204/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068653594 seconds)
    (205/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092288601 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088318993 seconds)
    (207/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.075173173 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088668017 seconds)
    (209/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052106273 seconds)
    (210/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.092282339 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.100694274 seconds)
    (212/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.096703591 seconds)
    (213/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073210452 seconds)
    (214/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051100296 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.119001904 seconds)
    (216/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051665438 seconds)
    (217/309) benchmarking ("sort", Float32, false)...
    done (took 0.150960158 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074987191 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071658801 seconds)
    (220/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.133800072 seconds)
    (221/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067610316 seconds)
    (222/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050999636 seconds)
    (223/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.088778749 seconds)
    (224/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065966593 seconds)
    (225/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.060941954 seconds)
    (226/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073111921 seconds)
    (227/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071330344 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.090114317 seconds)
    (229/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074249002 seconds)
    (230/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053362431 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.09529286 seconds)
    (232/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.139620346 seconds)
    (233/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.068820214 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.08863185 seconds)
    (235/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066207141 seconds)
    (236/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.127999111 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065936181 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091818914 seconds)
    (239/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.076518121 seconds)
    (240/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076876083 seconds)
    (241/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.088710998 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088518982 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.161827456 seconds)
    (244/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052652969 seconds)
    (245/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050759322 seconds)
    (246/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050592488 seconds)
    (247/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.105003541 seconds)
    (248/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07171904 seconds)
    (249/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071359113 seconds)
    (250/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.051932542 seconds)
    (251/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.061819837 seconds)
    (252/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.07844078 seconds)
    (253/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.138221202 seconds)
    (254/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050445333 seconds)
    (255/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.075581921 seconds)
    (256/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069108849 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065190048 seconds)
    (258/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.074787394 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087379735 seconds)
    (260/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067104804 seconds)
    (261/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.076499616 seconds)
    (262/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.06709465 seconds)
    (263/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052895573 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.096610221 seconds)
    (265/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053363031 seconds)
    (266/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052295312 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096600344 seconds)
    (268/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.052184515 seconds)
    (269/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073589478 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.089585964 seconds)
    (271/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.053901318 seconds)
    (272/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051645663 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.113266634 seconds)
    (274/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061996033 seconds)
    (275/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051252269 seconds)
    (276/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.092687142 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.109464969 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.091978674 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.133134075 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.096522187 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06563203 seconds)
    (282/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072487021 seconds)
    (283/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095074416 seconds)
    (284/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053693448 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06514645 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.127231503 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073306044 seconds)
    (288/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051462718 seconds)
    (289/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.090881239 seconds)
    (290/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079112277 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.159722535 seconds)
    (292/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.052048392 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071374988 seconds)
    (294/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.07709061 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089589506 seconds)
    (296/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051367382 seconds)
    (297/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.07716372 seconds)
    (298/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.053260794 seconds)
    (299/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051496265 seconds)
    (300/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.094802527 seconds)
    (301/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063557145 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067938985 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.090216622 seconds)
    (304/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052290303 seconds)
    (305/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061175758 seconds)
    (306/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06060552 seconds)
    (307/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.087180367 seconds)
    (308/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053831206 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065848087 seconds)
  done (took 32.923111504 seconds)
done (took 33.959064599 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081616326 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114404993 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075312384 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091282276 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.104602853 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075765037 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.09668067 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078542067 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078491334 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.079419527 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104535532 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055694858 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073590478 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.098709142 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074742808 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114617005 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078470596 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095128212 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074936064 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064467119 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.096999596 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066720926 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066132349 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.078801052 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078255631 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070859741 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.096634384 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07366387 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088894163 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066744827 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068661265 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.096670999 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066417466 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076899259 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09609943 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073423557 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097649713 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077366027 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067799956 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089573233 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074618002 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065161963 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096643972 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073645696 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071476165 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09555257 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073054775 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101824401 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092106392 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091968008 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075788595 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076144539 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.102211957 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072260833 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.09292326 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074389086 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070789571 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115726993 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073824782 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067775476 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072841578 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072473209 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070329961 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071776193 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071526538 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.104800453 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075619992 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096357205 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075146674 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070204067 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.09082675 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073914622 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068863749 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064933708 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07438304 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075892303 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064202677 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069861643 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.10031958 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072572948 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065094903 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09338287 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068092422 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071285371 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092413485 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055583209 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068952698 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.096030941 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065359616 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096186345 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073040712 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072594383 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.090725662 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077133275 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065696168 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.094711941 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067088546 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065485808 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091940184 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070140064 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065035659 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09208779 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075427473 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066860506 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096442074 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079121402 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.0897403 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073092939 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064828072 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064250766 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078460166 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100251207 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066723668 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067899998 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.089121884 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074054309 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065205985 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.09030399 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066310694 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065698116 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.095893959 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066369768 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06755905 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.097540657 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078223464 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.089302222 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070633039 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068299963 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.089348995 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072175695 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06644892 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.089724444 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068355097 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061359105 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091941795 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066707664 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07240886 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091981507 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073834642 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067119078 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.09835977 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070460183 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.094713322 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072798246 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064312261 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.081803362 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069716692 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068506198 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.090157688 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067372101 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067344759 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.0892448 seconds)
done (took 13.148213274 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067785865 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169264961 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.122828917 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096546845 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.110228567 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067339751 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075739341 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128122028 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091305987 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103599061 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111809776 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085110338 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.138331544 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064781751 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.090476825 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07115182 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066699749 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112940848 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.125342027 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088570452 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.135758058 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064897429 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.120310105 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089385392 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112820589 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.116922176 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067576427 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070427912 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093696473 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.101595343 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110676171 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070234039 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066177239 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123777226 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.116442831 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084266485 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089893494 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083986965 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065344411 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.090720839 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.087451336 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.123486821 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104081592 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081894388 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095020226 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070298373 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066924154 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.108982815 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089230648 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.104026245 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.111211341 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105314076 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.093780849 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.081854333 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.089125715 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086978019 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.104981952 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069067677 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.06614011 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092648349 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066486161 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068595976 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.111815371 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.114115683 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070467362 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079066777 seconds)
  done (took 7.295843794 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08472353 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089580196 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.10823314 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083688234 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065367837 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065311232 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065482129 seconds)
  done (took 1.665938866 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068649849 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08798474 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114004839 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089350597 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.109843836 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087392538 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101003651 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067333784 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.081656336 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.093542388 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08710529 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.126679735 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068974105 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098002223 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091120506 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066971374 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.088629696 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.0659921 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.096552678 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091290205 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093477687 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087670153 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068701469 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.092572834 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081268166 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066674041 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110446397 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097494047 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069519352 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070010483 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090355778 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105953368 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105855619 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074589565 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066842396 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106957618 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081323376 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089464591 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084099709 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070716038 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.106943798 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067877094 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.092539753 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066110397 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070922906 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102458048 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069199117 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066907192 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.094647254 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087352316 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091749182 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082257706 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066709101 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.095415108 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069082596 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095813133 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078073091 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068096704 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11146796 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069529975 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107852858 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085361597 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080531912 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.108991176 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069637613 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.104950037 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.0814362 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068807677 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094154766 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070538157 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.107557684 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065651228 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068755993 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.102484564 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069148966 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.115288395 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091034015 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067966698 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.103011441 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067719655 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.091693099 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.06866835 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088926367 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068946534 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065618647 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097107213 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07161783 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065066019 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.091253373 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072096932 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065031328 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.093433381 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071093537 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067656536 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094869182 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084097528 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.09193769 seconds)
  done (took 9.337883764 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070195475 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068265893 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094341746 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069250792 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068420467 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093364283 seconds)
  done (took 1.574058672 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095534961 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.092961391 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081738892 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071912043 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.130148958 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.081151398 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.107589781 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103618054 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085756235 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078314245 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.107791382 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08218015 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.113383161 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073135017 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.107172646 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073362788 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.106506458 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076802493 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.103093201 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075218679 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.111409569 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074515298 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072628331 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.107980666 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.070301943 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097476783 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077624734 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104147819 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080282851 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.103922664 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074718766 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071136947 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096143321 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079216719 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107121743 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070670923 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072112989 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070138377 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102425467 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07218532 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.080917767 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.100051402 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075345376 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.096976035 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079715123 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.09551739 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071803214 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101664373 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081654059 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095088078 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073287993 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071741288 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096061035 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071347862 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095367213 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080846335 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095272076 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.084114679 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07298334 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096757887 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070002945 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.096645237 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078656291 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.094969297 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.080567823 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.094662182 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071979014 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073163216 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098957837 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.0728996 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096423513 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071130853 seconds)
  done (took 7.392302377 seconds)
done (took 28.359957243 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.673204654 seconds)
  done (took 1.782393458 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.730526754 seconds)
  done (took 1.841525809 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.689500542 seconds)
  done (took 16.801746591 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.598132658 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.769096241 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.842272155 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.156435008 seconds)
  done (took 3.477060808 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.90026631 seconds)
  done (took 2.030551749 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237518251 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223349116 seconds)
  done (took 1.576860447 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.776295683 seconds)
  done (took 1.90150097 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.275582697 seconds)
  done (took 2.391325359 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.318636078 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.148809957 seconds)
  done (took 1.592797227 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.485798202 seconds)
  done (took 1.614908933 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.830030431 seconds)
  done (took 7.959099975 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.203983048 seconds)
  done (took 1.339812904 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.264859499 seconds)
  done (took 1.395024532 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.323791771 seconds)
  done (took 4.450612476 seconds)
done (took 51.276016039 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.07892944 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080713149 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10640783 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07833148 seconds)
  done (took 1.466857702 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078444964 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071430161 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102697653 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072339697 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101550692 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07348158 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073328396 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.103505497 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071654205 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097376856 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073502227 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072318302 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.100394701 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073923915 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095505753 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075914173 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099907804 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073595486 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07566396 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097546638 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071586837 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074422216 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.100809797 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071613913 seconds)
  done (took 3.137463104 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078617923 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072358891 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099489492 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071923061 seconds)
  done (took 1.458474606 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078138525 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09060614 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.115099075 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076449574 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090292448 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.112675839 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069980455 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068612531 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097598177 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078424981 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067747285 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093905577 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.114120756 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077530938 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.07866649 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.092684854 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068564148 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111968987 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07769468 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076871931 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.099615904 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077408289 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.092132817 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089764067 seconds)
  done (took 3.234098779 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078068123 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101347699 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.103365317 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08681788 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.115984403 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065512958 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.100481229 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089580607 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.149497681 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065341514 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.095233154 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066862588 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072440319 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.090511391 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.077061176 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.129591956 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.109105996 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.0682752 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.122286761 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065396449 seconds)
  done (took 2.993084522 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074469538 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069692765 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089886437 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070057423 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077011707 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098184459 seconds)
  done (took 1.622134444 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069688266 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067454479 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091100139 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067953999 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071809465 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.09216015 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067412984 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067092923 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091928321 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06859755 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066495096 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091704656 seconds)
  done (took 2.051035775 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.409493394 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.096203346 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.093304849 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067495781 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071267768 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092110569 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081157446 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068041252 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089232258 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065120208 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092920391 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069573784 seconds)
  done (took 2.434271562 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259732264 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077249309 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291934383 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163718164 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140347456 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142210036 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130723678 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140097309 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.17251327 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129778276 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221897777 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196629701 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134574705 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165928892 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115403936 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098796245 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212386344 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190772341 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131560682 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219111879 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173245905 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15159009 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174844496 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128669002 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133690459 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150757431 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071016156 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106052131 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226050575 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160005876 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173861643 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13887795 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120246433 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230274663 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226205508 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171476665 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161727172 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084307952 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.155680212 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.163183057 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255983773 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115301826 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194057899 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13468824 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106227757 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169070238 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147271807 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.145331365 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133901292 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089675399 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199959859 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209374328 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.164591168 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087476813 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138894996 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142344521 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142262042 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12929369 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237344723 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188474499 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153025696 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095876537 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099690163 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206046166 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158058957 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.136178559 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.153952984 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118665663 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161064193 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182642516 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146280982 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170354168 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183722444 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087757642 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144841693 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193482161 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156370743 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198029896 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150158939 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.098774557 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151896369 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129829012 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081355166 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.166120222 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074550804 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229097603 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123255396 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106759922 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139423078 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105920161 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13715882 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191731725 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199173391 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128667163 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066741688 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128974447 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.14581999 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176811176 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11253234 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107426386 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143346188 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.104611655 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165152456 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.100489121 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150309428 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07594129 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151330901 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154808835 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.102310107 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151343127 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100750394 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.12688823 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129981439 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216798254 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089033681 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109829583 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163906195 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150993702 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.131960918 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197034127 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186031008 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.126185296 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103303151 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20533303 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236781723 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089351928 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218389205 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135210827 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083295978 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.113819889 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151564823 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140298747 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148854392 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082637107 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.146402746 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222626407 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074603206 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122165524 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160991803 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106092131 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08184829 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130836575 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129516034 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095172524 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.127944838 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13235904 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168341126 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151011216 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132157298 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152529826 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125905876 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226519281 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11469267 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101376794 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13064634 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069113918 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.191391022 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186866131 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104964533 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193999238 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.150358919 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132859166 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146143456 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081952699 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.193435177 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080428031 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069752411 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201326341 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136522056 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110114455 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.206700524 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129500298 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.155555432 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.148175024 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165112498 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15992951 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.156822285 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132833436 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086447117 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138123678 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152050879 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074619245 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.120408314 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081061104 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13197075 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122936752 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08363056 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19609176 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154561143 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100814195 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138239214 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124657118 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174257087 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.10359576 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157965847 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.146051402 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120003615 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.181215459 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180533732 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184210832 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101655518 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201462249 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071999643 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073793417 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118151987 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150095479 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109800846 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084221273 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144750499 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201080329 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158086536 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167086708 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138237194 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149443977 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18368797 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069532458 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.142566669 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174494213 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17312703 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.12878611 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117054684 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099742869 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169183011 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136318211 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237864656 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141752258 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150984475 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210070247 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099276565 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10975434 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129257646 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165645613 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133260472 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17280709 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127400553 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115302274 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137481614 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076109981 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129292865 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156715579 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148400075 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163462244 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.141056279 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187583196 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078436306 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145323711 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153355027 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150683019 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063544551 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146587807 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220000669 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121456025 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147618152 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18262887 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107411838 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.15161651 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235430333 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145396212 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111477815 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111265407 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146917482 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155566517 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146965197 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194604383 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138824898 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163243867 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109865022 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.111870367 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114190373 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099097315 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132521464 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.121208529 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.137116723 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.142509666 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.095530715 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186531939 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10490622 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137681197 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145122734 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.122803291 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090313495 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124608668 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20382023 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14683934 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228698803 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.126983574 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.175191049 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220833293 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074522487 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1073986 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077999586 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166559223 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111484893 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158954359 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.125804236 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131575185 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153210886 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173333177 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12189168 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069625114 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135623934 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165038427 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139785115 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125833167 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.106732065 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220197844 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126264797 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080851296 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141892562 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105212549 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100334593 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234455785 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061604596 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125408017 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075214225 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109258037 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15535973 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208756186 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084228329 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.151944593 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148235267 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138214149 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157181924 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102549311 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127210172 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142903231 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178583052 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183839036 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091218111 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140221298 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125968342 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21719574 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132966735 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096570494 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228460726 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180113584 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.217166473 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.115306588 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143063491 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114772536 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136045071 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197891145 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08323571 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193692829 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082105605 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196269847 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132122794 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091171476 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186698935 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099784932 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133374276 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17553105 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145594872 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110006958 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077220712 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146084282 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14866475 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135424997 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.102861491 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168395332 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071605222 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18938496 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199172173 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108838021 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131164979 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097034376 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107469822 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136817641 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130691466 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089079988 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.145618731 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20404401 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.11655556 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177887341 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170482249 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143190742 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166423618 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127485071 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664634933 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.105184757 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187105912 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144936221 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232820854 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12386985 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11864756 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137476433 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15319041 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202590728 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132929624 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176801858 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18750447 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.145979936 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081017063 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131105628 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130451498 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089678497 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132216317 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141441202 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14498426 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.121313033 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.144738378 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153311676 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081902894 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123533547 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184332191 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14479054 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172891067 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171339386 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084164569 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144993012 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197000516 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079488498 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178460783 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182639824 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135768574 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126439234 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081007535 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.131088955 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228250879 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074160496 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219619557 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148733702 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138168254 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113928722 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.171514877 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160727212 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136417997 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150523308 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120383346 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.138631404 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114229147 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110657722 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077024577 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133130325 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14091025 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095824766 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127687165 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.123349953 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179963867 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.09938475 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094936386 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101491837 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205909903 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205351218 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.116652491 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082608122 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147002003 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168495918 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.115400123 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148705451 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.108114987 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108071043 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084301899 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.10456965 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.135255478 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140489898 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13325803 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139844843 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193182127 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110386477 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.248683851 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097087397 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133043061 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069572192 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.107275236 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094711608 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125576165 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137133373 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128528437 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198884576 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.12322435 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.117585969 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094198195 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072161729 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082012046 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157638411 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139909842 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148364301 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126627752 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061810613 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136999316 seconds)
  done (took 69.574581276 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.134225652 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.108633985 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.122718424 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.17557809 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.149465501 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.240463375 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.183383911 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.227252477 seconds)
  done (took 2.555404309 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069628724 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.120569224 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099522129 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.109292044 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067815602 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.096175283 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.277544741 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081085919 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.0945517 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088545462 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.106122549 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094708331 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.460259119 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066064924 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.093382876 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063200729 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.094012047 seconds)
  done (took 3.293607997 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.423442068 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.660249425 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.42498115 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.10169608 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.937593391 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089287638 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.539358408 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.167940673 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071490581 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.44879142 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.746591368 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.133754982 seconds)
  done (took 17.961319431 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075133135 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069513589 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110683471 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083023363 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.070611013 seconds)
  done (took 1.63208588 seconds)
done (took 114.538044454 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080820803 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.354331018 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053603866 seconds)
  done (took 1.661595593 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083401007 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083097731 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.112418341 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08138453 seconds)
  done (took 1.589278874 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.0753909 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075315649 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111486566 seconds)
  done (took 1.489133307 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.282907202 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139309937 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.115569815 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082386106 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076523124 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10454757 seconds)
  done (took 1.488997292 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073442347 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074262837 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099245766 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075827175 seconds)
  done (took 1.541823557 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077244712 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052684866 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.0539436 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083029208 seconds)
  done (took 1.4927968 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087001136 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077064561 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105920497 seconds)
  done (took 1.490653676 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106544617 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.111043806 seconds)
  done (took 1.441263332 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082209766 seconds)
  done (took 1.304235946 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099691068 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.140500319 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.156968665 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137175703 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.165249764 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.136169138 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085313661 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.116071348 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104559536 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087223158 seconds)
  done (took 2.457362139 seconds)
done (took 17.799872057 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078758103 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.392303971 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361620098 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089236215 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.696812773 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355890578 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.005490395 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091252033 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.149090265 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094256683 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084539999 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.64796828 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.032569191 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.319022257 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.018249772 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.324884127 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.674011905 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068926242 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067401345 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094132748 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.961078846 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066841429 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094932546 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068246831 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677239191 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372832848 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067406801 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.35073025 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068535843 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094523165 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357038665 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067541297 seconds)
  done (took 16.11109533 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071585555 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.143343229 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074781989 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082873046 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098276516 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06975937 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.098277356 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070721027 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123631187 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066319134 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112138772 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067957959 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071293382 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09704515 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086629439 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067261378 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067480578 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066821339 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09768416 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069617105 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085005666 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095393124 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068244124 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094306775 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069271956 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078767604 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095515211 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067811037 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067128656 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097518007 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069866486 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095100461 seconds)
  done (took 3.923524475 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114899513 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.151692653 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073225232 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129436634 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112268868 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.097433821 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141246886 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12080083 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153828878 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068146107 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111077034 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068134272 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126292992 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06937709 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087238007 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095485485 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068454978 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09428108 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06945841 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068185017 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114256064 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067671115 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067426704 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066756638 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066739181 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109829356 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068978882 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067602913 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096475474 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069674739 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098247033 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069097906 seconds)
  done (took 4.215847465 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07313152 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074583308 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109790744 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083327679 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068339284 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.099408455 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072079729 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.095506309 seconds)
  done (took 1.915606257 seconds)
done (took 27.395218183 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079542385 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068178667 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098909701 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08062352 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072394167 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.10596831 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066670664 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101071378 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073337158 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071979261 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.101745384 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067528245 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069954382 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.095118041 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073193112 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066168986 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.107600185 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071297241 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.106007727 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079199637 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068304975 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.10086887 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073041851 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.105872389 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079065443 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.104639038 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078638761 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071225727 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.09669118 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070355805 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07519694 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.111475733 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067852237 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106364178 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068295827 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067946822 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.099999433 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067457523 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.105790611 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077621099 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068687292 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074340288 seconds)
  done (took 4.724939318 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088079881 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089444071 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.11199973 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061658253 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.065678124 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.093056232 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087570195 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.086836447 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060065484 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086766173 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.082981968 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060204129 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061749842 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.052776668 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.08741905 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057127456 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060872196 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.08319159 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059833128 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058747854 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.056935817 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.081350737 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060654123 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062096897 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.08407927 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062757221 seconds)
  done (took 3.147026869 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07563697 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08355069 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11573248 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126113456 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.133127516 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075933028 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106761353 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087395798 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.112874979 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067769651 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070953634 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.121079182 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087895339 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.103888675 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068897136 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.082916806 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.110314207 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068928382 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.100941129 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092219048 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08338623 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.106391091 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093229512 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.108894888 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067504003 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068811357 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.099941871 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081599276 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.09925429 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078397231 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071268261 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.099976498 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070281523 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078197684 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069993133 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068120767 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.120161836 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07736805 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.105994142 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069336061 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070734759 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.096421646 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090086517 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.141119719 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067656187 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074040979 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074324245 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.075511717 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097330305 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086965912 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078018686 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.096740925 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071392878 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066925886 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096071225 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080987093 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096463976 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072217684 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076546278 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099649826 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080104385 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07114388 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.11252043 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067059294 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103048305 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068107054 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068432246 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094667745 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093053176 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095672531 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11032031 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.06897736 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.097576383 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076829163 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103247617 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075475235 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067778352 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111595007 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078578442 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098701975 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077845708 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071791839 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099273166 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088628333 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070235988 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068406908 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067226565 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102104911 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072109418 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069219417 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109909497 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068985893 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07041448 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.112999866 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06742231 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.096970854 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075216106 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072380763 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.095585928 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078990145 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.100565706 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069320289 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075798725 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.096145371 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070608479 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077177939 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.103725928 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067396879 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.099505821 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074763291 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068302521 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.097888127 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070616369 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068550684 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.106150492 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074111809 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.100218755 seconds)
  done (took 11.367913726 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.185700163 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153334569 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.099516918 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.172242478 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076584805 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.077557233 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.177246742 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.124049082 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067952613 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067319073 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.099247305 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.114842885 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.135779275 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.150175785 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078484883 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.097623348 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083839282 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.146780049 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.178427379 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142576522 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.114083999 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07623549 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.099462106 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069990865 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073819289 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.111872067 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090518993 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105734198 seconds)
  done (took 4.421684256 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082451842 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128554152 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074672224 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.08842505 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120290036 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067822055 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.098978667 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069780672 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079284169 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.109499859 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067064771 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.102098082 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074123999 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.101133547 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069628628 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074213463 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.103602933 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069708261 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070288478 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.101840109 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076857101 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.109347725 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072443629 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066446787 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102985248 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067143963 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.093342083 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084951239 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.09609544 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089876595 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064939808 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103456335 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08051125 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067304254 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066017309 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066249956 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.098432844 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067936213 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06853749 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.095485547 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066749965 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057517383 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.095867643 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079929209 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101398977 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057643448 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072424182 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.101422449 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07245726 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064477817 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099233138 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070903235 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069874762 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.10394154 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07230379 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.099764526 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07032002 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065564443 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.10331135 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068932209 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065031401 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094532844 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073311398 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066110811 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.105461524 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073763962 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.094220538 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.069315186 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069243919 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102132332 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068725071 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070692009 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094984128 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.0705964 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071620504 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098580651 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069023002 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065696019 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.096720076 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068581999 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055303993 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.096615441 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054086132 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070442019 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.095643195 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066341269 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094340956 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074714743 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.07955634 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.098334536 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073885969 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096498504 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068442311 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070617267 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.088485121 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071319136 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081858983 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.112538191 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067007155 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.095043897 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08324246 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.099389538 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068257726 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056769531 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102179417 seconds)
  done (took 9.85688194 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.09535283 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08673432 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.098685051 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08312223 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.119063107 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087618476 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073584592 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.102816872 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068961518 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.108192345 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073961066 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075879151 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096376118 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077247253 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092493353 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.105134586 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070049874 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.104763353 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072327592 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100442457 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112067579 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082932211 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.073778376 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067410041 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.071438923 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111834425 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090317585 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.109437771 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.07913734 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075359662 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109772509 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090297834 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.103192141 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072840391 seconds)
  done (took 4.304996385 seconds)
done (took 39.057353298 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.349614584 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.545755714 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.312975823 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.310728759 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.370702115 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.316903617 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.32696923 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.321293967 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.702196262 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.315318689 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.553764175 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.048075279 seconds)
done (took 60.732748391 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.335925428 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.461049876 seconds)
    (2/2) benchmarking "String"...
    done (took 1.592089838 seconds)
  done (took 4.311039142 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.736259367 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.227650715 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.576047296 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.315486144 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.315459373 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.636848196 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.029240367 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.184481341 seconds)
  done (took 28.540893679 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.32282998 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.706248172 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.890136082 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.884247481 seconds)
  done (took 19.060688697 seconds)
done (took 62.239978963 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.33241799 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.355566892 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.337999791 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.310646355 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.431324312 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.337104159 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.630924609 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.557300837 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.317777877 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.309967047 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.324656719 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.326739685 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.33069092 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.613213841 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.322824312 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.316677152 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.333901084 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.803860877 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.716899398 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.327389324 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.332645198 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.386209376 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.321059546 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.318860375 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.340404069 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.317576642 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.332794864 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.320718743 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.721451568 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.318392286 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.31636825 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.84113297 seconds)
  done (took 195.463659746 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.317950812 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.409431606 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.527411875 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.348682246 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.831684704 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.514798325 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.455144166 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.904686732 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.336371046 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.324206063 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.628211786 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.318974754 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.690801175 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.285721582 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.326520037 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.324997065 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.621530433 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.691760526 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.335208817 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.592523605 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.333903607 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.518487168 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.453212725 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.602278008 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.343542947 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.373399794 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.339621304 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.33900794 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.507569326 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.556146624 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.328367025 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.355451795 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.93143621 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.176933782 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.326528481 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.327454738 seconds)
  done (took 154.858810294 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.610308263 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.318138885 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.318394805 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.319044495 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.350393516 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.318503707 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.875067842 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.863678339 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.820643216 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.711029107 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.321666951 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.380094417 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.551418936 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.319669484 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.412950687 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.333666879 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.320094454 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.334943254 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.344391882 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.320603382 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.320169747 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.864605807 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.33315445 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.432205575 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.326999877 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.320264652 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.351585267 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.71525993 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.321298007 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.352070573 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.642185274 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.368449266 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.320126363 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.631007893 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.16717828 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.430077709 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.322978042 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.351718007 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.319858302 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.32042567 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.59293287 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.321124071 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.31990122 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.321263889 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.324268578 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.910312122 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.321127776 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.877694101 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.324201529 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.231035409 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.320804619 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.321887093 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.634761317 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.773623473 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.321938341 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.321335525 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.324415408 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.321725008 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.322103016 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.3542376 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.595240725 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.41951471 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.322702851 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.32474596 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.353292776 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.322277398 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.350605151 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.32373035 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.782631328 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.383356356 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.540103787 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.866885669 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.323714975 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.415718647 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.442182639 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.323181059 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.322845712 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.322039504 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.322766554 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.322322204 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.429459754 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.323447757 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.736977459 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.329691547 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.324620133 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.385867246 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.41758815 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.324197711 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.660666011 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.325698774 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.323476458 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.04391417 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.417041057 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.323670272 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.323724448 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.323624231 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.737400945 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.868678752 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.532437032 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.323395799 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.628271539 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.326245034 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.749716252 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.861064127 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.910634275 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.325000464 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.43283652 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.328146756 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.32512311 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.323870742 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.354843584 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.325062514 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.38391685 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.327800612 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.721231192 seconds)
  done (took 358.751847231 seconds)
done (took 711.94103094 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.007778914 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.00470425 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.11276573 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.997511823 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.979709824 seconds)
  done (took 11.367057133 seconds)
done (took 12.631717278 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.520198317 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.520003362 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.38787921 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.522546453 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.354784091 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.538960277 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.501075647 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.347078577 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.431124977 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.409728563 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.430641646 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.380633384 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.353852028 seconds)
  done (took 19.964142786 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.651147464 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.645127544 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.388920909 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.648292313 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.36812056 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.655606718 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.52924226 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.534415253 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.517028044 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.339595131 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.339717955 seconds)
  done (took 17.884122346 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.668641707 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.651125183 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.391398076 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.655560804 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.365809837 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.657990369 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.524398501 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.54039609 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.526794923 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.338818022 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.339308146 seconds)
  done (took 17.927005424 seconds)
done (took 57.040672639 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.33545847 seconds)
  done (took 2.601628471 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.36654488 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.535303761 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.353900492 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.337585531 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.336084447 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.335157712 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.338186508 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.337951426 seconds)
  done (took 12.208387303 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.330350759 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.331635149 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.333820593 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.33157356 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.330574274 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.334120735 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.334347316 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.332332648 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.333838554 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.331332316 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.334762499 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.335047138 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.334895389 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.33465283 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.332210841 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.331873117 seconds)
  done (took 22.595183325 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.335022993 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.332240566 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.333052351 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.333132776 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.332935876 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.334153919 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.333741953 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.332518653 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.331985884 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.332145799 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.332783281 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.332024159 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.333204507 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.332363468 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.332830812 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.333483251 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.333404906 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.332787237 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.338323987 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.333502715 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.334199567 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.333031999 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.333939487 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.333731592 seconds)
  done (took 33.27149922 seconds)
done (took 71.942773825 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.46650676 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.002319832 seconds)
  done (took 9.737250328 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.335749719 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.334978222 seconds)
  done (took 3.939607708 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.335874454 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.33616615 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.336685413 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.336136411 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.336313153 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.336651731 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.336627076 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.336309955 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.336793283 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.336802041 seconds)
  done (took 14.633640811 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.337090017 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.335947181 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.333737976 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.336556205 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.336495834 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.333824577 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.336572622 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.336353887 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.336400195 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.334522139 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.337061504 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.334554539 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.336922301 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.334421355 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.337836772 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.334481541 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.334453912 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.333908463 seconds)
  done (took 25.311330881 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.33769499 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.33710958 seconds)
  done (took 3.945069048 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.33531192 seconds)
    (2/7) benchmarking "second"...
    done (took 1.335097236 seconds)
    (3/7) benchmarking "month"...
    done (took 1.334005063 seconds)
    (4/7) benchmarking "year"...
    done (took 1.333929328 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.334964061 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.334894518 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.334217869 seconds)
  done (took 10.613704931 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.33954162 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.532474196 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.618626519 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.050400762 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.339065083 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.341837931 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.302124454 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.341254449 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.343991185 seconds)
  done (took 15.48104411 seconds)
done (took 84.93153017 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.35349916 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.330046445 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.264806563 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.336662869 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.348985917 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.674635656 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.338072922 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.590633358 seconds)
done (took 39.509256282 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.342117164 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.081346528 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.086307385 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.331323651 seconds)
  done (took 11.770858013 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.317818095 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.273619663 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.319413885 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.383740897 seconds)
  done (took 18.567574674 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.971814674 seconds)
    (2/2) benchmarking "read"...
    done (took 1.665441318 seconds)
  done (took 4.909184172 seconds)
done (took 42.861954275 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.338792906 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.339940847 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.339102859 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.336924454 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.338930949 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.339315548 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.337261988 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.337292877 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.338124907 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.337319661 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.339741245 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.340258014 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.339992346 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.340273838 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.340304568 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.337524479 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.337507381 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.340405439 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.338157511 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338027794 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.337659003 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.341202288 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.338051792 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.33828574 seconds)
  done (took 33.403421934 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.339883955 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.338775555 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.339946228 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.339208621 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.337550217 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.340935972 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.340773546 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.337397497 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.340555417 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.340485282 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.337623636 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.337811625 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.340744755 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.338119745 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.340107024 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.337794044 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.340676382 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.33805923 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.341915673 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.339070091 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.341059966 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338677394 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.338422749 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.34151485 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.339264602 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.338479355 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.342546676 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.339806411 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.341333575 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.338563746 seconds)
  done (took 41.461727077 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.346275 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.349066267 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.342647099 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.341950943 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.341793751 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.342805867 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.342849405 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.342312695 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.3422196 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.342298044 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.342160824 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.34244731 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.341785845 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.34195837 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.342246328 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.342988589 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.343092761 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.34224234 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.342583549 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.343854191 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.342500794 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.342603285 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.342681769 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.343007924 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.343775635 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.343240267 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.343190607 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.342849115 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.343776098 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.342939167 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.343159867 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.343301883 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.34351647 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.343850037 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.344043276 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.34379886 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.349466238 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.350264706 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.343453095 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.343914327 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.343099711 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.344577743 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.344075462 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.343645956 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.34313522 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.343368301 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.344251871 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.343557849 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.343963667 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.344338443 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.343584291 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.343260718 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.344668052 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.34507403 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.344695894 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.344991147 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.344734762 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.343222356 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.344831792 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.345101217 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.343742331 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.344008138 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.344663286 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.345100634 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.34569876 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.345058901 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.344021354 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.345109235 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.345611825 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.345723615 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.344861384 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.345847546 seconds)
  done (took 98.038663959 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.345163427 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.342760574 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.342275001 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.342744101 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.341655325 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.345378664 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.342199579 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.345178471 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342307352 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.345074674 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.3452578 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.344023154 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.342528277 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.345698715 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.344925062 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.342491149 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.34616304 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.343385029 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.346149611 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.346326661 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.347040295 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.343333757 seconds)
  done (took 30.851784785 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.347189674 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.347207311 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.344544126 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.346907431 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.343817613 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.34628981 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.346572869 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.34621651 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.346949263 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.344071367 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.344578727 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.346840115 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.344546027 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.344257024 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.344391337 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.344896267 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.347110045 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.344323719 seconds)
  done (took 25.500563402 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.345304874 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.345039797 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.348258365 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.344726303 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.34459645 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.346930455 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.345284079 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.347708036 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.34710508 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.345446844 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.347883108 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.347845091 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.348749469 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.345632908 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.347285042 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.345306283 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.348229903 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.344633688 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.348424152 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.346188875 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.345894971 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.348803627 seconds)
  done (took 30.906268389 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.348137045 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.348267249 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.345306674 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.346648014 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.345260383 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.348493666 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.348049692 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.345432082 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.348343329 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.348983558 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.345329315 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.348549171 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.346083756 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.346850335 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.34613164 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.346322586 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.34956825 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.347860825 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.34928748 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.346270373 seconds)
  done (took 28.227092217 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.351040284 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.351675528 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.351032567 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.35080266 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.351749606 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.351485005 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.351228873 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.351072677 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.351848025 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.351354949 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.352030477 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.351300733 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.351805642 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.352897944 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.351842728 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.351772712 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.353046462 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.352219024 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.352215999 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.352216246 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.35299048 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.351836286 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.352364951 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.352364162 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.351734091 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.353021645 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.353313141 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.351342395 seconds)
  done (took 39.137386514 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.350948098 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.349776401 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.34830996 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.34874064 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.348261218 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.347927918 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.347709053 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.34780245 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.350883091 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.348811187 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.350885366 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.350416384 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.350790918 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.351527291 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.350874557 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.351148492 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351314469 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.349309974 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.348689726 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.348647358 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.351944758 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.352030201 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.351394676 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.348995799 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349534935 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.352008312 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.349253693 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.34888693 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.351252542 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.348406051 seconds)
  done (took 41.782386878 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.370813089 seconds)
    (2/2) benchmarking "in"...
    done (took 1.36997479 seconds)
  done (took 4.025910406 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.348930177 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.352265159 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.351667199 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.34919415 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.350188947 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.352565304 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.351711983 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.348852879 seconds)
  done (took 12.090378881 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.352939493 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.353033846 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.352601875 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.352802158 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.354204598 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.355243673 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.362234856 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.370850173 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.357044431 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.354920722 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.360875277 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.362761305 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.359299255 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.354298148 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.354559657 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.356583711 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.354122193 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.354914836 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.354154226 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.355082672 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.35559618 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.358006214 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.358472167 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.351431682 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.357069922 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.367760023 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.361583727 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.354431473 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.356298067 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.360670062 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.355827903 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.352391691 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.356004223 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.356847279 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.354673826 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.35570086 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.367429521 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.377304594 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.364468479 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.357059457 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.355390317 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.352342474 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.35718501 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.358145507 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.356254836 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.355701407 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.355666046 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.352479424 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.355024116 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.358994629 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.359810478 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.355404059 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.353066428 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.36223029 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.3584216 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.364586238 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.374527743 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.36022421 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.365661809 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.368887932 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.372105208 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.365647872 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.360837021 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.359477683 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.368686976 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.380698519 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.366612557 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.371458492 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.354127151 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.356075111 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.366209241 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.371965986 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.367312656 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.357309435 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.357172273 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.356436011 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.357591355 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.357363688 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.368961082 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.380394702 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.35905643 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.358084879 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.368786162 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.379720113 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.357578131 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.358215745 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.358367658 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.357949005 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.359084573 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.369107034 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.376157777 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.35780112 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.357504403 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.358318519 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.361427469 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.359134909 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.357707334 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.361163767 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.356280719 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.358299157 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.359463723 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.363549303 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.368811893 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.359240192 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.35940101 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.369064263 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.358671239 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.359490144 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.36953759 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.359190451 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.3601713 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.360661346 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.36757279 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.355883344 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.36296421 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.368806819 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.359140108 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.36153362 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.35954793 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.359406953 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.369730343 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.387351215 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.360081821 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.358635546 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.36589177 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.371409532 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.360821173 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.364338351 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.360573588 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.35674682 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.357843363 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.363186098 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.360060299 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.362525944 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.36058905 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.36222539 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.357670188 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.359959313 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.360768407 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.362112929 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.363152079 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.361886709 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.362807502 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.364753494 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.361045083 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.363656078 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.370092606 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.361834986 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.363245635 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.36357853 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.358521329 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.361213364 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.364214343 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.362427796 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.363224193 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.361281089 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.361581979 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.361891332 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.362097713 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.361868379 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.361454599 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.362832188 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.3667979 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.362375641 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.36777156 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.362591981 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.35854171 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.36213302 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.362738724 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.363605227 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.362135689 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.361814824 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.367251553 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.369884477 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.362119806 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.363084598 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.366883771 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.363239546 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.36286025 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.363331696 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.366636312 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.370878769 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.362988764 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.3726636 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.363508695 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.363469245 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.362757507 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.364447171 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.363766067 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.363225644 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.367290975 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.370416307 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.377498541 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.373727387 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.364621939 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.366579962 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.365088047 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.367209706 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.369346244 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.363426642 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.364657944 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.363671041 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.364245251 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.363744233 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.367560217 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.363657673 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.364072601 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.364111507 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.364219837 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.365120341 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.364666699 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.366432468 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.367198702 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.361101078 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.364473704 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.364710499 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.364546005 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.362255462 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.363353389 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.36441389 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.365392767 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.365464858 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.375121039 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.36229645 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.366777396 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.3668445 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.365822919 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.3653149 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.365156851 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.368102334 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.366222827 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.37377099 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.385425872 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.367189573 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.374165395 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.383880866 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.366362399 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.37036437 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.36675982 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.363128337 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.369461824 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.373286905 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.365464163 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.366349567 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.366964687 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.366776285 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.366287195 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.375270565 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.363322147 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.366029451 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.366113435 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.370544462 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.363133917 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.368041482 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.369170183 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.36917348 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.370177996 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.36672896 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.366046325 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.368628753 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.36661948 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.367346721 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.366124215 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.371329866 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.373952304 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.374461316 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.368607306 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.371659444 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.368944771 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.37102463 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.369169668 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.368242577 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.367632559 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.382104949 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.376695903 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.376906771 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.372759905 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.367596916 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.374597941 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.369801551 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.372960165 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.36870311 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.369007112 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.369304948 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.367951863 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.364910501 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.370527973 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.368180982 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.36976223 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.370825146 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.372363782 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.368382451 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.368975888 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.369353439 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.368741177 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.368705855 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.368894295 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.369421139 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.372994404 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.371326195 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.369208146 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.369542063 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.379725469 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.388026689 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.371157373 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.369262009 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.369797578 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.36958072 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.371727186 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.370215426 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.374167567 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.377255368 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.373429184 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.380564588 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.371120948 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.382567842 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.369529084 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.37412376 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.378026013 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.367388142 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.369432744 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.371426506 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.370552205 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.379510274 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.388220498 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.371693924 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.374254324 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.371274013 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.371025172 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.371881741 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.371155628 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.37022444 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.370642505 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.381515008 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.393991447 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.374297453 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.373608972 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.368911056 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.371218043 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.372073413 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.36988839 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.378132325 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.371311297 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.373736422 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.371268589 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.373044928 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.371309638 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.371024717 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.370743257 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.369012249 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.370671247 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.380028784 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.390844176 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.375423821 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.370611851 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.38328126 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.372495659 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.381002815 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.390140734 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.373228628 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.371953336 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.371902843 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.376321187 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.373168843 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.374234718 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.372503796 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.374404057 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.375497195 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.372569989 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.377165772 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.373601036 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.372697053 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.372995748 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.3830277 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.395912532 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.374706493 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.376945051 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.370681603 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.375330075 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.377443797 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.374170425 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.373582666 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.37811974 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.384481879 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.380832461 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.37419716 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.374237156 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.374775743 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.37482446 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.373629432 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.3733872 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.373479119 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.373816326 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.376888175 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.37401479 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.380700734 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.373889643 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.375243383 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.376492745 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.376013214 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.386306143 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.37420954 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.376616046 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.373898491 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.37358425 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.376059447 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.375820186 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.375596805 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.375530267 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.373972215 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.376367725 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.381855313 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.381504627 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.378029676 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.375669133 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.374554254 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.37708398 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.376531963 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.374442316 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.375156027 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.375975477 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.377556006 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.375052413 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.378741407 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.374464071 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.374275955 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.377123861 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.375178277 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.379048542 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.383650696 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.376897121 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.37207434 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.374508498 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.375781378 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.374999074 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.377231924 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.387257838 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.379773255 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.38687822 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.385039334 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.380186198 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.37742673 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.379373763 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.385084176 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.375502784 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.378502348 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.376442525 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.380544321 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.377060421 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.380297428 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.37775649 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.387001839 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.377697729 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.378188794 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.387702577 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.401076293 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.376978826 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.37854052 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.38089545 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.377760664 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.374102176 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.376115829 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.376252231 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.386887888 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.398131615 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.377218578 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.380568872 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.376253854 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.378513304 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.382333456 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.376680366 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.379064161 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.37515826 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.378939174 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.377944715 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.377562794 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.375181059 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.378863698 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.378639021 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.38196013 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.38593624 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.375543286 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.381171852 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.379308406 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.380080902 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.377977828 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.37834199 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.375562332 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.37539595 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.379642875 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.37918903 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.380375658 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.382234579 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.379720479 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.380790625 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.379696182 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.379018639 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.383389833 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.389900842 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.385813956 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.377061279 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.379181636 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.380172584 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.383444853 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.37974796 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.379628463 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.380474635 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.383975548 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.378546298 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.380543751 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.379378576 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.383028371 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.397971295 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.402051508 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.381353454 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.380927541 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.386347848 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.380045449 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.377517537 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.37968975 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.384572327 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.383653943 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.388006179 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.381260062 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.388870518 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.398661137 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.382256754 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.383844547 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.383695729 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.390406346 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.385708653 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.381109289 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.380713958 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.386887173 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.398306853 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.381180091 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.392063301 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.412735981 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.401209812 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.385757798 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.380961324 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.381122123 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.381453378 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.38517784 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.382174432 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.381078105 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.381467709 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.382403735 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.384284758 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.38842025 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.384337516 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.382285341 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.381193358 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.382828981 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.385782562 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.378747236 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.382414383 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.381582698 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.381610401 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.382664723 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.38270113 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.383812705 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.397394672 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.394274779 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.382183452 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.382526459 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.378722555 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.387528254 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.386043943 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.393727156 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.390047747 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.382575893 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.383137797 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.385290634 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.382256323 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.379847427 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.384812203 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.38362198 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.383564001 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.380966111 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.397941537 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.392027112 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.390572233 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.384631058 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.383416697 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.382156166 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.386161273 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.383165186 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.383913518 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.387182252 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.384614974 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.386712821 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.383707958 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.383205077 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.386996469 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.390712778 seconds)
  done (took 818.916101729 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.382538206 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.38086628 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.380029525 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.38063154 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.380724318 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.381424349 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.380831625 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.381516029 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.379967321 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.379928825 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.380776646 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.380779705 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.380491058 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.383606176 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.38108254 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.380124323 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.380960086 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.380831366 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.37973494 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.380977898 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.380499201 seconds)
  done (took 30.314705019 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.383911715 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.379962011 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.380548053 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.382665907 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.379845221 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.382277074 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.38060893 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.384169177 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.38254375 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.38040309 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.382927749 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.383638644 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.380525102 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.380788855 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.381942838 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.382952978 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.383428667 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.380498997 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.3838067 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.38027998 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.383856704 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.38082659 seconds)
  done (took 31.718949407 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.384875436 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.385332969 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.384822292 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.38138594 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.383843418 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.38112484 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.384236106 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.381503735 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.382006341 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.384616054 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.380740871 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.383950425 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.389653891 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.386951408 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.386072113 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.382061078 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.525901194 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.382056829 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.383887645 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.383609531 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.382378953 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.388150507 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.377623947 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.377405663 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.380396148 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.381015897 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.380622872 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.381638568 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.379426804 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.380504822 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.383403448 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.379812892 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.380157334 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.382205022 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.37985777 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.380825536 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.381926919 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.380270735 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.377463759 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.378398171 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.390383884 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.399245321 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.38023591 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.387956403 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.378884793 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.377848477 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.383543179 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.386874689 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.376751929 seconds)
  done (took 69.21227922 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.378142108 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.378705261 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.375984551 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.379316181 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.379053915 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.3783643 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.379166956 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.378719504 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.377511516 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.377285429 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.381425293 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.377927191 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.377891031 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.380276637 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.380047414 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.377677968 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.376820821 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.377038875 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.376582097 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.377255845 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.377582813 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.380413716 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.380027054 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.377894454 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.380108498 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.376993036 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.377393273 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.380980956 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.377623545 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.377738397 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.380751691 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.380731272 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.381353781 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.378523447 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.377329929 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.381354385 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.380012467 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.377590124 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.380901511 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.378382958 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.380425977 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.381220302 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.381302788 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.380769999 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.376860137 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.378923212 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.377841862 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.378371498 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.378214218 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.380446863 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.380782876 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.380147118 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.381441102 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.379647207 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.380974289 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.381716294 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.378717385 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.380140518 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.381397979 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.379287592 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.379378836 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.381441893 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.379652793 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.381857974 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.383081075 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.37934468 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.381375449 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.382021684 seconds)
  done (took 95.110905015 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.382631678 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.383190997 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.382964381 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.383774377 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.381816394 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.38283957 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.383383421 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.382340371 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.383467477 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.383078339 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.382977429 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.382361345 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.382370674 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.382328272 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.381752664 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.382308199 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.382690977 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.383921692 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.38285703 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.38218053 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.382547878 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.382823685 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.384085461 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.383010147 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.386765202 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.382426571 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.383549457 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.382557902 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.383098866 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.3843367 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.385325664 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.384267555 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.384291038 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.383056595 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.383874616 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.382917409 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.382287106 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.383435736 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.383176613 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.385584855 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.383340322 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.3831339 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.383784704 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.384101885 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.383939459 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.383893526 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.385674817 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.385872561 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.384979933 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.384042836 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.384240104 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.383653435 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.383740312 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.386654504 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.383540309 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.384119414 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.38484798 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.385310512 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.384740807 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.384997998 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.384974718 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.383568069 seconds)
  done (took 87.102370287 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.382865243 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.38313318 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.380271887 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.380680858 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.382507414 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.382738931 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.381778114 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.38314106 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.382369809 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.383648289 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.383092217 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.380864374 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.381304491 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.382516312 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.380489553 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.379972451 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.380038515 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.380224149 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.382767761 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.381515395 seconds)
  done (took 28.951266336 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.381053971 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.38315108 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.3807053 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.380176488 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.38359224 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.381050902 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.384727072 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.382254049 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.380539214 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.382626336 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.383318363 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.38331949 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.379655314 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.380034523 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.383241052 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.380179513 seconds)
  done (took 23.425037505 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.380524212 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.383207405 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.383545076 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.384158874 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.381902062 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.380555308 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.383124632 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.380777381 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.380745373 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.383189856 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.38553053 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.38402065 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.383329576 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.384189465 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.380819827 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.383365085 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.381413301 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.381908404 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.384574561 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.384256043 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.382261163 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.381259078 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.384203346 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.384558871 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.381445178 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.383535646 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.38153305 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.381857957 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.381856017 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.384432403 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.382296092 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.38310825 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.382330053 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.382745472 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.384866822 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.382142483 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.385244316 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.385014962 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.384474143 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.385749578 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.385979202 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.384029808 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.386916455 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.386545862 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.383543827 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.384706902 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.384499691 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.38327091 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.382913746 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.383649785 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.384777831 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.385355824 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.386148867 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.386229301 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.385909717 seconds)
  done (took 77.41235733 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.385246464 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.384933331 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.382447601 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.384473818 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.385541369 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.384355425 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.386872852 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.383191038 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.383284053 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.38498278 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.383064811 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.385342561 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.384485421 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.38488426 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.382884139 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.384188861 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.38179955 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.382178823 seconds)
  done (took 26.231644804 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.384309389 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.382207938 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.384562938 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.382068452 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.381726446 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.385058041 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.382630759 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.385077252 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.386137534 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.382255782 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.381584168 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.384789147 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.384275575 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.384735144 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.382931285 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.38299716 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.384752462 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.383260705 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.381847966 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.381988459 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.38542945 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.383918268 seconds)
  done (took 31.756711069 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.383818614 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.383203946 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.402213628 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.429079471 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.414327816 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.383605525 seconds)
  done (took 9.713928475 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382175613 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384385465 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.382524382 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384516515 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384731455 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382083903 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381761096 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382145473 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383907335 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382485467 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38243473 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384470409 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384557397 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381514223 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385122419 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384569395 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.38201278 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382027295 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.38367266 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384874268 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381480452 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385641254 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383030478 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3823095 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382630571 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381829136 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38434482 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.383186024 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382566604 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385654575 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385313872 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382720156 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.385566475 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383631653 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.386509517 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385865528 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383733871 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3851644 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384893284 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38214753 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.385693745 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.385631414 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.385686675 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.38315552 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385982928 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382317624 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383867363 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383073245 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383319515 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.386459758 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.386416761 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383768641 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385472966 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.386189614 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385374163 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.38708677 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383915217 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384489703 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384357333 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383513541 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383961282 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385661857 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383778539 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384450669 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.387184531 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383069002 seconds)
  done (took 92.667841912 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384827997 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.384051188 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383932171 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.384757498 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.38519612 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384341079 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384234279 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.38463434 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384872287 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384148717 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.386836277 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384866346 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384107116 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384946803 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.384018103 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.384650272 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.385017707 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.384579315 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.385787186 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.3880304 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384987246 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384977224 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384743025 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385649776 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.385739789 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.387429012 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.385933925 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384572068 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384419097 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.38494613 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385447772 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384193965 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3849335 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.384972919 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.388194974 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38426148 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384750468 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3851677 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385230594 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.386231599 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385415673 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.388214013 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.384565891 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.384839891 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38516893 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384348478 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.385342449 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.384804328 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385434507 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385317197 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385301956 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385959405 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.385152621 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.385230363 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384700085 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.386357197 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.385444726 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.385459845 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384979172 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388824094 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.385645114 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384738068 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388745477 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384839163 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385853263 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.384992339 seconds)
  done (took 92.751098419 seconds)
done (took 1901.983167103 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.468152334 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.367317335 seconds)
  done (took 14.155864943 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.549013206 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.502702954 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.387054101 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.389640479 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.386186218 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.385232037 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.383301013 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.385914739 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.386322261 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.386886156 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.385081207 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.572770455 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.46207454 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.386717743 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.38609959 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.479927598 seconds)
  done (took 44.138384021 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.423536637 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.390385943 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.509443026 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.404508252 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.42204777 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.580676761 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.441398401 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.392214288 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.551795977 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.434480355 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.856894997 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.42146492 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.38885215 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.438446458 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.406728933 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.580116271 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.631544408 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.854114368 seconds)
  done (took 31.448635289 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.801368667 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.405381462 seconds)
  done (took 9.52463504 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.379595894 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.425904266 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.407456269 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.400641748 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.387450408 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.440974343 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.404477557 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.398734281 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.380070711 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.42304626 seconds)
  done (took 65.368353052 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.405900698 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.388318904 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.387899934 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.386347472 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.379328874 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.39568024 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.386625737 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.384675809 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.660420052 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.505489113 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.406883554 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.39330887 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.387529152 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.389659392 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.385284833 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.420181973 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.521514457 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.385233491 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.384411925 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.392846125 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.387521236 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.498680121 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.426856634 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.385553607 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.502734737 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.66440308 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.392911451 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.39403067 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.517568472 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.385043286 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.387251669 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.387706616 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.390157464 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.944274662 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.827439781 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.398265973 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.411169347 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.396005365 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.384766493 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.498351982 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.389170925 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.393249286 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.380030627 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.825788075 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.540836401 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.49327629 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.573983766 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.392555251 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.390451639 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.448273041 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.390961269 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.389591406 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.417538545 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.14583523 seconds)
  done (took 113.420393575 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.430854742 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.86864924 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.550453494 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.399023885 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.882159365 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.824684988 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.381034255 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.641362558 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.419384506 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.844606173 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.66378535 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.727081287 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.384278677 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.382800404 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.384944376 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.382453637 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.63487412 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.674831216 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.383269574 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.387742504 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.43306488 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.874790833 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.607314666 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.583628342 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.423559747 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.816870559 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.607990916 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.722117501 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.38742262 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.382866449 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.660053443 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.384841001 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.3838183 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.382944931 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.651475439 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.710906419 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.691589464 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.382353143 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.405228444 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.388340594 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.414083262 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.81501378 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.697349017 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.618004288 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.742260621 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.833336927 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.386498067 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.382784927 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.385842032 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.589577202 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.627901691 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.865212144 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.609911907 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.398740678 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.646116489 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.382659532 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.419745071 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.842643525 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.713081593 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.714634921 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.407667086 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.384500658 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.384003211 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.909610896 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.388418561 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.70515592 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.656893689 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.384663121 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.702725589 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.704720885 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.715780835 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.84427813 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.426638262 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.411458741 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.429018723 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.87890913 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.662576066 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.842091617 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.394367947 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.384493802 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.68745507 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.387355769 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.661298563 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.921144952 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.857162225 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.437982375 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.402936977 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.385322701 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.844412143 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.84037502 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.63227778 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.748399829 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.662184203 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.414092097 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.386505782 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.38504035 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.404439588 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.619783082 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.399337563 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.747730859 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.841893878 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.162366144 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.431830337 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.913960996 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.621666018 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.39794965 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.387961708 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.386288298 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.605596991 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.458279443 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.408042855 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.388098633 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.844955042 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.254310456 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.534171898 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.095017903 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.667239754 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.391557122 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.867538967 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.394959301 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.848652747 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.429839498 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.913535704 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.74088136 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.444251464 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.608360235 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.749539395 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.400077417 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.866038073 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.915928853 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.612982237 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.859394511 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.148060101 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.391065137 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.895066029 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.426579052 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.400816058 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.570829361 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.410817474 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.650925659 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.40099018 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.872321939 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.42763389 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.659422196 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.553727754 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.88267841 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.447981604 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.667072359 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.43585112 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.535995629 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.404394289 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.402869078 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.584414607 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.549974353 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.389768981 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.93091156 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.390026896 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.545314684 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.911305527 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.419497601 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.664465379 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.382245813 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.383041497 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.681935348 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.415962597 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.021260439 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.375852578 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.65120242 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.367278986 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.824217487 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.375894088 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.899499125 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.597911446 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.394737708 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.384183411 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.180880215 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.375105837 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.540749478 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.549163646 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.904705665 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.377731765 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.807903533 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.377288886 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.611066208 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.388869314 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.375484206 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.726783241 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.458033258 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.382110467 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.418174161 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.376913652 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.37643454 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.820475663 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.416970965 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.100527898 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.529849515 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.854313567 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.687308675 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.852653824 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.435931488 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.395406801 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.85465371 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.400296945 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.657276326 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.376986865 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.416087505 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.833266256 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.380102331 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.817689123 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.875206109 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.402310736 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.640275612 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.377799683 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.453067634 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.378616815 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.621118641 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.702619033 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.377391545 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.379324803 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.597902085 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.616723961 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.595934224 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.395491311 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.413657481 seconds)
  done (took 861.041367397 seconds)
done (took 1140.417526447 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.377986948 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.379738357 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.368516611 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.382757031 seconds)
  done (took 26.826137422 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.389440215 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.385170314 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.386281581 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.385905497 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.388844888 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.386006466 seconds)
  done (took 9.639038132 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.419101737 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.379459612 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.382799362 seconds)
  done (took 19.500365585 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.59482433 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.580833616 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.735591481 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.425271185 seconds)
  done (took 10.656777149 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.387493857 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.387000269 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.387620782 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.390968982 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.390578742 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.392061709 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.390981535 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.39099019 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.391503831 seconds)
  done (took 13.829347206 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.028173801 seconds)
done (took 86.797070631 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.922965471 seconds)
    (2/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.567200618 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.16220111 seconds)
    (4/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.409898981 seconds)
    (5/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.402294529 seconds)
    (6/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.381784296 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.626694567 seconds)
    (8/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.369976182 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.624195519 seconds)
    (10/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.519898807 seconds)
    (11/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.146977011 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.42361807 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.141417267 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.410354345 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.430135808 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.505270066 seconds)
    (17/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.997613556 seconds)
    (18/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.959845985 seconds)
    (19/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.001038379 seconds)
    (20/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.372637187 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.166163105 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.458678326 seconds)
    (23/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.509997237 seconds)
    (24/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.37311131 seconds)
    (25/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.482295398 seconds)
    (26/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.394841731 seconds)
    (27/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.426770618 seconds)
    (28/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.566031308 seconds)
    (29/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.79871169 seconds)
    (30/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.741795859 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.517524162 seconds)
    (32/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.468825315 seconds)
    (33/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.189559568 seconds)
    (34/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.400774408 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.982932987 seconds)
    (36/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.169826145 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.786318346 seconds)
    (38/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.455309508 seconds)
    (39/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.400330391 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.411348894 seconds)
    (41/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.411417999 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.454881703 seconds)
    (43/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.866561206 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.935807622 seconds)
    (45/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.492786035 seconds)
    (46/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.397634646 seconds)
    (47/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.435870545 seconds)
    (48/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.5843903 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.4960397 seconds)
    (50/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.97980541 seconds)
    (51/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.412012439 seconds)
    (52/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.596037597 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.666267897 seconds)
    (54/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.470200497 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.781803362 seconds)
    (56/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.572541754 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.391516099 seconds)
    (58/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.374407394 seconds)
    (59/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.993949641 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.445495882 seconds)
    (61/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.412878782 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.562122052 seconds)
    (63/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.42624612 seconds)
    (64/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.587313036 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.403735616 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.373301831 seconds)
    (67/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.723182562 seconds)
    (68/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.404702831 seconds)
    (69/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.386323267 seconds)
    (70/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.199718041 seconds)
    (71/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.725760179 seconds)
    (72/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.407704384 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.698512269 seconds)
    (74/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.396249327 seconds)
    (75/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.524809482 seconds)
    (76/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.174130675 seconds)
    (77/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.731847033 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.456503378 seconds)
    (79/309) benchmarking ("sort", Int64, false)...
    done (took 5.528276259 seconds)
    (80/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.440336599 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.78040411 seconds)
    (82/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.388621115 seconds)
    (83/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.633035936 seconds)
    (84/309) benchmarking ("sort", BigInt, false)...
    done (took 6.391692116 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.262820221 seconds)
    (86/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.403678749 seconds)
    (87/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.893133847 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.509733447 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.192139254 seconds)
    (90/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.390679359 seconds)
    (91/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.87392988 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.463685936 seconds)
    (93/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.388692996 seconds)
    (94/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.732607306 seconds)
    (95/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.23265507 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.135711765 seconds)
    (97/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.414511682 seconds)
    (98/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.619531491 seconds)
    (99/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.590038646 seconds)
    (100/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.001502072 seconds)
    (101/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.401728951 seconds)
    (102/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.465444923 seconds)
    (103/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.840054016 seconds)
    (104/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.570735366 seconds)
    (105/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.394222755 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.627316256 seconds)
    (107/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.67872449 seconds)
    (108/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.391296056 seconds)
    (109/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.405647595 seconds)
    (110/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.953107403 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.391256902 seconds)
    (112/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.473999381 seconds)
    (113/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.545513001 seconds)
    (114/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.491627419 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.38846666 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.871803182 seconds)
    (117/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.651323393 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.707977742 seconds)
    (119/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.450141178 seconds)
    (120/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.389289565 seconds)
    (121/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.485508633 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.414162228 seconds)
    (123/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.376537645 seconds)
    (124/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.951318601 seconds)
    (125/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.686487777 seconds)
    (126/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.679590009 seconds)
    (127/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.105612797 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 1.891985902 seconds)
    (129/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.628094475 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.426638348 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.08704528 seconds)
    (132/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.381043599 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.66086441 seconds)
    (134/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.390971806 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.259264095 seconds)
    (136/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.572538111 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.086995714 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.581104015 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.672549067 seconds)
    (140/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.411827935 seconds)
    (141/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.413017126 seconds)
    (142/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.920286983 seconds)
    (143/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.69685804 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.520767792 seconds)
    (145/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.390616778 seconds)
    (146/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.72258029 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.605729763 seconds)
    (148/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.104686583 seconds)
    (149/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.416782617 seconds)
    (150/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.740580064 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.179097851 seconds)
    (152/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.832036995 seconds)
    (153/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.108038584 seconds)
    (154/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.607347218 seconds)
    (155/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.061244921 seconds)
    (156/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.415957244 seconds)
    (157/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.862261755 seconds)
    (158/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.659035809 seconds)
    (159/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.404806637 seconds)
    (160/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.545872221 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.943074007 seconds)
    (162/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.928297152 seconds)
    (163/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.457514496 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.755145255 seconds)
    (165/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.510176991 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.006438568 seconds)
    (167/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.516986202 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.259712725 seconds)
    (169/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.653542019 seconds)
    (170/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.410860366 seconds)
    (171/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.882523473 seconds)
    (172/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.917877266 seconds)
    (173/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.40339353 seconds)
    (174/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.081562626 seconds)
    (175/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.392108836 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.988596154 seconds)
    (177/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.473984996 seconds)
    (178/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.688489955 seconds)
    (179/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.391865239 seconds)
    (180/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.759981141 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.198631055 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.393080277 seconds)
    (183/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.404130795 seconds)
    (184/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.499384443 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.417465774 seconds)
    (186/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.450262252 seconds)
    (187/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.501178617 seconds)
    (188/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.417879368 seconds)
    (189/309) benchmarking ("sort", Int8, false)...
    done (took 4.474613385 seconds)
    (190/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.453636507 seconds)
    (191/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.983148375 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.43531823 seconds)
    (193/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.523972293 seconds)
    (194/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.402059184 seconds)
    (195/309) benchmarking ("sort", Float64, false)...
    done (took 5.641073365 seconds)
    (196/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.035431441 seconds)
    (197/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.422276461 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.384587523 seconds)
    (199/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.806369863 seconds)
    (200/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.195115495 seconds)
    (201/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.790278996 seconds)
    (202/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.531726243 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.450519155 seconds)
    (204/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.456214263 seconds)
    (205/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.457466703 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.734511488 seconds)
    (207/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.910113675 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.721880582 seconds)
    (209/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.382647081 seconds)
    (210/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.468830603 seconds)
    (211/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.398059674 seconds)
    (212/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.423338025 seconds)
    (213/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.419432782 seconds)
    (214/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.676016055 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.187808837 seconds)
    (216/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.810917814 seconds)
    (217/309) benchmarking ("sort", Float32, false)...
    done (took 5.376035411 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.042938755 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.596843453 seconds)
    (220/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.120444147 seconds)
    (221/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.478391127 seconds)
    (222/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.666672179 seconds)
    (223/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.47917926 seconds)
    (224/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.393988871 seconds)
    (225/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.099609585 seconds)
    (226/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.523947109 seconds)
    (227/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.420702968 seconds)
    (228/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.833447134 seconds)
    (229/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.406463173 seconds)
    (230/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.381499698 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.436327606 seconds)
    (232/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.096728648 seconds)
    (233/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.403152391 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.43859174 seconds)
    (235/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.401817475 seconds)
    (236/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.386169504 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.273412624 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.446474712 seconds)
    (239/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.778877027 seconds)
    (240/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.420189418 seconds)
    (241/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.395286635 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.739152649 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.398382085 seconds)
    (244/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.450227382 seconds)
    (245/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.765703234 seconds)
    (246/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.924569474 seconds)
    (247/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.677587779 seconds)
    (248/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.424419742 seconds)
    (249/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.421446287 seconds)
    (250/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.382369386 seconds)
    (251/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.407879015 seconds)
    (252/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.261988648 seconds)
    (253/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.678492354 seconds)
    (254/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.215956879 seconds)
    (255/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.132967658 seconds)
    (256/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.465131376 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.59738315 seconds)
    (258/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.701675628 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.720732794 seconds)
    (260/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.51069639 seconds)
    (261/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.807123533 seconds)
    (262/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.48532697 seconds)
    (263/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.38527656 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.427748805 seconds)
    (265/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.921893973 seconds)
    (266/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.233879102 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.786644226 seconds)
    (268/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.61238477 seconds)
    (269/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.426309357 seconds)
    (270/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.399384885 seconds)
    (271/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.040570325 seconds)
    (272/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.568832324 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.805610099 seconds)
    (274/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.741167072 seconds)
    (275/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.70722147 seconds)
    (276/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.48459975 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.38605476 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.41072291 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.503342691 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.482514302 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.481888373 seconds)
    (282/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.485367434 seconds)
    (283/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.426188343 seconds)
    (284/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.389201614 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.517645995 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.474216444 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.5526995 seconds)
    (288/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.386281378 seconds)
    (289/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.409789462 seconds)
    (290/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.095754722 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.41643116 seconds)
    (292/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.850495891 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.459310069 seconds)
    (294/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.754904625 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.237798082 seconds)
    (296/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.381710681 seconds)
    (297/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.976673022 seconds)
    (298/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.415355919 seconds)
    (299/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.627600879 seconds)
    (300/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.423605117 seconds)
    (301/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.611991047 seconds)
    (302/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.40197873 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.405249236 seconds)
    (304/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.670667034 seconds)
    (305/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.741958753 seconds)
    (306/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.751919584 seconds)
    (307/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.597388081 seconds)
    (308/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.875031074 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.751972534 seconds)
  done (took 937.740771233 seconds)
done (took 939.065286697 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.434790571 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.432054688 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.413187941 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.434452939 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.52849113 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.441461616 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.423585591 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.414426102 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.461370646 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.463688964 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.415630255 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.440497564 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.418243158 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.418602504 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.413125176 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.430986512 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.359080385 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.419981608 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.434565515 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.423428 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.434710109 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.416224708 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.463953633 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.440765133 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.418648107 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.416801704 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.421147431 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.437750201 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.529890209 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.421886688 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.417878611 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.428917038 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.360923017 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.415488662 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.410291841 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.438146978 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.430080281 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.425147752 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.418672134 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.450238306 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.717215014 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.41920354 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.420201262 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.416353883 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.416507729 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.421021163 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.42031644 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.421288817 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.431759092 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.432594568 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.71105787 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.434359372 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.423364945 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.416543222 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.426606008 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.419697451 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.419736811 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.435712113 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.440331903 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.435053845 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.356512969 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.42481885 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.419205808 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.436474428 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.42707088 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.747522833 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.412332644 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.421726174 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.719686504 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.423196716 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.746695195 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.429145753 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.419577999 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.434167624 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.452032433 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.36572441 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.415691198 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.417168518 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.428326801 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.420107941 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.427978542 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.433372485 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.421813839 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.417607533 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.435658982 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.445829808 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.428130394 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.422913106 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.427194411 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.440878451 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.428525111 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.43251928 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.421497215 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.412748032 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.427899046 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.422108437 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.424434978 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.424311734 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.423195326 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.429311147 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.727530408 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.440394767 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.415274902 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.415060746 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.418040671 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.436347726 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.731131744 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.425080996 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.441902711 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.467645571 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.420441865 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.36209205 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.428558875 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.438845622 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.429587629 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.422218927 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.415603629 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.361701404 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.740245014 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.441816137 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.421016843 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.422464106 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.439345761 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.422447946 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.417238076 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.372615454 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.424149252 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.43668153 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.544772971 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.430511942 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.455646211 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.421419234 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.423525929 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.44767088 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.439573023 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.454585432 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.422917809 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.439999741 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.440701789 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.417174412 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.434393602 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.432362878 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.42165229 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.425770133 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.415545292 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.452443666 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.436512266 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.436915744 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.441814171 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.545568575 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.418486854 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.364832725 seconds)
done (took 236.813157724 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.481129088 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.418654811 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.521712915 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.418256625 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.516782085 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.539244731 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.414999446 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.416668549 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.416151053 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.821804514 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.416386057 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.416527138 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.418926991 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.416992326 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.50166547 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.418631194 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.416380153 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.801497462 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.420082856 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.491112333 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.413659808 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.416232359 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.419706032 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.848349602 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.415566267 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.417607725 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.500227848 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.419717915 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.787422589 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.415152706 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.421707587 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.806903134 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.522437093 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.437384532 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.429384487 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.426797162 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.537140305 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.43622367 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.522878344 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.502843811 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.523965846 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.458520103 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.415607866 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.420470628 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.421435996 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.421429805 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.417716562 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.44658826 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.415516507 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.418531236 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.782391333 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.430908544 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.427939327 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.419063394 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.418556799 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.441484327 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.418913419 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.422395014 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.512252301 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.422374755 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.493539337 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.828623841 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.847171022 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.421679387 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.417048114 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.419373236 seconds)
  done (took 154.615440856 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.490092161 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.497077646 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.527904068 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.422075687 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.473970299 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.532514646 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.422915657 seconds)
  done (took 11.718997193 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.429755275 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.423115615 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.472576612 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.471976116 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.421943917 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.571486433 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.421844365 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.433991365 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.419867805 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.475506288 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.424954691 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.422156291 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.429249666 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.416344535 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.470660768 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.434352516 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.537702215 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.423805021 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.422898796 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.579701103 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.420082382 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.429677774 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.479732009 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.435184668 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.425781944 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.429298283 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.004030541 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.423922424 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.420869637 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.42225807 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.420584782 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.462178291 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.423082894 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.417677018 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.420456116 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.539974912 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.42427912 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.421467189 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.423484842 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.424354899 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.424587048 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.423641495 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.424009412 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.421778285 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.424303822 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.448251469 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.423947198 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.423681013 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.424085911 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.424267835 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.47493122 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.424420522 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.421565843 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.421359343 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.480093972 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.430596256 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.425174227 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.422281894 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.424154368 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.422334725 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.581424115 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.472671306 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.42432339 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.472850073 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.424621757 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.426209311 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.424509475 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.424971395 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.480403757 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.424908686 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.47424839 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.422975804 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.579288482 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.449915814 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.426910833 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.429391789 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.427928356 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.425309424 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.420869192 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.432050764 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.423602134 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.426755756 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.432326674 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.423046577 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.423196116 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.52992677 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.535357314 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.423760476 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.438783646 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.43379101 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.423548438 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.479069235 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.426430699 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.423225585 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.478171811 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.542237055 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.488168659 seconds)
  done (took 162.13509461 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.433099633 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.435493938 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.427395382 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.443484543 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.427160167 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.427168879 seconds)
  done (took 9.951732296 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.429557443 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.427717171 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.426123389 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.427218758 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.427720723 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.429504308 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.428108051 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.42879142 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.430320341 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.427281954 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.429857869 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.428278063 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.431881948 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.428202218 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.42816042 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.427824064 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.427422562 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.424906846 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.426900686 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.428728827 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.532643307 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.427353845 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.428050099 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.430419478 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.433131914 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.427481291 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.435708282 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.427647434 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.42792823 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.433288978 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.43084037 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.431235814 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.429982874 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.434338836 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.431929137 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.430079952 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.431571156 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.429778743 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.844005729 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.432165955 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.430461688 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.429244084 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.428574734 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.430121947 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.43079769 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.433873397 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.433421405 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.437704976 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.42934111 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.430242213 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.431777656 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.429551716 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.431902506 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.431163183 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.43368886 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.433815241 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.434038456 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.430134934 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.430447954 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.431652525 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.429705895 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.432327315 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.432144109 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.434191491 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.427823955 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.432411794 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.432053651 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.433554289 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.430828154 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.430507657 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.432043407 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.428964689 seconds)
  done (took 105.864090501 seconds)
done (took 445.634581803 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.428015173 seconds)
  done (took 7.789417756 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.653997534 seconds)
  done (took 8.012535111 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.01851005 seconds)
  done (took 20.379399659 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.494711625 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.464617146 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.433135562 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.420284309 seconds)
  done (took 27.169524261 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.631866086 seconds)
  done (took 7.988317341 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.417807816 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.417944532 seconds)
  done (took 14.192793196 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.496193018 seconds)
  done (took 7.852533868 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.767172028 seconds)
  done (took 8.121761431 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.439101016 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.420357375 seconds)
  done (took 14.476229858 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.39076287 seconds)
  done (took 7.7340398 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.498520639 seconds)
  done (took 8.841489448 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.409737647 seconds)
  done (took 7.750375399 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.453907455 seconds)
  done (took 7.790903092 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.812777665 seconds)
  done (took 9.147616699 seconds)
done (took 158.608181305 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.39297299 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.397241447 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.395490703 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.393813426 seconds)
  done (took 26.91292192 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.434556289 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.434474817 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.435056428 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.4453793 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.437292963 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.434449674 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.426621095 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.426100615 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.445073413 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.437817674 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.436187152 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.436873078 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.435129701 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.426850991 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.436822347 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.437283847 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.445500106 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.435639889 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.427631164 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.43692607 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.402175727 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.445510694 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.437595251 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.401806378 seconds)
  done (took 35.731527243 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.600262039 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.473249913 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.554214711 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.453173476 seconds)
  done (took 7.414575052 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.453403962 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.454762327 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.469662751 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.505926321 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.53110934 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.464490709 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.428618342 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.423667291 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.408732915 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.456105619 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.529790305 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.471058612 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.537756017 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.402103716 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.590560066 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.40235797 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.403561605 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.454503668 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.506255839 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.535889565 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.402271629 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.453436924 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.457992138 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.471828511 seconds)
  done (took 36.549967976 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.40108319 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.410647605 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.408203341 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.401855633 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.40242895 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.402388687 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.408098332 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.403822995 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.423691933 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.402761506 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.401823901 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.403217653 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.401367423 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.402219444 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.402934434 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.415605952 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.4161837 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.403246415 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.406593033 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.410044982 seconds)
  done (took 29.464151377 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.396185375 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.338652722 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.749098261 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.6528793 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.396502659 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.397914541 seconds)
  done (took 29.267549266 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.467389069 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.588979429 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.404906416 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.735692297 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.815571811 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.407927428 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.40367232 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.622775571 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.907083042 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.914499137 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.458019193 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.457192823 seconds)
  done (took 20.519778806 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.405252371 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.399148901 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.405983027 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.415813012 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.454512802 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.409347292 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.411141213 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.396988645 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.457652813 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.461482103 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.410346914 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.457250221 seconds)
  done (took 38.421782363 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487255148 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.442655328 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.262835831 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201736717 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.777008383 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611169703 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.21675225 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.863846313 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.404585403 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674505997 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403650658 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49405774 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.657141052 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413534286 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.403005236 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.391760015 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630976627 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880471432 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40086911 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.234951992 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428307493 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.410311528 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.335373564 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.429145155 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611243869 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.529082263 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.661860052 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400770608 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668349778 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.413102254 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411294944 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401004126 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674843618 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045330536 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494564529 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411592363 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.173109886 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.115438493 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.389096587 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.256999548 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.142956589 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.405228144 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411320273 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400945939 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.33599457 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400972716 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.870795232 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.40871262 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.112683845 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402166681 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412686113 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49543394 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.405485551 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.221235435 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.491229642 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401248944 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.398300785 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408037613 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970787269 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.735162785 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406214602 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.34063621 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.508843739 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.245076172 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04511835 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.504015109 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.406245192 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.406482937 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3378049 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.245537923 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42259617 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.731917975 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.423891137 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.053155572 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.119286776 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.405351588 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.336718052 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940189999 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407059027 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.339569942 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628252706 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401440762 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337268052 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.343840668 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.334107996 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079043836 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406596401 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.746256131 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.40601812 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.862839259 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.410567185 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417938239 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423046273 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.622538268 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.284110263 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399271423 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.22095684 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.557816466 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420729396 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.864292357 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334639426 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.403812251 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.656720283 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.611929001 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398780972 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.39729844 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616906297 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40162337 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.417458219 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.404650944 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.41169169 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.99664627 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.410633523 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.736463533 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419083592 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.400335105 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116940411 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400649084 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.50318243 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.413568472 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637431618 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.163186506 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401035446 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48289939 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40377228 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401229118 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.329514778 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.917723044 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.401484885 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.404953155 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399647501 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.414115649 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.401363605 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349876452 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.40512727 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403246454 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.40326743 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.624315472 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.401109752 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678255507 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335356488 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.749722697 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.49429626 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.624017591 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.575511498 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.401159709 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66385944 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.402445249 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401315653 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.413890561 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422253465 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497082821 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421033135 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.406721282 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.661544559 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.402082352 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.402073581 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.32391416 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.401387985 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397496687 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.402733483 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.302707398 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994369462 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374075016 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405068682 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.285719042 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.410225588 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459955649 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.402282377 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.405415681 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.110926935 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.290646612 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.400387203 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.396945241 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.620971149 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.405895449 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.243090866 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476096315 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.606434832 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.997976805 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407802492 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.331114356 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.107571456 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.089087921 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396413756 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.332271183 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.395483686 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405073542 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407509673 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.623255608 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.995628334 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397617772 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.249950584 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.404520098 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.407343586 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.401609168 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396646566 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.081987295 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.737666171 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400969534 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.409935224 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541037792 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.410605616 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.331114794 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.400562867 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401720168 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396466616 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.397484441 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430788417 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.249885983 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884754732 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657733296 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.158841909 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.409114926 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.347373047 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.430527905 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.39926674 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.232231318 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419853848 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.416586804 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406353175 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.407583986 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.259856619 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.071419425 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965107928 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128531976 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951054628 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.388441984 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.399391054 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.401464811 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.867624569 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333540021 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.955636342 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579391323 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.868105417 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344476445 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610868953 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.575371943 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.121936356 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409541218 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626010365 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387328262 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.239845058 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.430614808 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610636144 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433552663 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.40319437 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.330157845 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.686897461 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.665858963 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.180024364 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479575833 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.866422859 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.238730391 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.421127832 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.397957094 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.692846637 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.569910355 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.113279214 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.572105585 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.408879194 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.413774792 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886000216 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.407976203 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.626035343 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036074367 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405757296 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.615536531 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338115542 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.41075836 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.411324189 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.402218508 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.595885798 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.400145483 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.654156721 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.411267346 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335391853 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.400143024 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967343162 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.254023791 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.405993469 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40024902 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106126306 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407162595 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.674343743 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.403650616 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.073461315 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408527593 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.335621432 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335406627 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.094412104 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.407755339 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376168438 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879801325 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.487091451 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.50182297 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.431843043 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.453439573 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.659313767 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.415194062 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.003778363 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.628973019 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.265114107 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.423618496 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.502842625 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.283143892 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.409780411 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.40246655 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.63827187 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307217318 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.626559725 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.26464365 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.310176965 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.400631179 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.61437605 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401762484 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.402083283 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640674955 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.114834922 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.404601874 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12076042 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426232551 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.412260731 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.321065685 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.509347955 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410638592 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483388712 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.41345803 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.414017081 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.41419818 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.573969714 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416789632 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407712492 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.416383485 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496537383 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.759851625 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.080833865 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.409888152 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010878625 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140290615 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.007719182 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415172969 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403382208 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.40816031 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338914176 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552983607 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.630047727 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677470839 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532731048 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.548772531 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42615882 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.285433296 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.430309552 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618530674 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679055246 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.299602715 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403980812 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.419316524 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.404713917 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.415540764 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.61620124 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899252601 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95685448 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51788015 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.404611953 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.874101043 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68487122 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405495932 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.40542521 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.99541191 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.41250922 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.714374043 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.413354165 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.413444381 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556381812 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.415805863 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052264 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.417720105 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.561487897 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.179530157 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.27890556 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.665008936 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.834129487 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.418912496 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.012832379 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.1476295 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669094071 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473285109 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.417769098 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.516970162 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553576606 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.40974545 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.406601766 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407886932 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.455575147 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.117066529 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.417296906 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012910184 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670060754 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.404767116 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.410534187 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430576005 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.41706059 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.631755384 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094049229 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.632325156 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.417169034 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.414530455 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.223700436 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.013184828 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.419078292 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342147773 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.411111001 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.642665266 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.644467972 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431699151 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.860887606 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.118922518 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957627866 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.379989595 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429326292 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410683521 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.151092056 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01165749 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.087755485 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895022025 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.967556619 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415471762 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.684127071 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.414102679 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.419599753 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687161454 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.412533646 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.418278391 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.421670353 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.011673565 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.142924817 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.417679274 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.310223378 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.347377708 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.750129304 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.122024505 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.344880151 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.419149449 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.595167092 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.41004437 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540027665 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420933329 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.412887067 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41014293 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.163566944 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.682566575 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.414886866 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.399617597 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.329116742 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.419154559 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418668547 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678847366 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416313441 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.085454783 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.760261467 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.667088627 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.409647385 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.398970343 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.414201523 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410716377 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.400541986 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.611510611 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.638010816 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95889097 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.411241269 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.422918031 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.414473005 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.626885635 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622406099 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410474162 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.424810925 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410046051 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.428413746 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.317184462 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.919345008 seconds)
  done (took 1622.515770322 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.423803298 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.419431661 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.443383124 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.492335101 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.428684581 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.425686438 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.516186389 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.463511579 seconds)
  done (took 52.963347695 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.411109696 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.640452409 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.44089808 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.422564166 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.422223515 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.420613862 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.832564811 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.420090484 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.419600855 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.421227421 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.410274172 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.412622116 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.026500491 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.420028173 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.422450782 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.404142954 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.421317703 seconds)
  done (took 66.722904996 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.419735921 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.789415301 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.498023068 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.431168765 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.209036154 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.426483625 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.910201556 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.422753629 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.409806578 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.585813833 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.058131747 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.438701489 seconds)
  done (took 84.949464252 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.417897328 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.417269245 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.417066465 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.417409788 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.418036142 seconds)
  done (took 8.436944499 seconds)
done (took 2061.205306512 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.674396453 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.090866084 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.031075899 seconds)
  done (took 5.4714742 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.560502199 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.608334721 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.730209516 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.748723323 seconds)
  done (took 7.997456593 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.696683068 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.79759441 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.621731893 seconds)
  done (took 6.467832016 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.738794425 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.444945256 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.488875082 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.409462545 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.413227081 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.413731046 seconds)
  done (took 20.586972929 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.416035449 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.417617456 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.414846608 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.41774009 seconds)
  done (took 7.014959913 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.397881766 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.199545858 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.399797992 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.416777691 seconds)
  done (took 18.763522547 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.161769101 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.175182223 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.159457773 seconds)
  done (took 7.846290806 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.42459903 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.25582385 seconds)
  done (took 10.030951517 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.731002442 seconds)
  done (took 3.08151483 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.549823518 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.678905781 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.505891013 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.349780001 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.524165454 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.973114953 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.933430924 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.539089103 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.338911111 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.42936949 seconds)
  done (took 28.173233371 seconds)
done (took 129.130466543 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.041374373 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.655071421 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.623608187 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.016224927 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.640705535 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.624276539 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.615372949 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.974057671 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.567713482 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.515344654 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.021262292 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.641961541 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.771103215 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.659312476 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.770501356 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.656891027 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.642470055 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.086916331 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.698582206 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.932577798 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.617856678 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.654972211 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.842585586 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.676888905 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.643471445 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.576829614 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.231644336 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.662271702 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.883683481 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.256770094 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.576703559 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.115221431 seconds)
  done (took 194.246382892 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.41321865 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.428450888 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.413561549 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.430587073 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.412715308 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.417426439 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.429664858 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.413147938 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.425485198 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.428366607 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.42794112 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.414597387 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.41655781 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.41392966 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.415961056 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.413556649 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.435174468 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.423588493 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.418821831 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.413820987 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.416160673 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.445089975 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.427456878 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.426890961 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.415937169 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.416545182 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.414325457 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.414819804 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.414551888 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.418323045 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.416215323 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.417104615 seconds)
  done (took 206.803088054 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.414735313 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.423580561 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.416474759 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.420398743 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.414090541 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.416510024 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.417999365 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.415306714 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.414664361 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.415698519 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.421719261 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.415186871 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.432779072 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.415502726 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.417654508 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.4152156 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.422427868 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.41574418 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.421143422 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.416141827 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.431787057 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.415437368 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.433748597 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.415553072 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.437830257 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.416852968 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.42180203 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.415804163 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.433214304 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.415371855 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.419427072 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.430400692 seconds)
  done (took 206.805724412 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.611026878 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.424404229 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.424431246 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.357084214 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.424619351 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.423635636 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.421259527 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.621019421 seconds)
  done (took 15.062880965 seconds)
done (took 624.268301973 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.637590598 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.356751089 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.615125006 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.444328037 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.154107343 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.445465655 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.443893079 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.605743765 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.910249293 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.593579619 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.617185931 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.441102709 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.756641042 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.443249706 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.687500598 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.538189462 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.266267833 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.374070414 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.745132021 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.93409662 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.691564768 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.934583076 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.604551203 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.953474062 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.758611238 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.953398287 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.13988469 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.265470773 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.444330882 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.746102943 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.983535177 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.371094838 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.498257786 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.480252666 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.536357002 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.518837473 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.357900762 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.478656736 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.618533679 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.699919238 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.921991175 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.695484785 seconds)
  done (took 96.019900227 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.415355349 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.414769593 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.413666899 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.415376683 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.416192458 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.415005994 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.414460396 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.414473469 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.41510688 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.414813773 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.414459416 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.415944431 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.414707201 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.41556267 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.41451456 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.41453983 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.415362929 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.417654235 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.4143307 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.414969075 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.416005373 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.415030804 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.415120713 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.415843798 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.416368686 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.416119425 seconds)
  done (took 38.153057104 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.427921399 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.654978684 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.819925022 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.432850155 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.427400455 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.431574894 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.501015611 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.429078089 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.430330655 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.430720769 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.579173396 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.43063349 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.459701769 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.829375394 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.430462342 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.428937326 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.427890874 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.427579401 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.661948768 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.436868538 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.517951745 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.430020039 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.500728923 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.43695897 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.446545916 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.429571233 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.432944638 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.951011077 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.430250639 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.580855628 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.173237293 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.501659554 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.920921523 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.830995567 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.174757048 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.432717123 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.429028898 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.58391211 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.43070941 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.42937018 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.502041352 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.429779832 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.836736656 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.05140456 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.444491261 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.429857188 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.974759673 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.582924356 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.657772372 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.439931104 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.84992061 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.433757504 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.431542155 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.430982565 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.658966601 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.439507991 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.429872362 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.996671187 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.44996693 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.501956875 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.43338517 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.431007991 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.671953045 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.430376632 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.657809199 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.432244313 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.4386051 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.431502456 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.837029316 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.43354799 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.068818334 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.449041538 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.430552519 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.581323329 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.660366361 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.003242027 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.436469133 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.675762647 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.931098027 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.505743739 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.437241969 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.94489672 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.509160722 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.43729569 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.43311059 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.432242237 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.430394225 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.475478714 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.501861929 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.997602058 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.061385383 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.017286775 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.521513388 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.445990716 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.432759994 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.998124769 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.448119711 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.433212347 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.826259313 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.071332777 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.447270812 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.439104381 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.055797217 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.447521568 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.504066904 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.438990267 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.838236657 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.434927243 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.476776898 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.431709714 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.438852129 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.435958439 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.505877598 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.437939606 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.433601809 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.041764836 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.605486385 seconds)
  done (took 186.707901262 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.428419624 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.426405766 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.428997612 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.425860683 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.426489302 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.431452028 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.42610758 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.426682537 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.432593175 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.426676993 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.427038323 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.426018778 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.429307433 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.436418375 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.435553898 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.433294418 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.036748738 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.430112828 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.427404083 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.426918755 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.211412248 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.4321314 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.428774919 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.426849468 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.42695498 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.426568624 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.44275059 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.429434463 seconds)
  done (took 154.77838359 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.434827436 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.961062506 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.436667552 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.558191854 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.453985385 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.431873179 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.556355792 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.488586601 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.436345053 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.432376431 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.432262029 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.716802121 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.437229659 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.91977295 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.61420993 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.559099407 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.915697185 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.435377407 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.43314693 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.432692115 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.559946977 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.443392138 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.71821187 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.965997213 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.436592342 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.964700303 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.424616265 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.436278492 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.43442684 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.967293136 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.433829741 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.721198662 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.507413553 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.49349626 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.968042622 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.917875053 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.923698167 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.575081961 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.436155176 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.433674024 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.433840705 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.425995475 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.967109772 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.438306432 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.436680302 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.962594144 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.451353514 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.436694694 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.444558994 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.434591562 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.49262238 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.493524214 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.723749886 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.973110883 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.508238894 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.459462561 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.559781405 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.797846175 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.442164107 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.919077272 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.425845406 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.971556182 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.439738841 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.426008674 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.436114963 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.442125221 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.577862026 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.562110814 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.92324356 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.440386647 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.92217897 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.580880491 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.437433031 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.436512037 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.438671323 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.97395431 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.92796753 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.581343746 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.565736105 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.622767244 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.427850086 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.436558234 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.428329382 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.510229764 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.437565536 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.976532394 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.928494405 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.441640434 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.440182399 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.439755871 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.439022406 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.60383155 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.977346679 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.512724685 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.920710594 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.741539118 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.729104453 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.441960483 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.494582918 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.438963909 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.727118048 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.440520543 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.493258776 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.859918689 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.730198202 seconds)
  done (took 169.169769978 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.666179496 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.562325845 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.530939136 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.546876886 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.956401873 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.013928416 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.511588329 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.560446884 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.545592788 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.676282332 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.06731203 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.532184637 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.616899243 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.508701149 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.095116586 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.50192765 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.52825548 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.576220634 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.544911698 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.424476809 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.009420256 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.715685887 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.578799276 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.302408501 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.529005392 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.149564208 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.168753509 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.938061546 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.598967366 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.528372169 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.929603714 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.548250469 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.126518504 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.037956672 seconds)
  done (took 66.499671953 seconds)
done (took 712.684024625 seconds)
SAVING RESULT...
DONE!
