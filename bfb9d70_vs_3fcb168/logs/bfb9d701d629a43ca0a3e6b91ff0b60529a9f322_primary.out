cset: moving following pidspec: 19867
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.305126059 seconds)
loading group "string"... done (took 0.593165495 seconds)
loading group "linalg"... done (took 7.238628844 seconds)
loading group "parallel"... done (took 0.172830876 seconds)
loading group "find"... done (took 1.147049643 seconds)
loading group "tuple"... done (took 1.777721946 seconds)
loading group "dates"... done (took 1.234571499 seconds)
loading group "micro"... done (took 0.229532238 seconds)
loading group "io"... done (took 1.026651024 seconds)
loading group "scalar"... done (took 40.447376545 seconds)
loading group "sparse"... done (took 12.993406449 seconds)
loading group "broadcast"... done (took 0.983613715 seconds)
loading group "union"... done (took 13.777428748 seconds)
loading group "simd"... done (took 4.555713509 seconds)
loading group "random"... done (took 9.134446755 seconds)
loading group "problem"... done (took 1.953578333 seconds)
loading group "array"... done (took 21.403889803 seconds)
loading group "misc"... done (took 1.974756805 seconds)
loading group "sort"... done (took 3.230491926 seconds)
loading group "collection"... done (took 18.123411561 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.533288899 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141619069 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.116925297 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.140372768 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187879845 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.131750588 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142974252 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084245234 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.100883839 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.167093596 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138891183 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.477779358 seconds)
done (took 5.228994493 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.206262227 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085239613 seconds)
    (2/2) benchmarking "String"...
    done (took 0.0967006 seconds)
  done (took 0.992802473 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065691458 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126254347 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.080955775 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06675923 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066495385 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081010007 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066880965 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065391984 seconds)
  done (took 1.370976247 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.0733293 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067519584 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084843469 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067948175 seconds)
  done (took 1.108786566 seconds)
done (took 4.571246995 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.897845196 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.239166507 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.1907936 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.449432865 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.148068572 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.188478804 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.663627724 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.342092081 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.20956989 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099262178 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103508174 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.380333877 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105964133 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.667489667 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077928889 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.107752765 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.160594346 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.435364485 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082453703 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08176632 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103869042 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141876476 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.103477665 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077165688 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.168543726 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.06935183 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147035589 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.09557034 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.0674433 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.241250358 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.189475532 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.688678779 seconds)
  done (took 10.577040992 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096257863 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.116848058 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068395703 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139960188 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100867554 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.086742271 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070273006 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084390562 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.09054532 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.158099262 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114347101 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105097547 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082004985 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068702441 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101508174 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210401688 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106149047 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.084596301 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087464132 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074842436 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122435215 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081291334 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095066313 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077688146 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.152426191 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195575117 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.115849327 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.114326274 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070392484 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08216055 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.135146558 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145036096 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066008182 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082340396 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.138558317 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111140513 seconds)
  done (took 4.660980746 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.029994596 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.159942928 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090690056 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15188929 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.08536859 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108539451 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.083453495 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100409577 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.248007248 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.082979795 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.463827124 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128510433 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101869163 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067034816 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085050662 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067231111 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.518684786 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.14468988 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102368753 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.102192183 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073402974 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086591409 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.389217126 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068129064 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065576563 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084533791 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.05909554 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.144420226 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067024057 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.213488696 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.088331179 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087742283 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101602431 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.200531391 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094550138 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123427281 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066227739 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081922355 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.169682399 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073831602 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065250286 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.105553742 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118790067 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.104235448 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.084173483 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067010482 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.180180289 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066183373 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099891156 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.878053921 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.11446203 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.169974551 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092934923 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065227351 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.286616487 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.082653545 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085062826 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063853759 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.256934398 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.15344534 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066491902 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083649022 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070473458 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.066569299 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.406509337 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067599035 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.714240993 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070996407 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077174476 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.085269609 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066719461 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089121224 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072615082 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100782087 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065078085 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065751977 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.085378968 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065431453 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.08110148 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068844989 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.099592927 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064595176 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.203207047 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065439125 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083494368 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065272217 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.101403934 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096991003 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085665983 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065490895 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114083573 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06825246 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066848162 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.118634955 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065563831 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.101715992 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084374252 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114097876 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082360627 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.122898331 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068006759 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.114111237 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.072018039 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114534491 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.09847359 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063326133 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067033316 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.152190796 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.081820696 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064424932 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066430598 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.085495451 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067130841 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.084303435 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082041797 seconds)
  done (took 20.974330907 seconds)
done (took 38.057538437 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.293481595 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.096089609 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.092511016 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074477669 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093513934 seconds)
  done (took 1.542739285 seconds)
done (took 2.408997426 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.11937322 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118573452 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06346337 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113756163 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063479766 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118663696 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11474649 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081050335 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117186688 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064398206 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113684058 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063908649 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062787687 seconds)
  done (took 2.107343468 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083045471 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08386644 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086219978 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081788968 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079981326 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081827958 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079348911 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106937091 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08008094 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090067142 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063550525 seconds)
  done (took 1.777095636 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082185108 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083779013 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087813519 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08103179 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080815332 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081936281 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080976798 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106586941 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081939405 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093330574 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06546996 seconds)
  done (took 1.787239382 seconds)
done (took 6.52608111 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.079048154 seconds)
  done (took 0.933340939 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.717106486 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.763216546 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08324629 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133721764 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.223905832 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.155874934 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.450700191 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.109911336 seconds)
  done (took 10.665730495 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.088763218 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.090288976 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.083914989 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.092518158 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073090695 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.092841444 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071723416 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070111806 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.091041429 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07122045 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.090337484 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074299822 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.088394508 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071088855 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072733056 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.088650922 seconds)
  done (took 2.230842552 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093235224 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092423168 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.092544891 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07551073 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090572101 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072680676 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.09341304 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074847191 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088135767 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073252495 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092515982 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074485972 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.089283691 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065968619 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.092123846 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077040669 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088214887 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075441846 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092747444 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07557311 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092257102 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.0656633 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088722085 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075414814 seconds)
  done (took 2.957946156 seconds)
done (took 17.649327641 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.133452219 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076356647 seconds)
  done (took 1.071717687 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081942493 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099033979 seconds)
  done (took 1.048037402 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083337575 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081772051 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089389666 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.095303516 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06522251 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.084182807 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103598241 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066372002 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081458123 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066870017 seconds)
  done (took 1.684402279 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069927248 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093743347 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071676457 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098368297 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073466735 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.08183942 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073005162 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085042729 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078668383 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080270984 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072425493 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100616265 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071477562 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.103266513 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071845957 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.086371728 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087168676 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068651513 seconds)
  done (took 2.338007987 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066944389 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066105469 seconds)
  done (took 1.003228954 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068506915 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063276531 seconds)
    (3/7) benchmarking "month"...
    done (took 0.084330061 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066695412 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.081459986 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062856129 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079972759 seconds)
  done (took 1.376936597 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.413256328 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.10962133 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.24758316 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.091853465 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105223344 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.264879268 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.08511023 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070770461 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088898311 seconds)
  done (took 2.384127365 seconds)
done (took 11.775543779 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080498834 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084502737 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111996004 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.42392245 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.109646279 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066877233 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.132348109 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.225557509 seconds)
done (took 2.108979634 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.1264422 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.613702762 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.402208546 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.213716467 seconds)
  done (took 2.105497822 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.379235543 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092463956 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07776031 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069268268 seconds)
  done (took 1.49716989 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067559908 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06913424 seconds)
  done (took 1.015129088 seconds)
done (took 5.620766703 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067915615 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.10183046 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067101142 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065083635 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.082713179 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066920224 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.062624285 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.083709827 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066314145 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065262706 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.08375536 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068680405 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082422635 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065100426 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063492291 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082827931 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06440611 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063796246 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.081148746 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064289375 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066126663 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084198699 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064101926 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064432974 seconds)
  done (took 2.64083563 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086609172 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083834264 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073102435 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088598643 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071676486 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088611407 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072875736 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065272657 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089391492 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069940638 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088070542 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.0699776 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085946506 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070588384 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085515401 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071644052 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088013415 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067565771 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070674544 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088877307 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070424646 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084016916 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070733679 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089206052 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069979617 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08799392 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069346263 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083347796 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071838673 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08666028 seconds)
  done (took 3.241580638 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071702284 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062552755 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.082326608 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071454034 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063067722 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083646473 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063641144 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.081416747 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065608001 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063611279 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083136047 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064142648 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06397633 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.083712665 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064230798 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084347465 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081206651 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063958556 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.082529043 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064634869 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065732948 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.082361188 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06391729 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.081509641 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065128477 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063097984 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081776867 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064718172 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063654447 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.082038991 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066834306 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066094372 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.082522709 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070037082 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084920312 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064984385 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067805871 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080871084 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064642818 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062437531 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.081442611 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06370625 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062621266 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.08861654 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063632953 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083757559 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064406167 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064656183 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.082348007 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066750653 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080492573 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064967491 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065447721 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082680954 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068500934 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062743351 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.082488695 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063447935 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081463976 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06539915 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063880811 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080172029 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066967521 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064206212 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097082566 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070432707 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080204991 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06621934 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064077837 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083567214 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065725866 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077036565 seconds)
  done (took 6.071099291 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118719349 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091070478 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084628259 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065411124 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080264724 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065111516 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067524895 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082537318 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066007931 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086658333 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065829876 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065267293 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084283979 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076492576 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082340821 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066644986 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086893868 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063362742 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063662206 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085954822 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064636639 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085006766 seconds)
  done (took 2.586056545 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.189232678 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088251935 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109251777 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092722924 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06754529 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092047183 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068958562 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088880554 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069691069 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086553401 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067843466 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088058309 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067940894 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0863089 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068109899 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086257057 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07080476 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084867989 seconds)
  done (took 2.458710057 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078310699 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064777798 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108728982 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065368137 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085899715 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068593352 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09015274 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074248267 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086648578 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066645612 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09269841 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068457503 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085849626 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067095205 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06783835 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084489851 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068391109 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084651459 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075296502 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089187711 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071788059 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092779388 seconds)
  done (took 2.625391646 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082469418 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067053328 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102935561 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086740222 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063466721 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063586958 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090637673 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066222734 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089776585 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068297919 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065520245 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08330903 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070601429 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085198739 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07083915 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084783952 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068655245 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064950705 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086543444 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062293846 seconds)
  done (took 2.412879136 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088336853 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085508483 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068266605 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09368258 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067960648 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084482382 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0755807 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.084383258 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067765758 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109546287 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068052099 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085184462 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076342882 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090821946 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067087322 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092737027 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075400867 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094127886 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067206069 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086147339 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108903449 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.178071633 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092760331 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068230529 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084084248 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068989377 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066964669 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0912514 seconds)
  done (took 3.280450621 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067416265 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065633557 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081263538 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.06483166 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06292043 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082574899 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064122956 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063342808 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08465508 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063736751 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065176719 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084313236 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066695715 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082946698 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067107331 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066014439 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083681393 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064710158 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062675423 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082047715 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066243251 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065450931 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08429284 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063839819 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062718249 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.08531938 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064122266 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081749184 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06768609 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063630316 seconds)
  done (took 3.022452896 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077556727 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091107474 seconds)
  done (took 1.063982001 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064731227 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079872327 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.083418267 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070739754 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089668099 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067105533 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092598308 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071049515 seconds)
  done (took 1.511929579 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083372317 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07680482 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086702455 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077243915 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096477268 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082477436 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155012809 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086566471 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072926644 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082800005 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081118225 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064729289 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091729187 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066698163 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090027863 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073338473 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063072621 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.09082402 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068856929 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083144027 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068774533 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09305062 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069780382 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062156967 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086993856 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.075336256 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095953485 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067612901 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088000484 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074652376 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070835958 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.079970768 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06654066 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085325888 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065787806 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.093297095 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082958351 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086799893 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076389481 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067113718 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095991359 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06117757 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090092571 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072704922 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094526988 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067389888 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066321856 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.081795997 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064187121 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08667001 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062795494 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066468179 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079926392 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073990929 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087863767 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07719141 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067807387 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087772573 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069213835 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088495284 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072748511 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086090006 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069902141 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065990561 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095281442 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071386519 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094333407 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062103214 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060454911 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083739178 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075853365 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108345092 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07330582 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.086274753 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067884693 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081110475 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070730088 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067714691 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091960777 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072885563 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.085719243 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072252277 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092518337 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067642756 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.06799287 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093439696 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065352561 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087201596 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064445369 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100721442 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065719448 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064048194 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084273614 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075889799 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088212001 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066303568 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063549916 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091956312 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060687884 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085734997 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067498031 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084814548 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077694055 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089458067 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072540237 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092074703 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075384389 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066818311 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088364091 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063110626 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085480597 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067217788 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072836786 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07966006 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069194052 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085190057 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.068572974 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074490665 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.084079655 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066606401 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091811106 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072651881 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082237882 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064284741 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068936333 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085281074 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06995713 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093060294 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06650477 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060922073 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080893901 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070266645 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.08497131 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071375484 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088073172 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070259106 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060905739 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.083054016 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071229711 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093848236 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067443824 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066524684 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091846408 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06757997 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084662018 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073590705 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086301295 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066486475 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070974746 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087413654 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06233096 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087885533 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069832096 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064749561 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089431271 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070008833 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087537946 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067670351 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064587338 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.09053995 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067407237 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.084733339 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066999612 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064164546 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.096492503 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068236238 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081003753 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063712205 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091969887 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064937737 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065062801 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084853937 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.06834759 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085820272 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065543342 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065831715 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08755292 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076781878 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.090186642 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067743517 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090591681 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077512318 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084347744 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07028744 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065214428 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086216478 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06781576 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094346118 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072571818 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08938465 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069478339 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062412216 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090764576 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073112961 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084409769 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064989424 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064836054 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088778313 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071555194 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089221746 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067181089 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082610999 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068746217 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069931757 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.088278448 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066268622 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083419679 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071741417 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065154947 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092328622 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067422755 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095757586 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069871357 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080955678 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.0696488 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082945127 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073204449 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062376975 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.084238291 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066824859 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067266567 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085221305 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069733241 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079315357 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074824336 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.091739922 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068785947 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065935199 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085387167 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073626234 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085732533 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071607292 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069673523 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091137841 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077279219 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084772027 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070191215 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094680163 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068321931 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060240007 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.091099441 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065978155 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084598885 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066327538 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.0638248 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088314111 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075274835 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092716339 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06108612 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068238576 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084802113 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065530884 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080710754 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.07209933 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068405951 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08698032 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072685085 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086486312 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067915921 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089131723 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067211037 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066951673 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087245922 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069022534 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086178854 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069578541 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065476122 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089230368 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06582923 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082723185 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069165935 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066543829 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.086546413 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07206451 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084934878 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067530643 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068539917 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086465897 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067008029 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08597801 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066374063 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068964505 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086997466 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066796738 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087558011 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062899534 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072326208 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085393434 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073424111 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.085272066 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064911962 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070370635 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08880209 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070235286 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086914211 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066654996 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086872061 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.067130326 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068295981 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092495977 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063779751 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096213536 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074296747 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085982158 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069797137 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065983101 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088294451 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066018929 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085088366 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068341279 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066433862 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085867747 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071362956 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087606933 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067738016 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067523335 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087372302 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067180251 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.08692923 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062505706 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064954342 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085415749 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06612997 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095400819 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067977897 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065533569 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.085488131 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067255909 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084553229 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064441385 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091989414 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076205831 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085986638 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074975565 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064648028 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087483947 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075830572 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080062172 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065910705 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063911511 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084437995 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07299838 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086218167 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075902879 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065958778 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085669898 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063821421 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085614915 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066360579 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060561935 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.083722125 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069863197 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083707626 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066721874 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066100158 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.089101593 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068079217 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095588893 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065849748 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084421815 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068059118 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063283664 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084740047 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066342484 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068148542 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087559167 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06403206 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082459767 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067392595 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066712905 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.087163574 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066126642 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086377601 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074872929 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065725081 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089226491 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069401103 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083916476 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07058386 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066275036 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086321897 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065089411 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089171532 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069614875 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086066048 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07709071 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065178828 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086600891 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06659397 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083467765 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067112275 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065710262 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.086784613 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065723038 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.086155492 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074921102 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063778695 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.08977172 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066158197 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085176376 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073510207 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06654054 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089415982 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072816451 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086504981 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068781888 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.093536639 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070665451 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088380047 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068919646 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067703448 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092228014 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065608037 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091858039 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067972331 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066422425 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087776622 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064650633 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084942327 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067591106 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064650127 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092045119 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067468831 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085073388 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066909437 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063671024 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086909441 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070237721 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093148195 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069384511 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068862942 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.0825003 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063843097 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086905293 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06491981 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066856833 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089684737 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071873855 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087759123 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067551452 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064784235 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09531727 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071226254 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090377903 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064868929 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088600007 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067940965 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06776444 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.087962355 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067418307 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086589883 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071276937 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067239276 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08596328 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073339807 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088858349 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068260639 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085919644 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068793748 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06658811 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081448657 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067908648 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067627843 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091788588 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068477537 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086053286 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076378355 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08340257 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067533332 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06878372 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086055608 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070271384 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081035138 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068369144 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066513055 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087827926 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061834514 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085390982 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065180288 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068381418 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085207977 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062345748 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096245029 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.07529585 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088643677 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066386105 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065589447 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081749652 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062508856 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065506929 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087605985 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068542956 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095834196 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065048972 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084533371 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062812892 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066111778 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089210586 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069613814 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083264007 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063328548 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065390351 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089253966 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071900982 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064763287 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.087158446 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069251221 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08876186 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065437124 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08826766 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064033525 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069129498 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099387742 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067255756 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087170112 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07207945 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092730842 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068151315 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061138717 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087305568 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069338323 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086133512 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067937169 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066728391 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101735504 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068884203 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085772772 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065430719 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088446136 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066672311 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073711187 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088144695 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06712504 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090577727 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06825159 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094910051 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069802243 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093295039 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070860357 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068823257 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086182677 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066515395 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084175578 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066491293 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067224969 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.087363604 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071452605 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.093735082 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066375776 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096720132 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075745964 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.086910294 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064341666 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06511983 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.08557607 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062391842 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066984533 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.085120389 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064979359 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.0842799 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066222241 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067291655 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091665968 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067306538 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087020497 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067563767 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060174991 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088698165 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069019556 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086374572 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064523635 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065851118 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087237731 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070434831 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089103821 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064618886 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067196958 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087367656 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066849656 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080232522 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074912638 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065503876 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088764688 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066424412 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065720008 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089106539 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068986077 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09200891 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06798269 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088414939 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076009046 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088049146 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064685315 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064405655 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.091834894 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065064026 seconds)
  done (took 46.507268267 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108272152 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084247093 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062016641 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08126327 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074674378 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083020176 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062532446 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062035951 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083543122 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065069293 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081778125 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062019288 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09018708 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086071422 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095140285 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066794473 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.083072238 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062609343 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081208517 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063695658 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090824527 seconds)
  done (took 2.574594659 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075854264 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090699264 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074015385 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096517211 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066529399 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091616145 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071984045 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090628227 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094275285 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068025679 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.094984821 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071656469 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087339114 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068104046 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086253688 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072443468 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.096301297 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068209537 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.091182114 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072872952 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090964704 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073534757 seconds)
  done (took 2.734141795 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067844263 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065016936 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087311119 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062033352 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064426449 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.082085162 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069968536 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.08315738 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070479668 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064626675 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085868485 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064692262 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.094874262 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062375533 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065634829 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083250945 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.133208197 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07006246 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065359048 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088391908 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060927424 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088394289 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06237259 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061319112 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.085272384 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069831579 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086557721 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064592637 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065378068 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.085445032 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066572251 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081978465 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068242067 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066123227 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085724363 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065196443 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065226192 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.087178899 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061357185 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.082845924 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067622341 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061098878 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086392529 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067403226 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063257757 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084919915 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066985175 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085241818 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062517901 seconds)
  done (took 4.582353922 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.085008494 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.13058576 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089581541 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088266018 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.103091737 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093530312 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070537614 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112263856 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063565366 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085802028 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08217598 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.104202789 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086255534 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070852223 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.091626967 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067042421 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066202242 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086422476 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069461541 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086469629 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070111641 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093456898 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10029784 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080728185 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090186309 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065259641 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085488522 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071606686 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099141906 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070814306 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.090792785 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071043277 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.101484355 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067548855 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086947834 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068168219 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.102823468 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066115196 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089767921 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062936807 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088624148 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070580214 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.093257298 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082444209 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087227561 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07142653 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086569973 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063085139 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.099509282 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068212883 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.094783669 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100471334 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070838641 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084595183 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072127505 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101520949 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066667895 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083769719 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070374345 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098073466 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064231969 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088588984 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081521707 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.08834183 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074055502 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.10131366 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071765766 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090054125 seconds)
  done (took 6.750324974 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076394443 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092397528 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080889441 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101975417 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092343147 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07387168 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091886251 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072931308 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092513685 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076794036 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093750058 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114168505 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067590242 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095607111 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072465096 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093200997 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071945129 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093502234 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071329183 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09376142 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.093026253 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081423509 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092908469 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100113085 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10348163 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08847252 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07288998 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.093178213 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080684269 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.093507668 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105232844 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073429687 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.093800333 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101068575 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085518966 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093383743 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065382948 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092739514 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073536445 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092606324 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068542843 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101642429 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072033389 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.089021977 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072039897 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.094004181 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.100740644 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08487988 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096664115 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097077696 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074203393 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101451032 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071948301 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093760864 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101310807 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.10556919 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102090507 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100770795 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073405773 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101726871 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100857974 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.10672754 seconds)
  done (took 6.457446607 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087771837 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095960425 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.097108581 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.0625402 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063519417 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090971798 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064124244 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083639673 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076149873 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09534798 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078023516 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090621247 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072697623 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098268787 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089175076 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073939945 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090429715 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.0705806 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095380934 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069856662 seconds)
  done (took 2.59950142 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076290536 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103011021 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.068832871 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070416271 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.090704005 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071173086 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090454853 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0684736 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087720794 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069236089 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096959141 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076515385 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087056776 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072216391 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096697355 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071321836 seconds)
  done (took 2.254974375 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.079060725 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.097097001 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080675894 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088460004 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06464984 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083756629 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067055162 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06178322 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084176195 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080388067 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087870141 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068849691 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087252235 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065331223 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062761631 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090735587 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063177045 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085277633 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067112294 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.101313733 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078110006 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085531588 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068177074 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067447588 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.087974452 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070442094 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.088272513 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063751051 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085391915 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066952839 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087028795 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074099743 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082619421 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066058301 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063558652 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084584057 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066096052 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08646963 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070252305 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065416296 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085792869 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065827324 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086206903 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067380115 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081734186 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068462417 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062406379 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092571796 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063990125 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086896522 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066262581 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088441556 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068982002 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075919552 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.091136862 seconds)
  done (took 5.187643972 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080560956 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068997799 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08319609 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064097916 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089555454 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068773885 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068013044 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089153004 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067728164 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084747704 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068345278 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088491399 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069637573 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069054516 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088967097 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069368023 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082296043 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069014672 seconds)
  done (took 2.333217841 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072613871 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065352507 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094490937 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066926482 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086851252 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069469083 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061274191 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086843604 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064971759 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085430606 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068106641 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068315982 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085375646 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068908235 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086732675 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068094105 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067973315 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086150291 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06656154 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082281632 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069856694 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064425031 seconds)
  done (took 2.602229759 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073230698 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092506295 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.162308904 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.108569882 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08163303 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.100511959 seconds)
  done (took 1.583988893 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090897189 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100142446 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066637712 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106851551 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075399982 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087863082 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068795584 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087809389 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077446638 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102103101 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067364666 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097590358 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096701248 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077671063 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094822187 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074306629 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089286654 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068109569 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08811594 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106182468 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06961149 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096145784 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069435467 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088055549 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068358077 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096498964 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075819916 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102551546 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087673191 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077387834 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094037266 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068223283 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097614226 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101401662 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070757964 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096489404 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069142756 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107746188 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073850499 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09750092 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069012656 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096132798 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096722417 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073569232 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097127639 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068950934 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093370119 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06766051 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08976724 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113738227 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073432236 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097532627 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093403775 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0779845 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098076237 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113523494 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081735192 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09767737 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093462002 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082158742 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097324943 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072963258 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097534366 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101344695 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073321431 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098057195 seconds)
  done (took 6.716046469 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085365576 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107193759 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068891793 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102349553 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096246655 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069216064 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088230372 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068695716 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088259617 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068926855 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130180783 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06803936 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098435743 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097472578 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069428864 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088699873 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06897558 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096860971 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067667602 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114099853 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08852834 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075874115 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0970699 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096457395 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082339698 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094944554 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068224954 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089669346 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067572789 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089231714 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0732306 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089505572 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096695442 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068413449 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096797081 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06866611 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088994471 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073759417 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089228438 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073347874 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09812091 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106922355 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068145839 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088712322 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081278198 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089400559 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067552938 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089516627 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068250035 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089150164 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081257582 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103284241 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102642372 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096337848 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070025419 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088609048 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069847305 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088013838 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069374023 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095145894 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077086954 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08965357 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113603178 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069294046 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089199426 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0768478 seconds)
  done (took 6.609713083 seconds)
done (took 131.287460275 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.203808374 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.187822567 seconds)
  done (took 1.358942421 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069435554 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094745045 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09975728 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127577233 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088409064 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100437823 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119709141 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080480413 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065349063 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088092035 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.067270784 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088367363 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13202731 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066888811 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087846504 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068791444 seconds)
  done (took 2.419658123 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102312969 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.196555864 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110194761 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06523782 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101224633 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07792502 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.086572242 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077079745 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095201136 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066078635 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077015421 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097631216 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065044685 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.097737175 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074471527 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.10013083 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064771477 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099492126 seconds)
  done (took 2.632494645 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.104058765 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.14609224 seconds)
  done (took 1.226720722 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.200711101 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.125234061 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206644799 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.420477933 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.21335044 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.282374193 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.179520018 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.177958975 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.162732106 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.175543332 seconds)
  done (took 3.117801951 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099681562 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.170383558 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311477566 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138086359 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.084685067 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116739425 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138563898 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.087795895 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.102973312 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101263871 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08016649 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098216691 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.096641697 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.096627162 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073553821 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098678361 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121437816 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074215495 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075654225 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.097649338 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118145545 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067807017 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.0735058 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.095223529 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076681812 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.100039739 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065650609 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087916044 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075738364 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095969253 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.078368524 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115278278 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097976351 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132444824 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.081199875 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.131963091 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099087284 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072397042 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096146764 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072405436 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.09824539 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075772679 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105208418 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076378245 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087383226 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076599806 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086482233 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067222297 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.099588908 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.077648202 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099766291 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078464978 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.131309684 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.098429106 seconds)
  done (took 6.332237993 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.748281657 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.109372121 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094484616 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.80628641 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086340089 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105837541 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.707559458 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116872419 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209044896 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.765608155 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.090822132 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.098576355 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.179045391 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.213423062 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.93672175 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.287145766 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.635411211 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103967472 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107778449 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.131405623 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13778959 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.174897297 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149775678 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.435591649 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074144358 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091128266 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.135765206 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074418599 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.137661539 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.104506101 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071449072 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173802631 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.226635307 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.152943479 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095959378 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069796403 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.08966547 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.147087377 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.220455254 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.189296704 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.155941614 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067956606 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068809616 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.160054073 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130736246 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067989048 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.137952388 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.150148112 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.14517946 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094236622 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074046526 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.160581735 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13731543 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.141523416 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07886691 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.292982377 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.282155066 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069491169 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120534409 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103042944 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.215971392 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103560799 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.175267512 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137890622 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.188186472 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068989218 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753083108 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.147173088 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089364619 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075232003 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118468857 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073350219 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.157813731 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.122656824 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.367784782 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.139173953 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094765532 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069256058 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204362293 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104472262 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068025199 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160361898 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.076183154 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120248977 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141058988 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137992163 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.165415742 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.212320668 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.140230943 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.136063669 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093898352 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.120601637 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.075800457 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.188658074 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.192021308 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.13944479 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.185850352 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137694592 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.138497326 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.144708492 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097519678 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.148495157 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118230375 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098799633 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137614955 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.168379412 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.122424331 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.103528437 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072842567 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.136674007 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.12506152 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10584916 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.139180581 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.147204922 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.457320141 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167417554 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067758577 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106053647 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139057683 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.140235451 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074285251 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.233588388 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122473184 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.146115833 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119871272 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066976013 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118350873 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.138878958 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09812793 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121605503 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136355299 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074622548 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.233288394 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.169005746 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096606888 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.194887202 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.160321163 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073256829 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.147518946 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11868895 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.14459332 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098675713 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136307908 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095633273 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.74787932 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.140290708 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11999865 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094258156 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.151397498 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.092042303 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08006867 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103301097 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06702349 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.754069137 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104822858 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079047926 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103187034 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073832457 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119654926 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.133391344 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094363241 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138155721 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.200276928 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074914655 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117639806 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081242388 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160486438 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.074817574 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102961435 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081645789 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104903408 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121914003 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072284253 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104622839 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146135837 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.140947056 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.190325107 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.541829296 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089749383 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082127368 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.19793642 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06923683 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.26064425 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134572089 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.197598312 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.139843282 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07810692 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.280309511 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.140718462 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.175489111 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104212719 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151992714 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067424075 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.135527154 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.140592491 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090801012 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073331352 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.139317937 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.163816424 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.140563225 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.930339899 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070656767 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.201849965 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066676757 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169837295 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.075250941 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09514793 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.244195047 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091036944 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145668399 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.140663033 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071607919 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.104178446 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.672783582 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104228506 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137980353 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094891366 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.170152204 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.140272985 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.156015252 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.137364119 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074440539 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.137437794 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.183169024 seconds)
  done (took 40.19988519 seconds)
done (took 58.264141148 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.260285607 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177235027 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.243556633 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.146352547 seconds)
  done (took 1.89869289 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.14472474 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103141395 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.117781282 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.085806463 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10319767 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08773022 seconds)
  done (took 1.642544069 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.407341186 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.264244188 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229534997 seconds)
  done (took 1.901006913 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.260549406 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.211640001 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.447868364 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.297247329 seconds)
  done (took 2.347550895 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.174759699 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114246407 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066622324 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107121883 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.158419725 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.255392499 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.127211643 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.185131676 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078976892 seconds)
  done (took 2.315873586 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.195204062 seconds)
done (took 11.303923159 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.21541764 seconds)
    (2/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.234303628 seconds)
    (3/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.095794268 seconds)
    (4/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.171975086 seconds)
    (5/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.086091628 seconds)
    (6/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.234658267 seconds)
    (7/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.218924388 seconds)
    (8/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.189528985 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.189446899 seconds)
    (10/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.15004296 seconds)
    (11/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.09595066 seconds)
    (12/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.204227614 seconds)
    (13/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068443251 seconds)
    (14/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.17595075 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.0818006 seconds)
    (16/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.111148055 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.136733784 seconds)
    (18/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.149270284 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.10207731 seconds)
    (20/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.0763667 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.098297551 seconds)
    (22/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.233386242 seconds)
    (23/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.134248684 seconds)
    (24/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.099462405 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.093330277 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.200319389 seconds)
    (27/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.104308391 seconds)
    (28/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.121279896 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092417341 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.122691619 seconds)
    (31/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.238237833 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.104626626 seconds)
    (33/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.090475495 seconds)
    (34/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.075433891 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.111008002 seconds)
    (36/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07760527 seconds)
    (37/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.132163746 seconds)
    (38/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.193542035 seconds)
    (39/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.141727785 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.089131248 seconds)
    (41/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.213599998 seconds)
    (42/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073713201 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.096240364 seconds)
    (44/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075994301 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.111108248 seconds)
    (46/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080896498 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.113651344 seconds)
    (48/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.135784634 seconds)
    (49/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.150837763 seconds)
    (50/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.074737361 seconds)
    (51/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.095884887 seconds)
    (52/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136173645 seconds)
    (53/309) benchmarking ("sort", BigInt, false)...
    done (took 0.208299706 seconds)
    (54/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.208899358 seconds)
    (55/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071783447 seconds)
    (56/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076867409 seconds)
    (57/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.172645392 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071782456 seconds)
    (59/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.099419466 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.114279035 seconds)
    (61/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.099539819 seconds)
    (62/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074910529 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.145367149 seconds)
    (64/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.191575177 seconds)
    (65/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.095529039 seconds)
    (66/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065815663 seconds)
    (67/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.062352624 seconds)
    (68/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.094315216 seconds)
    (69/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.13755614 seconds)
    (70/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.1152617 seconds)
    (71/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.18132753 seconds)
    (72/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.108308442 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.192036033 seconds)
    (74/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.200779251 seconds)
    (75/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069262958 seconds)
    (76/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.106449244 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053699278 seconds)
    (78/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07604299 seconds)
    (79/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.096318918 seconds)
    (80/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.176723173 seconds)
    (81/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.090835221 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.107847849 seconds)
    (83/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.187195414 seconds)
    (84/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092861196 seconds)
    (85/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108275242 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.153247862 seconds)
    (87/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067431202 seconds)
    (88/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.09026014 seconds)
    (89/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076955748 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.118957651 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066584583 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.131183378 seconds)
    (93/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.136164574 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.137198302 seconds)
    (95/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051254229 seconds)
    (96/309) benchmarking ("sort", Int64, false)...
    done (took 0.088363628 seconds)
    (97/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.138778539 seconds)
    (98/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.093525529 seconds)
    (99/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051526504 seconds)
    (100/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.194353052 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.07644671 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.119078243 seconds)
    (103/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080540398 seconds)
    (104/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.123429945 seconds)
    (105/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07332396 seconds)
    (106/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.190091135 seconds)
    (107/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.064109772 seconds)
    (108/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051770029 seconds)
    (109/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064711506 seconds)
    (110/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.131654047 seconds)
    (111/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071873617 seconds)
    (112/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096186907 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.0666991 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.116511061 seconds)
    (115/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063484799 seconds)
    (116/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.052942123 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.115660779 seconds)
    (118/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.105702932 seconds)
    (119/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.194866742 seconds)
    (120/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065162053 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.121305979 seconds)
    (122/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069659871 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.133079993 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.168676682 seconds)
    (125/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.170934032 seconds)
    (126/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.139741767 seconds)
    (127/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.138794515 seconds)
    (128/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.157287159 seconds)
    (129/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.137152112 seconds)
    (130/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052053268 seconds)
    (131/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.098878712 seconds)
    (132/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.139833954 seconds)
    (133/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.096848305 seconds)
    (134/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053393706 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 0.160121195 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096942266 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074226429 seconds)
    (138/309) benchmarking ("sort", Float64, false)...
    done (took 0.149356122 seconds)
    (139/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119651528 seconds)
    (140/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.052252471 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.094807718 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052942347 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072114139 seconds)
    (144/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.096910214 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073271041 seconds)
    (146/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103662341 seconds)
    (147/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.052214423 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065262869 seconds)
    (149/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.097286018 seconds)
    (150/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05145031 seconds)
    (151/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060335471 seconds)
    (152/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.099343902 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065973142 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072181721 seconds)
    (155/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.128318637 seconds)
    (156/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052445936 seconds)
    (157/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.1153544 seconds)
    (158/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067039239 seconds)
    (159/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.090006963 seconds)
    (160/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.070196128 seconds)
    (161/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052248067 seconds)
    (162/309) benchmarking ("sort", Int8, false)...
    done (took 0.164689529 seconds)
    (163/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068554806 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.097738323 seconds)
    (165/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053462712 seconds)
    (166/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052228834 seconds)
    (167/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.103056704 seconds)
    (168/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072194348 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.112003692 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093363293 seconds)
    (171/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.050629696 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.115593119 seconds)
    (173/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.05114744 seconds)
    (174/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.074417442 seconds)
    (175/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075115938 seconds)
    (176/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050735661 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.088410184 seconds)
    (178/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07414099 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.133893633 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066451004 seconds)
    (181/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052435172 seconds)
    (182/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.076010815 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067079881 seconds)
    (184/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.069805869 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.096099622 seconds)
    (186/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07260218 seconds)
    (187/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060807308 seconds)
    (188/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.096437115 seconds)
    (189/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052246567 seconds)
    (190/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078329812 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.098216657 seconds)
    (192/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069127014 seconds)
    (193/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.092250973 seconds)
    (194/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072966321 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.167373265 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.094998419 seconds)
    (197/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.075536478 seconds)
    (198/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052657991 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064633514 seconds)
    (200/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051717515 seconds)
    (201/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.192362209 seconds)
    (202/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.086638141 seconds)
    (203/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.053424844 seconds)
    (204/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06709704 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.119976782 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065457533 seconds)
    (207/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.089177233 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067532103 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.330464343 seconds)
    (210/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.099214954 seconds)
    (211/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051076058 seconds)
    (212/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.159799188 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.164362363 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074205242 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074310953 seconds)
    (216/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113371125 seconds)
    (217/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.19572045 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073194967 seconds)
    (219/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064141306 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.090761403 seconds)
    (221/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079690477 seconds)
    (222/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096420062 seconds)
    (223/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.158847337 seconds)
    (224/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.075550286 seconds)
    (225/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.167858222 seconds)
    (226/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.106000739 seconds)
    (227/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089669914 seconds)
    (228/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.074799031 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071577481 seconds)
    (230/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07110917 seconds)
    (231/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.088458991 seconds)
    (232/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067492828 seconds)
    (233/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065852645 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.201239192 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.099950413 seconds)
    (236/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.052258622 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063906201 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.120631298 seconds)
    (239/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07866028 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087673542 seconds)
    (241/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054656092 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095750421 seconds)
    (243/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.084670138 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13975116 seconds)
    (245/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.083952201 seconds)
    (246/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052509114 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.132972608 seconds)
    (248/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051793122 seconds)
    (249/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052019434 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.115054882 seconds)
    (251/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052965666 seconds)
    (252/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051694157 seconds)
    (253/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.174972298 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.169123367 seconds)
    (255/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.053159003 seconds)
    (256/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051160611 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.145327346 seconds)
    (258/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068707653 seconds)
    (259/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050888514 seconds)
    (260/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.096762551 seconds)
    (261/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074285405 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088731319 seconds)
    (263/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052833532 seconds)
    (264/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051631793 seconds)
    (265/309) benchmarking ("sort", Float32, false)...
    done (took 0.15015599 seconds)
    (266/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077421575 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064606602 seconds)
    (268/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.090017778 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052551365 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.09440506 seconds)
    (271/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146139956 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.152880884 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07330805 seconds)
    (274/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.075632059 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066372906 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.103255658 seconds)
    (277/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094262981 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08744448 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.089072891 seconds)
    (280/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052437264 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064736034 seconds)
    (282/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.075837094 seconds)
    (283/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066633734 seconds)
    (284/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050690028 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.098156946 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06536273 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063569619 seconds)
    (288/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.075047437 seconds)
    (289/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051637388 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073256688 seconds)
    (291/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.074639337 seconds)
    (292/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066686648 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.193007947 seconds)
    (294/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051263544 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064277139 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.199364191 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.094784875 seconds)
    (298/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051794998 seconds)
    (299/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050780226 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.088728089 seconds)
    (301/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074768201 seconds)
    (302/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08716896 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.158014993 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.094766194 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.067332333 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.085899985 seconds)
    (307/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.098640694 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13202618 seconds)
    (309/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.076980578 seconds)
  done (took 33.179291546 seconds)
done (took 34.192142915 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082035737 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115958197 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074536875 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.117598868 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080928804 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102305086 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072466677 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.101191054 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081027802 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.104594021 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079521539 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053932503 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.100073127 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074438866 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099012028 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091465884 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102481092 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072668138 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.096392536 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066491753 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073294751 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089293023 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067735518 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053856868 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.103295208 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072244926 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.095984197 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075930021 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064444091 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.090002232 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068570152 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071949784 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089093219 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077757893 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095270434 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07396323 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097054035 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077400075 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06660121 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089529968 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073738258 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065697289 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096395162 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072571891 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.093533517 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07178341 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072725139 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.103358125 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089985807 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092182516 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073813996 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100533417 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077927679 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071322983 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.094069747 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073461473 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093512667 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091651328 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.097123267 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068590881 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072391112 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.099040374 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071117711 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096415036 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075083547 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075163822 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.100225076 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070857028 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099040166 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071817902 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065659529 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.099283952 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068665377 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.088409257 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076921924 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075402007 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.087699601 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071718559 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071615041 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096614895 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064719672 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090297093 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067945446 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071016408 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091196637 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055008254 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068642989 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094765055 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065464098 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072637613 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.095855158 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07177404 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.089743806 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077222754 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064124373 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095155402 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066312986 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064795536 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.09140496 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068698353 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.087124021 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068959918 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073896561 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090474178 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07297755 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078670563 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.090246071 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07162885 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088202081 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066168236 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080984981 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.100303773 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065503644 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091086483 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066767906 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072390214 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.089664536 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065941472 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064664224 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.090309311 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070943508 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064716138 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092275364 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072454069 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.102529818 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065793448 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068285802 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092373487 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066218343 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070403773 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.090517502 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065863454 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.090445984 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064192685 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067522269 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089488022 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073249643 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067362866 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098358196 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067442141 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097805718 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071230592 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070793115 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094484623 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065388645 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058659957 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091565301 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067941424 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066725368 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089553844 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06766692 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064943957 seconds)
done (took 13.282231706 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067158872 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.168873857 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.126109117 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094721529 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.112074862 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066381131 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.101148101 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102963692 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092523749 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127418333 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087968229 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.108033905 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114447237 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.089280476 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066761295 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069468724 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.092148393 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.087935189 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.126534457 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085559191 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.140701004 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.089274583 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.120025138 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091155051 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.112403089 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.093445366 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.091338707 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070540444 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068194282 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.126568432 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109194941 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070168583 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066028495 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124637186 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.117202271 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085368783 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.08952714 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08526959 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.089440178 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066974198 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.114670306 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099128825 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106461429 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081082256 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.096769799 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068477946 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089876369 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08607549 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.115164591 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.08005854 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112811397 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.133922426 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06832617 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.107255792 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064270041 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.112271915 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081064968 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.093448886 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066485782 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091401188 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066954998 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069023848 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112845412 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.115324313 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070901543 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.105390522 seconds)
  done (took 7.364744107 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085396501 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.117056542 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084481816 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108377359 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066349362 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065918625 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090753012 seconds)
  done (took 1.686833393 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067887564 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088142769 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113615784 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088043709 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110752772 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086100082 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101365522 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067176208 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.108235339 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068560088 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087115116 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.128788956 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066384252 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098888529 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089947071 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091825156 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089791302 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.09114808 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070028296 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114162675 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070446603 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.110043887 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070299022 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066579588 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.105975456 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067624234 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138957771 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071451639 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090709918 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071552064 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064767251 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.141920254 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104503472 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078754182 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066764435 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10674926 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081548162 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08898654 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083323072 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095157977 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083032502 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067274894 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.094022344 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065601959 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070914761 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.10312009 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067626173 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.091705336 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070985045 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086194347 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092988302 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081081645 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092468199 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071869463 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06794344 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097629819 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076045084 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091836439 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088279675 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067233462 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109268926 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082530165 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106796317 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083142172 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094786937 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081104254 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.105789795 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071083996 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068210039 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095512091 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083241647 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089107314 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070050344 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076571148 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093432389 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089482403 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.11497306 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069232521 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.101211244 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068216986 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067068268 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.092210295 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090332329 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094673278 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06761885 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070753251 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094610464 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06513249 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065009221 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.095412484 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065304831 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091785453 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071056001 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067353873 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09397683 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08422828 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.091143324 seconds)
  done (took 9.426698122 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069382801 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067156644 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09350637 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068821789 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067396352 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092790652 seconds)
  done (took 1.538168467 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097109726 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094216216 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081771865 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.096354701 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106741838 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.105874795 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.082013567 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10695147 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084612846 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.103340255 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082302083 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.106846886 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.088092524 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.098730167 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.081172792 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.09745875 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.08256359 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100718139 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.0791508 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097570314 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.088313064 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.097079912 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074923229 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.106501949 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072485157 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071716768 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102624425 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078684284 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.103555725 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082013478 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098436464 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070059574 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096386984 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082139981 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.106254636 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071545201 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097625029 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.071936878 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100678828 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071108033 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.106404911 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074659698 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076525564 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097629954 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.106033222 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073301896 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07083507 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102358309 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.080815112 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096560613 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071601401 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09678108 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071535057 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095643535 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073070846 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.106298108 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072175473 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.105680257 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074179166 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071153479 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095267156 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070361101 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.10769221 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070649809 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105388343 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071310687 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096977755 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073147522 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097869949 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073411863 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070228094 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095566925 seconds)
  done (took 7.450343346 seconds)
done (took 28.535222476 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.660882584 seconds)
  done (took 1.739860665 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.779803922 seconds)
  done (took 1.861565111 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.657160575 seconds)
  done (took 16.743087229 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.624492149 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.777526094 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.813371439 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134551107 seconds)
  done (took 3.430206897 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.907755988 seconds)
  done (took 2.013194231 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236235338 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.22418338 seconds)
  done (took 1.545815167 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.769080211 seconds)
  done (took 1.865012951 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.300849501 seconds)
  done (took 2.387214737 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.324158622 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180419262 seconds)
  done (took 1.598247277 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.526276418 seconds)
  done (took 1.620029773 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.801091218 seconds)
  done (took 7.901161559 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229565637 seconds)
  done (took 1.339888072 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.270073892 seconds)
  done (took 1.369541856 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.32374282 seconds)
  done (took 4.424110435 seconds)
done (took 50.92793868 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078978143 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080608547 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.106726203 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077970408 seconds)
  done (took 1.439747037 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078857455 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072851839 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102165137 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071929595 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101872424 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072978049 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.098655359 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.078077826 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07123462 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099489525 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07309353 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097252259 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075871959 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.098145716 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072067813 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074533694 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101712368 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072516279 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.10100661 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074032114 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069740871 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.100076802 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074924865 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096723839 seconds)
  done (took 3.138016681 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079479448 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072074048 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099599039 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072787534 seconds)
  done (took 1.428022903 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078829287 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.114926083 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090037835 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076174461 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.117764652 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.111328678 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070032594 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06834529 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.096544042 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07682343 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.091354982 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098560041 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113186429 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076543378 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103028116 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067374972 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068654447 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112848445 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077134441 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102982269 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070434444 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078503255 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.09358546 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08940055 seconds)
  done (took 3.254397056 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078380224 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101526448 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.104021273 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088213175 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.117859669 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064600453 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.102260039 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090420403 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150348794 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064850156 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.096259299 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066216139 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.096521669 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066413737 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076327268 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.135052239 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11116644 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.09465383 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096203466 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.091374415 seconds)
  done (took 3.006037981 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075980029 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069589566 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090715371 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069421808 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075552962 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098170269 seconds)
  done (took 1.585867377 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069250472 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066753511 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092074295 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067524436 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071109997 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092519353 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066279759 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066641365 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092477044 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067956956 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065561264 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.090907932 seconds)
  done (took 2.015186328 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.385747322 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.094896372 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.0686444 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091059722 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070253802 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090633571 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08116441 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066692632 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.11677108 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066356288 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.09182463 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069378714 seconds)
  done (took 2.404330631 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264139742 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07762618 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324871542 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167286851 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13909306 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155299508 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102295442 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1401148 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.19753222 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137613398 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199000369 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225604173 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134413492 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166077009 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114850239 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.131285152 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185564661 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220591682 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102943528 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224341793 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206478763 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155846673 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178883225 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128039154 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135039839 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149336618 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070867218 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106643099 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231897275 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160286299 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201810387 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137765387 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095767368 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23022132 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226195644 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195721266 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163306289 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084991898 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.157206779 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166088927 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257600415 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11475609 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192969778 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134552636 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105593306 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172920569 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145713019 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.145099474 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.136681946 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114177014 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173240268 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241266518 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.165079515 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113233086 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135951832 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141024075 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143227903 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103008876 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241123666 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218339165 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157138153 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096499112 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096811832 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212088122 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159166346 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141925643 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.153524134 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119875792 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167633693 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213396475 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146663866 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172888606 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.18364194 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089388497 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147024541 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195605268 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155888627 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202337041 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153517024 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.099686927 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151695602 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12907175 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081192918 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.169120097 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074849292 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233777906 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124675298 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.139094579 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138666642 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109444574 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136088936 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220564482 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203139766 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103622396 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.092830548 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129984136 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.150070328 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176563628 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114386354 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107877266 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173291775 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079821276 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165348105 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.102358903 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153267778 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.0780865 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176701574 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164426377 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076620729 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155311405 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129081868 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.127998732 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163665185 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220181752 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091393673 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10918567 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200268422 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178806135 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107014302 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201484151 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188290989 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.128050658 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129349082 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178334821 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241683231 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116767019 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222415209 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134171361 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085271336 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.114116194 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15599286 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139275221 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.148493984 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082811782 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.153608236 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225902699 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.100146829 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095797144 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188059653 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082777 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107665173 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140541497 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125011721 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097258905 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.126441249 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.13336819 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169688061 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153217835 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135062851 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152446592 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125334025 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226580877 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115593831 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.104270897 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130675864 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.095088862 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.165127664 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190061471 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107096834 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225874954 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.154803001 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130489711 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148428157 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083443961 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168247567 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105344869 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070672152 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201506615 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137984745 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111235442 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.210277061 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130273684 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.155359163 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.150809645 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163342379 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158953751 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.160726715 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133044038 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.114949731 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139904898 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155348932 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097517121 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095366701 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.109988047 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130341487 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095746963 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110255734 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170778423 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181080538 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098310736 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140478066 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124307313 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179528847 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103135817 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158690201 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.147681184 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121295925 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.184945029 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212583878 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164671625 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127393466 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175092777 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.098037114 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074845434 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.117402709 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157168219 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109123628 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084456789 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145448868 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206851527 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157802231 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166286686 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138656864 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149612985 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18658395 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097856821 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116598487 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206168627 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153207356 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.157373184 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091551007 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.126359703 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175180942 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13651506 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245131936 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14335062 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151964528 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209059307 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.130087463 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08152085 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133785532 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16627259 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133589224 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208629691 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125800457 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089996407 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137716086 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.107277728 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13109383 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157493324 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149229263 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163606742 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.143833058 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16013742 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104334905 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145805391 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152377725 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150108631 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.08952941 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148049346 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193972234 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122693059 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145857683 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213364251 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080051976 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.152729983 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238355691 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172664548 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112141297 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138110468 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154933836 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157622747 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146884743 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169706642 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138639232 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191123697 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112674899 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.113642434 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113610593 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098579202 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13446222 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.122203022 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.13945855 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.145468267 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.120917247 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160544697 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138892514 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137812788 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148745107 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098524204 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.118615379 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124010323 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209679309 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150872644 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232655584 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.128309416 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.206117348 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201770275 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103029975 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079228548 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.108020055 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170513851 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110185259 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164738159 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.095364571 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133389703 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155224255 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199855649 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096040001 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.096173827 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13773356 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16704255 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139343632 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098205901 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133246601 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223060684 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.130736559 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079633049 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153457639 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132051327 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129562589 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236710529 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062418641 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123316256 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0771243 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079714274 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186399334 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187774224 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.110751643 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.131370165 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145957669 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176207909 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160172851 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129351726 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097603434 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141346899 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207434324 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158038363 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.08998851 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140721486 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185413844 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188296025 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134357807 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.122838826 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232356796 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187242773 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223608629 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08822624 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143730339 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143932264 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137172874 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198603057 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083081221 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230217192 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109281337 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166936721 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132767986 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119750315 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159313955 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.123810422 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090171899 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20704785 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149652283 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098646573 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10781752 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146588499 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150701669 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135721057 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07439216 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196736388 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073321143 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194351225 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202423639 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109567023 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133201122 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097567753 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109517426 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136613768 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132459813 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086216052 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.147548329 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234844585 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.117390568 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183741346 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199077615 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143739187 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168704887 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127327678 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.664157025 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078568769 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214022851 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149106848 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239189392 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124948677 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148316696 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110757177 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179712347 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177029022 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133473154 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.205045539 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163424534 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.149513257 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105859184 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103871495 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138563231 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.119429426 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134594305 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14314893 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145038787 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.127747357 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.149591398 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156528981 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.10840278 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096535155 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219421871 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146825939 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173311569 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169556663 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113031211 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148012527 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19844832 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081280587 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.151694269 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216530441 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136475121 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12655011 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082035971 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133746019 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233201918 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072736874 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222119103 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152874724 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138475265 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142482471 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147680305 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189476679 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13705414 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156004875 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096164989 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.139997108 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144272553 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112230305 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.104795751 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106993318 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140825432 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.127638051 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130548576 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.123008228 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211500197 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071127992 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125131819 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131549277 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174986777 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238900803 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.117490193 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082871725 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148038303 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141795296 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.143420774 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179872488 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083719167 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109908322 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083229355 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.141043478 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137798238 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117589037 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131651245 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139230054 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22901165 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083929487 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.255021 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123082984 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133769781 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070630117 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.106869863 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097323879 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125514787 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136999011 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125231194 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203922928 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.125683462 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.118104258 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092736055 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.101127826 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083293593 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185681796 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111609942 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177250431 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099126716 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.091041371 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13888072 seconds)
  done (took 71.43677696 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.137268151 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.108411334 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.121913561 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.176843936 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150193648 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.24170677 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.184783024 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.226621432 seconds)
  done (took 2.532850278 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.070098495 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.121207377 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102592423 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.11724559 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093161685 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069298084 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.299928318 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.110007807 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067025598 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.118362577 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.119609816 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095410701 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.479133001 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065659533 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.094322748 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.089065434 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068263447 seconds)
  done (took 3.358432539 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.434900933 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.65362519 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.457474057 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074054448 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.961110882 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.110348992 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.506795858 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.167152054 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094694276 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.443398035 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.724387741 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.157144916 seconds)
  done (took 17.972083367 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075759686 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068603551 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.11032082 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083693164 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.098602022 seconds)
  done (took 1.625112891 seconds)
done (took 116.294428788 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080658873 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.34516041 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053531772 seconds)
  done (took 1.621761438 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084657612 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08284197 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.112196807 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081844289 seconds)
  done (took 1.560760225 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.076279129 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075503843 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111671426 seconds)
  done (took 1.460439297 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.283286165 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166252052 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.090740091 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082946485 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077610197 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104638265 seconds)
  done (took 1.464176752 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073694021 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074372579 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100818661 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076123562 seconds)
  done (took 1.517237102 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077177997 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052123727 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054296825 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083616187 seconds)
  done (took 1.464766252 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090788262 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.105537086 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.081237845 seconds)
  done (took 1.473221774 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107780192 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113432068 seconds)
  done (took 1.420183062 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083207346 seconds)
  done (took 1.276277461 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092526908 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.141258778 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.156159323 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.137477464 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.1694392 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137476803 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085538744 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115605663 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.104533139 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088250258 seconds)
  done (took 2.426888098 seconds)
done (took 17.493878822 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078844263 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.390948926 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360834276 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11671241 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669862022 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355783157 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.007793085 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118255192 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120367731 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095611651 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083563651 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.675746029 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.967350778 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.343980035 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.95810558 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.416672168 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.67672081 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06806016 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066585944 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095662681 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.961162051 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0948085 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067759282 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06688103 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677232165 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.369512814 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094901132 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.412549506 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065960305 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097198541 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354045301 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09405279 seconds)
  done (took 16.212005273 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070584943 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.14287806 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073906572 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082070792 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098381062 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069041011 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.097981255 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069318594 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152008155 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067098662 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111928007 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067396387 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097275356 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069673004 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086198743 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095459849 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06819564 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066918548 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09636975 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067704915 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113210291 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067763236 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067314144 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095917029 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06738936 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107045237 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068754697 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066520804 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095525212 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070356501 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097798314 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069827533 seconds)
  done (took 3.939115646 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115009184 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153258806 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073273033 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129261225 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112843506 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098862128 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.168835533 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09302606 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155627281 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066549716 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11213008 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067681985 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128365483 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068906366 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114043847 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068690945 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068593967 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096634007 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068221065 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094961287 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086776273 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066850043 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.095154319 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067858681 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095655216 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081356011 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093576645 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070313287 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06784233 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096768956 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071243067 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067794597 seconds)
  done (took 4.224118257 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073622918 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074788139 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110127194 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082781644 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095025471 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073018769 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071675375 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.096461035 seconds)
  done (took 1.88825906 seconds)
done (took 27.464497844 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079177466 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069825586 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099667597 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080533839 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.098207348 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079302554 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066906929 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102688202 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077282276 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071961545 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103752775 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067175932 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.097929193 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067768474 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073481329 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096358657 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079962592 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.098273285 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080687767 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078674318 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09826784 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076835991 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.101007482 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079749499 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10519424 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080713457 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081673377 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101682766 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06823142 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.097637177 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07718616 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082429636 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.097330942 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078948917 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.095302266 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068047743 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.066570543 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.096457668 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078466867 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10045526 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070468039 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.100000056 seconds)
  done (took 4.771799246 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089067741 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089911141 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113741502 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064860113 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098612344 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06515356 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.115264934 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064577951 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059364501 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.116167772 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056579891 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060408572 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.091696214 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054875233 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058833602 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055418731 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.090395243 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056123718 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058304934 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087165169 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.05808762 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053505201 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.086548353 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063842656 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055504825 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061070498 seconds)
  done (took 3.131857858 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.084662632 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082888572 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115112228 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.154152768 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105113394 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.104264811 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079252536 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086538116 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114442424 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067536292 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.09810477 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.096505608 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114061692 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.075398042 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069700273 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.112466945 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081766231 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067956557 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103267001 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089489367 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.112153873 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.078122888 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120355704 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081216321 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065536862 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097763784 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071223288 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.108682546 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072522443 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075119517 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.101145312 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070570232 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.096783671 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07897276 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.098584113 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069860151 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088814544 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.105383456 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076952541 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.094968676 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071837659 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067192261 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11648233 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.110779986 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.094792426 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075045361 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.101410824 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078943176 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067263746 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.113834799 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076693191 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.093605127 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072517291 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066169121 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.094853304 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081311043 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068449063 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.09826089 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076050358 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.097562158 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080597794 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070523116 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.111653947 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066946382 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.102022431 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067310888 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067884105 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094999228 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090840982 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096140258 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108965278 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.096826334 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069902271 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07594585 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.102873029 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073085899 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094291667 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083890475 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076668485 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.098762542 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07556025 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.097644161 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07158313 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.085869724 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.097964901 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069361422 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068370871 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102686944 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070291723 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095269472 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081288271 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066679972 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.098876226 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084023971 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.095462453 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069629308 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072437638 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101399454 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066393799 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107064556 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073716584 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.094740801 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078232558 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067119192 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.099025233 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078307009 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.098414451 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068410198 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072101852 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102239859 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069274503 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068780158 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.099346886 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069539742 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.104362235 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074912263 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072190717 seconds)
  done (took 11.408731186 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.190773174 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.184776813 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070976428 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.178323531 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075788145 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108695465 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.179177246 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096479981 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.097226543 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.06916629 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06808346 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.131714385 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.094825702 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.135151067 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.107308631 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068439171 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11339642 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.104411154 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.181262784 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.174195077 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.11322297 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077532888 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.06896038 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.097440635 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070412317 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.075752096 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.113774098 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076444877 seconds)
  done (took 4.348917212 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081839624 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.128064321 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073945962 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088080602 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.119560583 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066393353 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102682294 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068503709 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.107345075 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079445307 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094870738 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074018689 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072951001 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106320196 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068224487 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104863114 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078326561 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068406162 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.098972932 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073279399 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104525702 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080877355 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.0705118 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06829036 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074346564 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.094509678 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065011829 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.113194683 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067807129 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117349908 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06710204 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07253259 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.109488232 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06883193 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.093992781 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071891588 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070497663 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.098899694 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069863148 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065881031 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094432967 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057783964 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065420923 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108568294 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.072360523 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.087478808 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074742607 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071905971 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.101368699 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065574772 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097510731 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071868718 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070099457 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.104502958 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07248955 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072400995 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.100666751 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065497398 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.1023195 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071873859 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063892366 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.093112795 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07336441 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064916585 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104080626 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072550339 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093472915 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072159999 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072481162 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.102232427 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071092645 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070052575 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094532624 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069672295 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099261296 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073091079 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07098548 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.094599574 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.06821852 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067289001 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.083826771 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06804373 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053052281 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.099684706 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066646288 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065729138 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.099428165 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073165015 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.108566499 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068993142 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.101183046 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06932803 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065975665 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.099557035 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063678644 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070331617 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.112847902 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.109366395 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069228816 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06627408 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109584218 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073115446 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.06545702 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.084997451 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074596809 seconds)
  done (took 9.905133075 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096423232 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091930362 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.099473856 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082599249 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124029702 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092604922 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103278976 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074470552 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068272313 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.114129328 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067828116 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.104051325 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068320691 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.075418383 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124181026 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.074815732 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097972345 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077874589 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070901495 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136326394 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081621792 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.110166084 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.079951248 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.095825002 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07347433 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079893326 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.124622265 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.078719754 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.106246255 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085595003 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.078646925 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.124644851 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.084557035 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.100760108 seconds)
  done (took 4.389014614 seconds)
done (took 39.160694388 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.294501427 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.508422769 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.281192354 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.242035368 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.310470219 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.291875639 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.292759669 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.281803111 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.707090294 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.281857257 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.537030925 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.964996065 seconds)
done (took 60.222878105 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.363210218 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.425283072 seconds)
    (2/2) benchmarking "String"...
    done (took 1.553556167 seconds)
  done (took 4.210339647 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.64676427 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.187645316 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.546208102 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.286061572 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.286000465 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.603367372 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.972302128 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.135916526 seconds)
  done (took 28.245836624 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.285125385 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.685289989 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.868574341 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.86640333 seconds)
  done (took 18.935556019 seconds)
done (took 61.627492864 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.301232101 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.314685181 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.295262952 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.269545925 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.39939359 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.314408067 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.54530923 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.50761964 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.286637587 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.290498334 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.309725516 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.28725046 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.298222415 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.574916813 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.295710063 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.287797084 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.342311005 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.732659636 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.681222541 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.289175988 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.315733796 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.292020777 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.309746863 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.289980916 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.358274055 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.287682918 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.301493678 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.289660093 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.635861723 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.290233483 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.389067403 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.786743384 seconds)
  done (took 194.400138096 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.289128219 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.366682241 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.440566532 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.336702117 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.952216801 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.487254453 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.425025226 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.99876763 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.306246106 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.315247259 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.457182784 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.288772794 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.500101488 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.252780448 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.294337484 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.400307029 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.535786309 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.520187705 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.304227558 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.560620093 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.303008509 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.310150097 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.250562163 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.431597552 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.308610776 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.308233408 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.305294906 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.307841203 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.473421552 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.488137696 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.334775048 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.336210641 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.892676059 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.144211891 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.288704639 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.308900967 seconds)
  done (took 153.056311833 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.571023711 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.288812292 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.289018068 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.289159597 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.319648486 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.289383198 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.84121934 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.82962176 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.794473483 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.511239742 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.351971566 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.503131753 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.28967775 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.381941092 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.302015196 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.291456738 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.304727138 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.316262056 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.293516512 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.290281445 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.83641247 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.306193432 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.528709807 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.29655731 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.290969965 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.3211129 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.680796738 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.290774389 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.321995055 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.609815563 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.338521479 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.290434229 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.608908243 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.640583818 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.400433373 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.292279942 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.321255486 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.291785175 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.56248445 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.291201769 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.291343472 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.29320025 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.892623778 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.294035274 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.843264808 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.294829833 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.184315101 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.290891616 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.291025918 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.698595123 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.294310227 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.781140835 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.294585692 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.291325771 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.294030409 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.292087046 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.291505021 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.322909655 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.521088529 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.391613933 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.293428923 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.294250378 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32290627 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.292665437 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.364529937 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.29214702 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.627598662 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.35199613 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.399015783 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.833194918 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.294237062 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.385744181 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.412712903 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.293149236 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.292397267 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.292507862 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.292378658 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.292418174 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.399977361 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.293254735 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.698992188 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.293639385 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.299422196 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.294083213 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.352477572 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.388073479 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.293778206 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.615511701 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.296165675 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.293910699 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.999854187 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.386316714 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.293000216 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.293490289 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.292298299 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.694705411 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.831982071 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.485217052 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.296020049 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.778375681 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.296254581 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.709847477 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.824412635 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.911625039 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.297976091 seconds)
    (105/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.293064882 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.401398741 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.297578574 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.295482726 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.294372219 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.323303735 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.294722342 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.353027294 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.29469037 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.692280084 seconds)
  done (took 355.762672941 seconds)
done (took 706.020966483 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.970165378 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.958641338 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.071414715 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.950296369 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.939209442 seconds)
  done (took 11.127228684 seconds)
done (took 12.363575184 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.487525406 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.487012703 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.356592971 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.489637563 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.324830268 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.50725211 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.469015947 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.314736307 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.400824599 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.375226767 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.400870526 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.346793445 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.323244758 seconds)
  done (took 19.52161146 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.603796989 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.600029452 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.35692878 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.607017167 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.33251733 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.612940839 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.487883037 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.499192261 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.482500935 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.307708379 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.306501904 seconds)
  done (took 17.436840541 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.619203606 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.605311936 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.360146038 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.615162867 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.333229 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.614358714 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.490239 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.5011893 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.485433345 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.307964413 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.307139354 seconds)
  done (took 17.478258673 seconds)
done (took 55.673574242 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.301362377 seconds)
  done (took 2.540939907 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.339734988 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.503555249 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.319253844 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.308759849 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.303557027 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.302529276 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.308196492 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.302730559 seconds)
  done (took 11.929242201 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.299777691 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.299375602 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.301796768 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.302617212 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.302020101 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.302491062 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.300686339 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.299338873 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.302797035 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.299591665 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.302782443 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.302259001 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.300148951 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.300191841 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.303897795 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.300096924 seconds)
  done (took 22.059672475 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.302686987 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.300116863 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.300077785 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.301054444 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.300626048 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.301301319 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.3019048 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.300824893 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.301312788 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.300658995 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.302396481 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.300404688 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.301477839 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.301484537 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.301996111 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.300985198 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.301898159 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.301717932 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.305498196 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.300748531 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.30161806 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.30130682 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.301476899 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.301744299 seconds)
  done (took 32.479098178 seconds)
done (took 70.247258616 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.445035543 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.958531225 seconds)
  done (took 9.64540902 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.303956612 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.304692639 seconds)
  done (took 3.850988172 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.303795733 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.30472663 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.303172985 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.303724239 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.303483651 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.304384208 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.303209052 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.304193627 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.304059649 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.303326706 seconds)
  done (took 14.280689654 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.304867028 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.303383105 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.302033333 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.303568293 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.303830828 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.301769541 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.305040146 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.303906039 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.304632849 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.301402745 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.304148899 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.303577685 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.304930139 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.303042451 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.305685496 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.30307764 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.301938377 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.301831257 seconds)
  done (took 24.704828177 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.306312024 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.305550036 seconds)
  done (took 3.854844878 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.303800991 seconds)
    (2/7) benchmarking "second"...
    done (took 1.30237034 seconds)
    (3/7) benchmarking "month"...
    done (took 1.302445189 seconds)
    (4/7) benchmarking "year"...
    done (took 1.30376434 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.302228824 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.303117424 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.303730802 seconds)
  done (took 10.364094949 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.307037274 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.481331018 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.559245857 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.871924274 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.306815995 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.308836855 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.147672493 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.309321561 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.311252452 seconds)
  done (took 14.847281813 seconds)
done (took 82.788983509 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.318781467 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.298600063 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.188371547 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.312373578 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.31764433 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.642114107 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.312956 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.424375564 seconds)
done (took 38.058680711 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.311847294 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.013411103 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.018666554 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.298995706 seconds)
  done (took 11.575470399 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.29471896 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.247676272 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.288051215 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.324626312 seconds)
  done (took 18.400292537 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.934455845 seconds)
    (2/2) benchmarking "read"...
    done (took 1.634466204 seconds)
  done (took 4.814037519 seconds)
done (took 42.344960321 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.308300355 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.30630559 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.30697696 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.308304122 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.305481084 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.307137906 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.305362887 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.306262879 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.308015273 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.308347783 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.308485899 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.308085423 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308008962 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.306639144 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304731666 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308278523 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.306215596 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30576099 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.305528104 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.305747352 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.307794648 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.308483255 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.306362995 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.306842364 seconds)
  done (took 32.613600963 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.30885106 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.307976544 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.308597128 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.307982406 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.306996291 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.308680821 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.308545548 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.307207765 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.309735798 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.310076142 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.306366856 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.307270401 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.307997426 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.306981835 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308545628 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.306554963 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.308211182 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.306678936 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308493082 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.307263688 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.310066773 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.307489699 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.307228836 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.308610157 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.307727071 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.308030778 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.309471461 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.308208479 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.30973358 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.307207739 seconds)
  done (took 40.489351026 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.314690298 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.316896902 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.31025463 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.310340463 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.310327539 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.309949687 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.310570902 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.30975795 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.310571422 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.309858818 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.309956215 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.309994565 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.31035747 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.310564883 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.310844895 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.310859852 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.311619675 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.310906047 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.310212083 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.311369135 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.311447837 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.311411217 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.312580009 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.311944308 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.312405555 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.311419421 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.31138468 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.311278582 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.311657683 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.312295194 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.312708472 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.311553885 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.312485387 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.312530656 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.311447216 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.310683614 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.31595693 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.318610187 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.312478284 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.312765508 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.311706743 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.310734863 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.311107358 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.310970102 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.312313904 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.311479206 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.312577123 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.312319506 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.311998554 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.313115057 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.311954669 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.311706835 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.312199877 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.312703929 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.312428362 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.312924862 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.312979978 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.312705295 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.313872092 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.312651827 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.312758288 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.313354809 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.31312669 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.312898761 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.313797896 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.312700814 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.312917808 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.313546899 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.313853539 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.312745771 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.313376953 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.313934226 seconds)
  done (took 95.722383512 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.313812389 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.311952821 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.311350728 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.310634386 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.311565537 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.313984257 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.311437588 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313901187 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311673043 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.314574104 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315126545 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.311976042 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31183146 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.314549654 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.314336426 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.311908387 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.314772955 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.311010211 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.31320007 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.315409472 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.313309955 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.31085179 seconds)
  done (took 30.135655222 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.313734554 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.313943296 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.311195262 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.313967933 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.311151532 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.314277964 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.314722796 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.314508373 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.314889466 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.312544104 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313483678 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.31563715 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.312464337 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312869106 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.312806924 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.312645046 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.315304476 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.312801714 seconds)
  done (took 24.895737386 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.313995342 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.312386875 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.314827563 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.313290371 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.313186394 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.316026213 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.31298447 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.316958918 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.314749077 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.313426914 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.315391612 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315626874 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.315782475 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.313236484 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315638405 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.312973987 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.316433225 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.313188735 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.316689616 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.314257559 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.312726688 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316011092 seconds)
  done (took 30.173868234 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.316553008 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.315990392 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.313879598 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.313937194 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.314343415 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.316884005 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.316706407 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.314627908 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.317880015 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.317427955 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.314760734 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.31724066 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.314220706 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.315348983 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.314348241 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.315645613 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.318384029 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.316134722 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.317547056 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.314068321 seconds)
  done (took 27.570893301 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.318309047 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.318709967 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.318458047 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.31953076 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.319133 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.318839817 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.319587587 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.318818943 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.319470823 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.319587753 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.319389955 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.319571631 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.31984535 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.320023753 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.320203688 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.320054835 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.320557456 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.320812054 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.320100735 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.319979449 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.320763937 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.320036598 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.320352633 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.320192769 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.320809548 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.32098645 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.320126557 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.320308147 seconds)
  done (took 38.210163154 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.319197723 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.318921131 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.317257532 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.316766797 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.317513017 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.316873267 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.317324245 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.31701105 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.318681204 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.317075594 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.319785324 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.319694368 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.320079111 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.319955641 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.320185585 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.319500599 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319768831 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.317379019 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.31740215 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317645418 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.319689848 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.319574473 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.31987555 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.31682798 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.318106673 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.320193015 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.316848418 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.318036139 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.321123675 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.31740607 seconds)
  done (took 40.813788972 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.338606758 seconds)
    (2/2) benchmarking "in"...
    done (took 1.338140253 seconds)
  done (took 3.9348155 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.318522714 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.321084292 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.320383362 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.318447646 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.318290582 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.321489882 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.320366607 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.318399264 seconds)
  done (took 11.815229849 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.323572598 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.320553988 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.320999582 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.320366363 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.321063145 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.324013647 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.331182074 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.33843759 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.324838171 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.325251392 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.331280023 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.332491505 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.327094641 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.324861054 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.325239271 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.32559854 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.322878316 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.323097928 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.322329962 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.322428978 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.323936723 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.326745098 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.327359992 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.320114867 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.3259748 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.336959145 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.330477623 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.32200086 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.325539468 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.329299441 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.325655559 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.319840754 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.322835092 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.32259713 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.322558735 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.323074721 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.334073298 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.34353855 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.333084734 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.323811423 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.323482523 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.320144476 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.32708859 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.326704067 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.328124045 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.324528105 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.322653086 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.321645587 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.325657861 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.329496406 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.328395847 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.326032544 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.321366197 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.330459144 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.327523362 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.334146829 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.342435555 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.33052776 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.336353427 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.337093788 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.340429512 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.335158809 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.328281626 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.325111127 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.337291679 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.35020915 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.334122439 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.340143989 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.321442042 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.323998831 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.334002451 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.340722049 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.338015383 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.324350836 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.325289266 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.325282854 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.32850942 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.324772546 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.334849231 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.348800911 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.325444236 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.325249548 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.338438315 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.350506087 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.327932763 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.325256796 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.326623459 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.325894263 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.330162266 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.339864575 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.343753713 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.32665754 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.32911787 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.32874574 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.330266076 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.327091347 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.32891608 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.329314895 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.323358363 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.327185014 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.326504422 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.332975998 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.338146712 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.327138008 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.327045065 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.33587737 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.32776763 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.329100859 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.336962311 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.327541985 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.326811266 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.331023633 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.336333932 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.325030219 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.332884978 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.337842235 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.326279999 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.331577426 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.327731724 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.327518309 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.339600907 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.356231976 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.327451776 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.327507267 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.335301206 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.339270485 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.328451087 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.334170746 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.327569261 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.324423113 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.325054786 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.331542979 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.327616517 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.331108006 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.328400599 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.332142274 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.325857443 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.32852159 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.328203147 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.332564362 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.332459348 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.331587613 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.332474037 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.333834337 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.328655034 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.333968282 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.338024448 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.331897254 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.331959473 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.333127038 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.325992037 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.32891528 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.333075431 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.328265186 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.331522651 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.329252397 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.331821078 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.329262942 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.328523184 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.329144373 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.329592802 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.333702179 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.335989934 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.329386197 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.336263254 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.332329253 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.327356295 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.329140612 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.330306816 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.332175428 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.330448999 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.331573538 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.335928187 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.336795741 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.330248343 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.331152387 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.335909347 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.330742474 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.330440719 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.331210674 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.336105541 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.34264216 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.330782771 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.341020958 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.331741226 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.331542565 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.331405127 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.333982477 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.333068494 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.331169532 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.336902585 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.338389539 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.345896579 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.343414085 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.335539279 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.334770124 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.33570543 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.335511492 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.338196097 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.331032719 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.331841115 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.330976287 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.333529852 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.332214835 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.33488974 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.332425972 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.334778576 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.331418817 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.331541874 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.331991844 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.331793077 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.335349573 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.336351584 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.329765101 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.332329472 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.332858889 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.334487105 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.330179726 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.334662682 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.335008639 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.333774874 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.333041892 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.341745769 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.330126493 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.336292428 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.336771871 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.33646183 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.335016879 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.331901441 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.338442541 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.336373444 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.342982187 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.353398956 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.336548743 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.342772084 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.354064706 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.335422786 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.339244173 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.334801463 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.331486929 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.340773267 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.341768654 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.333640229 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.334153962 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.334062398 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.336750484 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.333297896 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.343815584 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.331677975 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.335926883 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.334057431 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.338336261 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.331360202 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.337459468 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.337870341 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.338419369 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.339615701 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.335211408 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.33475148 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.339011539 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.334054634 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.334965983 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.334927333 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.340657397 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.343613833 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.343517807 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.338029634 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.339471458 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.33959319 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.340073588 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.338237014 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.335087989 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.338003485 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.350535853 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.344163438 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.345699133 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.34008738 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.335698984 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.344788458 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.339806821 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.343021052 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.338717329 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.338308046 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.338070741 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.338716972 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.333501049 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.340551451 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.336821518 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.339914651 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.341175348 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.341276616 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.336610877 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.338732343 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.336093859 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.337137583 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.337025781 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.33909152 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.336740536 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.342253689 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.341720597 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.339300319 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.339062614 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.346775012 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.35783881 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.341234375 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.340180247 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.339860748 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.339610605 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.342267254 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.337329328 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.342770982 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.345815385 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.343507981 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.349865882 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.34351225 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.35048193 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.338929634 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.34544094 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.346043667 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.336414607 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.341224265 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.341388216 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.33731198 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.349277314 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.355860918 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.343250987 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.342809014 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.338128455 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.339344445 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.33890397 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.338491164 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.339295342 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.338284384 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.349490696 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.361144245 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.345763433 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.344217376 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.336068815 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.3388721 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.339196189 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.339931741 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.345639698 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.339350202 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.343331357 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.341729922 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.34193872 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.338580848 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.339102395 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.339167008 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.33640686 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.339440435 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.349933326 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.36181998 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.343467825 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.340993729 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.351534243 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.339995937 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.351319829 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.357069632 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.344637794 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.340653509 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.339012868 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.343846573 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.343124085 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.344114241 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.341028887 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.344932475 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.344597046 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.340590409 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.345656531 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.342733942 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.340317751 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.343756516 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.352409814 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.363203534 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.344918075 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.345341549 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.338821491 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.345366631 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.345069272 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.341686264 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.343268628 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.346389943 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.354329576 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.349471593 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.3451906 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.341845452 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.3454044 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.34213882 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.342189256 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.342817049 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.341410853 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.343100481 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.347045295 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.342177113 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.348964858 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.341907178 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.346199404 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.34628121 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.346354286 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.354445847 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.34273134 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.346558622 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.341851848 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.34138627 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.346532446 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.346102388 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.341939876 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.345919943 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.341758606 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.348004109 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.351963529 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.351765709 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.347857373 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.34518765 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.34328279 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.346631554 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.345882201 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.343273429 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.343476912 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.342618567 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.346863032 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.342897711 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.346523666 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.345208245 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.342229449 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.347240586 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.343679734 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.349578276 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.353523986 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.347781425 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.341166868 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.34336504 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.343666394 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.345476818 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.346205215 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.354597289 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.34935969 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.356845174 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.355886315 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.3469674 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.347327208 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.349095937 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.355807614 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.346314562 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.348332666 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.344054964 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.349422546 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.3485761 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.351053761 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.344864138 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.354474019 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.348485466 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.34682628 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.355995976 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.366932377 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.344856029 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.349716357 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.351725104 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.347087041 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.342530257 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.34488236 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.34706912 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.35495903 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.367364218 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.345084365 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.350250118 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.346662457 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.349716135 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.349997841 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.345414363 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.34915161 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.343406736 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.349047353 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.346224041 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.346319238 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.343689368 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.34812514 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.348175579 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.353184157 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.356804364 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.34315589 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.35181055 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.349960483 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.350899102 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.346617548 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.347081825 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.344820333 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.344923289 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.349341756 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.345960273 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.350555758 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.352257591 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.349654657 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.351927134 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.347947185 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.347155258 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.352435114 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.360531372 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.353419445 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.344372462 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.349389593 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.350808868 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.353278448 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.348299967 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.34781441 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.350160778 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.35306238 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.347837667 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.347652179 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.348190038 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.354292721 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.366727655 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.365694942 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.350961205 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.350408083 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.355157409 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.348332449 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.34447814 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.347940792 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.352943825 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.354212663 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.355974201 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.348631377 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.358904128 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.368176511 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.352700418 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.352625401 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.353675213 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.359435296 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.354189682 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.34943704 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.34889152 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.356506494 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.368053274 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.349720742 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.360495821 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.380819591 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.370701179 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.355284851 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.348375198 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.351587579 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.349019629 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.354787103 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.350834753 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.350619221 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.348783879 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.348933858 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.353785364 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.357812522 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.354498354 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.349400017 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.348945647 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.353697053 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.353334095 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.346530767 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.34860811 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.348846177 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.348467382 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.349567942 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.349917108 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.353067914 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.364104771 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.363155388 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.349379213 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.348523792 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.347003486 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.356020426 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.355654956 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.362283873 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.357204438 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.349031598 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.349430166 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.353796315 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.350137242 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.347819883 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.352226787 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.35298068 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.352380051 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.348093621 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.36586206 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.358838524 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.3574759 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.353384904 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.348995732 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.350258747 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.353518184 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.349404502 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.349249349 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.355113302 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.352539667 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.353019334 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.348638339 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.348458486 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.354724729 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.355549795 seconds)
  done (took 800.255255373 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.347083406 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.346210285 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.346651025 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.346430364 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.346307551 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.347200652 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.345556017 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.34869761 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.343946692 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.344934556 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.344207087 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.344016036 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.343684537 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.344330282 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.343816744 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.344632015 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.343815369 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.344208847 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.343765101 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.344654919 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.343122614 seconds)
  done (took 29.533217423 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.348068158 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.34271469 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.343806159 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.345403384 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.342359742 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.346801497 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.34279788 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.345053 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.347750389 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342493348 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.345218812 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.346401483 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.342811924 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.342419821 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.343867902 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.347131753 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.346100737 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.342929136 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.34492066 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.34259082 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.345314436 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.341595098 seconds)
  done (took 30.861655904 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.345712199 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.345362951 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.347288483 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.343298778 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.345587831 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.343766883 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.345440916 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.346060136 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.345804879 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.348988513 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.348046172 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.349293576 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.354898389 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.350569332 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.350323367 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.348004875 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.48914843 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.345038611 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.346083061 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.345857543 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.343317159 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.353614567 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.344109087 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.343158345 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.347234343 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.345210635 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.345887066 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.345800594 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.345657237 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.35039882 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.350676688 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.346248164 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.348038906 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.35103103 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.348675105 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.350770022 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.350188716 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.346510691 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.343183245 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.347204383 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.359711249 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.366710531 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.346415555 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.356905412 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.348004348 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.347378712 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.353387016 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.355239603 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.345177737 seconds)
  done (took 67.495170831 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.347145851 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.347487844 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.345252906 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.347320095 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.348447371 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.347822994 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.348251217 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.34831943 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.346227968 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.344831714 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.346652768 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.346276255 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.345489067 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.348079165 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.348689782 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.345853231 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.347356111 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.346903894 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.34547819 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.346126186 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.344519378 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.347750781 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.348063771 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.345527825 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.349965726 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.345639475 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.344968018 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.348561601 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.346339251 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.346115912 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.348746246 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.349598324 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.348330957 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.346870515 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.345287778 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.349672958 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.349785079 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.346069194 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.349048372 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.347304059 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.349173178 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.348810206 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.34948326 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.349120334 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.346947953 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.346746891 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.34768001 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.346277155 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.346973471 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.350054941 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.349000221 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.347436651 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.34982129 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.348220171 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.350286886 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.350245986 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.347564901 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.347353717 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.350642722 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.348029814 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.346775522 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.350924276 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.347809646 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.34968809 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.349786059 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.348536218 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.348055842 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.351213291 seconds)
  done (took 92.935950535 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.350437878 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.350609774 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.351171538 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.350565338 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.3516987 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.350606999 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.350526935 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.352025632 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.350690191 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.350334366 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.351345536 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.350587631 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.350834517 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.350991707 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.351161161 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.349491538 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.351108731 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.350573558 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.350712816 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.350152777 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.349912988 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.350674325 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.351154997 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.349542339 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.350860532 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.349806178 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.351117121 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.349918919 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.350665851 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.353764817 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.349724797 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.350064597 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.350401324 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.350203248 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.350390937 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.350876545 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.350941764 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.350288419 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.349637212 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.35081527 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.350803837 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.350238074 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.350312476 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.349242912 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.350943244 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.349582584 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.349515479 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.351178128 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.34953456 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.349513888 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.351764045 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.352674034 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.350809978 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.349570829 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.350046326 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.350064545 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.350551123 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.351026413 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.350089642 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.350980937 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.350902197 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.350741637 seconds)
  done (took 85.026683967 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.351578523 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.35178458 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.347590262 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.348870029 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.350320051 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.347894886 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.350533459 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.351016098 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.35071214 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.351518083 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.350367604 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.348586193 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.347509241 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350839502 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.348114534 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.348704947 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.348233776 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.348563054 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.352618577 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.349202853 seconds)
  done (took 28.282209002 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.349760286 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.351623943 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.348337419 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.348815652 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.350675118 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.349465553 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.351618221 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.351547997 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.34946284 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351537089 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.351989205 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.351774014 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.349295142 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.349996291 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.352627523 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.349815611 seconds)
  done (took 22.895854615 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.349687829 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.351254293 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.352036808 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.352415677 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.349792393 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.349417929 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.351990616 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.349108254 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.349826967 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.351449374 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.354142395 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.352335533 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.352051208 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.351879359 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.349492888 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.352070629 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.348935702 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.351603267 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.351709007 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.351950481 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.349258577 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.349151643 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.351526767 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.352226074 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.351284007 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.350261218 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.350106518 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.349220646 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.349639781 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.352630297 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.349574141 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.349615717 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.351419667 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.349076508 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.352226324 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.34984569 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.352773896 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.352943313 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.352681004 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.352671483 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.352173444 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.349025617 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.351175882 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.352242236 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.34943551 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.35195188 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.349002833 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.351916959 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.348878768 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.348765874 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.351403868 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.351931543 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.35138218 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.353057109 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.354490369 seconds)
  done (took 75.597714381 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.351727859 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.351533531 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.349267523 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.351631147 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.35204843 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.350115743 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.352990761 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.348864169 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.348763235 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.351939351 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.350431442 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.351570703 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.349763699 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.352885046 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.350233205 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.351352995 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.349313737 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.350143607 seconds)
  done (took 25.602707933 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.350826672 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.349792611 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.351408072 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.350300077 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.350117705 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.352548157 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.348655256 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.352206928 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.35149088 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.349749039 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.350293523 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.351841335 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.351539008 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.352799612 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.350099315 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.350081734 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.353594752 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.351627302 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.349804905 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.350066404 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.352251392 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.352159445 seconds)
  done (took 31.011409387 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.353743204 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.355794134 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.371217695 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.39526197 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.384773037 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.354043426 seconds)
  done (took 9.503562655 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351049529 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352000412 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.349142352 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35329958 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351448191 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34993269 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349515461 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351279925 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353631432 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351432817 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348951436 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352143389 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352867877 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350351907 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352219627 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352320263 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350701291 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349700311 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350917615 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353010026 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350706624 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354120939 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350744329 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351043044 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351029465 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350935252 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352943526 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351533025 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350580803 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353147214 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353489458 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350392598 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352881102 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351763097 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354620702 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353898638 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350603546 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354663016 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352658655 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350460436 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.354523645 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353384304 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353761928 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351416742 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353528453 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352328847 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35025791 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351009014 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350691945 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35359864 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354705338 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351567433 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353948213 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354864096 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353736352 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355217077 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351569624 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352030435 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354681239 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352443378 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352945992 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354041282 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351480089 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351706964 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353785373 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352001859 seconds)
  done (took 90.534805885 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352601621 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.352817413 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352079253 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353177485 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351729757 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351354112 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352036098 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351891561 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352659751 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352211784 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354620246 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352628564 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352039622 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3516773 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353138602 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352778051 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352486794 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352545247 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35151706 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355476643 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352796547 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352920972 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352256793 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352670911 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351961174 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355292208 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352133195 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35246259 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352540611 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352055658 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354329882 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352355998 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352717647 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.352086178 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353361267 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352651111 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352694508 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352280984 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353985474 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354843873 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352572515 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355752504 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353460777 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353639124 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353338174 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354241133 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352797479 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352419328 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35220536 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352834543 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353059279 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35303066 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.355698079 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352111763 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352285469 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352794485 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351986349 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352915043 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352718484 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354799693 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353500049 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35159356 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354146837 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351339604 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353041368 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351292489 seconds)
  done (took 90.583015835 seconds)
done (took 1857.739703625 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.424317007 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.435308019 seconds)
  done (took 14.151662251 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.522050313 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.472079985 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.356617769 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.405063552 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.356010873 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.349965009 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.356764733 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.357156435 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.355194145 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.354913745 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.354447856 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.542396796 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.352344021 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.355252916 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.355583419 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.448744331 seconds)
  done (took 43.588034917 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.380950716 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.361856888 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.464881595 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.376316946 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.38054185 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.531302943 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.412533719 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.360203573 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.515693079 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.392680709 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.775632901 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.380104775 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.358325707 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.370724638 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.375714131 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.532191498 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.584575928 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.777626011 seconds)
  done (took 30.622460466 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.764816617 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.367482862 seconds)
  done (took 9.421639293 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.393899686 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.380141263 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.365884489 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.368943839 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.370165371 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.378836724 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.382353917 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.394575922 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.387847379 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.3723359 seconds)
  done (took 65.087187733 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.37692206 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.359321772 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.358941238 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.358177057 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.350682566 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.351051131 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.356974971 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.350405545 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.565401828 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.477637311 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.37270612 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.364502624 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.357280558 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.360620206 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.353981744 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.393157228 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.491606728 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.352116026 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.352629932 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.362964297 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.360273858 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.458867298 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.397480187 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.353718284 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.473962763 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.574286477 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.364019283 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.364680727 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.479563386 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.352970243 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.357975038 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.359388156 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.36093363 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.926722779 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.887880028 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.371306126 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.380534109 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.366718303 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.353652051 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.473833583 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.358924854 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.364809547 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.352090127 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.860613678 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.518251782 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.466076426 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.502862194 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.361697284 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.361041047 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.417222961 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.360110031 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.36229842 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.388950337 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.086104164 seconds)
  done (took 111.740355385 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.402257121 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.840533557 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.521290697 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.375170395 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.191221074 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.093246738 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.354313006 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.61153619 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.39195385 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.352276454 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.620713828 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.83328579 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.35258507 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.403214328 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.841618372 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.3660323 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.354614256 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.226716612 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.354439123 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.358881395 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.756758822 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.368380187 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.353350223 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.395801168 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.39096635 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.784999782 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.662044444 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.835124104 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.354370577 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.352499809 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.794007588 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.355606192 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.367778209 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.355666599 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.612113866 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.677412508 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.654526809 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.357681932 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.367957833 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.35838048 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.376730137 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.783194722 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.665272206 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.35434206 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.354605107 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.787629693 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.354800086 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.362296314 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.356160974 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.560399802 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.128116164 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.355147893 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.666673457 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.354809171 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.696528682 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.436554118 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.418942307 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.81362819 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.354703261 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.511480719 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.371101793 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.357347635 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.357810493 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.355594261 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.358404407 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.670911397 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.739514236 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.359036692 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.672337211 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.78803736 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.355760252 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.858984096 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.181670458 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.36882614 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.417501078 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.359474441 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.00062823 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.817864232 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.384116135 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.35600638 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.657972424 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.359604682 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.619524432 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.36979207 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.357118085 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.770656463 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.37918116 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.392798345 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.357118823 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.359594621 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.125972685 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.357372577 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.608147698 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.389460434 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.356343908 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.357846175 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.376784817 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.358199813 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.373449258 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.363869516 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.859691703 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.361331824 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.47367958 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.3756343 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.356173953 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.35703532 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.354378039 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.349428359 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.568789649 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.867136671 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.354622557 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.346535153 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.34599253 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.349860503 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.345809839 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.347228389 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.621185754 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.348780046 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.346027196 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.350543036 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.12426006 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.362395421 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.354487093 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.35101093 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.184229446 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.554630842 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.365438637 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.348508211 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.349215227 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.368524938 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.599377704 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.351572575 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.410575947 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.349172553 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.023468241 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.356348263 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.367879418 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.776907932 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.357093036 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.24000285 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.370551688 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.348750995 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.644364292 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.606935256 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.655537453 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.349559381 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.362236321 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.033440742 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.351567614 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.495384102 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.365336481 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.362083301 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.545468754 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.634111322 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.351406442 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.904432594 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.352254908 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.566607075 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.35009434 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.659333955 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.812946024 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.349567992 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.355400591 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.028900395 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.997130674 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.137884526 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.351888333 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.612916987 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.318504123 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.788205005 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.350926179 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.349600126 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.925318115 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.351465991 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.356268388 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.350500671 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.351163058 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.4098291 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.523560322 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.92188419 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.355031584 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.78061729 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.400699472 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.351053513 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.37169431 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.354322795 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.703334046 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.350533486 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.35467677 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.392874279 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.350513247 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.350870343 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.790206766 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.208663258 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.354277708 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.504081143 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.957478792 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.353522844 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.352489256 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.035988802 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.550809658 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.87392548 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.380448868 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.634537027 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.354242345 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.39148119 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.118853623 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.356671615 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.794983856 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.35447797 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.349604033 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.929632701 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.35003667 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.446112038 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.345443186 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.344611217 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.853166409 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.34611915 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.341388972 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.598255431 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.339903289 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.589120909 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.335309319 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.372749371 seconds)
  done (took 1114.271657541 seconds)
done (took 1390.173739808 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.32814745 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.329846476 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.312530432 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.332380908 seconds)
  done (took 26.57622648 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.331601324 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.331622298 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.329303059 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.327657218 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.326390867 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.328527117 seconds)
  done (took 9.240760308 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.406209549 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.318853009 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.321605451 seconds)
  done (took 19.309112549 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.526185824 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.512189392 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.65996906 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.343658622 seconds)
  done (took 10.299933774 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.318358277 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.318462538 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.318320137 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.320469449 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.318399689 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.318619745 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.318276733 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.317704165 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.318742082 seconds)
  done (took 13.121344977 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.941586612 seconds)
done (took 84.761614119 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.337596949 seconds)
    (2/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.079559122 seconds)
    (3/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.334326767 seconds)
    (4/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.824202118 seconds)
    (5/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.687312848 seconds)
    (6/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.367386894 seconds)
    (7/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.581918337 seconds)
    (8/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.487389887 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.311293785 seconds)
    (10/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.30981577 seconds)
    (11/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.370174542 seconds)
    (12/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.760537241 seconds)
    (13/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.369736849 seconds)
    (14/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.000677957 seconds)
    (15/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.541332628 seconds)
    (16/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.429118966 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.061508748 seconds)
    (18/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.466941913 seconds)
    (19/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.345912529 seconds)
    (20/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.314980118 seconds)
    (21/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.332241361 seconds)
    (22/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.304865061 seconds)
    (23/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.837876218 seconds)
    (24/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.318045953 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.707913768 seconds)
    (26/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.304881119 seconds)
    (27/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.336682251 seconds)
    (28/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.354995892 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.673498927 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.327591026 seconds)
    (31/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.776783101 seconds)
    (32/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.137249835 seconds)
    (33/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.330678746 seconds)
    (34/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.391828488 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.608323697 seconds)
    (36/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.395513057 seconds)
    (37/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.46366085 seconds)
    (38/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.533328115 seconds)
    (39/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.084960267 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.310853042 seconds)
    (41/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.608924152 seconds)
    (42/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.413374236 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.437732157 seconds)
    (44/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.310655846 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.579235335 seconds)
    (46/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.431420596 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.334801189 seconds)
    (48/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.487801526 seconds)
    (49/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.298612149 seconds)
    (50/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.443715255 seconds)
    (51/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.333697619 seconds)
    (52/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.311799198 seconds)
    (53/309) benchmarking ("sort", BigInt, false)...
    done (took 6.345622866 seconds)
    (54/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.830767677 seconds)
    (55/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.334973003 seconds)
    (56/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.423446439 seconds)
    (57/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.464533798 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.419056142 seconds)
    (59/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.338358969 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.572744031 seconds)
    (61/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.48914162 seconds)
    (62/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.320812231 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.386560827 seconds)
    (64/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.50580096 seconds)
    (65/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.448227282 seconds)
    (66/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.389695693 seconds)
    (67/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.874552528 seconds)
    (68/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.729865099 seconds)
    (69/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.048386101 seconds)
    (70/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.337209028 seconds)
    (71/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.294461492 seconds)
    (72/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.519430363 seconds)
    (73/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.36296549 seconds)
    (74/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.31683188 seconds)
    (75/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.366721921 seconds)
    (76/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.586961919 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.312729541 seconds)
    (78/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.437259028 seconds)
    (79/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.391213151 seconds)
    (80/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.295747405 seconds)
    (81/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.395069364 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.064834379 seconds)
    (83/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.912862172 seconds)
    (84/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.386282681 seconds)
    (85/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.467733826 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.40547567 seconds)
    (87/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.37175066 seconds)
    (88/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.391426523 seconds)
    (89/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.31369624 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.190101806 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.315624243 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.296642685 seconds)
    (93/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.593676439 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.38556765 seconds)
    (95/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.922724576 seconds)
    (96/309) benchmarking ("sort", Int64, false)...
    done (took 5.46920818 seconds)
    (97/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.1208758 seconds)
    (98/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.575045831 seconds)
    (99/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.589037373 seconds)
    (100/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.715722917 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.710137673 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.368237937 seconds)
    (103/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.007896325 seconds)
    (104/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.296550001 seconds)
    (105/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.666425117 seconds)
    (106/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.727339172 seconds)
    (107/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.670344275 seconds)
    (108/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.900074486 seconds)
    (109/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.512429499 seconds)
    (110/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.012514811 seconds)
    (111/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.998422875 seconds)
    (112/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.337135935 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.313942014 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.718982419 seconds)
    (115/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.334230395 seconds)
    (116/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.324379502 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.509809668 seconds)
    (118/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.630071004 seconds)
    (119/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.332437632 seconds)
    (120/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.077683895 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.855897854 seconds)
    (122/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.328944389 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.330428279 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.316372257 seconds)
    (125/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.904929869 seconds)
    (126/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.893246393 seconds)
    (127/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.992434779 seconds)
    (128/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.667364207 seconds)
    (129/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.843796676 seconds)
    (130/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.895406958 seconds)
    (131/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.349794256 seconds)
    (132/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.641379886 seconds)
    (133/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.340738055 seconds)
    (134/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.310223401 seconds)
    (135/309) benchmarking ("sort", Bool, false)...
    done (took 1.816597662 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.337461156 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.58934146 seconds)
    (138/309) benchmarking ("sort", Float64, false)...
    done (took 5.553007959 seconds)
    (139/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.317742815 seconds)
    (140/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.366145302 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.023487615 seconds)
    (142/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.305450263 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.569376594 seconds)
    (144/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.32114871 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.414612964 seconds)
    (146/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.946514871 seconds)
    (147/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.510494422 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.732300581 seconds)
    (149/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.351278626 seconds)
    (150/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.77143596 seconds)
    (151/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.649710322 seconds)
    (152/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.450216747 seconds)
    (153/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.010218519 seconds)
    (154/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.336452259 seconds)
    (155/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.65482546 seconds)
    (156/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.787875563 seconds)
    (157/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.324085361 seconds)
    (158/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.319411103 seconds)
    (159/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.458933748 seconds)
    (160/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.764359897 seconds)
    (161/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.097850974 seconds)
    (162/309) benchmarking ("sort", Int8, false)...
    done (took 4.359229577 seconds)
    (163/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.301713552 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.333369645 seconds)
    (165/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.598027425 seconds)
    (166/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.483003222 seconds)
    (167/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.419140296 seconds)
    (168/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.396684876 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.579359875 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.61852066 seconds)
    (171/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.00331183 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.152187139 seconds)
    (173/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.34347193 seconds)
    (174/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.630019849 seconds)
    (175/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.399301603 seconds)
    (176/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.441193546 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.795380699 seconds)
    (178/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.338884597 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.296131722 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.876881453 seconds)
    (181/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.877482073 seconds)
    (182/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.304421247 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.702549438 seconds)
    (184/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.373609525 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.337733664 seconds)
    (186/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.337190213 seconds)
    (187/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.635022697 seconds)
    (188/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.354078713 seconds)
    (189/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.596793458 seconds)
    (190/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.398275716 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.354786692 seconds)
    (192/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.34053131 seconds)
    (193/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.316364555 seconds)
    (194/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.434739892 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.333346918 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.503031585 seconds)
    (197/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.312713099 seconds)
    (198/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.610263706 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.369602521 seconds)
    (200/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.855894368 seconds)
    (201/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.316845456 seconds)
    (202/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.318606551 seconds)
    (203/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.311526432 seconds)
    (204/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.374251727 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.116280781 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.655676319 seconds)
    (207/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.791746927 seconds)
    (208/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.317835355 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.609352977 seconds)
    (210/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.519953831 seconds)
    (211/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.725540723 seconds)
    (212/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.032396855 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.407894918 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.532450461 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.93946606 seconds)
    (216/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.329215034 seconds)
    (217/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.316485152 seconds)
    (218/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.098321618 seconds)
    (219/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.415068481 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.181769185 seconds)
    (221/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.548820815 seconds)
    (222/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.340156233 seconds)
    (223/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.561895774 seconds)
    (224/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.663535691 seconds)
    (225/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.092953989 seconds)
    (226/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.553508086 seconds)
    (227/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.397174506 seconds)
    (228/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.572738159 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.336137135 seconds)
    (230/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.012979828 seconds)
    (231/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.60656414 seconds)
    (232/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.318442146 seconds)
    (233/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.446417619 seconds)
    (234/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.317819303 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.923771402 seconds)
    (236/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.590273953 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.354677739 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.36260334 seconds)
    (239/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.021055896 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.048792313 seconds)
    (241/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.321790787 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.367465531 seconds)
    (243/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.647891221 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.319192432 seconds)
    (245/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.678595342 seconds)
    (246/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.625953135 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.300292177 seconds)
    (248/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.872599354 seconds)
    (249/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.89273528 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.515587891 seconds)
    (251/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.498756372 seconds)
    (252/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.919635302 seconds)
    (253/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.585400679 seconds)
    (254/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.330949573 seconds)
    (255/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.299518516 seconds)
    (256/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.522510836 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.338604244 seconds)
    (258/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.399350309 seconds)
    (259/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.915471641 seconds)
    (260/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.353437571 seconds)
    (261/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.366457562 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.519274584 seconds)
    (263/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.949164661 seconds)
    (264/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.487148782 seconds)
    (265/309) benchmarking ("sort", Float32, false)...
    done (took 5.299388743 seconds)
    (266/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.339917777 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.125656658 seconds)
    (268/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.049710933 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.326568506 seconds)
    (270/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.346574409 seconds)
    (271/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.31841171 seconds)
    (272/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.433365981 seconds)
    (273/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.694113879 seconds)
    (274/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.798093773 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.664654577 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.401321852 seconds)
    (277/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.420883696 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.115386876 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.18780101 seconds)
    (280/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.302759144 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.883198962 seconds)
    (282/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.666932255 seconds)
    (283/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.320765481 seconds)
    (284/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.784442524 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.414984636 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.396626146 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.42619209 seconds)
    (288/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.919982906 seconds)
    (289/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.474126355 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.011283312 seconds)
    (291/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.509483626 seconds)
    (292/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.332462529 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.322729965 seconds)
    (294/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.103347938 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.931534092 seconds)
    (296/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.319615071 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.358422622 seconds)
    (298/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.538861975 seconds)
    (299/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.124476162 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.182313432 seconds)
    (301/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.341812454 seconds)
    (302/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.331746028 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.416920541 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.340881705 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.329263144 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.688888425 seconds)
    (307/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.343246039 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.321623902 seconds)
    (309/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.149719629 seconds)
  done (took 904.945619126 seconds)
done (took 906.201602886 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.349192128 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344438359 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.327328759 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.348952937 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.440197594 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.35678484 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.338738054 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.329990153 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.375306986 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.376684149 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.325794486 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.355599578 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.328149375 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.326942494 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.328757101 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.342005851 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.256670149 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.328605952 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.343983515 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.337578341 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.343800192 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.327735278 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.377306342 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.356264228 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.331606252 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.330580764 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.331938897 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.348249588 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.440427654 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.332169609 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.33173985 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.340156945 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.257647127 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.326891422 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.32331738 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.347762432 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.340184853 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.339518967 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.332893572 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.360697854 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.62142428 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.328576247 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.330838905 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.330116631 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.329578927 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.333063053 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.331843378 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.336144877 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342715957 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.343241342 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.616842505 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.344518844 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.333031096 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.331149076 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.340890996 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.329613249 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.33320621 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344884093 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.350135543 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.344505649 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.251843209 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.335732876 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.332221864 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.347249891 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.336990119 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.657430788 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.326432744 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.335891818 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.627911604 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.335853458 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.659384322 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.338390936 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.331677565 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.344389091 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.363214016 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.263107731 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.325812746 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.330447642 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.338253925 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.329338857 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.341560141 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.34379552 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.335581069 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.331685406 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.344797713 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.360568145 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.342411595 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.332160217 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.34081656 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.351670829 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.338765409 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.343020545 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.3348732 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.327023707 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.341368683 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.335849725 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.335612805 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.335133529 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.33625769 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.343135239 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.630259681 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.348374216 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.329398609 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.329006036 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.331348712 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.346269168 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.633201397 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.332543628 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.355015435 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.379806936 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.334293581 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.256877537 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.336192092 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.348574229 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.341882361 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.336575303 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.329424914 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.261838761 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.631348416 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.34902661 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.33532009 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.331552869 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.349279272 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.335854525 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.330138955 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.270339286 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.335436437 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.347692817 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.455225891 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.344321043 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.366066413 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.333480507 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.337960561 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.367639912 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.349399089 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.364924266 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.336380083 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.350340238 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.350005385 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.331984398 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.345807245 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.346547092 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.336256226 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.340279453 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.330451375 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.363742532 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.347016086 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.347083898 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.355772206 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.455993585 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.332723103 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.26159398 seconds)
done (took 223.182620102 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.397548915 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.332973028 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.425713622 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.330573229 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.432672566 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.432716361 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.328990153 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.329987643 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.329497999 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.73371554 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.330150927 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.329859888 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.333898087 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.328437499 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.416880606 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.332550072 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.328117677 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.695890743 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.331943637 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.405794997 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.331507477 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.32982911 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.331130234 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.757727601 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.329934449 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.336134623 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.407096806 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.33209161 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.701713791 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.336916816 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.336915697 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.730996132 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.42474086 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.349316535 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.341610736 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.339272435 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.435150924 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.347376295 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.418435994 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.416800232 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.428337886 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.37124365 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.337001848 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.333554228 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.334117193 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.333606346 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.331085298 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.358531857 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.330909913 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.330970698 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.69455961 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.343859599 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.331870364 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.330896342 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.330675735 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.362994199 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.331392014 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.333583973 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.427600321 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.334404609 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.401006355 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.74423723 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.740054647 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.334304948 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.33560914 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.331669168 seconds)
  done (took 148.710231992 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.403172883 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.410216868 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.445434903 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.339893641 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.387121528 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.449771469 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.339703759 seconds)
  done (took 11.045480357 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.344806382 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.335230445 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.387465468 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.388930241 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.335246759 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.485599453 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.335837762 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.350938312 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.333202082 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.392308106 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.335785096 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.335454166 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.342004124 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.332417069 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.387647333 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.350174967 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.454646904 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.340712857 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.335426966 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.496325459 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.33354826 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.342602171 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.391313725 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.351226921 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.336196692 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.345418819 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.905131315 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.335700567 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.333684326 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.335696923 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.33315004 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.377253943 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.336710238 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.334923153 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.333537626 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.455871416 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.337283122 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.333897981 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.335608465 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.338320968 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.336149648 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.336085175 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.33680438 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.33416561 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.335466601 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.364480402 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.335829862 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.337139822 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.336568938 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.33657651 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.391381933 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.337539629 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.334837491 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.334244062 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.39667392 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.343952538 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.337761796 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.335338723 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.336872001 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.334051971 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.497798359 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.389464462 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.337289591 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.389259134 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.337216368 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.337983263 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.338116509 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.337913542 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.396090923 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.338884993 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.389507701 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.33510309 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.496897383 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.365596494 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.339953528 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.344835839 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.345873575 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.338633001 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.338786881 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.347185639 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.336733152 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.343326759 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.347725128 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.335660156 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.336294251 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.444153504 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.451674637 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.336469152 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.355419967 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.348851445 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.335889952 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.394682271 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.339175602 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.336747747 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.395225599 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.457376761 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.397716889 seconds)
  done (took 153.709343506 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.349711171 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.350687638 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.344507452 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.360457117 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.344078747 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.343627077 seconds)
  done (took 9.367878746 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.347142125 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.340258065 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.339667378 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.339466983 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.339475913 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.339506427 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.340263965 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.344834323 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.343629868 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.339860219 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.339833654 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.341719349 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.341803105 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.340341007 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.340563437 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.340106458 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.339703674 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.337665125 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.340807051 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.339864201 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.448613684 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.3399062 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.340414776 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.346033868 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.342734448 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.339842188 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.352881598 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.34174001 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.339853378 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.352294019 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.343109164 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.341101139 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.346807877 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.349675534 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.344187479 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.34673888 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.344842664 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.342736386 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.338573161 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.340963703 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.342487161 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.3417258 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.341127704 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.342550489 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.347420878 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.350294327 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.345610127 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.354388849 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.34227346 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.343956298 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.342172334 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.341918293 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.342884592 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.343184704 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.350108969 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.349492683 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.346116815 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.341926965 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.341414238 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.34688656 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.342793123 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.342360315 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.348035017 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.34494726 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.340083108 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.34428724 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.347897132 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.346101949 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.343247244 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.342947588 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.343298736 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.340741995 seconds)
  done (took 99.102309819 seconds)
done (took 423.203524706 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.515871294 seconds)
  done (took 7.794206514 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.490113481 seconds)
  done (took 7.770075771 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.89355 seconds)
  done (took 20.177240653 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.349870151 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.423725319 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.337021362 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.357567801 seconds)
  done (took 26.744848794 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.520299758 seconds)
  done (took 7.795799394 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.340357047 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.332091719 seconds)
  done (took 13.948725346 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.842030504 seconds)
  done (took 8.11562388 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.192967212 seconds)
  done (took 8.467459184 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.339320978 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.359492649 seconds)
  done (took 13.981315426 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.31561986 seconds)
  done (took 7.589912695 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.027991098 seconds)
  done (took 8.303290426 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.339686134 seconds)
  done (took 7.614298878 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.337795829 seconds)
  done (took 7.610541523 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.686792048 seconds)
  done (took 8.959546334 seconds)
done (took 156.151363263 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.333846569 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.335574836 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.333776844 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.333027046 seconds)
  done (took 26.60771601 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.369929054 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.369444938 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.370640536 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.380537468 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.372763205 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.370143095 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.36464382 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.362218841 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.381576952 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.373229833 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.372136852 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.373749933 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.369297403 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.363001449 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.373233687 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.37271447 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.380964098 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.371157932 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.363677044 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.373064151 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.337388702 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.382283332 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.373580801 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.337755707 seconds)
  done (took 34.132503561 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.541485358 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.413465881 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.495249329 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.393607186 seconds)
  done (took 7.117201592 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.388402939 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.39060604 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.402568197 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.441710042 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.467257852 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.399754045 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.363589251 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.358866416 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.345203401 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.39064417 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.46629875 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.406594102 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.480157298 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.337633383 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.523253815 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.33846351 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.338246153 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.389411132 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.44121702 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.457415834 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.339145449 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.38942287 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.39297038 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.408168615 seconds)
  done (took 34.931283938 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.337568127 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.345307719 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.344050579 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.336631115 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.337217095 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.338395451 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.343920176 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.337950332 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.359170947 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.33911696 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.337226354 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.338242074 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.33680627 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.337657828 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.336939553 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.350962601 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.351827632 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.33857278 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.341305029 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.345524192 seconds)
  done (took 28.110529706 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.336298616 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.189959663 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.687575602 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.592560203 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.337777067 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.336718436 seconds)
  done (took 27.756076444 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.407670939 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.528993922 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.34465312 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.671805996 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.749221286 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.344164799 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.342952424 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.562801497 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.84800233 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.851443291 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.397630496 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.408495167 seconds)
  done (took 19.732954181 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.348752724 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.339481612 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.339547342 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.353436645 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.391715507 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.346870281 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.348566056 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.335167351 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.391914108 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.396668027 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.344398511 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.39205457 seconds)
  done (took 37.605842455 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.416207171 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.372964431 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.163445326 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.12612835 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.705926582 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.538714346 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.097584462 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.775272267 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.331811475 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600848016 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321804591 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431067144 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.581273442 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3320069 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.330078635 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.302332887 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.553087884 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805875457 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330009878 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.154515104 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356218101 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.337064759 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.248498517 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.357924121 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.540023598 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.461637177 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.589147839 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.328998323 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59462243 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.342903751 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339604682 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329408408 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602878078 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963139294 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420666652 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.33894128 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.097910698 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.043273236 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.328283677 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.227478116 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.065324341 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.332720157 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339781366 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328835188 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.263656723 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328692187 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804102401 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.335092685 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.040205311 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.329471241 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.340521008 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424318795 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.333323551 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.147443335 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.411056176 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.330586733 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.328002408 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340601289 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903831169 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.642240272 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.340934355 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.266149718 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.777992339 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.281065491 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940685837 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.431809037 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.334188061 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.333709965 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.264099136 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.230396398 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.348264407 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477227729 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.351721097 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.979949119 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010502345 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.332702284 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.261973011 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869494785 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333494888 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.269181544 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.55871233 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331526087 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.265702954 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.285045179 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.265199319 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992505976 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341784107 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.633253598 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.342707614 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.776577388 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.342396025 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349487571 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354635004 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.554813705 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.215181991 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331354899 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.112085125 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474511148 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35290442 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.783985953 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.266262585 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.335522156 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585605637 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.543302199 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333265591 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.309051785 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.541731078 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3343126 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.350550968 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.341328569 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.344714396 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.904133176 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.347173153 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.646475167 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34905116 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.332956228 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031133235 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.338178926 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.435949966 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.337709188 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.566321437 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.063505295 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33631395 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415620115 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341889748 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.333703066 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.264436765 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.851644341 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.333161636 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.335371809 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337123399 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.345243568 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.334085134 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283059878 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.336611615 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34647607 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.336407576 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.556839486 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345515592 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612669581 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267351257 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.481297585 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.426561729 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.557285972 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.468844829 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.335303658 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592833161 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343633695 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.35073386 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.347413283 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353133199 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432603771 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.356972106 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.335060202 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.605218058 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.33844434 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.339306303 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.281657723 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.337223819 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343437769 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.76405432 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.245675961 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904259157 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315551369 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.341604941 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.224913394 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.349691262 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400340732 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.341360491 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.345154463 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.048050423 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.227281091 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.341366382 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.333369698 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.559180487 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.346316889 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.196041808 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414350573 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.539399063 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.907810366 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.348994093 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.269466417 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.047092742 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.02904513 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336259429 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.27233981 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.335864046 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34571492 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.34718727 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.911912112 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.914905095 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339780285 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.198845313 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.343302774 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.346530796 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.341757426 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.336741778 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.023234562 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.675337919 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.340030555 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.350542047 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480671529 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.350002116 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.271530495 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.340793953 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.342810731 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.337561906 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.337692138 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370137878 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.203976187 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815713919 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593718998 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.099609206 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.348916764 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.291030886 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.369952937 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.337447786 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.15247 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359874881 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.349714159 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345953919 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.34832796 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.206207055 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.008841299 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909003884 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.042649493 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.862613853 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.256888685 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.339372338 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.342018368 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.797100341 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271194823 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.902276046 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.516749029 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.793004108 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2828742 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.545588054 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.475459997 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.059760384 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.348374116 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.566946967 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.256991727 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.153606719 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.364175542 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.55021118 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373885444 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.34194414 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.269731062 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.624762495 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603152723 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.107937219 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.417839434 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.79383264 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.152334458 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.355277664 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.34281708 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.604719124 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.505273124 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.055336691 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.511857878 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.341926854 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.341554427 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.816515929 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.345506673 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.566197395 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962387279 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.341029745 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.549279101 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275631681 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.350615744 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.3503929 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.341875915 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.524623611 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.34864253 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.595113949 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.351595247 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275540929 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.34093695 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88293275 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.196935798 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.346998844 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340835711 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040355578 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.34245645 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610339675 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.353820001 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.016586639 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346830181 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.276048147 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275447694 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.033573093 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.347287909 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320467333 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810196649 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.771632659 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.405017039 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371108278 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.187745593 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.596930752 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.355290751 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.916185579 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.569438793 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.201747509 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365762255 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.442974769 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.202904369 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.342675851 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.343433221 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.577415805 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.248522576 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.565501185 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.180034364 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.263676858 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.346047889 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.554232232 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.343081363 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.35482539 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574097159 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.052556631 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.347293727 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039403415 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367576919 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.352204371 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.258212549 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.792030361 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354859661 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421944706 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.35343309 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.352870458 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.354684904 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509227738 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356337389 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.346033941 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.357172081 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438880452 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.691811485 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.022451345 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.348184838 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922205205 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057618075 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.928661803 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356391239 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.344588434 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346576938 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277653312 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492139549 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.569646822 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618032322 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474985871 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.898125674 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368459105 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.209804942 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.360096536 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.558545736 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619562787 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.239347901 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354479586 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.357807005 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.344403342 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.355895845 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.556024458 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822276351 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8850623 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.462276308 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.352416811 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.799597727 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618522252 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345520598 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344799642 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.935964407 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.356711999 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.619820159 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.350160986 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353455425 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493565715 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.354787601 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987729298 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.354213878 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.501855144 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.118549644 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.230412363 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.600964069 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.763804555 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.35552146 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925452876 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.043791929 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611446556 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.413197725 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357336601 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.455249576 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493760007 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.351923825 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.347086722 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.346710912 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.192114673 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.059011797 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.355576021 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935098745 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611644836 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.343419083 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.351825263 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368872523 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.356283198 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.570644688 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01927423 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57165149 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357039672 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.352238157 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.163434409 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.933262763 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.362245527 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.281086193 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.350598624 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577213708 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.582345053 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36782526 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.800167846 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.058637775 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.888477777 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.32046325 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369478295 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.360298447 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.052326386 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936134294 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.033985754 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82720731 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.908464756 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352256723 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.62534266 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.35325985 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.353330581 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626004571 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.352957584 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.353932117 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.361164422 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.924924391 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.079663578 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.355612756 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.243320789 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.285472603 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.690707021 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.057911925 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284935157 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358267469 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.528419939 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.34972519 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477155016 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360185839 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.356282659 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.354230957 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.108632899 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.633715438 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.35447417 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.346345064 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.25466296 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.357165321 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364833697 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616428097 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349982459 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.025338601 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.702453976 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.60425857 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.362667349 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.337417663 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.354052073 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350399224 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.337154827 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.548379791 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.926439303 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890089998 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.361036481 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.36259427 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.354037222 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.566780079 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561500155 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.354487288 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.362699275 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350680106 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385813727 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.245752416 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.851896655 seconds)
  done (took 1592.430320127 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.386641566 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.366358157 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.373023474 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.416950574 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.356862712 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.375406839 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.373223766 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.37242111 seconds)
  done (took 52.313778583 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.362908199 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.569152913 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.385165175 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.367496823 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.364996351 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.356711553 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.777935805 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.362723266 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.365095741 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.365682749 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.362009701 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.368668538 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.949750885 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.366875144 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.364447194 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.339250405 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.36459703 seconds)
  done (took 65.687819282 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.368955551 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.701956124 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.428378157 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.367231578 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.131748014 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.357413793 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.764174668 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.404323744 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.362211192 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.496870301 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.998767789 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.379128468 seconds)
  done (took 84.05699239 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.365121321 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.365151431 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.364872981 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.364481439 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.364576195 seconds)
  done (took 8.118222803 seconds)
done (took 2019.87510565 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.606440293 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.026756134 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.964828175 seconds)
  done (took 5.286394731 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.506864696 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.555241142 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.676325393 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.680273953 seconds)
  done (took 7.715234996 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.6321486 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.738047674 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.545054933 seconds)
  done (took 6.211025194 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.693462352 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.371960378 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.472977599 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.355942605 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.355499646 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.357278616 seconds)
  done (took 20.365600752 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.358300979 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.362574343 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.360131186 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.361975962 seconds)
  done (took 6.739836289 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.340313106 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.14961476 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.343302205 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.359759368 seconds)
  done (took 18.490221542 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.104598968 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.119036196 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.102935939 seconds)
  done (took 7.623770212 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.364312394 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.202494571 seconds)
  done (took 9.86431169 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.654894154 seconds)
  done (took 2.952943908 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.491669679 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.628612929 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.392934288 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.292733166 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.418675059 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.936201865 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.88510209 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.493821373 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.269673184 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.375029392 seconds)
  done (took 27.482344499 seconds)
done (took 126.171058884 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.955456125 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.360865995 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.569866185 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.973437481 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.584754565 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.570239759 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.567259004 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.939805006 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.438154583 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.429412731 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.930903943 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.589151246 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.518580138 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.602773517 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.517735631 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.732849746 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.588510796 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.997993845 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.613941011 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.813663125 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.572309727 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.568087882 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.761325166 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.588103234 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.587806639 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.522489169 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.160527493 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.736852334 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.786525629 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.180456312 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.523229433 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.986371075 seconds)
  done (took 188.569086919 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.363368787 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.362645091 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.362700233 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.379549911 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.363024091 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.373319006 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.364886924 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.380301131 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.364011966 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.362791286 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.363639629 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.372336579 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.364230593 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.364366748 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.363974221 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.373358432 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.377196778 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.36389356 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.377286844 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.363863264 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.36488991 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.377864311 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.363377417 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.364286642 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.363995714 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.378442975 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.370634104 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.36459602 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.374039015 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.365488025 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.366141375 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.365386204 seconds)
  done (took 205.081866391 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.364550078 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.363950829 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.363233771 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.377812094 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.363458362 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.365988227 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.382775284 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.365183357 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.364496906 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.36477788 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.364808977 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.365325512 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.365486953 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.365824695 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.367128673 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.364781918 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.366622431 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.365887908 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.365062288 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.368918825 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.367327129 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.378009828 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.365119299 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.382922126 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.366443164 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.366230416 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.38664545 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.366001077 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.36566098 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.381951021 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.365969658 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.380203471 seconds)
  done (took 205.111201349 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.555455564 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.369226825 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.370012281 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.300437265 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.369013389 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.368204274 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.364764279 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.558017913 seconds)
  done (took 14.558395781 seconds)
done (took 614.618460881 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.61071478 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.334022107 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.562340004 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.389169572 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.094171613 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.395021395 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.388771078 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.547428667 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.284212227 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.551598156 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.591109518 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.391482811 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.721635467 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.38648769 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.630107439 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.48037792 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.210471404 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.315955951 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.693490804 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.883253407 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.637292813 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.770977209 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.547844079 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.288313799 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.730067958 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.778089866 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.051710923 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.206093333 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.388529733 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.686850638 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.969426309 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.310025944 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.447552003 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.431367083 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.479454222 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.462585276 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.287065373 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.428309855 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.56845398 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.539274321 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.878161338 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.104033901 seconds)
  done (took 91.758645843 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.358718433 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.359606026 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.358000323 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.359468022 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.360158202 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.358815204 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.358918069 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.358437988 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.35980866 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.35915285 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.359056063 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.360392098 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.358789764 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.360664305 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.358703991 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.359262663 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.359762568 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.361597313 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.359852258 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.359387246 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.360356334 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.359536299 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.360107079 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.35933454 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.359701224 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.360574468 seconds)
  done (took 36.654735727 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.376602125 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.601358873 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.772953864 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.382935035 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.37665975 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.381793839 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.449259894 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.373299468 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.380186536 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.380173778 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.528837019 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.375955372 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.409173617 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.782591877 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.381722684 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.373431805 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.374940173 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.378428138 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.609134605 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.387122673 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.452003609 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.375008422 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.450027039 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.388933136 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.381718462 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.379355997 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.382532495 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.873264014 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.380599938 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.530213587 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.109388276 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.450629604 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.828333977 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.786433488 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.109655938 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.377225825 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.374943446 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.535188391 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.38182201 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.378348561 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.45111237 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.378863996 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.784766204 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.995967847 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.392712303 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.373933484 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.889463422 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.532071244 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.606275164 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.384886709 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.802937909 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.381040863 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.375181714 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.378579712 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.605608338 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.384000748 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.377641684 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.899350771 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.384045432 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.450857026 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.375720035 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.378812582 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.615862903 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.380023856 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.60406269 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.380970438 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.385975623 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.37936223 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.786015364 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.381369807 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.012271871 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.394316032 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.37541424 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.531706151 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.606456733 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.921242152 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.382356076 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.622321837 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.840046113 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.449485483 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.383991014 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.860874701 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.454954493 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.384720911 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.377164225 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.37732092 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.376313211 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.41970541 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.449768432 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.936264591 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.004701468 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.918228046 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.454262261 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.392776499 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.380769095 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.901459582 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.377645996 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.376265356 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.782559444 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.014435046 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.397498271 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.387783365 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.001424375 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.400935061 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.453632022 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.387517519 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.794217039 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.381584889 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.421649213 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.376987195 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.387915957 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.384487867 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.453599059 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.384278932 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.377492239 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.988299603 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.55151001 seconds)
  done (took 180.102620137 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.389427572 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.374038012 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.38588408 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.375944984 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.374361131 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.380530958 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.374392259 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.375302735 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.380672264 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.375346439 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.374654198 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.376449742 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.3775233 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.379406971 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.401038061 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.382308377 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.989693296 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.375717666 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.375987409 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.375658753 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.163831891 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.377172148 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.375908401 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.376183688 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.375447209 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.374733995 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.379882121 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.37863315 seconds)
  done (took 153.309487595 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.378753507 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.903878868 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.380096973 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.506406709 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.398012931 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.376849084 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.503850637 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.436768062 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.385547159 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.376526179 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.377063739 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.665104689 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.382487459 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.852759427 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.560226104 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.499357616 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.858042659 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.379797255 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.37691121 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.377348558 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.507392537 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.385343266 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.663775279 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.905687279 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.380267756 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.906305769 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.368379139 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.379718742 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.383664552 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.910288115 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.378343571 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.660909575 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.45593165 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.439351029 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.909700679 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.860713458 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.857511914 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.514857406 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.383634911 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.378125186 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.378432951 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.36791714 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.910279324 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.381075141 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.385490909 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.900326758 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.395377928 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.381551285 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.389106678 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.377359378 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.439422927 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.44051842 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.669434567 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.921287881 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.453607904 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.401274918 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.50653512 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.743720561 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.382904251 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.866005395 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.370103011 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.915464109 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.385062563 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.368673004 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.38093036 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.385544098 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.518804408 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.502827469 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.862149153 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.386677698 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.862350389 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.519569885 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.379499909 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.379350224 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.383241396 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.917902777 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.866600477 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.520866986 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.509979115 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.565293009 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.371212853 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.385481166 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.370410899 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.456752258 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.38096739 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.915256274 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.865710773 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.383173807 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.382662202 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.38295943 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.383096238 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.54915511 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.915985394 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.458991202 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.85261252 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.683618269 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.670401676 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.383957632 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.437561815 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.38157316 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.671546818 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.38405634 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.435831422 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.804474442 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.671447292 seconds)
  done (took 163.176090032 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.612532678 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.482794462 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.466834262 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.493867679 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.893349442 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.935095088 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.549048183 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.504428303 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.485534535 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.618631104 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.462293857 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.47347129 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.557679917 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.456594628 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.072846275 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.450047908 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.468976851 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.517244272 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.486111193 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.383693286 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.992305062 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.664689404 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.546714484 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.406509379 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.476598585 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.138332561 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.914371029 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.875180634 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.544565066 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.55868062 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.880019746 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.451335367 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.284118879 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.025293822 seconds)
  done (took 65.449503117 seconds)
done (took 691.754809305 seconds)
SAVING RESULT...
DONE!
