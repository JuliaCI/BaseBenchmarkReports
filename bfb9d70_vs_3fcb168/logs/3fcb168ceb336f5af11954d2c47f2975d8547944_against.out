cset: moving following pidspec: 23603
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.318008219 seconds)
loading group "string"... done (took 0.596791778 seconds)
loading group "linalg"... done (took 7.273915222 seconds)
loading group "parallel"... done (took 0.172496742 seconds)
loading group "find"... done (took 1.147171267 seconds)
loading group "tuple"... done (took 1.792109492 seconds)
loading group "dates"... done (took 1.234892681 seconds)
loading group "micro"... done (took 0.231062535 seconds)
loading group "io"... done (took 1.02115417 seconds)
loading group "scalar"... done (took 39.730560458 seconds)
loading group "sparse"... done (took 12.76172708 seconds)
loading group "broadcast"... done (took 0.98232768 seconds)
loading group "union"... done (took 13.791512691 seconds)
loading group "simd"... done (took 4.602375926 seconds)
loading group "random"... done (took 9.127851381 seconds)
loading group "problem"... done (took 1.943535988 seconds)
loading group "array"... done (took 21.284641103 seconds)
loading group "misc"... done (took 1.943353592 seconds)
loading group "sort"... done (took 3.213116355 seconds)
loading group "collection"... done (took 17.957935198 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.529459683 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141436085 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.115823186 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.138258431 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.185285256 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13089201 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144641629 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084281927 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.077851148 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.16807248 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137641122 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.475418035 seconds)
done (took 5.18422628 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.203277318 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.085807757 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095719281 seconds)
  done (took 0.98172305 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064573399 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125847061 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.080212302 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067136322 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06616819 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.080568536 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065286283 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064931275 seconds)
  done (took 1.356215245 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07419218 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067718293 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.08505508 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067067573 seconds)
  done (took 1.101181802 seconds)
done (took 4.522392105 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.893253445 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.236546101 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190158901 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.450649644 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.149231164 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.18819541 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.659329472 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.321925673 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.209165052 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099989832 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103454947 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.377253602 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.105939852 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.665253331 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074640973 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105307607 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.15882194 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.418559073 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082200642 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081799229 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103155655 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141031799 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101040174 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076967453 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.166329299 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069189826 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.146545852 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.094277039 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068218254 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.241435178 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188584796 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.679427235 seconds)
  done (took 10.492203857 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099387686 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.115569943 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06853852 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139098258 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.1004759 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.085636099 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.069915493 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083808326 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090690956 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.157949772 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114093143 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105062998 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.082248087 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068733256 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.100359577 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210828117 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108668524 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086385592 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.085980787 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074860447 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120910577 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.081559024 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.09397168 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077212511 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.1506696 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.194002324 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111273901 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.111278588 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068173158 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.07998945 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.131941122 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.140832047 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065369095 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081579406 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.138128054 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.110388647 seconds)
  done (took 4.623443823 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.024173889 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.159195555 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090553679 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151415615 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085016919 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.108238155 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.08267973 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099598358 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.245801263 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.067672499 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.458427633 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.111631579 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127543412 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102708293 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06819694 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.066474799 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.083777448 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.50631308 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.109037647 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.1355008 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10040565 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073799933 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084856527 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.06469301 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065931145 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.082976137 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067585009 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.119619134 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.322908517 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.131430776 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08538432 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.187693723 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.108886516 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067594481 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118194186 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.177508449 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110483117 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.121264129 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066457208 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064816513 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16662107 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090553092 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.06531163 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103803056 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103302835 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118882878 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.082890562 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066662121 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.179927469 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065767299 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099216945 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.869394697 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166343914 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079121477 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066820767 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.286079247 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083324401 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083654686 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06395136 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.24772004 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.151972679 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066645724 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083232012 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065574332 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070282077 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.388527075 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.069765117 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.712028701 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070845312 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078262612 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.086555961 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066808348 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088484737 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071538086 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.100232915 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065896781 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.066718076 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082105411 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065286187 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083411792 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084244166 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.202872451 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082763772 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066831477 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064062384 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081338213 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.084608825 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084771329 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065753545 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110705605 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10025645 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082781679 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.0677596 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.117988685 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067035106 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.098759422 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069913153 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128669833 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081779193 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063963335 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.123995125 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08178964 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099642323 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.088726545 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118041854 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.078383345 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08340442 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.153700841 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064784342 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063780034 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083713003 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064099701 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.082630717 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06815469 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.095321497 seconds)
  done (took 20.840741221 seconds)
done (took 37.788498322 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.29147497 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.093613184 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.092149482 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074075639 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092793952 seconds)
  done (took 1.524972704 seconds)
done (took 2.377128577 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119103477 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117649883 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063276318 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112850468 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062964743 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118114647 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114200833 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080525394 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118399225 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063975819 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112985782 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064249844 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062734809 seconds)
  done (took 2.092500013 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082405665 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08407385 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08572883 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081074215 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07895248 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082005644 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.078546458 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105404388 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079220463 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088294367 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064267697 seconds)
  done (took 1.76039447 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082479183 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083023162 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085732292 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080876058 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079362595 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081122665 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079568102 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103223498 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080387953 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089818788 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06364764 seconds)
  done (took 1.759160172 seconds)
done (took 6.456670243 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07787783 seconds)
  done (took 0.921583988 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.712493679 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.716705799 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082792352 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133505354 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.22218883 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.153482509 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.446225422 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.107986921 seconds)
  done (took 10.591414347 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.102429907 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087746546 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068361993 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.089449926 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071785656 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.088402637 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072437875 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067922292 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087207148 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067828171 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.086046737 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070347247 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086065637 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069288839 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070426949 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085812661 seconds)
  done (took 2.181064335 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093207122 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09305249 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091809726 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075484273 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090245039 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072457192 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092109848 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073869222 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087997164 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072422347 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.091506967 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07519247 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088300775 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065594957 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.091438404 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.076566993 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087252031 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074967701 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.091184657 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075798859 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091386844 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06592945 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088131515 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075187829 seconds)
  done (took 2.937113299 seconds)
done (took 17.481232547 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.132266627 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076610693 seconds)
  done (took 1.059854291 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081895538 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09832674 seconds)
  done (took 1.037872181 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082683957 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.08074657 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08954762 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094505716 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066182894 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082488159 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103506553 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066313636 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080557284 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067418684 seconds)
  done (took 1.670529414 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069919214 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.092683951 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071098118 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097278909 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073466547 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.081463372 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073325438 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084015746 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078463633 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079600812 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072182916 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098984616 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071272283 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101809699 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072307683 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085822111 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.087113904 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067847136 seconds)
  done (took 2.317134686 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066879855 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065952441 seconds)
  done (took 0.991739749 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067993508 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063062007 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082916317 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066153107 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080225749 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062772889 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079835805 seconds)
  done (took 1.362548971 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.403475464 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.107035784 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.260070195 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071935375 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10429779 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.261698895 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084553222 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070339536 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088291726 seconds)
  done (took 2.348467635 seconds)
done (took 11.645732727 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079865309 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084923979 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111535885 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.422665474 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108926511 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065899558 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.131312192 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.225560195 seconds)
done (took 2.090100927 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.124865051 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.611909519 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.400931522 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212202081 seconds)
  done (took 2.089281947 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.374393327 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091687095 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.07627276 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06776204 seconds)
  done (took 1.47746402 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066833172 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068460671 seconds)
  done (took 1.001440375 seconds)
done (took 5.557936332 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067350315 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.0653694 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.10171235 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06258054 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.083818166 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063496759 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062912616 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085062011 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065893792 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062808933 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.083345898 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.068034333 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081517049 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064869888 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06343544 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081839932 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064329139 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063133039 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08414309 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063781117 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064804045 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082792488 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063788899 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062245168 seconds)
  done (took 2.612422847 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08594434 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083245067 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073291381 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088704283 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071522794 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087321811 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072981006 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066154768 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.089064039 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069302395 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086923306 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070538018 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.085301267 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070618715 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084937215 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071015667 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088189577 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069717237 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067825956 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087999475 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071012631 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084839817 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070393229 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089395658 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070740047 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087144253 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068981406 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083435202 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072895254 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086510855 seconds)
  done (took 3.223742791 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072301176 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063383811 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081677585 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070664167 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062763793 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.083292183 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06434436 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080613272 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065481683 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063594295 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082081185 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064645102 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063777007 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08314093 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.0640346 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083640856 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081199448 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063133328 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.081524966 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064612402 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065972868 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081776762 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063491071 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080586572 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065437055 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063146468 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081662431 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065302573 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06392153 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081365141 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067293984 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066130336 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081778107 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069949094 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084373548 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06450909 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067348968 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080187234 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065020018 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062649235 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080971613 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063434946 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063018418 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087157541 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063705785 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083504955 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064569992 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064519985 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081668434 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066462779 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079029268 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064161956 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065310177 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081439013 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069148372 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062609155 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.081963507 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063700665 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081275074 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064404827 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063028127 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080387603 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066815355 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063481822 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095845207 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070248343 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079378254 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066370007 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06415501 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082818361 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065839833 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077454856 seconds)
  done (took 6.038791666 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118348432 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091240551 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083944621 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065431009 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07915999 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065615197 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067538408 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081206314 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06528389 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086186966 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064565301 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064933334 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084258897 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076133078 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081282101 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065877292 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085898517 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062677037 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063473436 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085803947 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064222561 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084106829 seconds)
  done (took 2.560931816 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.189778631 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087651017 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109533792 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.092568142 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066790541 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091260571 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069199657 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087688629 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070156209 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085742294 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06756895 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086893613 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068205945 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084925111 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068311179 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085639163 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071038213 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085086706 seconds)
  done (took 2.442146122 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078426177 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065321969 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10714563 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065834972 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084627574 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068042217 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089375901 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074415868 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086339223 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065918423 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092452159 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069027444 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.085308062 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067262705 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068231488 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083912523 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068133729 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083510914 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074745392 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088022339 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070917832 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092109823 seconds)
  done (took 2.604106315 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081680076 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06697286 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.10182953 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085240966 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06362961 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064591063 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090306612 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066279209 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089279345 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068378758 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065788666 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082820283 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069993178 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083869847 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071229993 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083871595 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0682668 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065475616 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086206992 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061699477 seconds)
  done (took 2.393349488 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08804495 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08429045 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067968354 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092967035 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067751478 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084411943 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077188928 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.08498861 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06778347 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.10906641 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06752173 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084946446 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076308279 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.09022545 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068364291 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093689995 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07512186 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093678694 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066805482 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085446217 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109165551 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.173995036 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092698494 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067948785 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083930853 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068878994 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067446078 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090245595 seconds)
  done (took 3.261948793 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066900274 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065506788 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08102399 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064889414 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063077543 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081336924 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064988015 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063299422 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08435497 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063661572 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065442084 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.084068934 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066141077 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082555219 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067452383 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066265642 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083926222 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064579778 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063414452 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081462347 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067092744 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065212225 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083969315 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064148799 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062966475 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.083999999 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063825225 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080757709 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067537236 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063535859 seconds)
  done (took 3.007334549 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077263589 seconds)
    (2/2) benchmarking "in"...
    done (took 0.09039521 seconds)
  done (took 1.052416053 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064661682 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079414519 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082361517 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06968092 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088464242 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066791486 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.091346097 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071656674 seconds)
  done (took 1.496762904 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082573816 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076740699 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086294483 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077743975 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095157804 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082524587 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155571292 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085844931 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073363452 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08224862 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081057739 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065754156 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091397136 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067328109 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090357109 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073653793 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063736838 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090026948 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068713521 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082659779 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068495244 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091666573 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069881266 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062634848 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086735308 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.074758981 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095187541 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067226275 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087254356 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074871634 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070871578 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078677361 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066243027 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.084434546 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065632435 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.092996214 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082719801 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08583314 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076458075 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066974432 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094216938 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061041517 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089313961 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072591356 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093546026 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067546097 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065997345 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.080162733 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063736613 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.08621863 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062342001 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066341516 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.07955023 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07409369 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087191142 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076702771 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067247402 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.08616795 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069809624 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087783941 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073545124 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.084630642 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069494286 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065888841 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094157361 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070739251 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093271741 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061868126 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060181982 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083494215 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075179481 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10655821 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071837974 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085014541 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067940126 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.08073081 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070496103 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066754445 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090012703 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073118082 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084081723 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072901105 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090419986 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067742098 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068236603 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092594376 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064555616 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086080315 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064276749 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101132512 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064932772 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064080297 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082591767 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076004071 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087956147 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066856851 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06307093 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091668643 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061130399 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.084970914 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067464898 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083371998 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077460313 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087701667 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073112885 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.091366501 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075478391 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065853837 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087672975 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.0632189 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084768882 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067170375 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072568618 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.078908357 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070130554 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085224475 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.0681848 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074074394 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.083312047 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066764915 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091827331 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072541774 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081675056 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064255043 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068848323 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084283339 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0698488 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091577402 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06606123 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061155334 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.080125187 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069287898 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084512424 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071190801 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087952625 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071309769 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060626405 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082804358 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071404468 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093211884 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067578638 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067751066 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.091279751 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067783465 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083872387 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073237674 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.085667973 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067085811 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071701541 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085802206 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062717965 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087590608 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070128989 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06468848 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089040196 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069878463 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086928436 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067683949 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064611195 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.090294157 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067080855 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083809809 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066341677 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064517426 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095857815 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067349546 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080143923 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063486689 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091510173 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065463328 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065603909 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083708975 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069381255 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084503529 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065326423 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06534649 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086677316 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076453777 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089162171 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067779007 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090308318 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077372887 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083032597 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069969058 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066081217 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085635002 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067540036 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092728336 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071599762 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088673977 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069919986 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062191794 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090256727 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073343074 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083346801 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065267709 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06522665 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088664172 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071811234 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088094872 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067967806 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08176081 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068274063 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069271348 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08744329 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066106002 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083189328 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072293708 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065299554 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.091830706 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066363363 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094792498 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069045003 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080276728 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071405212 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081080817 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074156988 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061329138 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08253869 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066642211 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066502755 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084361711 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069319508 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078916169 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073862389 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090505706 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067616434 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066000709 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085217572 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073701151 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.084438253 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071373992 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.06979802 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090794652 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076551387 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083637861 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070606688 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.093959081 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068028151 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060066518 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.08997572 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065370281 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083809537 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066790967 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06406873 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087588414 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075771251 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091848211 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060994032 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067347065 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084388332 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06564488 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.07995934 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071675093 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068296457 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.085762232 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073181099 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085806856 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067667074 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087798217 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067288553 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066947374 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086245507 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068790707 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085463748 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069760011 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065664384 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088447408 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065432879 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082118164 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070468741 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066804733 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085782474 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071425298 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083994243 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067197283 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068476746 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086355019 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067769926 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085423758 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066448037 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069435381 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086998907 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06706998 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.086878358 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062919462 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07340378 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.085390637 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073677868 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.084957499 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064054288 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070166444 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.088485831 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070717753 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086412901 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067070076 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085429321 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066881586 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068721349 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091830847 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064268444 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09547881 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074406669 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085269576 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069497906 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066482788 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08682493 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065972763 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084872683 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068146558 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.06639516 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085265604 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070807619 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086675088 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067088098 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068439496 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.085934164 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067160979 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085518977 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06186543 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065046306 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085285173 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066008415 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094281689 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068376721 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065811485 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.084769686 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067420986 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.083972961 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063728128 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092163886 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075935656 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08436613 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07448749 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064910667 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08707683 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076585379 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079472806 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065235739 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063939407 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.083425568 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073078028 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085233515 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075776702 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065700544 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.084799455 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063285082 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085193187 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066261235 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060206216 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.083149202 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069816838 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.083541564 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067239423 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066447788 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088445613 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067532989 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09437773 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065180888 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066996416 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086042486 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063326386 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08350414 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066410545 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068858416 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.0864288 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06455957 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.081671148 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067435532 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066223347 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086517749 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066225148 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085815548 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074016965 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065577976 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088518726 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070291171 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.082765821 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069106899 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.065934047 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.0856666 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065870632 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089839425 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071098235 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086280948 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077624678 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066238225 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087550393 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067663308 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084182054 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068301517 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067682684 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087993931 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067369883 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.088327142 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077411099 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065350045 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090286349 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067430793 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08710656 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075372269 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067930066 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.091404753 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073430418 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086895929 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06892984 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092386898 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071169423 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087983213 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068933033 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068120513 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091339759 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065153993 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.090324069 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067598917 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06663787 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.087284447 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064379651 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084603561 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067644336 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065567832 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.091963498 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067102365 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.08447885 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067638278 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064125431 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.086612023 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070115226 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093014394 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069180899 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068825603 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.081989855 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064335816 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086480784 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065001615 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.066993113 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.088836235 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071803524 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.087633023 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067283682 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064634184 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094076088 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.0717922 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.08979459 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064541865 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.088331417 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068017523 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068635441 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086634305 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067186276 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086438559 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071098888 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067998163 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085030111 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07297854 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.089005717 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068181216 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067408206 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087515711 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066647673 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080474406 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068229194 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06767688 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091152153 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068311397 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085786688 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076701848 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082276295 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06778672 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069754496 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084809196 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070630275 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079962339 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068312292 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066517709 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086528445 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061514647 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08391434 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064830923 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068459454 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084493443 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062288434 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095081355 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076276982 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.08781959 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067003888 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065082809 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080976759 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062031034 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066110241 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087049245 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068317556 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095644592 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066022906 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084346469 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06320068 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066735749 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088866989 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069485995 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081472551 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063658131 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066104516 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088828567 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072885334 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064616989 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085626322 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06884108 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.087872852 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065189599 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087473963 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064383646 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07034002 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098658313 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066924422 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086233373 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072623953 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092192443 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068544721 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061486317 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086120846 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.0689303 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085536056 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068981405 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067197098 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100988825 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069616997 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.084723825 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065648637 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.087300994 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066879677 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073648564 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087439096 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067139967 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089386734 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068978436 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093762712 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069664387 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092545728 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070329738 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068621839 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.084912359 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067198192 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082807973 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066158441 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066982839 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086898103 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07140907 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.09318001 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066632474 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095632936 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075470567 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.086090226 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064734579 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06534023 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084906429 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062678155 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067006734 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084330624 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065335168 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083008422 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065973211 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067687595 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09130024 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068844488 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086088736 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067889058 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061259247 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.088003092 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068919993 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086045589 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065679456 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066633992 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086660959 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.07099487 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088486888 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06525284 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067766419 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087817741 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067268192 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080006134 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074030965 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065174924 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.088157384 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066191675 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065956712 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.087521169 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069425928 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.090841871 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067685964 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.08756832 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075728889 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086525509 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064864529 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06456261 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090732197 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065444186 seconds)
  done (took 46.35408268 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10798875 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0830821 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062225037 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080628269 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075100106 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082274367 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062499964 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062523668 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085205884 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065624884 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080668107 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062160397 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.089224609 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086679801 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093597152 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066012513 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082672886 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06311968 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080281162 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062911315 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08965796 seconds)
  done (took 2.554599594 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076457528 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.090108654 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073420181 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.096154454 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067436411 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090791395 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072197236 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089776304 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094468938 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068328917 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.095073925 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071106443 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.085920209 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068224048 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085219037 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071860034 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.095335903 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068592205 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.089347975 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073406629 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089519267 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072715766 seconds)
  done (took 2.711549748 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067378815 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065291162 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08592033 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061579674 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064824864 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.080718831 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069862648 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.082292702 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070205912 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064699219 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084371233 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065722403 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.093047197 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063387883 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065838089 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082505359 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.131153773 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069736972 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064549028 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.087006947 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061455772 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087870899 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061779068 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061474865 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.084246903 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069993398 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.085637591 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064682388 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065392371 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084483566 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066270208 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081487704 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068756778 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065472784 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083903424 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065801146 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065077615 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085640981 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061237824 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.082012278 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067797413 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061801901 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086155186 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068166168 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.062902871 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.08325975 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067856626 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.084649117 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062377671 seconds)
  done (took 4.549480826 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.084273379 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.13002751 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088333768 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088476184 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.101615468 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094010207 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069711795 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.11263038 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064134693 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084792582 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082168014 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103027452 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085352798 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070942317 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.091339401 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066833124 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066652629 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.085061935 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069011199 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085479312 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069421415 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093217228 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100086741 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08080426 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089871189 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06510816 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.083937743 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071726584 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098978336 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070579378 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.089615993 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071699743 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.100419972 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071454516 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08567467 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068090419 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.101696281 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083581843 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069314719 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064188785 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087418513 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070182588 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092123557 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082304123 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086307678 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070883096 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086149487 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062791352 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.098859885 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067865447 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.09436857 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.099614471 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069618242 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084644948 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071435994 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.100656589 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066599561 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.08313025 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069645563 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097794695 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064076186 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088709272 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081139215 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.086323076 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073459885 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.101010087 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071108136 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08937701 seconds)
  done (took 6.704223798 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075482418 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092071572 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080794788 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100585876 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091689955 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073973662 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.091336405 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072988852 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.091823253 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077315496 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.091988269 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11123698 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068013343 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093915673 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072675723 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092618064 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072119133 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.09304589 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072577265 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093015464 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.091437372 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081048681 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091511626 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.099746577 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103256061 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087216706 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073193312 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.091773298 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080602718 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.092806337 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102919301 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072926647 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09176309 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.098022973 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085813276 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091401798 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065072682 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091287863 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.073042137 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092153344 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06729255 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100630896 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0709865 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.087725262 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072372939 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091324446 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.099566931 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.085324057 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.094824963 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096572302 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073236514 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101251628 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07198782 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092401393 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100429886 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105960124 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101073707 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099912553 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071911757 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100453611 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100080604 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.105323468 seconds)
  done (took 6.393182998 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088061047 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09524695 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.095398613 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062846244 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063660478 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090441649 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064189103 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.082911783 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075400475 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093893613 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077374926 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089544995 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073352819 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097352567 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08845064 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073519514 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088941248 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070110209 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.093546047 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069926956 seconds)
  done (took 2.57242999 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075979528 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101893492 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067999234 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070884722 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08968441 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071723699 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088860326 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069017512 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086572294 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069832485 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095723332 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077346536 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086307586 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072391179 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.095513896 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071869404 seconds)
  done (took 2.234450161 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.079501012 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.096607295 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080059425 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086939994 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064078432 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.082733027 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067212899 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061927743 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08296567 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080813927 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088052932 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069083943 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.085503682 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064901748 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06292431 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.089894212 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062957947 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084676172 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066469845 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.100537175 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077541245 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.084001599 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068374266 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067216074 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.087324977 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070862279 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.086249511 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064338067 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08453173 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067279162 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.086004026 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074330592 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.082282232 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066978649 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064991253 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084235863 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065865776 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086261534 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069682873 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06539569 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084409147 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066141582 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086398338 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068324262 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081151621 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068793149 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062640462 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092334457 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064155248 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086358813 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067021457 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087162018 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068539279 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076864763 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090008833 seconds)
  done (took 5.157602709 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080763352 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06875385 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08282488 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06443716 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089220573 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069115822 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069156031 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088853348 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067498225 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.08414247 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069809651 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088428389 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069942232 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070532351 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088123603 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069650784 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081710988 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069004867 seconds)
  done (took 2.319163924 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073411067 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066002057 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094112024 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067166632 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085519602 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069862517 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062466896 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085477404 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064964513 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085306843 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067530989 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068193712 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0850363 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068739643 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085511782 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067847945 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068197981 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084781182 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066339783 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081102223 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069981746 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064837549 seconds)
  done (took 2.58161151 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.0733749 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092374143 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.162829519 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.107816382 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082418914 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.100028302 seconds)
  done (took 1.568772618 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091344144 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099000625 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067142349 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106554034 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075103721 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087764465 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069143546 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086969602 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078050944 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102305599 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067783642 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097215098 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095969235 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078525356 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094930217 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074087601 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088591254 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068691422 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087054327 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106206003 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070237424 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095752743 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069200055 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087671636 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069960877 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096657801 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076304451 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103276029 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08751425 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078053632 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094704645 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068109526 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097585093 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100207093 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071122211 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096236152 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069668918 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106029713 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073676616 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097195391 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069316791 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094108871 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095975876 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073973117 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097129475 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067750057 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092568241 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068345389 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088462581 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112297521 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073288524 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09693582 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093170081 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077721253 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097009104 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113042909 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082354648 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096808112 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093286904 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082993747 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097761768 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073999189 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096246436 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101978153 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073866872 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096811937 seconds)
  done (took 6.690849208 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085623759 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106652592 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069056695 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102227456 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096254785 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068961045 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088192739 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069992914 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087646113 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069413612 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129307546 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068764139 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097350882 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097018213 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068912446 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088483548 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069140693 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096500071 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068255849 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112563722 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087219036 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077729154 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096778293 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095397007 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08275407 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093680781 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068383773 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088814772 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067912323 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089271046 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073299503 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089090485 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095898715 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06892822 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096926614 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069957916 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088158271 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074026018 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088999697 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074544772 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097670721 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105400614 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069338202 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088955899 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081502875 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089304765 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067902839 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088425769 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068117964 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08886633 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080951294 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103311076 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102386509 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096384926 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071174429 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087765083 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070105642 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087175399 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069360524 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093455026 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077978834 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089188088 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113397853 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069403059 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088100893 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076310433 seconds)
  done (took 6.584936805 seconds)
done (took 130.536629046 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.201921306 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185736067 seconds)
  done (took 1.340034127 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069456405 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095246363 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099016337 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128247512 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088131987 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099937088 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.118638435 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079274445 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066151637 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086722286 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066904489 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087401472 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13241232 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067452827 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086733096 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068480087 seconds)
  done (took 2.398510126 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.103309269 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.195988521 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109427309 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065552525 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099749973 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077931499 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.085475117 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077022643 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.094197226 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066079113 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077500473 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095993605 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064735382 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096529367 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074165222 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.098537039 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.0655441 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099158386 seconds)
  done (took 2.608606785 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103747307 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142683347 seconds)
  done (took 1.205550112 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.200163368 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.128677915 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206273051 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.41779013 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.207874522 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.280418425 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.175875829 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.175421291 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.159060305 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.17294144 seconds)
  done (took 3.081146517 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10014078 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169340192 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.311304293 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.136646134 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.085983307 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11631381 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138308186 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.088624222 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.10139313 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100873956 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080627099 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097375993 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09631726 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095361978 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073723014 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097687343 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121243884 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074879116 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075615209 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.096790132 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117361177 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067723823 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074313167 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094185533 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077531417 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.098565043 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066074169 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085920279 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075244781 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094748264 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077846943 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11439316 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097641465 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.131804089 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.080589305 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.130233644 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097872176 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072458998 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095518085 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072122289 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097423029 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07636836 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104120772 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076614102 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.086896572 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077154225 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085700157 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066399985 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098951546 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.077493876 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099436782 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078410093 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.130499252 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.097288091 seconds)
  done (took 6.291644556 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.745345907 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.108944457 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093523985 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.805195363 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086827933 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104589045 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.704717813 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115934203 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.206732188 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.758516367 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087645672 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095785223 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.179289005 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.212466338 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.989202509 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.28642354 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.633041175 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10246355 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107370564 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.12967265 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.137170862 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.174257459 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.149328259 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.439405496 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074627628 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090595184 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.136070568 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073395329 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.137109432 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.103418855 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071525921 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171656323 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.225796249 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.15412614 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.095400928 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069076317 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088959206 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.145952022 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.217437971 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.188173343 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.155643276 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06756119 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067950906 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.158544392 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129152194 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067845799 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.137913878 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.150038605 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.143943435 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093742868 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.073244233 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.159160424 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.136825658 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.141445176 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099031987 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.271673812 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.281710739 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069204489 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118147933 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.102439093 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.215157473 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103119856 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.17575882 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137994097 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.185467047 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068877869 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775257659 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.145708411 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089224977 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075163568 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11768938 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072651884 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.15635073 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.124580603 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.367133503 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.139308211 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093280807 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070639278 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224449332 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083932137 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089282492 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.140057168 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075230724 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120385188 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141864426 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139195136 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.16539141 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.211831711 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.140803 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.137451878 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093329816 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12156039 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.076462682 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.188113404 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189497441 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.138258154 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.186075593 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136858723 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.138386611 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.165435066 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075763106 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.148513503 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.116648069 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097551497 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135680646 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.167188886 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.122446752 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102437645 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072673486 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.135797979 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.123534634 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106317244 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.138666455 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.146086281 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.480387776 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.145864254 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068119522 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10498652 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138621802 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.139722398 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073455449 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.231744384 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120656031 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.145190713 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119419916 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067001688 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.117674252 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.138165478 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098326021 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119119989 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136355759 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075211185 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.231656051 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.167816651 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095242478 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.193532028 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.15920683 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072786319 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.145547346 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.117081555 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.143651641 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097450491 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136522806 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094445913 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.752003787 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139744086 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119610508 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092877572 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.173980064 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070982054 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081172817 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103802719 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066858774 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.749797088 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.104594479 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079237271 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102048865 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072895725 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118938429 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134382496 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093344161 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.137981664 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.198042848 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07500402 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117361267 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081580071 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158836824 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075680474 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.103549934 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08274389 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103296022 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120176564 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072490205 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103643129 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.145125796 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.138490514 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.189258506 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.539862805 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089238002 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082449608 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.197238242 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07015584 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.261076008 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134103908 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.195087928 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.138665616 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078645882 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.277296772 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.140900652 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.174490631 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104490414 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150568838 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068066331 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.134534715 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.139626021 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090625778 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073550296 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.139135423 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.162256855 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.139687317 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.93356336 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071099437 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.202526982 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067763577 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.168154433 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076179925 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095277162 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.246011217 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090428034 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145625922 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.140285273 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071849551 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103372867 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.701969328 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103918786 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136777321 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.094101202 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.168948664 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.139063671 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.155123865 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135791143 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074505907 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.136036581 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.184318184 seconds)
  done (took 40.16119685 seconds)
done (took 58.047232788 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.256619581 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177238432 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.241667377 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.143275162 seconds)
  done (took 1.874730393 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.14364164 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103922863 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.117351267 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.085257571 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103248031 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086711952 seconds)
  done (took 1.623292996 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.401812965 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.261922527 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.228116002 seconds)
  done (took 1.875572759 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.281156121 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.211940741 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.447962728 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.297341733 seconds)
  done (took 2.329424192 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.17340341 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.112924626 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066551532 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.106602956 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.15851334 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.252165789 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.126049228 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.184676887 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079255951 seconds)
  done (took 2.293071468 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.195270056 seconds)
done (took 11.178196082 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.101924155 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.171369386 seconds)
    (3/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.082639463 seconds)
    (4/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.113120602 seconds)
    (5/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.201852231 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081936047 seconds)
    (7/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.205868519 seconds)
    (8/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.190678113 seconds)
    (9/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.191085911 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.101340616 seconds)
    (11/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.133373909 seconds)
    (12/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072514345 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073015962 seconds)
    (14/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.203385519 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.147120341 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.148107383 seconds)
    (17/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.175635717 seconds)
    (18/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.071282324 seconds)
    (19/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.212595771 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.145682852 seconds)
    (21/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.227644655 seconds)
    (22/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.184611047 seconds)
    (23/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.104346371 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.160634353 seconds)
    (25/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.09841531 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.182894675 seconds)
    (27/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073593621 seconds)
    (28/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.220143715 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.117715455 seconds)
    (30/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.218625072 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072424834 seconds)
    (32/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.097355894 seconds)
    (33/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.167306997 seconds)
    (34/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.095426189 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.243122335 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.116482215 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.094461113 seconds)
    (38/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.156947012 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140529859 seconds)
    (40/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095828038 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.165295879 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090963003 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094042644 seconds)
    (44/309) benchmarking ("sort", Float64, false)...
    done (took 0.126141849 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.113361833 seconds)
    (46/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.133241158 seconds)
    (47/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077624905 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05062231 seconds)
    (49/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.18783649 seconds)
    (50/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.14109076 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.095418808 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.127514667 seconds)
    (53/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.164807029 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067941918 seconds)
    (55/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.105229892 seconds)
    (56/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.124475631 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.131698887 seconds)
    (58/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052914165 seconds)
    (59/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077598558 seconds)
    (60/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.073065355 seconds)
    (61/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074123108 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.122527317 seconds)
    (63/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.136931686 seconds)
    (64/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.075032241 seconds)
    (65/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07316467 seconds)
    (66/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.119493466 seconds)
    (67/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.146733725 seconds)
    (68/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.104345732 seconds)
    (69/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.170215072 seconds)
    (70/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.109075859 seconds)
    (71/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072683844 seconds)
    (72/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.223324408 seconds)
    (73/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.11313717 seconds)
    (74/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052200069 seconds)
    (75/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.05241739 seconds)
    (76/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.083580293 seconds)
    (77/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065503929 seconds)
    (78/309) benchmarking ("sort", Float32, false)...
    done (took 0.148151237 seconds)
    (79/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.149432766 seconds)
    (80/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.190988422 seconds)
    (81/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092109854 seconds)
    (82/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052685599 seconds)
    (83/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051148673 seconds)
    (84/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072871427 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.088230449 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.066616032 seconds)
    (87/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050120848 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.088636305 seconds)
    (89/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079007166 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.08683853 seconds)
    (91/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076651738 seconds)
    (92/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.122906735 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.097712925 seconds)
    (94/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.157399545 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.095858136 seconds)
    (96/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.095366045 seconds)
    (97/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.07279287 seconds)
    (98/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.100580032 seconds)
    (99/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.144196251 seconds)
    (100/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.098665078 seconds)
    (101/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.166649845 seconds)
    (102/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.136296914 seconds)
    (103/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.060913513 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.126551058 seconds)
    (105/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074744058 seconds)
    (106/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.17028144 seconds)
    (107/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.092867473 seconds)
    (108/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.05300578 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.188356915 seconds)
    (110/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074033594 seconds)
    (111/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075100016 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.120124982 seconds)
    (113/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072175124 seconds)
    (114/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.07260796 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.12854535 seconds)
    (116/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.072297193 seconds)
    (117/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.167865399 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.115602951 seconds)
    (119/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073697116 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.118073673 seconds)
    (121/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.178371327 seconds)
    (122/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.141815848 seconds)
    (123/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.157762762 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14566372 seconds)
    (125/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.135729094 seconds)
    (126/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092131913 seconds)
    (127/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.099774651 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067309556 seconds)
    (129/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.096776527 seconds)
    (130/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066532228 seconds)
    (131/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.053555521 seconds)
    (132/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093256299 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052494545 seconds)
    (134/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.18848289 seconds)
    (135/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065709057 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 0.158256058 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074055387 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.136633349 seconds)
    (139/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.167417745 seconds)
    (140/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.085423982 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07324991 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092730918 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094821433 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072173118 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.098420217 seconds)
    (146/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.168255157 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09317383 seconds)
    (148/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.065209551 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.096211544 seconds)
    (150/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079746477 seconds)
    (151/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.096707522 seconds)
    (152/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.19350244 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.147273739 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.087593974 seconds)
    (155/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.132731061 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.095179454 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094505861 seconds)
    (158/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.178223691 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.098920917 seconds)
    (160/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095382908 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073785276 seconds)
    (162/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.091968666 seconds)
    (163/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071667667 seconds)
    (164/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051443529 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.088063163 seconds)
    (166/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.099647978 seconds)
    (167/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.112437742 seconds)
    (168/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.052350265 seconds)
    (169/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.157736366 seconds)
    (170/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068874186 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.200339165 seconds)
    (172/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062954204 seconds)
    (173/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060785611 seconds)
    (174/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.098518214 seconds)
    (175/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.0739821 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065477741 seconds)
    (177/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.09028396 seconds)
    (178/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065139037 seconds)
    (179/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.101358288 seconds)
    (180/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061658563 seconds)
    (181/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076815301 seconds)
    (182/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.112078428 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072923819 seconds)
    (184/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.07654606 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089490006 seconds)
    (186/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050912868 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.122075905 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.076536789 seconds)
    (189/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.074849709 seconds)
    (190/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067613933 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.156175811 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088150934 seconds)
    (193/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.096037104 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072953992 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.198221168 seconds)
    (196/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.133865264 seconds)
    (197/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.083908378 seconds)
    (198/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082357972 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097337037 seconds)
    (200/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053088207 seconds)
    (201/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071113341 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.088075504 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.112877517 seconds)
    (204/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.298226591 seconds)
    (205/309) benchmarking ("sort", Int8, false)...
    done (took 0.164819963 seconds)
    (206/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082181191 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066622182 seconds)
    (208/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.075698591 seconds)
    (209/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.157279913 seconds)
    (210/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068548326 seconds)
    (211/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075970664 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.101706319 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073556845 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.163813463 seconds)
    (215/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072014391 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.112485558 seconds)
    (217/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070051869 seconds)
    (218/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.194256453 seconds)
    (219/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051558669 seconds)
    (220/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065756127 seconds)
    (221/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.075501394 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065807936 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070471964 seconds)
    (224/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.073740042 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066193072 seconds)
    (226/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.051520794 seconds)
    (227/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.090769619 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065161781 seconds)
    (229/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050266921 seconds)
    (230/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.092119096 seconds)
    (231/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075054706 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.118276819 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086831894 seconds)
    (234/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.096039275 seconds)
    (235/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.052262323 seconds)
    (236/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050734071 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.161599892 seconds)
    (238/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052814241 seconds)
    (239/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050134277 seconds)
    (240/309) benchmarking ("sort", BigInt, false)...
    done (took 0.20512936 seconds)
    (241/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.090653299 seconds)
    (242/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07270869 seconds)
    (243/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.086880461 seconds)
    (244/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.07306798 seconds)
    (245/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061693873 seconds)
    (246/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094271379 seconds)
    (247/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067869544 seconds)
    (248/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067032454 seconds)
    (249/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.16050468 seconds)
    (250/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.103350038 seconds)
    (251/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.069172434 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065622068 seconds)
    (253/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.073581828 seconds)
    (254/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066940451 seconds)
    (255/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071252264 seconds)
    (256/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.090410925 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066310714 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06544241 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.086892546 seconds)
    (260/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089608498 seconds)
    (261/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089917816 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095717102 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071545904 seconds)
    (264/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.073429176 seconds)
    (265/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053143433 seconds)
    (266/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050882349 seconds)
    (267/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052304019 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.111590355 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073656097 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.110693321 seconds)
    (271/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.069445101 seconds)
    (272/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.09051356 seconds)
    (273/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.104248225 seconds)
    (274/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060133516 seconds)
    (275/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.089317826 seconds)
    (276/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053914329 seconds)
    (277/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.06705201 seconds)
    (278/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091541381 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127329922 seconds)
    (280/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.089285879 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065608236 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.143126522 seconds)
    (283/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.05140967 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064445304 seconds)
    (285/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.07569591 seconds)
    (286/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052495958 seconds)
    (287/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052576464 seconds)
    (288/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.074890305 seconds)
    (289/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052246239 seconds)
    (290/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065711479 seconds)
    (291/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.073805393 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073932293 seconds)
    (293/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062260053 seconds)
    (294/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086566615 seconds)
    (295/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065641246 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063561965 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.09528251 seconds)
    (298/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064252467 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06492469 seconds)
    (300/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.192070543 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092117485 seconds)
    (302/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.054599196 seconds)
    (303/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05204872 seconds)
    (304/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.050607254 seconds)
    (305/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.074944026 seconds)
    (306/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067092273 seconds)
    (307/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.050779865 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.094187316 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.131313961 seconds)
  done (took 32.991856836 seconds)
done (took 33.99041914 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082107982 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115747442 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074892174 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116680692 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080274781 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101583641 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073188654 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.1000888 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080654921 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.103342262 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080189023 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053847046 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097714751 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074872886 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097218657 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091907208 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.100716834 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073727023 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.094730038 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066235286 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074251322 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.088450801 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067861053 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.055650473 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099650619 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073003469 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.094322171 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075562797 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065144755 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.08813445 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069142273 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.071472591 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.088056385 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078284195 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.09391831 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073799151 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095909655 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077865525 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067083373 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087804471 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073879219 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064670805 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.095146888 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072869081 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.092638506 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072143329 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073602042 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.101644824 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090273067 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09066571 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073818121 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.09840063 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077433963 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070400116 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.092395614 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07358724 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.093318009 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091996313 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.096052447 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068897564 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072329536 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.096784711 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07056038 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.096100271 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074992415 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074221573 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099747562 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071521185 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097790157 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071922589 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064836455 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.096695084 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068109817 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.086865198 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076855669 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075980254 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.087062484 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072433432 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072375764 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.094457801 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065250338 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089005157 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068432451 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071701052 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090055225 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055046332 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069063245 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.094197141 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066133377 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073261547 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.095229782 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072423589 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.088498864 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077611152 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064233173 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093140926 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066260921 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064837975 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090109897 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06911873 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.085857248 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069175974 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074151045 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088655533 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072158736 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079136808 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089220936 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071413567 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086194155 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065770714 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080487642 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098928979 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065817136 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089991591 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065696627 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072503233 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087440476 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066594967 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065647341 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.088957629 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.07104195 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064594711 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091971342 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073070183 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.101062834 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065684147 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067988658 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090533025 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066190568 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070972323 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089871898 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065502138 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.089536099 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064123677 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067393629 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087863587 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073638151 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067463116 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.097439081 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067403248 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095758518 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071147474 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070606734 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.094342988 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065051719 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058336473 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090359282 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068226453 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066244266 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.088479061 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067557288 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064975366 seconds)
done (took 13.198210398 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067153282 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.167605733 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.124574133 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097023409 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.110638605 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066648471 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.099194754 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102377241 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.091068604 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125267712 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087770486 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.106353919 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114422263 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.08753937 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06623106 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069216235 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.090530759 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.087763532 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.124650553 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085438852 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.139559552 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087878143 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.119212477 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090277457 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.111197869 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103263276 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.089746985 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070029615 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068845421 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.116339125 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.107716216 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070091905 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065837201 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123429279 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.115946883 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085424167 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088087722 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.084147553 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087600546 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.067215698 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.113937555 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099794493 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104717325 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081904397 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.095431912 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068748677 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088357976 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085877063 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.11314957 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080264895 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.111196519 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132453819 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068234476 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.105163984 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064389203 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.109871428 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081049219 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091766593 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066933622 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090072051 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066459115 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070005038 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.110919263 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.114725765 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071319116 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.103298034 seconds)
  done (took 7.297087465 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085994077 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.115401509 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085187541 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106805195 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067225401 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065861437 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.090539734 seconds)
  done (took 1.667453455 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068047421 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087325957 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112027855 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088807794 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.108991625 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.085582992 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.099658724 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066952126 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.106805343 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068827652 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109722271 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.104765586 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090512315 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074359935 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089546026 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.090827461 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09035477 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089989879 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069845082 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112587619 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070810711 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.109047265 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069345524 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066887598 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.104595831 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067440776 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.137852672 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071850524 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.090132864 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071336782 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064121145 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.140227545 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103024076 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078910833 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065973777 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105330039 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081349517 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087792528 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083798928 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093982626 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083061697 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06686212 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091859125 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065192712 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070663557 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.101770059 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068002279 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.089942516 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069959187 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086075354 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091628387 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080265349 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089869267 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071234723 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.06773044 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096199625 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076164075 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.0900585 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087965456 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067375134 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107762035 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081957585 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.105698396 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082689533 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092930424 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081059187 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103912765 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070399035 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068380306 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.094313213 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083180103 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088032019 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069554826 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077071662 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092488765 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089786338 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.113753612 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069096408 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.0997772 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.068178898 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06692173 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091116793 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090578382 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093355997 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067944036 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070790294 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094009602 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064870741 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065981044 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.094054861 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065374836 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.090241788 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071322941 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067042597 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09284723 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083886785 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.089543796 seconds)
  done (took 9.346190161 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069406889 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068524409 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092206455 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068463864 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067407065 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.090709902 seconds)
  done (took 1.517074222 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098079282 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.092446348 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081528936 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.09515707 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107100416 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104561663 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083947661 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105404101 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084597001 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.102334994 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.082061001 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10573749 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.086725809 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.096584422 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.081434441 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.096217549 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083109309 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099027885 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07874054 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095628774 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089358349 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.095228818 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074872422 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.105256002 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072527603 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072485168 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100806514 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079209861 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.102501885 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.08199517 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096980643 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071126464 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095054992 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082415619 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.104957859 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071866384 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095292765 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072309734 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.098477017 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071563252 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104317996 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074005363 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.076676406 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095754039 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.104282483 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073563372 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.070680409 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100496606 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.080910249 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095326194 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071308835 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096102206 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071777042 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094142301 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.073521978 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105516669 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072580098 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.104206616 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074920624 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070561011 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.093928708 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07025399 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105416895 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.069725558 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103864572 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071140642 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095057511 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073446348 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095360188 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073742739 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070852847 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093101878 seconds)
  done (took 7.384526755 seconds)
done (took 28.264402511 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.646168438 seconds)
  done (took 1.705408272 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.761258688 seconds)
  done (took 1.821061818 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.517838517 seconds)
  done (took 15.583002462 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.607704072 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.752372682 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.782059782 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.154171041 seconds)
  done (took 3.356912531 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.876395958 seconds)
  done (took 1.959546687 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.234978544 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.221340353 seconds)
  done (took 1.520939093 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.748438637 seconds)
  done (took 1.821942875 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.285904924 seconds)
  done (took 2.351133283 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.320444458 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180153965 seconds)
  done (took 1.576463636 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.522313197 seconds)
  done (took 1.597785905 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.561417942 seconds)
  done (took 7.641802014 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.228948016 seconds)
  done (took 1.317899885 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.268253599 seconds)
  done (took 1.34655158 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.090219614 seconds)
  done (took 4.166228034 seconds)
done (took 48.835871995 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079402608 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080950165 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104755891 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078009631 seconds)
  done (took 1.415195512 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078327046 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072755469 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10026768 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071797651 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.100780363 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073377637 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.097493227 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07843386 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071269042 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097653435 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07258235 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.09506823 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075445648 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.097053054 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071855408 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074887613 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099644421 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072064414 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.099432639 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.073746442 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070357569 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098251622 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075028335 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.095708249 seconds)
  done (took 3.097032917 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079343305 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071632464 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097543117 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072655672 seconds)
  done (took 1.401704867 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078237716 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.113972593 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089357354 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076007969 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.115761237 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.109805145 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069767482 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068782806 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.095105498 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076994634 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090085341 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.098350703 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.111497405 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077205867 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101967453 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066579272 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06821937 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.111014945 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.07720905 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.10103733 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070504426 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077794664 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091832653 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089161118 seconds)
  done (took 3.212143748 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077440393 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101527956 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.102345822 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087940658 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.115617127 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064666389 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.100114696 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.090536772 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.148568017 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064597537 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.094591898 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06541385 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.094401498 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066192436 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076297515 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.132430463 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110874647 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.093369414 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096343917 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.090132393 seconds)
  done (took 2.962689205 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076904814 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069536836 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088931302 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069007893 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07502835 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.096336015 seconds)
  done (took 1.56175482 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068899652 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067126418 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089974946 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067598302 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071120158 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.090235098 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066067649 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066034461 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091224361 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067781555 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06601096 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.089944072 seconds)
  done (took 1.988300348 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.382253802 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.094329138 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068760839 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089779121 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070433297 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089689935 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080838809 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066569739 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.11454586 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066315022 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.090664675 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069043923 seconds)
  done (took 2.372707659 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261342538 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077315259 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.321181137 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166308161 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138038118 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153201023 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102849258 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138534929 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.194205185 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136594306 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198623576 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221371286 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131786317 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165515211 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114359659 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.105882958 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207958699 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217958322 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103036604 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221449234 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203294252 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154362679 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17824772 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126828423 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132968141 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148353251 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070870384 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104986035 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228981291 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160196945 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197496078 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135841094 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095890029 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228347734 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222424029 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191876223 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159807326 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086265191 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.153553744 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.164469648 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255923545 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11264085 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191295174 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133316347 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103522913 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171767853 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143392107 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.144999871 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.135059538 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111689278 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172906062 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236629411 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.163524124 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111220429 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1348637 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140190421 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142095087 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102516045 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237425318 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215386564 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157012686 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095386077 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097464877 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209287228 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158085811 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.139725961 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.152538803 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117936776 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165749203 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.209545014 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14417471 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171414779 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.179753485 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08913861 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14536293 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.19015738 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155372656 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199855277 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152184901 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.097851116 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149498029 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127791362 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080844526 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167808002 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075086758 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229431816 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123088945 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.137075288 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137418477 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109821835 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134531671 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217061852 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198279023 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103643589 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.0901384 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126866132 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.145881255 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176086443 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111287559 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108588615 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169674501 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.08012936 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163019766 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.099976572 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150917327 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.077849727 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148409224 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184506447 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075973787 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153643293 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126806575 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.126628734 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162115465 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216080331 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089782518 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106862996 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197842321 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175546129 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107210649 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198010284 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18729648 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.126352633 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127744779 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177236162 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238465484 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115271363 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219285359 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132383298 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084295977 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.112207773 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15308841 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137797722 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.146987296 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082810131 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.151489128 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222858528 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.09914269 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096817393 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185648733 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083551673 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104854608 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138193118 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100999825 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.120434232 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.125865135 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.132413601 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16826973 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151992214 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132360007 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150160728 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124040686 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222861443 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113286228 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.104247754 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128426322 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.093265071 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.163930634 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187794909 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104643335 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220707273 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.153464163 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128921209 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145076491 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083569232 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167271595 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103310846 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071045385 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196108248 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1111971 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135325446 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.207125552 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128237322 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.1555786 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.150067138 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161365773 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157971252 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.158667317 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130733576 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.11253627 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138698342 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153535274 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072599021 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.119914689 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.108329267 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129105861 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096219361 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109270224 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168860597 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17734254 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099044781 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138768327 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122779225 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177856707 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.101785137 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15832143 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.145807019 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11906774 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.184163519 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208860452 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163260356 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125758667 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173341781 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.095115654 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07418743 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.114361597 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154761383 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082654985 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108689559 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14317427 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201800376 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157146379 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16504635 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137039047 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148634751 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184852449 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.097359543 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117732453 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202298912 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153472222 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.154797378 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091393978 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.124270584 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.173129171 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134430475 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241475038 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142854536 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150605604 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205410866 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.128402106 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082056273 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131235982 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164939298 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132053712 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204744858 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100075593 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114761425 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135961333 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.105152324 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129530479 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154707231 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146615055 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16080273 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.14273849 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158022758 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102827125 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144142707 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149997238 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149019979 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063490357 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171101897 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191942797 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120650323 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143505845 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210041142 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080184358 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.150835524 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234866325 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171997824 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110580015 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13894732 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147811585 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155853435 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144051589 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166812155 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135826497 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160859137 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136562686 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.111153489 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08741757 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123289683 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131941731 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.120120466 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.13741251 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.143328959 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.117968404 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160454541 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138007028 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13649869 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146745089 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099017568 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.1158542 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096843738 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232837168 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148558922 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229787566 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.127257622 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.177444852 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223765996 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100898862 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07949508 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105750659 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168779332 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10744962 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162615996 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096044391 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131096663 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15410289 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197547104 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096299834 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.093816976 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133738469 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164150936 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136987543 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09949095 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.131939752 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2197588 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128586036 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080788954 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151305183 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130263634 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127930986 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232217716 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063166038 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121355309 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076817696 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07929153 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182467896 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186843232 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108553347 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.128710786 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144325644 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173075647 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158086966 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128485736 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098460615 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139657497 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204205401 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156576128 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.08937308 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138976837 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181470011 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187753283 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132262488 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.120900718 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227274229 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186416392 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.22146126 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088999449 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1417371 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142580379 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135725652 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195532566 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083528305 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223841248 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109584083 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165299249 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130361181 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118526301 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156871109 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.121702077 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089164529 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204145621 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147211923 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097676858 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106212176 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145067992 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149657267 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133351521 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074218865 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193004014 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072191484 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190805221 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200934679 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107776814 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132621332 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097316466 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107955566 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134304261 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129457686 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086845861 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.144368379 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231833378 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.090036525 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205037926 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168450593 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139937747 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191863446 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126464313 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.66137489 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079673325 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210904997 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146907045 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235779818 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123158761 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145950293 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110978214 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149646771 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199307108 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13096379 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.20273552 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160715089 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.149164798 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103367716 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104995969 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136595279 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.116965876 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132736444 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141422375 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143629186 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.126786058 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.148822588 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154536795 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106617593 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096510045 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214506 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144585356 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1713903 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16835219 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111613985 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145160131 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19516229 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081272969 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.149470825 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213146699 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134876576 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123653732 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081761153 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133209201 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230168521 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073272946 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220437585 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151890537 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138356116 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140385305 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146491048 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186415474 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110011575 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177173667 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096220776 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.138129434 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142198339 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110685583 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102067189 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107217077 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138156589 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.125934801 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129511193 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.120299839 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209538721 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07146446 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121846516 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12890718 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171932774 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236317472 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.114840847 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082577315 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145918107 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140108901 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.144058456 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151929603 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.107983301 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107510725 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083139007 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.136087021 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111482512 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141764564 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129133501 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137423588 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224096932 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084029064 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.252671469 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121198402 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132483199 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070647047 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104916445 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09700929 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123376273 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134272352 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123402569 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203620705 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.122844979 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.116066443 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092375585 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098764618 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082682166 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157047565 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136605112 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148106609 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124487123 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.088573522 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135693698 seconds)
  done (took 70.551365355 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.134437909 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.105831221 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.119810763 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.174790214 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.148931506 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.239080136 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.182328658 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.225514398 seconds)
  done (took 2.496862944 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06993461 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.118631054 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100931758 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.114312494 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091042034 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069183591 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.296095012 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.108450148 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06672849 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.115375503 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.11803515 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092788356 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.472565344 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066216544 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.093588904 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.086171131 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06998807 seconds)
  done (took 3.309643396 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.428562436 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.603552133 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.452103437 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072941244 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.759422119 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.107927377 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.151157173 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.160708652 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.092200907 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.418923451 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.720427731 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.151767389 seconds)
  done (took 17.288013939 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076107789 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068340507 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107604014 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083738313 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095811479 seconds)
  done (took 1.599775491 seconds)
done (took 114.329775334 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080299696 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.340672583 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.05266031 seconds)
  done (took 1.5962027 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083303523 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083053021 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109986894 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081967237 seconds)
  done (took 1.533576979 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07584235 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075421476 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109710477 seconds)
  done (took 1.433220044 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.277847477 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.162177166 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089633696 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083103948 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077129526 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102381799 seconds)
  done (took 1.436571395 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074130047 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073381464 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098188065 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075227626 seconds)
  done (took 1.488941941 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076799004 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052091102 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.053623632 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.080705515 seconds)
  done (took 1.437570941 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089972947 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.103208174 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080845569 seconds)
  done (took 1.445128838 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107173312 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.110435578 seconds)
  done (took 1.392148749 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082019921 seconds)
  done (took 1.25064364 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.091746046 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.137984898 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.154117526 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.134415233 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.163898134 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.134829175 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085138452 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113289524 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.102170233 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087236085 seconds)
  done (took 2.379913838 seconds)
done (took 17.172479328 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078388828 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.380649972 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360589849 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113670884 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666644568 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355455986 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.993430999 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.116783268 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119787965 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093806107 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082945426 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671473149 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.956128961 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.34785759 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.945695256 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.317940045 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.673245185 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067877929 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066688656 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093188761 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.94981071 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092555009 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068019887 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.066640284 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.673096767 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370196747 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093558698 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319747442 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066047745 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094937897 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354445312 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.092340717 seconds)
  done (took 15.909514922 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071004838 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.141319547 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073354124 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082764498 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.095554273 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068287176 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.096197183 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.06894824 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.150419597 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067429104 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109720481 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.0674266 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.095003034 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06973813 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085493668 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092889408 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068356238 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066990351 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093861118 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067932684 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.110621576 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067122833 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066959863 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093811529 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067812001 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10406693 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068177934 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066697419 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09281047 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068696003 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.095151011 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069271688 seconds)
  done (took 3.87794106 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115072395 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.149899312 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073691388 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126859726 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111655238 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096648818 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.166705207 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092598184 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152189715 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067286975 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109930637 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067224456 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125430287 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068328481 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.112168013 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068342921 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067720474 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096534216 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067256299 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092751091 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086680794 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066278494 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094701034 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068145495 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093115718 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081602731 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.091002419 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069427328 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067554448 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.094694983 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070978041 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067285529 seconds)
  done (took 4.162717358 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073024463 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073678129 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.107377162 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082653852 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.092783736 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072451715 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072153886 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.094101574 seconds)
  done (took 1.852787447 seconds)
done (took 26.979851036 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079681708 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068599418 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098228215 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081097876 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.096177956 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079546105 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.06605745 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.09992101 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075797105 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071871994 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.101317238 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066974218 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.095854309 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067577654 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073276143 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093701473 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078911143 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.095763523 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079555595 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078329781 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095714802 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076159883 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.098257581 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07880698 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103318486 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079780538 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080598939 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.098964596 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068965028 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095785611 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07684196 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082276881 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.094571855 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078874202 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.094429255 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068676496 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.066545195 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094123174 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078832966 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.098843599 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070717805 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.098333414 seconds)
  done (took 4.700750877 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088898897 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089252136 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.110718091 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064967994 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096384593 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06533505 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.112181348 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06411598 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058380197 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.11350925 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055365354 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058495317 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.088068673 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053681479 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058276803 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.05540687 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.088006367 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055851573 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058411476 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.084574328 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057758987 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053731387 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.084980249 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063404053 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056317628 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060822977 seconds)
  done (took 3.083517579 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075797691 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082574433 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11253075 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125180008 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.130811684 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07595062 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.103854086 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.08672725 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111002954 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06695298 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070054979 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.122493277 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086050032 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.100720835 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067116596 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.111609972 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08167208 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067220302 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.10007771 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089519439 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.10995741 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.077572706 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.116692969 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081436807 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066131998 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095909461 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071720362 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.105931498 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073071432 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075929152 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.098322126 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070536296 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.095469219 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079445747 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07079934 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095412424 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089147863 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10282805 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077586742 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.066844961 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.09742737 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068082541 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113384512 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.111026649 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092370695 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075837404 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.073787363 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103014195 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067410735 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110722418 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076517013 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066134765 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.096255917 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066444052 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.091405132 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08173638 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069134016 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095559736 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07627742 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.094076255 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080815392 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070696845 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108673605 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066477376 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099705111 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067456641 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067574537 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.09135201 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090592346 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.067711745 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.134087947 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.06701589 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.094964376 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075689624 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.100923234 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073274888 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067099634 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109811143 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076814773 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.09635447 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077138781 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069795582 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096500859 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086318644 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.094444865 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069017892 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067756751 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.099150573 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069657469 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.092712788 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081604932 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066902099 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.096338185 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084295199 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.091783161 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069437706 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072729718 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.098687548 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066954084 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104482929 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073011421 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067477822 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102439973 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067743175 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.095341812 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077547949 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.070619351 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092988513 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07224572 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099910614 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068789304 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068223551 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096831764 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069156711 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.0751672 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.100308908 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071448717 seconds)
  done (took 11.243884487 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.188146702 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.182505932 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070378728 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.174297613 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075160786 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.105979728 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.175363748 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095447997 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.0935992 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068839403 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067249396 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.128668343 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.119235066 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.106041563 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.104725222 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067586794 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.110955836 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.103709053 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.17731124 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.172522049 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.122743195 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075835952 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068895771 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.095380525 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069553308 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.10255149 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084660669 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.10122395 seconds)
  done (took 4.311159019 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081455985 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.12592956 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074488909 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.087053528 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.11706019 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066132253 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.099919866 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068988271 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.104556302 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079820111 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092028172 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073701611 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073184632 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105990166 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067898406 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10272495 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.078112242 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068235239 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.0968259 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07252196 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.102018248 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080600268 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.095637279 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068332897 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073146989 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.091764932 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064360869 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.109958555 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06718874 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115131745 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065844984 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072381094 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.10714786 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067580167 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.091169443 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072157726 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070113937 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095732296 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069623704 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065116836 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.091774814 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057762709 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065530811 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106117179 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.072783341 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.085366201 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073673112 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071668432 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.098477632 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06515025 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.094577128 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070970384 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069407946 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.101621652 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072536358 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071604629 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.098180876 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065294907 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099366931 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072259483 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063470612 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.090642384 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073022827 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065732948 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101785251 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071626392 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.091265746 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071039782 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071657493 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.099001508 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071013236 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069098454 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091352481 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068921765 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.097246825 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073243995 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071200892 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.091788253 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067255833 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066775819 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.08201424 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067721355 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052960425 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.096586342 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065902111 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064783492 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097112916 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07312388 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.106160935 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068960263 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.09874963 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068712964 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.0660352 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097112895 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063781929 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069401208 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.109957476 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.107274085 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069140125 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064833956 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107643865 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072851364 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065270727 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.082477713 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074569385 seconds)
  done (took 9.748410318 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096388859 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090495735 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095904721 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08170275 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.121356654 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092197492 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100431593 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07429209 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.067652418 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.11097522 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.067695805 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.101222882 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068586064 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07543798 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.122072545 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.074284388 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.097159409 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077129859 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070891375 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.134052165 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082010032 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.108047497 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.079862256 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.093593699 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.073021348 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078183478 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.122217386 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079049839 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.104493759 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084909539 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.078600517 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.122110027 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.083656773 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.097472552 seconds)
  done (took 4.321975861 seconds)
done (took 38.588618384 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.271671273 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.472106455 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.260104249 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.136803596 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.29142044 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.269559555 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.285275975 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.257051075 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.450801817 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.258586764 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.530747122 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.88358991 seconds)
done (took 59.574661172 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.339014575 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.400139693 seconds)
    (2/2) benchmarking "String"...
    done (took 1.526381948 seconds)
  done (took 4.129147435 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.5952547 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.106316885 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.521896901 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.260407193 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.261345798 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.578176921 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.779422951 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.05062449 seconds)
  done (took 27.761603977 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.263372806 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.592411714 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.286499913 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.283391082 seconds)
  done (took 17.629781344 seconds)
done (took 59.658964389 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.266305779 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.312173752 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.296011319 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.244277308 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.382058303 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.297998603 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.569768128 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.264292378 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.263076636 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.260561193 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.26175517 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.262605074 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.275284722 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.581407701 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.269721459 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.264117354 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.267707428 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.769761487 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.613654202 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.273813365 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.286050631 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.266543065 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.278140577 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.264562818 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.303950295 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.263664303 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.262410145 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.267997611 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.130540722 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.266629317 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.331532553 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.76315938 seconds)
  done (took 191.886306407 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.263448128 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.189810408 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.297748001 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.285478738 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.624535425 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.46681169 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.408137548 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.718128564 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.280256489 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.291582164 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.459724223 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.261934606 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.533470639 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.22568919 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.268869836 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.367061287 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.479034081 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.536235291 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.277371052 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.519886983 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.289287895 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.334773427 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.259018036 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.440048377 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.279612545 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.365168505 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.271088789 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.272764059 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.453245222 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.415263683 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.266063679 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.27700895 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.784804531 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.118776832 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.2686818 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.276716953 seconds)
  done (took 151.332769597 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.530760908 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.263893624 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.264130034 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.264702975 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.290089698 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.264507536 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.729994327 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.730335796 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.754580114 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.452685466 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.323774239 seconds)
    (11/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.264420755 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.409029465 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.264094809 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.352671732 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.277049719 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.265790975 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.279196135 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.290322021 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.266681743 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.264795216 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.730719423 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.278927476 seconds)
    (23/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.26436722 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.269909168 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.265741041 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.29158452 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.652764628 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.491569436 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.254344783 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.281314354 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.559654522 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.296456239 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.252913899 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.488941534 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.071542638 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.35825828 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.25388536 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.27861254 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.25302403 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.514068208 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.253220111 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.253351296 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.256461043 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.769626251 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.255385638 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.71913654 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.253094045 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.088750764 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.253084458 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.253683896 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.708890149 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.605604774 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.255431124 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.252868367 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.255847922 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.253178237 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.252849268 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.28075952 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.613562217 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.347941523 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.254005314 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.256826373 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.280359431 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.254106641 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.468679975 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.254482802 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.711007535 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.306573101 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.359555061 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.72156168 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.25407149 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.343571312 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.369939824 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.25457931 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.254692141 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.253671178 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.25375422 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.357184991 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.253829965 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.612276202 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.262110906 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.25717232 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.314233597 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.345448691 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.255756115 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.25706235 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.256034444 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.256816404 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.502023141 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.897876887 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.345183442 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.257434891 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.257227306 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.257081972 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.614837591 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.725938862 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.371589439 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.259048506 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.256080745 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.691256346 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.258919973 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.630566477 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.717873096 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.765548417 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.258214502 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.361139824 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.261308039 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.259357295 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.257522453 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.286737075 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.257916368 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.316008063 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.258152032 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.650410502 seconds)
  done (took 350.029936516 seconds)
done (took 695.984481433 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.915856268 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.909303355 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.019790908 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.907243412 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.89133755 seconds)
  done (took 10.843305731 seconds)
done (took 12.043983568 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.436284925 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.437154987 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.315217481 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.438748988 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.287795532 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.455693319 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.416304581 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.281591036 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.360480271 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.331317921 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.357871075 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.308333359 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.289727269 seconds)
  done (took 18.92157142 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.55452521 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.548431149 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.324882586 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.553052393 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.304730565 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.557943199 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.448986439 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.460841717 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.445082776 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.276073546 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.273148802 seconds)
  done (took 16.953374151 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.565142711 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.552067847 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.327682412 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.558986882 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.303987368 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.559835257 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.453349334 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.461998055 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.44736346 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.276216881 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.272892316 seconds)
  done (took 16.985028751 seconds)
done (took 54.063832731 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.268853361 seconds)
  done (took 2.474601083 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.301821385 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.460720877 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.285465557 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.273968618 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.271556391 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.270781259 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.275535971 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.271688811 seconds)
  done (took 11.617929828 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.270314029 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.267473831 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.267480516 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.268479176 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.270012954 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.270243987 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.269831562 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.267572069 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.268210041 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.267199432 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.267502438 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.267666869 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.268981338 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.267391006 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.269436742 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.2675485 seconds)
  done (took 21.502844836 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.268767995 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.268293298 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.267763183 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.267589286 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.267656194 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.269171202 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.269116693 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.267401621 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.268113692 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.26807029 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.269914309 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.268492278 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.26814017 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.269336639 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.26821967 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.268684927 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.267088893 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.268364225 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.272918669 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.269102614 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.26879105 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.269640914 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.268139045 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.270256723 seconds)
  done (took 31.659767996 seconds)
done (took 68.460226923 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.081556658 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.714331275 seconds)
  done (took 9.003979359 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.272014214 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.270633864 seconds)
  done (took 3.752402734 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.271833126 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.271536536 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.271709593 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.270964881 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.272232722 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.271161228 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.27086704 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.271906828 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.271519741 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.271313024 seconds)
  done (took 13.923972832 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.272833959 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.272391532 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.269766677 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.271986588 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.271712897 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.269605676 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.27184898 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.272184169 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.272009169 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.27038745 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.272508281 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.270037945 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.272080463 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.269981281 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.27305095 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.270260751 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.269924201 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.270460613 seconds)
  done (took 24.092418613 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.272979575 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.272341433 seconds)
  done (took 3.754817955 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.270436242 seconds)
    (2/7) benchmarking "second"...
    done (took 1.271164776 seconds)
    (3/7) benchmarking "month"...
    done (took 1.269631946 seconds)
    (4/7) benchmarking "year"...
    done (took 1.270412381 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.270096363 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.270378557 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.269813634 seconds)
  done (took 10.102145714 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.274054345 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.442470743 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.516820662 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.832834798 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.274398343 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.276194787 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.114180917 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.276963979 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.279284255 seconds)
  done (took 14.497711702 seconds)
done (took 80.336245267 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.247074946 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.266382452 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.079530321 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.283243952 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.281203996 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.605603967 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.269605394 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.380778396 seconds)
done (took 37.624901147 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.277068941 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.911281362 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.939957139 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.259529132 seconds)
  done (took 11.31587987 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.242533481 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.112959588 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.244183257 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.214724055 seconds)
  done (took 18.019093731 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.821403609 seconds)
    (2/2) benchmarking "read"...
    done (took 1.582039533 seconds)
  done (took 4.600315456 seconds)
done (took 41.416565379 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.257172197 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.256323788 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.254096844 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.254119107 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.25671603 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.252008332 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.251070627 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.253667692 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.253469129 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.251494264 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.255733889 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.254863654 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.254361209 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.248389026 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.249981853 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.252058509 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.249350163 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248637299 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.252449186 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24950422 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.250852377 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249088453 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.246203087 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.245421949 seconds)
  done (took 31.243297736 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.249045558 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.246956501 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.248911637 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.248703214 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.242510983 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.244708283 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.245896745 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.242858225 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.246099282 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.246044915 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.242683387 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.244048869 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.24262006 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.240295164 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24266479 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.240093485 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.242686288 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240842197 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242432532 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.239710628 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.240509551 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237533464 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.23694724 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.240454781 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.23772115 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239303666 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.241310171 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.239434302 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238255934 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.235913128 seconds)
  done (took 38.454178886 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.242614176 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.244489764 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.237531424 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.237957487 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.239591838 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.236127231 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.236052847 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.236091873 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.236777902 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.237025275 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.235556978 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.236639519 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.239062145 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.234255144 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.234848848 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.234586587 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.236448503 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.235396414 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.234753213 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.235274525 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.239565301 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.235456726 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.233853419 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.233804452 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.233983978 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.234447652 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.234032818 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.234161771 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.233412189 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.234351247 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.23272259 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.231727036 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.232315623 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.232958375 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.233438094 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.232859476 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.237434759 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.240480774 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.232305296 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.232465321 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.231930833 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.232455495 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.232110074 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.232786177 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.232276519 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.232721994 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.232044035 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.230617442 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.231464406 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.231972764 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.231593035 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.231235612 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.231531717 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.232506595 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.230657114 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.230826755 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.230745356 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.231271587 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.231771669 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.231234818 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.231033685 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.232694144 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.230044789 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.229829448 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.229902664 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.230758416 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.230568989 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.230700498 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.230116897 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.232444711 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.229762701 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.230318331 seconds)
  done (took 90.006996953 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.231017755 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.227581432 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.226995926 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.227125759 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229137293 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.230039976 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.227178028 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228495042 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226890563 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.229737521 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228722385 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.227639096 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228601463 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.228890383 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229421912 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.226799754 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.228809021 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227842932 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.229327421 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.229994548 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229053593 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.227071911 seconds)
  done (took 28.195808729 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229367205 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.228264743 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.22640637 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.22969937 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.226672319 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.229142807 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.229105587 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.230633902 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229520724 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226772612 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227015962 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229078785 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.227323099 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226926554 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226587967 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.226733975 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229301317 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.22702628 seconds)
  done (took 23.274782544 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.228012491 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.22731331 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.229591785 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.227566032 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.227992506 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.23006849 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227715709 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.229982658 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.229445254 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.227514789 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.229918444 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229920612 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.229864964 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228088883 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230358585 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.229018992 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.230333692 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227854348 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230407443 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228600932 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.22783946 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230676148 seconds)
  done (took 28.207060732 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230503783 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.230824051 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.22816363 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.228103068 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.228197587 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.231171875 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.231253297 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.228809296 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.230283103 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.231507276 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228355092 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.231074425 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.227798614 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.23093714 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.228669406 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228738169 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.230295053 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.229429001 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230954353 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.227767116 seconds)
  done (took 25.762587162 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.234589176 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231720157 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.23190019 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231837071 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.233123778 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.231794522 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232825208 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.232230541 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.233622613 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.231150345 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.231236759 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.231514945 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.231696542 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.231075555 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.231688201 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.231096026 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.232724361 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.230639478 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.23101674 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.231077794 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.231417106 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230985736 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231189079 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.231481166 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.233386845 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.230201934 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.23149628 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.231111781 seconds)
  done (took 35.660309947 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230105224 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.229414061 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.22650344 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.230245854 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.226771997 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.226576501 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.227991837 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.227765468 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.229694335 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.227162771 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.229983153 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.229193873 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.232017719 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.229344881 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.229756176 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.228486828 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229158583 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.227012763 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.227608939 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228029997 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.230695236 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229428012 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.230278682 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.226263258 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226864584 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.230233045 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227312957 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.227722738 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229959798 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.226972523 seconds)
  done (took 38.028630296 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.24888519 seconds)
    (2/2) benchmarking "in"...
    done (took 1.248123039 seconds)
  done (took 3.664850777 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.22697552 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229704487 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.230010615 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.227069721 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.227707016 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.229605734 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.230453032 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227573065 seconds)
  done (took 10.997842996 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.234183752 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.230840566 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.230785797 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.230544734 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.231067662 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.234765989 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240538084 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.24584409 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.234685874 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.23460538 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.239945612 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.24085903 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.236979435 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.235453701 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.235118073 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.236594609 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.232020171 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.231980572 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.232650623 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.231477123 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.232158107 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238768338 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238718929 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.229846184 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.236098953 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.244989064 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.23996718 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.2321638 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.234575882 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.238989944 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.23567098 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.22858091 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.232439431 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.232206806 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.231595965 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.232420378 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244923111 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.250269033 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.241727506 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.233340904 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23228652 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.229300441 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.237682161 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.23788438 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.237916922 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.232066371 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.233005347 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.23021588 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.236170736 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.238874714 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.236667546 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235812551 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.230295784 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240674044 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.237661071 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243669644 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.24773916 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.238938372 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.24373241 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.247019402 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.248179824 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.243304648 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.237994289 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.232438681 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245135688 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.256924952 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.243871111 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.245895654 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.230759065 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.233781223 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.243446758 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.249960517 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.246071801 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.234052629 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233759711 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.233377852 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.236916726 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.233908166 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244824136 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.255477284 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.233806804 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234006913 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.245720376 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255215927 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.237230592 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.234016674 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.234685187 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.234480401 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.239481226 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248292505 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.249787952 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.235511691 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.237396453 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.238510076 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.239471728 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.234477009 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.238503589 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238638017 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.231535061 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.235611122 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235317442 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.241563917 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.246297581 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23560996 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.235206665 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.245781809 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.235595458 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239266083 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.246179171 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.235786671 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235168191 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.24101998 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.244464793 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.232516638 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.242103982 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.246886112 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.235501188 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.240942555 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.23639292 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.236975074 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248067624 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.262359057 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.235667266 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.235903867 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.243240445 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.245996723 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237055978 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.243243196 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.236349902 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.234159792 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.234504221 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.242479098 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.236677552 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.24079948 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.236214493 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24209943 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.234175043 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.23638287 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.236788391 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.241302454 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.241880062 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.241432358 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.24195142 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.242800263 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.237463169 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.243231038 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.246945424 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.241331092 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.243185697 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.241597467 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.235445023 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.238225687 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.242803766 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.238135634 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.241111743 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237965103 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.241572264 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.237964155 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.238561611 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.238236751 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239008879 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.243094443 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.24513581 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.237849909 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.246852701 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.241189669 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.235877456 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.238977522 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.238434006 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.2425121 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.23893171 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.24099322 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.245505141 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.244422556 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.239082564 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.239847291 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.245475029 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.23999478 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.24027024 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239924837 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.246628328 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.250297365 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.238708256 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.250226965 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.240433966 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241265371 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.241093672 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.244698074 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.243280968 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240661229 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.246920224 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.246355116 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.254955664 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252251197 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.244943346 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.243508015 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.245450768 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.243145509 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.248454888 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.240386622 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.241115334 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.241522103 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.243619242 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241177818 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.245130768 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.24045233 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.24419328 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.240672508 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.241251232 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.241291917 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241549505 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.245580622 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.245034802 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.238130587 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241503938 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.240991855 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.245743905 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.237721943 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.243852325 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.245135902 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.241559043 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.241196755 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.252270327 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.23900399 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246611125 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246775409 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.245047883 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.244854323 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.242566669 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.248617836 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.246566091 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253274069 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.26214351 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.247043656 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251873945 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.261242835 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.245522815 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.249096906 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.242780915 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.240329264 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.247966587 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.248548466 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.242082126 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.242781931 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.243502888 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.246591855 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242665132 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.252202941 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.240019328 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.246464068 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.2431975 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.247774617 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.241411303 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.248889447 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.2476393 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.247734366 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.249687053 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.244221464 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.243557185 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.248094316 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.243175491 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.24266912 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.243149858 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248895306 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.250102063 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.253289182 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.24789027 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.249464591 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.24822008 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.247612361 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.248326949 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.244320237 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.247301981 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258105084 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.250849426 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.253698436 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.24964977 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.244650599 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.253570005 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.249637308 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.251612865 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248194621 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24878835 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.248353387 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.247367853 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.242398594 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24909385 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.245053413 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.249129678 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.250366008 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.248826531 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.245217095 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.248189797 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.244656778 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.246234344 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.246044671 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.248938391 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.245383922 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.251051242 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251200173 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.248830987 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.249451081 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255873205 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265382943 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.250863448 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.24975437 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.250241227 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.248963644 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.250692536 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.245725775 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.252584422 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.253283678 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.252645737 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.257564681 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.251531639 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258540331 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.24627567 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.253585471 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.252670149 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.244975081 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.249174629 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.251193975 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.246671743 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257500907 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.261759632 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.252108131 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.251209885 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.246976321 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.24774992 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.247371964 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.248052336 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24824297 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.247413499 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260071708 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.267650181 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.253335161 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.253554127 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.246037997 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.247942738 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.248770492 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.251272734 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254989236 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.248244359 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.251993297 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.250932929 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.251782316 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.247156592 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.24823777 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.248322974 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.245449098 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.248948433 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258697295 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.267844356 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.251010452 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.248676241 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.260279585 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.249212719 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.258764051 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.264255044 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.253943808 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.248847639 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.248764066 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.254094546 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.252885972 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.25366488 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.249245098 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.255633255 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.252099502 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.248677749 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.255324087 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.25378204 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.248876459 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.254350612 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262694192 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269490491 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.254804893 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.252736298 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.246339939 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.254249304 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.253009655 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.249656311 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.252391222 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.255994196 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.262341675 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255563019 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.253662149 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.250439954 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254063319 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249171123 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.249765729 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.250379903 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.249632366 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.250451406 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.254634154 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.250983831 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257205049 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.250447855 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.254670217 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25610071 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.255358864 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.264413518 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.250329032 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.25546499 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250316082 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.251206923 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.255733819 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.254484252 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.250462276 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255556515 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251024541 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.25612027 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.261051714 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.260183013 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.25763734 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.25501449 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.251096075 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.255260029 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.256581202 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.252440969 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.251867926 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252390477 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.256150198 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.252246848 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.256065443 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.254301122 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.252265436 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.256787294 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.252311813 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257891002 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.262525534 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25649365 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.25048239 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.252597655 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252492514 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.255620111 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.25648644 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.26499171 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25832908 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.265245483 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.263097608 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.256143284 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.255961679 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259279451 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.262868556 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.25573133 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.256839438 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.251815615 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.259273933 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.256002239 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.259708035 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25266648 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.262841901 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.258736969 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.256773936 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265031391 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.27286443 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.251990661 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.258653808 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.260878025 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.256585891 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.251119865 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.253265557 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.256572439 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263869106 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.275495563 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254833465 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.258544192 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.256275117 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.258920556 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256747956 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25466977 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.25912459 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.251531944 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.258219103 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.252976456 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25588989 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.251597843 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.258209209 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.25758798 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.260626766 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.263958638 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.251410782 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261050561 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.258762639 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.25937564 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254233064 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255825731 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.252598823 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.252829268 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.257715577 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.254398725 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.26001494 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.261217758 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.258436196 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.260158437 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.255723224 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255657847 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261755433 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.267637813 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.261465831 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.252350022 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.259994412 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.25964384 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.262080018 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255806052 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.256000521 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261002186 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.26120851 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.255179834 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.25636612 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.256580425 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.263410628 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.273580763 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.27245551 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.260602736 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.259716746 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264007155 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.255835745 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.254030362 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.257666513 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.26237254 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.262873536 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.263235893 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.257303912 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.267020497 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.275161431 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.26089652 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.259668345 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.263444736 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.266740598 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.264118115 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256873103 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.257124783 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.263655533 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.273983675 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256978361 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269185338 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.286497118 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.276544701 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.261522151 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.256880843 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260372446 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.257564949 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.262774911 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.257796056 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.257780495 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.257677777 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.257141875 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.263039851 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266284062 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.263162453 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.256184977 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.25789302 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.261896404 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.262776227 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.255466249 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.257757387 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.258351747 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.257903221 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.258317893 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.259055634 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.262935174 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.272374634 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.27132493 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.258575892 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.259261439 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.256362237 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.264839992 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.264650351 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272359761 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.264661685 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.259403485 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.259124909 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.263594847 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260291212 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.256148704 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.26303327 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.263205506 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.262552219 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.257906731 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.274460484 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266613919 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.2676171 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.26272113 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260264772 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.260461874 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264618333 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260236988 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.260416657 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.265238661 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.264888045 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26390404 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.260390513 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.259807831 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.26696408 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.266784027 seconds)
  done (took 745.884640769 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.257999375 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258332435 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258432235 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.258681306 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258415962 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258043595 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257812107 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.257612849 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.25750431 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.257365092 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.257653348 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258091177 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.258212067 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.258205912 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.2592528 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.257494509 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258859909 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.259042433 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.257953547 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258560406 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.26024757 seconds)
  done (took 27.622431857 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.262106437 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.258428075 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.258341983 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.260956847 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258688578 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.260483308 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.258742562 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261944103 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.262116175 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25930314 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.262396891 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26251693 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.258531504 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.258778537 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259535417 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.262139631 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.261851644 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.259385472 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.261445219 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.25979877 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.261594603 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.260088757 seconds)
  done (took 28.927668884 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.262066563 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.261985784 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.266166827 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.259773627 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.262087864 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.259525648 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.262337649 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.26378328 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.263442131 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.266761696 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.2663644 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.268088754 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.272396411 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.26709423 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.268188539 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.263835717 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.407272599 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.263222234 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.264199333 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.263430933 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.260652786 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.272462552 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.259953235 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.260187309 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.266164598 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.263586522 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.263504403 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.263572813 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.263420106 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.268503019 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.266389328 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.263315641 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.267402962 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.269472317 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.267750001 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.268242004 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.267631416 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.265188374 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.262435515 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.263456282 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.276893619 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.280785824 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.264283262 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.274237194 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.264914865 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.263849043 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.271777205 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.27090335 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.262783872 seconds)
  done (took 63.366676199 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.264416934 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.265509661 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.261798886 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.265124366 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.263912419 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.264990174 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.263891389 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.264988527 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.262760062 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.262249369 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.265544684 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.262593932 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.262976482 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.266003685 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.264919843 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.262979284 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.262665744 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.262754802 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.262565283 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.263884884 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.262677833 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.265894101 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.26588193 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.262825101 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.265290178 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.263827243 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.262871817 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.266573646 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.263598095 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.26373203 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.266565542 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.266420665 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.266433687 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.263753191 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.263886571 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.266112769 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.266503914 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.263715392 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.267330924 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.26243325 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.265976013 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.267672553 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.267568098 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.26799326 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.264034554 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.265792507 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.265128473 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.265146447 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.265779642 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.26750341 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.268118094 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.266963909 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.268185084 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.26527786 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.2677557 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.26885079 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.265721859 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.265294893 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.268839152 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.266096589 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.265565482 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.268574691 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.266341604 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.26849741 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.268492457 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.265563113 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.266465069 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.268378445 seconds)
  done (took 87.248164121 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.267687968 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.268461287 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267924155 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268086713 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.267511211 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.268738899 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.269526995 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.267757753 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.268788465 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.268475385 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.2687861 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.268907023 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.268650711 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.268958437 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.268021201 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.2686157 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.267742124 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.26823308 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.269367988 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.268396118 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.269002706 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.268917617 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.26976273 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.268938395 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.269873253 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.269413393 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.269235732 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.269377786 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.269212373 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.268998145 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.269911803 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.268751845 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.270079082 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.26934304 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.270483719 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.268651389 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.269155142 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269559521 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.270093268 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.269189789 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.268993594 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.270165741 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.268897313 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.269830705 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.269842432 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.270754207 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.270199883 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.270118628 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.269465492 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.269371411 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.270732189 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.270291568 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.269813904 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.270750812 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.271584541 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.270148878 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26980676 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.27060506 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.2700486 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.271823124 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.270679399 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.27050901 seconds)
  done (took 79.908900623 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270949043 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.270723475 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.268725942 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.268412822 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.271087565 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.269513074 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.270289685 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.27210385 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.27173862 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.270720549 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270841749 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268750497 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268949196 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270376854 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.268711683 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268659003 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268328508 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.268940879 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.271089874 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.269084799 seconds)
  done (took 26.606439717 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.268059568 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.271165606 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.269393648 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.269500248 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.270680018 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.269251687 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.271320275 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2724217 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.268855679 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.272377616 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.271573066 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.272203145 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269703725 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.269584404 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.272213339 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.26946181 seconds)
  done (took 21.537323652 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.271234606 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.272295723 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.272376157 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.271982443 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.269616929 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.270552925 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.272991843 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.269537172 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.270089966 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.273298555 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.272658637 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.273175521 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.272104534 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.273492541 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.270397786 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.271681647 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.270544042 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.270681907 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.273250482 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.272571886 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.271053695 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.270146318 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.274159943 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.272990099 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.271420861 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.272002564 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.271910992 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.2717011 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.271784532 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.274534753 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.271567357 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.271304986 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.27171826 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.271513073 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.273989111 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.271793098 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.273543066 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.274834538 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.274466877 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.274186895 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.274639318 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.272469036 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.273835467 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.273828978 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.273395589 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.274548786 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.271983865 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.273316294 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.273031246 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.27298974 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.275670186 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.275135243 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.274915057 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.276641201 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.274801346 seconds)
  done (took 71.207412022 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.275223553 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.274650054 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.272427734 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.274757764 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.274742516 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.272141862 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.274803982 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.2733292 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.27286302 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.275646097 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.274369435 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.275847955 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.273215655 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.276187804 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.273625529 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.274900049 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.273596601 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.273428171 seconds)
  done (took 24.148427106 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.275108323 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.274466686 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.276120725 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.272497914 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.273022298 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.276483179 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.274088557 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.277131343 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276440648 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.273518748 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273880999 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.276944429 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276728579 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.276355266 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.274433996 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274187978 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.276275687 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.276847623 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.274199547 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.274439723 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.276821772 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276302165 seconds)
  done (took 29.270306295 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.280467079 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.280373568 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.29523007 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.317165705 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.307784087 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.279959101 seconds)
  done (took 8.975112921 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274958548 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277070522 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273984406 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278610302 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277412532 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275892025 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274858964 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274913534 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277837355 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275096004 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275424602 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277701866 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278191522 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275290672 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277858818 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27732789 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275326382 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275435154 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27675089 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279455646 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275309417 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279050963 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275720943 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276297464 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275646862 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275848905 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279131681 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276362421 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276257998 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279829032 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278346955 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276506601 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278868617 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27705433 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279684474 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278823817 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2765112 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279560106 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278651787 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276872513 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279654548 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27907818 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279427491 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27715412 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27848824 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27727437 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277342288 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277423652 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276576503 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279517051 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280554335 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27744571 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279705854 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279875692 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28044603 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280566212 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277266642 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277386736 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279073986 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27813823 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278286023 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280543591 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277514184 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278272684 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279940313 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277342793 seconds)
  done (took 85.540656782 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277898984 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278836206 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277804717 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279585872 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27904882 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277401347 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278402163 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278038864 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278074547 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277931534 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281179697 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278511322 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278610007 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278773267 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278289407 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27869742 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278641601 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278898977 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279590257 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281219815 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278465794 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279990977 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279149266 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278355658 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279682281 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281708659 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278824584 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279380648 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279191452 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279180739 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278559658 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279914922 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279999019 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.278849086 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279327236 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279899535 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279472415 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279956719 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279037639 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281859478 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279510414 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283457902 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280073039 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2801151 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279930709 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280013042 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279680643 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279515108 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280144502 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280509454 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280690165 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281095483 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279872937 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280634039 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279479995 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280960757 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280847335 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280556323 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280929624 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282518069 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280124917 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280645852 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283646364 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281159875 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281300311 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280769205 seconds)
  done (took 85.68396717 seconds)
done (took 1740.620131695 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.366762136 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.355249678 seconds)
  done (took 13.942354044 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.449486553 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.399798065 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.286543562 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.311834066 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.286300951 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.284177699 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.285965171 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.286237162 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.286872006 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.286560651 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.286958485 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.473118255 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.341517187 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.286504938 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.286349177 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.380097929 seconds)
  done (took 42.449950066 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.312047819 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.292440755 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.393347874 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.307903858 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.311920366 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.460455852 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.342119988 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.293838894 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.44468512 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.326348461 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.689896437 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.312360383 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.290531203 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.286400144 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.309200095 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.459576307 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.517196463 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.692030364 seconds)
  done (took 29.263802348 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.688227001 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.305737517 seconds)
  done (took 9.216393794 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.286116316 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.303420422 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.327839013 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.318693835 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.303882614 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.340307918 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.348454638 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.357990412 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.303072881 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.349931147 seconds)
  done (took 64.470540799 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.310293405 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.293991761 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.290121056 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.28960193 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.282950783 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.283635659 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.290153477 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.295555878 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.54889965 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.403846645 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.307912819 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.297618936 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.290707748 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.292365976 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.283416202 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.324430803 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.424310362 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.285474809 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.28441786 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.296077537 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.291442677 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.379046697 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.331134304 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.28694215 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.405611865 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.564851818 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.293141842 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.2973516 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.412453583 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.285344105 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.291166735 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.292544556 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.294086851 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.845841474 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.773817426 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.307817806 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.313413599 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.298820282 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.284835323 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.405453715 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.291947775 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.296511206 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.285189116 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.739004368 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.449180029 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.399088614 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.430789141 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.294899927 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.29382952 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.349694898 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.295951927 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.293283179 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.319434304 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.018212987 seconds)
  done (took 108.0145714 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.324520212 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.783503418 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.454725009 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.302863123 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.124414689 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.044799214 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.287675271 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.54208602 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.300367495 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.285483878 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.55146214 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.765370085 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.292435725 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.354716773 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.759808142 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.377307341 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.286753405 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.119985441 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.290192566 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.289446399 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.694525147 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304018338 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.28735591 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.329813602 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.324641083 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.717986758 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.61087137 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.765788237 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.289661192 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.287046235 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.729609409 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.297872905 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.313043355 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.288794625 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.546910491 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.616829635 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.595140801 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.289172533 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.298125254 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.288659195 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.310032716 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.717550647 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.606177177 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.28895485 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.287459564 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.726649854 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.289754889 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.290631839 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.291912607 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.494065117 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.08679747 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.289007945 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.606811865 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.289462889 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.629000799 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.386509894 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.343706838 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.753699764 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.290635977 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.398534077 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.332605061 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.290195212 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.292817706 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.292343733 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.29176231 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.611000952 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.67979085 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.29246554 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.611968952 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.726524747 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.290538891 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.792999369 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.121681383 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.306878285 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.342939125 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.289953565 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.999245662 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.758156197 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.299651501 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.289388521 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.596191539 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.293841856 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.555864052 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.302921591 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.291762742 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.706770944 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.30777993 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.337460269 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.300570523 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.298828585 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.063029704 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.293841325 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.544009992 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.320827316 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.289777439 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.290098033 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.294308789 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.291132355 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.292023749 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.291261652 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.793173498 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.299183057 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.406311069 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.309492692 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.292263056 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.29038937 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.289137846 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.292661558 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.514469191 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.757675766 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.292371939 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.291232004 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.290472961 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.298808572 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.556091951 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.290311008 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.57152064 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.293047717 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291147066 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.290362901 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.100897788 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.311142955 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.292074593 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.306347116 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.134896689 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.499790887 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.311166619 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.29286628 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.292341626 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.308011308 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.554467002 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.292385809 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.294429284 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.291002553 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.968250636 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.301957557 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.314738838 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.715938396 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.29607877 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.169702288 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.317514419 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.292868909 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.59337228 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.554179676 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.562804433 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.292890396 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.309487728 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.964835218 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.309471074 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.439429896 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.31033845 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.307108354 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.490152772 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.496460977 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.293238706 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.845722942 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.293636351 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.509528308 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.295093614 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.606323724 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.761668466 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.295753699 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.301043453 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.976336317 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.945956436 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.094710739 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.294933226 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.557119357 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.262326884 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.751158401 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.293621052 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.302578152 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.873450549 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.297166916 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.300851003 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.293991332 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.29382588 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.353134575 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.468030283 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.50629872 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.297392936 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.731718368 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.306935807 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.295510937 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.29655287 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.297728657 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.644936046 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.295323293 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.297912553 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.317631709 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.29540814 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.294727554 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.738407857 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.1550927 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.297291632 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.446545446 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.903006393 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.296637998 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.294440983 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.91297047 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.559610432 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.820800048 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.335683424 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.579465282 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.304870311 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.334535606 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.065403991 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.300239867 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.740881429 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30080942 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.295665208 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.886858012 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.296684363 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.403400213 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.296176861 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.296906722 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.812374748 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.298480637 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.299164283 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.594710589 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.298160157 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.550427997 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.298054652 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.335932334 seconds)
  done (took 1100.688435458 seconds)
done (took 1369.266368337 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.297489067 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.297781027 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.280850067 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.297635002 seconds)
  done (took 26.409821332 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.300710585 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.301497332 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.298691102 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.300656845 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.298785317 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.301583227 seconds)
  done (took 9.03558314 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.33254742 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.295448776 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.296564094 seconds)
  done (took 19.159174852 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.502647116 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.491027386 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.639058638 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.315150861 seconds)
  done (took 10.182002914 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.299132003 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.29957392 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.298859758 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.299905112 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.300416311 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.301754258 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.299177562 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.300447679 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.302241016 seconds)
  done (took 12.93429085 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.899865519 seconds)
done (took 83.857087877 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.30302723 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.278924501 seconds)
    (3/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.483468852 seconds)
    (4/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.301808924 seconds)
    (5/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.85211202 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.544127502 seconds)
    (7/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.652605897 seconds)
    (8/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.990542084 seconds)
    (9/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.605247268 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.349009715 seconds)
    (11/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.297278555 seconds)
    (12/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.791704789 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.320289218 seconds)
    (14/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.07333926 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.066351632 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.406643336 seconds)
    (17/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.853261664 seconds)
    (18/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.308985782 seconds)
    (19/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.311865083 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.298684228 seconds)
    (21/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.280633757 seconds)
    (22/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.505110843 seconds)
    (23/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.447698326 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.098251339 seconds)
    (25/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.877637126 seconds)
    (26/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.51843317 seconds)
    (27/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.321405256 seconds)
    (28/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.881421882 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.701544518 seconds)
    (30/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.312737194 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.426422335 seconds)
    (32/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.29659444 seconds)
    (33/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.363261943 seconds)
    (34/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.432319941 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.694402697 seconds)
    (36/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.023140066 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.316141634 seconds)
    (38/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.619051318 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.301210159 seconds)
    (40/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.320760487 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.41315933 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.534547261 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.404426509 seconds)
    (44/309) benchmarking ("sort", Float64, false)...
    done (took 5.509299782 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.55528014 seconds)
    (46/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.999264993 seconds)
    (47/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.393875293 seconds)
    (48/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.084220195 seconds)
    (49/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.547543905 seconds)
    (50/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.451612704 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.158843453 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.61732285 seconds)
    (53/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.667808888 seconds)
    (54/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.352382654 seconds)
    (55/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.477616331 seconds)
    (56/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.464075631 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.282786807 seconds)
    (58/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.887115621 seconds)
    (59/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.414321601 seconds)
    (60/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.451572392 seconds)
    (61/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.305636691 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.598550852 seconds)
    (63/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.122961074 seconds)
    (64/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.285645641 seconds)
    (65/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.324212748 seconds)
    (66/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.476430728 seconds)
    (67/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.831766168 seconds)
    (68/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.994310107 seconds)
    (69/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.000131346 seconds)
    (70/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.000001181 seconds)
    (71/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.380692212 seconds)
    (72/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.281472376 seconds)
    (73/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.37982998 seconds)
    (74/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.477596362 seconds)
    (75/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.2825136 seconds)
    (76/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.65148509 seconds)
    (77/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.719899752 seconds)
    (78/309) benchmarking ("sort", Float32, false)...
    done (took 5.282382716 seconds)
    (79/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.87832136 seconds)
    (80/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.569990784 seconds)
    (81/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.502921674 seconds)
    (82/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.715536621 seconds)
    (83/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.885795987 seconds)
    (84/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.335636425 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.647429742 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.471790481 seconds)
    (87/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.558436835 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.190082284 seconds)
    (89/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.359189422 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.704979677 seconds)
    (91/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.397761502 seconds)
    (92/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.334862766 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.850653257 seconds)
    (94/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.825114234 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.335900374 seconds)
    (96/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.324560579 seconds)
    (97/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.379072342 seconds)
    (98/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.321810468 seconds)
    (99/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.592459255 seconds)
    (100/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.340175445 seconds)
    (101/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.077183061 seconds)
    (102/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.481749649 seconds)
    (103/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.579862882 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.372300894 seconds)
    (105/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.38284508 seconds)
    (106/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.804958276 seconds)
    (107/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.427760196 seconds)
    (108/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.64420341 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.303951119 seconds)
    (110/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.377204524 seconds)
    (111/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.30862788 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.341825766 seconds)
    (113/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.58261517 seconds)
    (114/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.441585375 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.401026847 seconds)
    (116/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.430176426 seconds)
    (117/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.297680326 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.533100761 seconds)
    (119/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.323273094 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.705241858 seconds)
    (121/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.743642259 seconds)
    (122/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.321327066 seconds)
    (123/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.5701417 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.304376965 seconds)
    (125/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.284590017 seconds)
    (126/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.338731112 seconds)
    (127/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.358506291 seconds)
    (128/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.319250001 seconds)
    (129/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.326086965 seconds)
    (130/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.417874538 seconds)
    (131/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.284456643 seconds)
    (132/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.330588433 seconds)
    (133/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.553541572 seconds)
    (134/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.496589375 seconds)
    (135/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.437276986 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 1.808196562 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.3242071 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.371828672 seconds)
    (139/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.074125144 seconds)
    (140/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.49365619 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.577123295 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.99980089 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.138536488 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.595140262 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.644650672 seconds)
    (146/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.317244002 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.492291353 seconds)
    (148/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.591003095 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.403591074 seconds)
    (150/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.949015473 seconds)
    (151/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.307033914 seconds)
    (152/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.316075606 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.304726833 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.001013778 seconds)
    (155/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.472939791 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.328548423 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.491673833 seconds)
    (158/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.295517302 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.286380053 seconds)
    (160/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.332035377 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.322405919 seconds)
    (162/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.363672148 seconds)
    (163/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.018219598 seconds)
    (164/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.866039985 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.84850562 seconds)
    (166/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.058645044 seconds)
    (167/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.328396507 seconds)
    (168/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.022421855 seconds)
    (169/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.825126194 seconds)
    (170/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.464031844 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.304222237 seconds)
    (172/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.533213996 seconds)
    (173/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.661249418 seconds)
    (174/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.323587327 seconds)
    (175/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.309953202 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.157442001 seconds)
    (177/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.383261436 seconds)
    (178/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.568583948 seconds)
    (179/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.386951072 seconds)
    (180/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.640418433 seconds)
    (181/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.318767939 seconds)
    (182/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.321070803 seconds)
    (183/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.09467145 seconds)
    (184/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.654430089 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.102704122 seconds)
    (186/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.590460023 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.324169248 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.920185119 seconds)
    (189/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.685974506 seconds)
    (190/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.321679697 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.310542516 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.672806474 seconds)
    (193/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.405408735 seconds)
    (194/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.330104521 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.308990579 seconds)
    (196/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.827030193 seconds)
    (197/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.653990287 seconds)
    (198/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.605611708 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.346828018 seconds)
    (200/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.288605454 seconds)
    (201/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.422386403 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.361445638 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.379982809 seconds)
    (204/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.321254368 seconds)
    (205/309) benchmarking ("sort", Int8, false)...
    done (took 4.333737669 seconds)
    (206/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.530440268 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.312764642 seconds)
    (208/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.59594896 seconds)
    (209/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.293683105 seconds)
    (210/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.3667464 seconds)
    (211/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.311642461 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.990003533 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.52357642 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.326805717 seconds)
    (215/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.331707866 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.139853538 seconds)
    (217/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.393006719 seconds)
    (218/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.308682723 seconds)
    (219/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.736067589 seconds)
    (220/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.334443832 seconds)
    (221/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.630024634 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.791573468 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.328256269 seconds)
    (224/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.556159296 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.856779259 seconds)
    (226/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.294983204 seconds)
    (227/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.431808781 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.346442201 seconds)
    (229/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.473953061 seconds)
    (230/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.370139806 seconds)
    (231/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.364888547 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.354733388 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.603619075 seconds)
    (234/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.433710693 seconds)
    (235/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.487694755 seconds)
    (236/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.50415361 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.32673401 seconds)
    (238/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.815873149 seconds)
    (239/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.82830238 seconds)
    (240/309) benchmarking ("sort", BigInt, false)...
    done (took 6.312909798 seconds)
    (241/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.407980258 seconds)
    (242/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.333270042 seconds)
    (243/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.024572667 seconds)
    (244/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.088264633 seconds)
    (245/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.518569506 seconds)
    (246/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.333534986 seconds)
    (247/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.292659164 seconds)
    (248/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.415824584 seconds)
    (249/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.119685227 seconds)
    (250/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.535782443 seconds)
    (251/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.394598663 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.703664946 seconds)
    (253/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.872577512 seconds)
    (254/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.313201846 seconds)
    (255/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.333858788 seconds)
    (256/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.791936989 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.914653445 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.510969707 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.013273121 seconds)
    (260/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.325155391 seconds)
    (261/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.37050416 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.3561971 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.333768736 seconds)
    (264/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.766022748 seconds)
    (265/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.785925646 seconds)
    (266/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.922092306 seconds)
    (267/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.658962995 seconds)
    (268/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.651411496 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.696025249 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.681526661 seconds)
    (271/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.82592172 seconds)
    (272/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.436468926 seconds)
    (273/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.303278951 seconds)
    (274/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.666648632 seconds)
    (275/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.408373789 seconds)
    (276/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.293476241 seconds)
    (277/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.347443306 seconds)
    (278/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.372806649 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.402597117 seconds)
    (280/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.313460243 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.124737937 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.334743512 seconds)
    (283/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.10818425 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.716484605 seconds)
    (285/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.318755229 seconds)
    (286/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.29769756 seconds)
    (287/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.812534868 seconds)
    (288/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.904939138 seconds)
    (289/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.611476305 seconds)
    (290/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.314937267 seconds)
    (291/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.926281664 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.403713236 seconds)
    (293/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.295150069 seconds)
    (294/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.392244963 seconds)
    (295/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.016796672 seconds)
    (296/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.426817319 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.064740166 seconds)
    (298/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.000814988 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.182825984 seconds)
    (300/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.318595498 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.353112036 seconds)
    (302/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.296803464 seconds)
    (303/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.32899814 seconds)
    (304/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.090966964 seconds)
    (305/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.774572011 seconds)
    (306/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.326784112 seconds)
    (307/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.295923381 seconds)
    (308/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.333592497 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.294952997 seconds)
  done (took 901.896775797 seconds)
done (took 903.133746919 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.342858131 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.336596424 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.320274983 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.34244653 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.432234393 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.353903161 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.331303986 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.322340319 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.368703135 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.370485188 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.319588525 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.352929378 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.322576625 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.32147104 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.320304873 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.335274116 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.268790551 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.324550345 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.337928274 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.331736873 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.337234356 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.320340006 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.370467992 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.353107209 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.324815857 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.324405309 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.324213579 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.341841758 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.433749427 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.32575982 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.326269582 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.333405029 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.270688742 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.323462941 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.316987047 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.341447481 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.333547241 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.332105231 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.326326269 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.353912143 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.638245049 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.32195456 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.323082002 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.323742996 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.323275224 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.327228434 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.324189057 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.330397641 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.335543116 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.337426206 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.64960742 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.340813942 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.325899655 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.323265046 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.33463961 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.324775162 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.326655198 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.339445385 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.343325695 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.338610722 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.266801648 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.33136012 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.325935133 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.339725688 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.331672008 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.698267095 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.321714245 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.328566821 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.654341514 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.331472948 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.678092822 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.334772151 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.326549867 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.339400096 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.356639189 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.276651414 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.322227591 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.323972172 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.331836673 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.323771826 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.334943496 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.337055883 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.329871218 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.325833926 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.338938014 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.357036457 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.334337724 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.325629563 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.334087824 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.344325866 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.33277412 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.336110494 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.327657426 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.320328121 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.335565251 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.328354848 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.328223615 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.327605107 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.329969122 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.336028725 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.655568625 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.345043387 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.322688092 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.322877787 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.325235361 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.339034998 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.66199102 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.32983282 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.347599112 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.373512667 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.327046692 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.276441433 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.331757318 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.343135639 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.335159864 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.330265013 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.321494099 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.277592965 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.651624258 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.344648332 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.329632722 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.326713871 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.34284131 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.329380301 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.324628921 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.285077489 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.331073945 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.341679837 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.448641983 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.338423542 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.359354386 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.326964193 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.330608349 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.359790864 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.343206044 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.358922428 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.330930988 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.343798661 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.343171973 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.325498999 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.338834453 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.33903528 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.32870276 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.335482371 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.322826693 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.35730505 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.341198918 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.340871679 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.350589951 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.450702326 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.325886069 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.280009539 seconds)
done (took 222.666969761 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.391785034 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.325661653 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.422013432 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.326009154 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.426877802 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.427111028 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.323188649 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.323462532 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.322400912 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.703559602 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.322857185 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.322271585 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.326665161 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.323760762 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.411851419 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.325299259 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.323239174 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.668942967 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.326278652 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.400082642 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.326663292 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.322679438 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.325363658 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.712487307 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.325223733 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.323771907 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.400483664 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.325324746 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.676129818 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.330218987 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.326713061 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.677108815 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.423095113 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.344440505 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.336130708 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.33447518 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.429504634 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.345145757 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.41214776 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.412260496 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.423844906 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.365307292 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.33034931 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.328374495 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.331057046 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.3280212 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.325171143 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.353529269 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.325028492 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.325774651 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.668389337 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.337315156 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.32623036 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.325427471 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.324575773 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.356924928 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.325296999 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.327641969 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.424113333 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.328701188 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.394336367 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.71387224 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.70733044 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.328942155 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.327835401 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.325814585 seconds)
  done (took 148.094227603 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.39737717 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.405249796 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.440545039 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.335568003 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.381424933 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.444413653 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.335710741 seconds)
  done (took 11.002635477 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.339578924 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.329011522 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.383276146 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.382522786 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.329384055 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.481859954 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.329851716 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.344745303 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.326251662 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.387017392 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.331246296 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.329789127 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.336847252 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.335326161 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.381988361 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.344870569 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.448267282 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.334671046 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.329851486 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.490933519 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.328036108 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.335800742 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.385565236 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.345426129 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.330994031 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.339200389 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.899228041 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.329688651 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.327641593 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.330244398 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.327002199 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.371971768 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.330215582 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.334231987 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.328191037 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.449858302 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.330658822 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.328436779 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.332022137 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.329158126 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.330856132 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.330070312 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.330059221 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.327812294 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.330835715 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.358045251 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.331221685 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.330638562 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.331024111 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.332601932 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.385721318 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.33123995 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.328484251 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.328161608 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.391341258 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.339092771 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.332014539 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.329101115 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.332187434 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.328844304 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.492492233 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.383938264 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.331392535 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.382089273 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.332583006 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.331348451 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.332498994 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.331416552 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.390853551 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.332597136 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.3846287 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.330635373 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.490819634 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.359885331 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.334538654 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.339262422 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.339710774 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.333504728 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.337794327 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.342523572 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.329716757 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.338142385 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.342610305 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.331317723 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.330056154 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.438224238 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.446772776 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.331655006 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.349399559 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.344190697 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.331360108 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.390634067 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.334586611 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.330801995 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.389196254 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.451917125 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.391171455 seconds)
  done (took 153.175086355 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.343609518 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.34456601 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.339386289 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.354255511 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.337428745 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.337871369 seconds)
  done (took 9.325790927 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.340483991 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.334157914 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.333651145 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.335217881 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.334557274 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.333626733 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.335139301 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.340756765 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.337938248 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.334249369 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.334074873 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.335940129 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.33437036 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.334273604 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.335152758 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.334441336 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.334012369 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.331434604 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.335394413 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.334677374 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.433040353 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.33429683 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.335777963 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.33976764 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.338733233 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.33462337 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.347843959 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.334548068 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.334866693 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.346137028 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.33838903 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.335398593 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.340110912 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.345106785 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.338254502 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.340488483 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.339231214 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.336491839 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.332927954 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.335733112 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.336225828 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.335624633 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.335611381 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.335746284 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.340610662 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.343963008 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.339449078 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.349478403 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.33794903 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.336825348 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.336886121 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.337338117 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.336770311 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.338114612 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.343547288 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.34525381 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.341255085 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.337103473 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.337142464 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.340775153 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.33804444 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.33658195 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.341842355 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.339679165 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.342624544 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.33761653 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.342388348 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.340064605 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.336867621 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.336500142 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.337647583 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.334448511 seconds)
  done (took 98.687186406 seconds)
done (took 421.544517518 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.497273864 seconds)
  done (took 7.76902896 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.388503672 seconds)
  done (took 7.66075511 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.106132043 seconds)
  done (took 20.385608622 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.388732065 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.457172885 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.339970984 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.335654581 seconds)
  done (took 26.793105073 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.529501832 seconds)
  done (took 7.801660432 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.342075888 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.329651322 seconds)
  done (took 13.944347191 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.877689449 seconds)
  done (took 8.15030103 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.138179897 seconds)
  done (took 8.417310029 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.341176464 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.353408169 seconds)
  done (took 13.97593615 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.315835571 seconds)
  done (took 7.588077901 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.3184323 seconds)
  done (took 8.591261826 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.34612659 seconds)
  done (took 7.619544992 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.357924275 seconds)
  done (took 7.630921479 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.777473384 seconds)
  done (took 9.050172218 seconds)
done (took 156.650577079 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.333952251 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.337441649 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.337246147 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.336910914 seconds)
  done (took 26.618645921 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.371524746 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.370954068 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.373320062 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.38266096 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.374392755 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.371748155 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.364705435 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.36428412 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.38281034 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.374074364 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.373372891 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.373828899 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.371663356 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.364272736 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.374809595 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.374264689 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.383338384 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.372962091 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.3654007 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.375965712 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.339137396 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.383338796 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.375622981 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.339547629 seconds)
  done (took 34.17144382 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.539471776 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.41334948 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.495984709 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.394985174 seconds)
  done (took 7.117922702 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.391764153 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.392658348 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.406190875 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.443026815 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.469466143 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.401563593 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.366051826 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.360750273 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.34708856 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.393744357 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.468925598 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.409457483 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.490565502 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.339853182 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.523926091 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.339089069 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.340524099 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.391425539 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.443594996 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.459352595 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.340442047 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.390955255 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.395684864 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.409994585 seconds)
  done (took 34.991772849 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.339242051 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.348114166 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.346698666 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.339940412 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.339412943 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.340524989 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.345343591 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.341305207 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.360831808 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.341171523 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.337929008 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.339277179 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.338867986 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.339153116 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.338763227 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.352193037 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.353660361 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.339765852 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.343166909 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.345613251 seconds)
  done (took 28.148071829 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.338398409 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.192717185 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.689722417 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.595226127 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.337777345 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.340499929 seconds)
  done (took 27.771352161 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.410625709 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.53559042 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.347302843 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.676353129 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.752848719 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.347016486 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.344868487 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.569353444 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.856541095 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.852017583 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.400798628 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.412468413 seconds)
  done (took 19.782733745 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.340613011 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.34203413 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.34057303 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.357715737 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.397705467 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.352759543 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.35220741 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.339559473 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.399949279 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.404814549 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.352668297 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.399137902 seconds)
  done (took 37.6586656 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424612058 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.381297332 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.143253257 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.140129649 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.715145185 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.548324713 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.113636096 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.791025418 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.343013915 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.610560837 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322572169 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443701342 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.592248274 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337269828 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.355751334 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.28249586 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564480917 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811466548 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.340233148 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.188633476 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365013398 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.337353198 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.306217258 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.367818489 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.549636289 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.47010265 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.598763079 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.338077253 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.602596847 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.352682051 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349260559 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337987642 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612972255 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964510115 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430617775 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349781373 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.10923457 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.054058543 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.325786262 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.291979217 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.082352689 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.342641271 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349495337 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33888615 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.273295852 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.350472124 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802488726 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.345669276 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.050587622 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.33876526 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.349626781 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433997462 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.343648189 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.156216604 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.423056241 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.339305678 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.337170798 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350989501 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909643438 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.689470165 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.353411615 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.277850441 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.790436779 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.277229849 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960293092 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.443739895 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.344828374 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.344343832 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274261343 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.249726835 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36021954 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487822012 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.361424344 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.990297547 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090069346 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.336402913 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.287209313 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872947858 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.342072891 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.278721608 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.568984135 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341751047 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.275792748 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.287833 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.274901339 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002221311 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.350263464 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.640597757 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354896221 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.79539097 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.354882826 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358255961 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364550553 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.564934964 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.226409061 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341338081 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.087336646 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48717097 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364336204 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.796801173 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278350893 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.345466284 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596837979 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.554220196 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.351344505 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.292569747 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.553713505 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356450861 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.360182552 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.35519204 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.354742867 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.919565451 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.356412758 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.689663174 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361360276 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.343178758 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03846154 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357245971 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.446034279 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.341013057 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595455239 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.068279512 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346504926 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425595958 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.346710721 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.344916843 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.298577686 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.860298912 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.343850949 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.344975734 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343074119 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.356320483 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.344201438 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292014282 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.344392737 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358203179 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.348752788 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.567173475 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343701857 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.623480233 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.277392293 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491442831 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.437751769 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.566779562 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.466564557 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.343384113 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.601079269 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349788746 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.353983326 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.357471603 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362992819 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442965234 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365931371 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.34482305 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.602573499 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.349802257 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.349546561 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.304563787 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.348902569 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.779745119 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.350727442 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.249970042 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919626926 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323685191 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.355340705 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.234916812 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.359213533 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409308332 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.350592358 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.355541713 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.054558415 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.241165641 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.35312497 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.351412929 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.569399396 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.355194095 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.212685273 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425155954 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.549642335 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.926529791 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.360777724 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.281053431 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.057625556 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.039620444 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346570239 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.281390462 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.346940877 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35504555 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357513887 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.925964523 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.931335933 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349584853 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.212258365 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.35508277 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.357629006 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.350843565 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347397439 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.025156243 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.709891696 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354731578 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.360051605 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.490164745 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.36106811 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.280675002 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.349898005 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.352595459 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.34718152 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.347748271 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38073973 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.220912759 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825974412 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604692783 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.15164073 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.359687349 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.392863846 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.381567859 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.349164948 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.136166528 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366928354 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.360820868 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35672939 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.358549122 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.273075308 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.009601704 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915191698 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.118144463 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878132766 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.272606202 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.351402082 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.351529556 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.806477361 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284613471 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.905194018 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.529919973 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.807516172 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294997032 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.557418825 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.471758218 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.070270594 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.361485493 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.576885425 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268523652 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.149737616 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376776613 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.561249235 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384857229 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.348114625 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.281060049 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.651545876 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614122358 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.133080704 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.433259254 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80808937 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.14495738 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369056729 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.352869908 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.604775783 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520006301 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.061149808 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.521659759 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.349927949 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.365662381 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825950612 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.358666988 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.576426492 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972609949 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366862518 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.559725133 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288335757 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.361464647 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.361502182 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.352317007 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.549040681 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.351733813 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.604826925 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.36170152 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285825503 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.351062297 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898546559 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.253147698 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.358158072 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351996318 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051688015 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362425997 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6197625 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.354916869 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.048667702 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357673281 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.285378087 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285201847 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.044674244 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.359162955 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327005896 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824073993 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.780667745 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.453670601 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372164748 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200664627 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.606541974 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.36608032 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.932672231 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.579225604 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.212692298 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377455165 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.454458908 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.192131831 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.356797259 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.352733757 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.588840697 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262301379 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.575896653 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.174552225 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.258454408 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.356663026 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.565498366 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.352399441 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.352940269 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587403425 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.062621362 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.356866789 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.130430353 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380640554 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.355761438 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.270566995 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.803296721 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.366650198 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433246269 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.363873751 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.363823339 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.364360745 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519348308 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356796215 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.359113911 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.368137963 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449495931 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.740643511 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.03151559 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.360941376 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939234286 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.070361332 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.945116238 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36972223 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.354812291 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36400112 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288037216 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503622167 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.580359047 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.628102476 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485906947 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.917802935 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377400498 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.200330985 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374758357 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568546602 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629523825 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.249876204 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355121307 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.370058423 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.355313091 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.365006968 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.56644448 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835599463 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.896969117 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477556564 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.366899254 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.812891034 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.631734703 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356084945 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.35522363 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.94592398 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.36100209 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.617601606 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.36332759 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368102673 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50733614 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.365023512 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987789357 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.364873277 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.512918302 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.129889084 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.328338524 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.613177311 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.778319896 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.367572064 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943542719 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.058472577 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62078891 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423749103 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366935555 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.465294005 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502637932 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.357490131 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.360364465 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.356373651 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202000718 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.068670264 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.366610241 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951754262 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622559852 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.355102957 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.362701214 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382516411 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.367191863 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.579884889 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029494604 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.582270928 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.368482617 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.364541757 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.171697905 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952523339 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.371380964 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292196733 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.360580272 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587225209 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.593478106 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377425829 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.810838764 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.068936609 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898314847 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.330695768 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38020935 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357890535 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.064687232 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950693041 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.03597039 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835262507 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.918329845 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372414921 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635748505 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.363578436 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.358551436 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637319161 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.362540031 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.373040253 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.372201577 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.942978463 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.089690543 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.363020726 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.262430699 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.298600773 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.701192673 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.065689301 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297990166 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367899741 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.539670624 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.361689661 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.488451292 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370652838 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.367451973 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373187979 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.117176371 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635349064 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.365085767 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.347944426 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.251360017 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.373127393 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373179578 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.627743321 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367172174 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.035478082 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.715376042 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.615393281 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.364920034 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.348220683 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.365027106 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360294227 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.347696063 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.558453106 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.945033975 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904202909 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.365010586 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.373584934 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.364938953 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.576857365 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.572761607 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.361043836 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389517787 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364713396 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379524702 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.265897776 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.863109803 seconds)
  done (took 1598.190076811 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.407474422 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.411106767 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.375299564 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.454655034 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.384721612 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.460452322 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.401680963 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.447399677 seconds)
  done (took 52.645143034 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.375742151 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.585295069 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.395196979 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.372809502 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.377418953 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.377670696 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.796599804 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.366589213 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.37494918 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.375486845 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.375136976 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.368399128 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.975276683 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.375542425 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.377219246 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.364244696 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.377636739 seconds)
  done (took 65.919314315 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.369134227 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.758061817 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.441203753 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.37886301 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.219472475 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.37078593 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.895755074 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.384658896 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.372507031 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.548533861 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.005319516 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.390836973 seconds)
  done (took 84.439676286 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.375121547 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.374820805 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.374431985 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.375664207 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.3752956 seconds)
  done (took 8.179577952 seconds)
done (took 2026.908453891 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.85382771 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.041307466 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.963966037 seconds)
  done (took 5.308804749 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.512375497 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.560927034 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.681006819 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.687539247 seconds)
  done (took 7.742380902 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.645195052 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.743824032 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.550526875 seconds)
  done (took 6.241751793 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.711362866 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.385926386 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.480220563 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.361073913 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.36236827 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.361822829 seconds)
  done (took 20.387248482 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.365369098 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.366776921 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.364469462 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.36744296 seconds)
  done (took 6.764091655 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.345578668 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.207176573 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.346997228 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.361109371 seconds)
  done (took 18.562578236 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.110931618 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.125618759 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.108030874 seconds)
  done (took 7.646669547 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.379497295 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.214657438 seconds)
  done (took 9.896965149 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.65750597 seconds)
  done (took 2.959954398 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.496815286 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.632969359 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.40767721 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.296647799 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.457892258 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.988032184 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.908761986 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.505952235 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.282187466 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.387292607 seconds)
  done (took 27.667407229 seconds)
done (took 126.913694464 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.991199945 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.610159767 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.571711783 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.961830279 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.593545184 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.572374444 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.584838302 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.935813847 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.519611032 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.464177048 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.963313734 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.597509994 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.533646641 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.612549233 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.534185951 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.617858927 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.597862982 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.039621248 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.648467882 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.847596371 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.580264037 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.602134436 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.794442978 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.669637994 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.602556908 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.525233531 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.19958553 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.367685409 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.817959043 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.261866051 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.528843793 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.02007899 seconds)
  done (took 191.072667748 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.368588799 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.369294439 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.386855114 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.381714373 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.368366219 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.384621006 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.374484352 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.369048689 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.379316678 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.368771596 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.382556832 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.368408569 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.369755662 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.375792202 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.371609288 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.369307918 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.379335722 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.380446779 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.374804532 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.369411038 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.371996105 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.383417034 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.37057805 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.373735965 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.376751534 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.369998156 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.383010346 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.382796498 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.369440692 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.369987705 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.371381653 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.371162692 seconds)
  done (took 205.293526218 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.378198743 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.36900915 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.369641045 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.383020693 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.379799978 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.369427381 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.390023319 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.369399534 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.369721686 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.383291943 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.373380717 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.370540086 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.372606384 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.370389492 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.373510057 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.370597387 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.383930339 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.377382877 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.372964956 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.370829637 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.370621894 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.379952355 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.371728914 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.371306309 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.37057632 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.38473982 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.385418833 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.378407325 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.370855853 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.382892878 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.371565852 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.384194218 seconds)
  done (took 205.327955693 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.562046956 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.373919277 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.375252658 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.311071696 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.374666082 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.374212136 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.370608337 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.564577629 seconds)
  done (took 14.614792268 seconds)
done (took 617.611665652 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.577758251 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.298629644 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.565643377 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.394369619 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.112964548 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.400277855 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.394405528 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.556339319 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.286342157 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.560061366 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.599907367 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.396872116 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.728342763 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.39207265 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.63109926 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.489751181 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.224108063 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.327308988 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.701373914 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.899035517 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.640352777 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.790628854 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.555785758 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.284660982 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.739074496 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.788942867 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.002958166 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.217323338 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.394281886 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.695492077 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.918239484 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.247271705 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.453612726 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.435932345 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.488670476 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.468475862 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.238109168 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.434180506 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.576245793 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.552698493 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.882573547 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.102020601 seconds)
  done (took 91.754460332 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.364147566 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.364562165 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.362409229 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.364818791 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.365956142 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.364484654 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.364275231 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.363467715 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.364299496 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.364254141 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.364802992 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.365467061 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.363176128 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.364812807 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.365349041 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.363382307 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.363678644 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.365494336 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.362411748 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.362545608 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.363768253 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.363188236 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.363743716 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.363466536 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.363632837 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.363906691 seconds)
  done (took 36.77653622 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.376758001 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.605542011 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.779045092 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.390343083 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.380211515 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.385409511 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.453617786 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.37794945 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.384095492 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.384370367 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.531669483 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.380155401 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.414528898 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.788451068 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.386836269 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.377987859 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.377994045 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.383101587 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.613504526 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.392937039 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.457338473 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.379834261 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.456093724 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.392220283 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.385640745 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.382986962 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.387117351 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.874558835 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.385270912 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.534034173 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.124543478 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.455887177 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.82253192 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.79338618 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.125924566 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.382252388 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.378915187 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.53866618 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.38573515 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.383208395 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.456484076 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.384566985 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.791827756 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.004197075 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.401522642 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.378308338 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.894557548 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.537848116 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.614496254 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.392637608 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.81165094 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.389648955 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.38019482 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.385132193 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.614537954 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.390889109 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.38317448 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.899082291 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.388406075 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.456975614 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.380799109 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.384097526 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.623945997 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.387624683 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.611937232 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.388622799 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.392318653 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.384765007 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.793410782 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.389586897 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.016573085 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.401381132 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.380446183 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.53433532 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.611670623 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.926155757 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.387438452 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.627588135 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.83712526 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.457276522 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.389172136 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.864381136 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.460725925 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.389157021 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.381930989 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.382653406 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.381149813 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.425757214 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.455911986 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.948632425 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.014045688 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.915762219 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.460678231 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.398417051 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.385985971 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.901129678 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.383279489 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.381745983 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.787754999 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.024309175 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.402098909 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.393041721 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.005231411 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.403213172 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.459539532 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.392599437 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.800454429 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.38984044 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.426425136 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.382411824 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.39299185 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.388943938 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.460155836 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.390262873 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.382358098 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.991849749 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.557830725 seconds)
  done (took 180.731081344 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.380048075 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.380657683 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.391613562 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.37982926 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.381103786 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.385177316 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.380289739 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.381194139 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.385826381 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.380585754 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.381421705 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.383696236 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.381841162 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.38814456 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.40667288 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.388479406 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.992472919 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.37980607 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.382132096 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.395585584 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.170845359 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.384824523 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.395733057 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.381451816 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.381213524 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.383139755 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.382370572 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.381830824 seconds)
  done (took 153.485154118 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.384436978 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.914182306 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.383893171 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.512419749 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.403009231 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.382287702 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.510133866 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.444927049 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.392478912 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.382062708 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.382889732 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.670042431 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.386205156 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.865257859 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.567676603 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.508659618 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.869395037 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.385486744 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.382035897 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.382224256 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.513377405 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.390220929 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.67132676 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.916834211 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.386343224 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.917357997 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.373415287 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.384896484 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.388962424 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.91973603 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.383842206 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.669768567 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.462294585 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.445741356 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.923182333 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.871983947 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.869840283 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.524444002 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.392820082 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.38415294 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.384085058 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.372522548 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.920665304 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.38734439 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.390799494 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.910823944 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.400421754 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.386627944 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.394636121 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.383137599 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.445460923 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.450221236 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.68017529 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.928776915 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.457072973 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.405886545 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.512763753 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.743435445 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.387602214 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.87193582 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.374018901 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.924506471 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.389844946 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.374021209 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.386211402 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.390398029 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.526903699 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.509928941 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.87667415 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.393204218 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.873366642 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.526785924 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.385523379 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.385753841 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.38846779 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.923666591 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.875697266 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.527941167 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.516245355 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.572709645 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.37949592 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.391323262 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.375762899 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.463676441 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.386663495 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.921129865 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.875820855 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.389839188 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.388225745 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.38854755 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.387963591 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.556177496 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.92932722 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.465019021 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.863772316 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.692777742 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.679229087 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.389579316 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.442866104 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.390109602 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.68058368 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.390107342 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.44153261 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.805030143 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.679429682 seconds)
  done (took 163.912575268 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.621755056 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.501584652 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.475126321 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.502271068 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.899062921 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.94480353 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.508228831 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.513917344 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.492642119 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.631843526 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.482433102 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.480100682 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.562946137 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.461629924 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.063043566 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.457292338 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.478491727 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.526160222 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.494174121 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.375833298 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.00644264 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.67596218 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.553549234 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.365832981 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.484419987 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.150933107 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.917209499 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.890094614 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.551185888 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.582781478 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.899103314 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.467203448 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.297269774 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.030254685 seconds)
  done (took 65.66889582 seconds)
done (took 693.637887247 seconds)
SAVING RESULT...
DONE!
