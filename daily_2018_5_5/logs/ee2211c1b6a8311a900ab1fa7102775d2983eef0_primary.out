cset: moving following pidspec: 32484
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.423174651 seconds)
loading group "string"... done (took 0.493817798 seconds)
loading group "linalg"... done (took 8.755830683 seconds)
loading group "parallel"... done (took 0.170951284 seconds)
loading group "find"... done (took 1.250457781 seconds)
loading group "tuple"... done (took 1.83764955 seconds)
loading group "dates"... done (took 1.334240577 seconds)
loading group "micro"... done (took 0.191971611 seconds)
loading group "io"... done (took 0.500705417 seconds)
loading group "scalar"... done (took 49.895210455 seconds)
loading group "sparse"... done (took 13.722221006 seconds)
loading group "broadcast"... done (took 1.282191294 seconds)
loading group "union"... done (took 10.004986641 seconds)
loading group "simd"... done (took 3.002282156 seconds)
loading group "random"... done (took 11.324609966 seconds)
loading group "problem"... done (took 2.195587356 seconds)
loading group "array"... done (took 23.882216434 seconds)
loading group "misc"... done (took 1.0966746 seconds)
loading group "sort"... done (took 3.71395012 seconds)
loading group "collection"... done (took 19.102920827 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.60893503 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125523694 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.262002465 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.280455198 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.236665867 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.171112636 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.141258875 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.260854089 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.569354852 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.206460976 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140290316 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.512474283 seconds)
done (took 6.335022604 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.25130781 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.178642502 seconds)
    (2/2) benchmarking "String"...
    done (took 0.162095996 seconds)
  done (took 1.105295885 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.077370301 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.156650261 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108838746 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.097501173 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.09686886 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.112610834 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095866217 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.112541582 seconds)
  done (took 1.547506743 seconds)
done (took 3.750263528 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.513053027 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.87512122 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.504288895 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.170216532 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.316143323 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.313734093 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.327910808 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.208361203 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.112243931 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.09711898 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.183939144 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.394782444 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.435138648 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.945099343 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.09278705 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.100246298 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.135490765 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.764534289 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.083008364 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.124214621 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.492315323 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.185240003 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.100549118 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.120844775 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.186830686 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.134398854 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.16312967 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.105216565 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.660388906 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.136166901 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.180057877 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.099699916 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.159949826 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.199999698 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.211519986 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.093267546 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678748493 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202680901 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08935 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100090133 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.668462497 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.124922412 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.188262886 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.104575227 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.092812383 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.182264657 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.093309663 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.079215808 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.116375853 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.086239572 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.166784145 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.456148693 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.110686167 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.177930503 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.095282088 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.695749232 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.10417113 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.280906803 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.128235642 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096824241 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.092680109 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088457286 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.162302772 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095792138 seconds)
  done (took 20.288361696 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.14790259 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.165871337 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078216964 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.1580269 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.127270577 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.081457181 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.105425129 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07965263 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12896613 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.237951446 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.144588108 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.156286951 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.096214814 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.093668381 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.148544327 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.233258755 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109582054 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.123871997 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.090151259 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107324795 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12556206 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096180181 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108310574 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094735573 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.174892939 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207276517 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108374762 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122689543 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092754549 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.097425802 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14476831 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.151019228 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096219136 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091814385 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.194468321 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109755531 seconds)
  done (took 5.415479906 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.198835111 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124208308 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.215070377 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.167096457 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146954628 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.17239674 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.150816442 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.276150838 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.283823541 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166148222 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133012123 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.110392274 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101048044 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08467889 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.082258232 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.483943759 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.153055394 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.17476225 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.1348783 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109069211 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082326621 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.186665987 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102374955 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083669811 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087597952 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.138235044 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.086288852 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.328074686 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.18472808 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104584215 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.12746784 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.08513469 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089829927 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133962426 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.201139314 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.145231981 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.128258321 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10329669 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083878596 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.228083225 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.096630767 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079336637 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.139380467 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135383471 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120847972 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.102823201 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.099499845 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.231259279 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.086347 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.131166805 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.069890649 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.198937988 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.127696282 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.084942976 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.104115239 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.105065244 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.089598849 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.298931192 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.106636414 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.256598947 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.116448259 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.085035946 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.103625186 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.082286814 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088968288 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.100737483 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.434330295 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.096248005 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.185445345 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.086900226 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.165961387 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.087959696 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106682732 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086875136 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085657933 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.124493474 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.084509691 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080762749 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.101638667 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083550511 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.088090422 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.11059496 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08932934 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098469572 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150304506 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.102945466 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.122925787 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112297344 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.106246919 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.083897205 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129764782 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087159427 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.087465507 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.171919117 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.090362149 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108812728 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.090810815 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.14889825 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085029246 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.25496472 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08541229 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.111755697 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.107642837 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131159344 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.106564721 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08135887 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.103506114 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.080023629 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080105115 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.161560641 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.085987762 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085114009 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.084346041 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.113818467 seconds)
  done (took 23.87614949 seconds)
done (took 50.345755406 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.44062573 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084251969 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082395402 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102533343 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083537574 seconds)
  done (took 1.636396645 seconds)
done (took 2.455765111 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.319172488 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.189878326 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.103126086 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.189487437 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086514295 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.192847669 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.181093114 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096428553 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.204084338 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.08508594 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.185704062 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084760424 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.104941465 seconds)
  done (took 2.867652902 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.1033799 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107005793 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100711642 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118348025 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084690607 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099747745 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117417547 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109827572 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098213328 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110630827 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.085295651 seconds)
  done (took 1.954895175 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098977334 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106109933 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097574713 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115260785 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083712785 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096519484 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114358389 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108102864 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097220088 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110517716 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084397172 seconds)
  done (took 1.934408641 seconds)
done (took 7.57335345 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.081918619 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.59846203 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.146623819 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.21361583 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.365949379 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.239761079 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.555198682 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.173020792 seconds)
  done (took 14.34716333 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.121973686 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090346464 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.109631262 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096013646 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.139912107 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.109811406 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092432727 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093007268 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.115450091 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.095505917 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091759891 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.109099119 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.092592787 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.093935486 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.109306064 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096834694 seconds)
  done (took 2.534097031 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.144471152 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.140856013 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098875333 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.099363388 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.114239344 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.100433046 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102355809 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.117134515 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095453619 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.096673295 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.118963289 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.100070592 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096942428 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.110220623 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.099626993 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.117127587 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.111894824 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.09958229 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.115821731 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.116091455 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.099527435 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096344121 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.115164421 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.100462508 seconds)
  done (took 3.512280951 seconds)
done (took 21.215131818 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.149585502 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101594575 seconds)
  done (took 1.076162742 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.14613828 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.162445257 seconds)
  done (took 1.137496562 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.114529018 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.090692147 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138086045 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.104659593 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091226149 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108865349 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117870829 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.108491342 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.093824839 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091861244 seconds)
  done (took 1.893710445 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.096401986 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095331009 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.122348246 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.139491083 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117021697 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09466867 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.095701331 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.112328657 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.097701496 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.092033299 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.11320473 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.10984446 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.095188078 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127805484 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096344815 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.096497239 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.118342726 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.096034386 seconds)
  done (took 2.750926039 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.092997673 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092637986 seconds)
  done (took 1.022571909 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.095604894 seconds)
    (2/7) benchmarking "second"...
    done (took 0.090669449 seconds)
    (3/7) benchmarking "month"...
    done (took 0.092236713 seconds)
    (4/7) benchmarking "year"...
    done (took 0.111831609 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091505989 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089950459 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.108444318 seconds)
  done (took 1.51603617 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.488449156 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.261201054 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.355757504 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.108692113 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.147730385 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.351809631 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.146992801 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104392195 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.103550356 seconds)
  done (took 2.938365885 seconds)
done (took 13.166261564 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.094184512 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.220434102 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.644707056 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.114933571 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.204888092 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.165683074 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.291513037 seconds)
done (took 2.576172161 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33926461 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.142938119 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081965017 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091369753 seconds)
  done (took 1.490935283 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083158221 seconds)
    (2/2) benchmarking "read"...
    done (took 0.09917792 seconds)
  done (took 1.024080256 seconds)
done (took 3.35744461 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090736318 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.122440377 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.107778655 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090572582 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.089282183 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.088726512 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.108597007 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.089564725 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.088932201 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.10843407 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.090775199 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.090843303 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.088414136 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106226432 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090557787 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088870746 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10469969 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.090314883 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090136239 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088145006 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106648429 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.090312938 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088930718 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.105077762 seconds)
  done (took 3.180320167 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.112795525 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.091165721 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.110699923 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09622677 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093545511 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.110775299 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.095315267 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.090625048 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.111033171 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.092327201 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09447282 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.110378309 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.093043113 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.094657938 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107881709 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.095786231 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093660555 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106651946 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092814957 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.095941641 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092703545 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109468985 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.095300176 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093026153 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.112384469 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093856046 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.091465376 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.108508717 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094683114 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093646912 seconds)
  done (took 3.816590623 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.099240082 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.08703824 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.089648182 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116200917 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.088261427 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.08992759 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.103349382 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.089093568 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091132376 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.088885268 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109419039 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.091322246 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086158122 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.110492735 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092876997 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.093407059 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116204002 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.089633992 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.087767105 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090338965 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.111454167 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.088104245 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.08834125 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.108791273 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.091680625 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.087294615 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089855302 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.108128933 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.091233708 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.08988401 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.110849424 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093946899 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089877997 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.117266906 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.094210468 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089626439 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.112573489 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.088637313 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.090761727 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086590682 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.105468855 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.091644213 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086857167 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.113135909 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.092356611 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090642294 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086103132 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.109295563 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.091919405 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.093272312 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.104997863 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.087998592 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091774616 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.108476637 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.093796606 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.088070499 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090633868 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.105075869 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.091621368 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089705692 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.104550181 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.088783612 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.095240337 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.09038963 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.122945367 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.097054383 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.087389855 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.111279748 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.092384113 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.095773301 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.110670101 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.101081731 seconds)
  done (took 7.797378179 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.104418422 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098655688 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.091582434 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.109944001 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091213967 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.090791889 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113480233 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091884234 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09213179 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116575353 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091188289 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089982447 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.108432692 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093525518 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091200395 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091010139 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.114092815 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091180642 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.090888521 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.1099202 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091349352 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.096020128 seconds)
  done (took 3.010155723 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.237794261 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097785209 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137736877 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.120570032 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109715699 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.122083684 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.095579041 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096415105 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112391514 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10051256 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099668786 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112945758 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109410614 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115969634 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101622959 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101236567 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113248659 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10437067 seconds)
  done (took 2.942714692 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105451506 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092709689 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.128542033 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.094332669 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.092598283 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092305105 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.115597335 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111482745 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.11056431 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.093733145 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.099298879 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109751936 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.094861418 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092700204 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092316927 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.113089121 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.094219936 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092388049 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117760418 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098505672 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.115918155 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100450293 seconds)
  done (took 3.113151613 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106086148 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093380812 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126629234 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096999956 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092146126 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.11024297 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.097890995 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091986113 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.116411408 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.092498369 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092865895 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090860729 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.124812845 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.093562224 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096566314 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110046947 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.093452206 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092588029 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111088568 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092894475 seconds)
  done (took 2.880278586 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.172466327 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125213873 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109039253 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115822325 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126688609 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.109238462 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135980099 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110010413 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108257827 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135753051 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109801178 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107553338 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134091463 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112040337 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125429478 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117632957 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115902439 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.136129899 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108032677 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125161092 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120504059 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107742789 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.135219428 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.107666336 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.124625985 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109293918 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10819759 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131898819 seconds)
  done (took 4.243494624 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09199732 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091235082 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.090830203 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.10916823 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091769381 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091085315 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.090289332 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.109795151 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091720947 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090435338 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.110168036 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092067022 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090152079 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090768568 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.109336331 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091867011 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091606666 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.10902307 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092975867 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090754161 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.108434116 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09248484 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091788114 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090847985 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109371234 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.093284421 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091887165 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108162127 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.092979572 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091661276 seconds)
  done (took 3.746449908 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.10518644 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100423532 seconds)
  done (took 1.066368464 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099789799 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106229744 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.090441958 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109865166 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.098989017 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092057603 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.118005534 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098343472 seconds)
  done (took 1.67581764 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.143835354 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.165662219 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.097490865 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.102843862 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.164014112 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.155493686 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133565189 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.096300832 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.109483437 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.086208911 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.158769719 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.085826209 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.093041412 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108626744 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.0941845 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098238447 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.111622992 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10243781 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.09884171 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.112336475 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098523854 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097105156 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113816477 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103842559 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086307957 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.11414417 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.097548198 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103572042 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107822331 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.09478189 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090458176 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.112131345 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.095957316 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.09588712 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.110987675 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.147832552 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117445343 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090203502 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093239295 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115343954 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126594884 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092691363 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.111978969 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091288964 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094873042 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.114155643 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099078975 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.09244055 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.08432682 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.107046326 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09336226 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0875488 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.110826182 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09441348 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092929311 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11746051 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.094834424 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088994631 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.107372609 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088995214 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090704746 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107500522 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.097257984 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094632932 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111501795 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.094329458 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091987989 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.112239556 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095255178 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.092557643 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110798349 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108843438 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093084707 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.11534531 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098240339 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093081489 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108752986 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099529907 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092136964 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111207477 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098952335 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121057783 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112312274 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.090637448 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.0886168 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.116912722 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097456899 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.095730869 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085261839 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120181175 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.095329072 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093057288 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.105546755 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.092301667 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088505966 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.115303819 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086772001 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093216158 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.111623671 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.098618046 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097182221 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.110226915 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.096042919 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.097043915 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.115782165 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092860227 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.157263371 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091749372 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088531009 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.095167737 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.117662024 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087615178 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.090587972 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.110537083 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09126765 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087833847 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.116119324 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093534298 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.093651724 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.114261503 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097320544 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095436133 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.112275682 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.093918006 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089882706 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.113550701 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10271274 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095608019 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094069127 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.113093852 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093923604 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092380739 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.116308673 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090895785 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09689371 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109178905 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094333407 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.093851384 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.117209286 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.095099102 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089284898 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.110660278 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.096237401 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.091009283 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.113947933 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094880792 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.088935186 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.10493071 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.095236345 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089831438 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.111844097 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102922796 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089513315 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.113501852 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091046428 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100156516 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.108295078 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099278986 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09625955 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.097560028 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117946528 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085478348 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089871113 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.115015966 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095614894 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088991121 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.112401613 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.095737982 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.100085921 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.105092969 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.097898191 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.086048501 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.107785342 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099973874 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.095582566 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.095963009 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.108257896 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.131905743 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103505823 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118340956 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092748903 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.09373127 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.116810157 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.094413411 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.096368374 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117381798 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099255709 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092547199 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.111142895 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100577287 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.08971787 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.11531619 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093262206 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094516229 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.105521613 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.095783889 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.086578831 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.115350678 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.097127433 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.097807989 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.098124415 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115800527 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094231926 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10091397 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.109376867 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.097943266 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085322495 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.11774277 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.104605473 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.097848508 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118640303 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095971503 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090833528 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.113062732 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102254118 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095238423 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.112363223 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097006818 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.087665636 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.106529964 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101221744 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098121696 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088869228 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.112431397 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096132368 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094489662 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.111084366 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087472424 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097441228 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116724812 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.090253403 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094030307 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.110259538 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.09291501 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10062097 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.106896272 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.091121768 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095268871 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.118488418 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095956599 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.094067224 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.115145627 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100133822 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.096215244 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.114185352 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093102163 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102288679 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.091166119 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.113359423 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090182063 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.096047446 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.107602461 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096023371 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09457488 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.110009782 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.091480042 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09708509 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11844474 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100200302 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092335554 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.116573148 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.102316292 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.098729165 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110938153 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.100450588 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.089938444 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.104505856 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.091585259 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.086734948 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09528015 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.10925548 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.09902449 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092256986 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11122886 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.099633592 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095288424 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.111537675 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.099869805 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104421019 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.107880172 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08757535 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.099284832 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.1131457 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.091142581 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089663671 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.114468183 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096333937 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.097291593 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115692345 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.092143932 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.093751899 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.119125522 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092144475 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.099973378 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.119227361 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101823598 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.089726889 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.115917866 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.092659696 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098780608 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086898981 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113349079 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093393651 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111117906 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.093674909 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093157091 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089968839 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.106639364 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.099135618 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100117107 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.112312827 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099388911 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.092782678 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.112315004 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.092250429 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090234844 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.119292915 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.093760053 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.099113465 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.113190391 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.08894884 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087800786 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.097711042 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114569395 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.099251606 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089785918 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.116977449 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.101196036 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.097334355 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.113586407 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103786692 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101903437 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.119010287 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101974071 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087315076 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.111141483 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098876433 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.093378592 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.116284346 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096323813 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.088191997 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114902771 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101261357 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095762147 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.110701881 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08985898 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095255838 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.099347588 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.116534139 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098341258 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.095431671 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113528621 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.09012459 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097935908 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.116510239 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096121175 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101494675 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112715599 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099277856 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.09147402 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.118805538 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.097028119 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088977093 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.088191978 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.110316481 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100695711 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.087978355 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.117363389 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.099157191 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.09157588 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.111608564 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.100305526 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091117272 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114696665 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100225225 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.092192206 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.1211379 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096596372 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092269479 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.098965724 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.119153683 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089507098 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092633968 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11251032 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102771316 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.09310762 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.118430928 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095546783 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100634092 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.116099026 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.099668835 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099670558 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.118359005 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.090315702 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101298625 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115915653 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098101851 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092558198 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093039865 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.109668056 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093671539 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.100868335 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.111720397 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102796522 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100304706 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.113149792 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.094155331 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100340098 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112937552 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102422397 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091735965 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116117935 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.090896518 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.097715459 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.113193308 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102462557 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.090660472 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.108039508 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100623268 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.099780123 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097420269 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.117432481 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101126751 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088161694 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.108025107 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098019125 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.091586675 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.122983629 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098276335 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.092742633 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113685342 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097916395 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096907481 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.120036051 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.092298727 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092139493 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.114804086 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098539198 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.093693406 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.108262183 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101061546 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094360874 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096222803 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.115194999 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.090735056 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.0938879 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.121662819 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.094134651 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.091164285 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.112933654 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102822087 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.094157952 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.111597687 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.091280806 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.100210639 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.117089199 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102233144 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092526631 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.116871875 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.094781371 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.09745536 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.121054272 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.094701805 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094964538 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.114113534 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103370388 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100214291 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.10829752 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.095315977 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104762092 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.118505558 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.100739822 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097995695 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.112843482 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104825818 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102436831 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097017343 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.109899812 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.092096681 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.093712886 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.109364498 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09945744 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100532704 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114806438 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.094550321 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099596091 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119728148 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099784189 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09801889 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089874995 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.121962601 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093750405 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097816122 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.110540155 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090244639 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098555013 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120727236 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096914927 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095994484 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.117321579 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.100035393 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.090077377 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.111747282 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.100437874 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099459851 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100550997 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.115397779 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.094052761 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.098299942 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.125312632 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097833528 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.094422601 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122603776 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102516074 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095418674 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.116623324 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099691654 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.101372143 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.118038541 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103664088 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093350748 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.116034369 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103150876 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.102259503 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124913461 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095192877 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090014572 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.119408276 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094978775 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090273764 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.119355191 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104152491 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102723835 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.115573947 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.094303149 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104284473 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.120911654 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.097435766 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093463607 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.113504882 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101698054 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.094231916 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.118665014 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.094937201 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.102862248 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102658948 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.122488051 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.104683895 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090307576 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121767635 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.099732046 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.102766873 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.118256324 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.09220187 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090349658 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.117649785 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104213957 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102121098 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099202949 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.120331188 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100929586 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.096337241 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115159621 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094473729 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.102833272 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.121910192 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.0987509 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.098744787 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.115173282 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099521681 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097890837 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.12187966 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104147523 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.097993183 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.126269399 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104303151 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095565893 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.112751897 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0988969 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098883708 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.09619794 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.1221567 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.093645897 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.090632911 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122247119 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10369549 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095943115 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.123545571 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103666537 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094517709 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11968341 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104888181 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.102053175 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.117197785 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.098850713 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099809061 seconds)
  done (took 61.992030184 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14779521 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105578195 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119972337 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100245941 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116071804 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120771009 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099389787 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099411462 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120415914 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.111407569 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097665131 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119109439 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11607149 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138779747 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117870793 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110513061 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120361955 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101386604 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098240739 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120295685 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115290423 seconds)
  done (took 3.3132905 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.117137189 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.111595598 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130730805 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.113484827 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105249674 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.130600236 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111248801 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.129685863 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113564873 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10653965 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.134257011 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110297517 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.126924119 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107984952 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107357685 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.128326129 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113283087 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.125310275 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.112087437 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110975375 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.12850863 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110746899 seconds)
  done (took 3.502688553 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.108426647 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102418878 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.100504901 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119045737 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.102617254 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.099522765 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.125691449 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.100093434 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107129746 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.115606434 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.094273503 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.09666142 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.120111843 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.101343686 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.095215882 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.097916637 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.128296983 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102628878 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102607941 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.119795282 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.111492715 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098098932 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.119957257 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.093574652 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.109047122 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.123246464 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.101356546 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102545298 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.112205567 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103633364 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.099329452 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.096991894 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.119426732 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.093600041 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.091825934 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.124312803 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102724027 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.099236822 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.119242439 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.100301143 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.099994376 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.121858005 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.102720941 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.09940967 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.0988604 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.118646192 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102672333 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.099024934 seconds)
  done (took 6.024095441 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.129048141 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.1647372 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.104243311 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.137506219 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135022941 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109111074 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.124045682 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137005991 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101394479 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.124564535 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.114786323 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.135275332 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105738369 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106348399 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.122872149 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105247219 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105317718 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.122720823 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.109247112 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103109987 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.126473368 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.106957804 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.112109606 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.132713133 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106131799 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102847195 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12344504 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108596057 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.131748612 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110211918 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106985155 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.128016931 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.347513805 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107003837 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.124112391 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.105709144 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.114126972 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.125326906 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105695514 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100941186 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.124855808 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107142383 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104019273 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.136042486 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103754054 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.125185743 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105947085 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10068283 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.132273082 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105583436 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.108936638 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.134754229 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105475872 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104306293 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12723723 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.113263349 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.123705268 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.105002535 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.105999543 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.132254511 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.104373752 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105623501 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.134643756 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104156504 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.108935872 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.13495407 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.106948752 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.104675315 seconds)
  done (took 9.169478992 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.136044829 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.107450145 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.135738927 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114539287 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105391835 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.127454024 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107053053 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.125889628 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.107974554 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111593147 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.127489434 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.20215053 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.124476362 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111098337 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.10524219 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.127785841 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.10642503 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125738085 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107479488 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106366533 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.125781983 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115316391 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106171656 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.134058203 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.118191201 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.123722127 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108149098 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.106063436 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134241234 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.107333022 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117604726 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.127166528 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106922488 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.133462777 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.118445591 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105877856 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.122137045 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108128115 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107541891 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.128267654 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104388916 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114688055 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.128979705 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105062721 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126780828 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.108130611 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115112871 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.13702797 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113086794 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.131738011 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.109276008 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117042135 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127970076 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108856247 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113744594 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.142751238 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114944783 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134954217 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107766242 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114213785 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.136625119 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.121527885 seconds)
  done (took 8.343694348 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101692244 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100494083 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098974563 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.119889453 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100911635 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099673359 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.119602075 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.1017277 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100996262 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100060319 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120817275 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101277162 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100520262 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120125294 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.102510178 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099853999 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099587882 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.120997117 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102276326 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099946525 seconds)
  done (took 3.047826186 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110872727 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.117916853 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.121813554 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.110207718 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101862268 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.128971034 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104149543 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103678871 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.122558121 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104171163 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109874911 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129826784 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104616243 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108248809 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.130993557 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10950465 seconds)
  done (took 2.753785802 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120797067 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117909528 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.191265523 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104907193 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.12444621 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110521878 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102607213 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.125731092 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.103711099 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.107526414 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.12661273 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106919864 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103394887 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.10318785 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.124662961 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106556751 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100792625 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.128178354 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104040861 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.191231796 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.10780731 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104245771 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.12509987 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107211651 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104062581 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.128761889 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109708953 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102619581 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.125381174 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104679619 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104052527 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.131998668 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103275606 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105700954 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.123520098 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104791822 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102435977 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.122857791 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107050383 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103022714 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104905719 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.125518451 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103940987 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104910714 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.123106586 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104313689 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101332262 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.129559059 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104920906 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.104743441 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.123718227 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.110556174 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107269593 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.131033926 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.110956501 seconds)
  done (took 7.262965788 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11378902 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103926114 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.132521526 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.102659832 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103617471 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102953514 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.124725791 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105407684 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103641819 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122454259 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104776957 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104335824 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126237897 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105720664 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10405689 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.125111624 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.102062579 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103245948 seconds)
  done (took 2.933123396 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109067402 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102894258 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.106178404 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123398721 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103866807 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101906716 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.1230055 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102720934 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101323743 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.12299353 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104338944 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.104016018 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100774465 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.124420983 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104379659 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10342301 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.123649576 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103151994 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103247829 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.12158384 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.105013519 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101918037 seconds)
  done (took 3.34274953 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.114573756 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.18455558 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.108467401 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.19195338 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099441847 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.098108258 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.129834888 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.100931513 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.113701563 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.121765684 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098806509 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.099042711 seconds)
  done (took 2.40599431 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131071304 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139103671 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.12439663 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105589799 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11056042 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128103923 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109194517 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107106314 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137228651 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11821162 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127690184 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116011663 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114828476 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136687376 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111952611 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132639789 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108893519 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108600008 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125512347 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123779115 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1068571 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137081843 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107983627 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127610392 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109107672 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115753015 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135946595 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1189299 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127842604 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116450716 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11211761 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128645626 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116344501 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139408521 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.105757722 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115509118 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12862206 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123717981 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132513533 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119073502 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104408267 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131975664 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11616725 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111767188 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136602539 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108750112 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133191185 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110983586 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109229273 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150178019 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112425279 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136722359 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113624267 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114511154 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136903495 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128902881 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.1401824 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115830614 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133149165 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119979329 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115033604 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135033962 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11561208 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.140701171 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112669573 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135514505 seconds)
  done (took 9.00978553 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142634468 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104750498 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.130050457 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121243284 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137242856 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110039965 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107627087 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129778534 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110507394 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105467953 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174244831 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109003833 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138711969 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118500747 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107799331 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129969008 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109202255 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115959057 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127055634 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129249992 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129121545 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11788178 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13593067 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118374997 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118914059 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133692986 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109581219 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108208453 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130509438 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108986241 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13401985 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110869166 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1170767 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.126104866 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117419236 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108591919 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130164103 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114259053 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128992638 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114869746 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117175257 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144046373 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109970479 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109083212 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142834681 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108596388 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130049812 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106541756 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108902417 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126711416 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121325985 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14206545 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122295218 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116341819 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131436589 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109276919 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108795487 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130130975 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109098379 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132646416 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118376135 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108612424 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151832124 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108723494 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129459018 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118117311 seconds)
  done (took 8.985377308 seconds)
done (took 170.402414125 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.152419223 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.189422169 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.145905439 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.180555767 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095450934 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.130767724 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.151342399 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.14837761 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.093156173 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.116897431 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.095112992 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.098536213 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.186378414 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094701296 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094584051 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.120953393 seconds)
  done (took 3.040134112 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.197027985 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.309708302 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.113230075 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.12009751 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102902591 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.100686619 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.121267635 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.10181597 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098526239 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128916526 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.103144293 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096825474 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.129177045 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.098018052 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098713592 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.123210206 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107393189 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.100503782 seconds)
  done (took 3.205304493 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.120500974 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143117171 seconds)
  done (took 1.219316783 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129771335 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.194346706 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.284278518 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.168048721 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.12344588 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138458031 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148805454 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134927388 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188013866 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.134780716 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113943313 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099919512 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147865676 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105562069 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.135924482 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.101324546 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12681441 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134888521 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115166596 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100753382 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.144082706 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.104140532 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.10422241 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.136744773 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.178687729 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.135777994 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104280876 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102748051 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124567196 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11425071 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.127146103 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117639706 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.110947011 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174958698 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.125913133 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.149491319 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.129540408 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.101842097 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113789725 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.122595005 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.104637645 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103672755 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.136101051 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.100309172 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102339774 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.13039753 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.104183333 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.124867941 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.108956871 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108796945 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.129727912 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.106695828 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.167995622 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109965355 seconds)
  done (took 7.944591655 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.862676554 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.142190526 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10034358 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.007619446 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150153736 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114323868 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.854942958 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.146041918 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.257469175 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.868183177 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116780396 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.134056599 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.241844797 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.278596059 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.264515749 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359950791 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.717484231 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114290778 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.1297909 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.164584475 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108911392 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149155109 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120668802 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.52317566 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100743964 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.123411844 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.109463501 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.134152802 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158857197 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.122311114 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.106330955 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199722756 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.291340839 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20943645 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.103267471 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.099939018 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121190188 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.164789727 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.271519199 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.239417119 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.176799684 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097538133 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122926659 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.110750895 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.140266662 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.100456854 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180286248 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.170617972 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.191755507 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.126267945 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115623384 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.111307108 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131614063 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.179392491 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101029162 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359532087 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.363121498 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122735636 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109777847 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137383903 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268630042 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.102968712 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234995801 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149224666 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214000132 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.102142567 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.840680509 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.184915122 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.101111053 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.113361028 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.130693269 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106747365 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.13039626 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170989744 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.50557855 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.112391248 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127091164 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101214583 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.234651783 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101800871 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.1206006 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160603952 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.123342369 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.110430045 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115042061 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.136731676 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.191789072 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.248960868 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.13662064 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.109841439 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.127917992 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115100324 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.10240842 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.234478792 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228777587 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.176722362 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.234101186 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10902649 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.181765917 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.18684954 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108202186 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.190532165 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108276107 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.139925034 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109271547 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222774916 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.158640945 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102343817 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.127927531 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.111689652 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.160513419 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105859324 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.110146547 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.189810601 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.55832173 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.185071916 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.099135 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106828475 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.133067783 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159200554 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131626994 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263507726 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110488884 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.187849376 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.10925472 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.121256313 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110213169 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.184110089 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110414431 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131591101 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109742853 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.134190161 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.259367376 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220399492 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.136895218 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.252578174 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.177471962 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.132276158 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.192671517 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111379707 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190133859 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.112360699 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130695172 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10473144 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.832055477 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115246659 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131568678 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106522089 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.211924019 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.10234534 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103965658 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124589346 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.100078672 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.81480564 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105151077 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121447442 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.105226531 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108913428 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.131896564 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109591374 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.106946362 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180515564 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242149541 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.13801392 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.108370404 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123975285 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158880964 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.125484747 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10366279 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.101584455 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124204288 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.112190775 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105929318 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127126421 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170603044 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.177826543 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22877442 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.636666009 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124530119 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102948819 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24115254 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123839467 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327121424 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109984976 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.234829322 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186380496 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100219804 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.382410076 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.167724959 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.21023102 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104796461 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192624511 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100591184 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.132582555 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179799911 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.103742665 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.109532353 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.179695715 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.11590963 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.138233274 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.276575583 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.103081889 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.259916732 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.099009662 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190600877 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124021927 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112608718 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.325472189 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102315687 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142251645 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.179886976 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108175207 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.103610216 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.676928789 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.123621812 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115123082 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108991025 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.254597462 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164114133 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1326287 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112597095 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.137290164 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.159358142 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232800644 seconds)
  done (took 48.115741073 seconds)
done (took 64.477712996 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.297141925 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.25699824 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.303082856 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.210950715 seconds)
  done (took 2.123320919 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.261912326 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163316774 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.234522393 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10040457 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.244131932 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.100607156 seconds)
  done (took 2.088845126 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.492429851 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.370426111 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.30929721 seconds)
  done (took 2.158799329 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.254809255 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.242748163 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.331186069 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.403087134 seconds)
  done (took 2.33019432 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.296083846 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13077657 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124088602 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.210548949 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.252981582 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.228504645 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.148185634 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.195548292 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.150511136 seconds)
  done (took 2.766347184 seconds)
done (took 12.451378769 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.200078438 seconds)
    (2/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.304273084 seconds)
    (3/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.23422503 seconds)
    (4/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.26691347 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.222142321 seconds)
    (6/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.174582028 seconds)
    (7/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.212437525 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.220348633 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.170103129 seconds)
    (10/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.330301659 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.108545895 seconds)
    (12/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.279505463 seconds)
    (13/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.255400985 seconds)
    (14/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.32655911 seconds)
    (15/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.265634658 seconds)
    (16/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.220405285 seconds)
    (17/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.127119927 seconds)
    (18/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.222193947 seconds)
    (19/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.206448931 seconds)
    (20/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.210873142 seconds)
    (21/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.138695552 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.128221466 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.128547341 seconds)
    (24/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.141059454 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.15582674 seconds)
    (26/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.189246121 seconds)
    (27/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.171197976 seconds)
    (28/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.130830005 seconds)
    (29/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.192190198 seconds)
    (30/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.128706293 seconds)
    (31/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.117924414 seconds)
    (32/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.127410453 seconds)
    (33/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.218367467 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.126567142 seconds)
    (35/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.218499716 seconds)
    (36/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.212750879 seconds)
    (37/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.078330588 seconds)
    (38/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.102783485 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.133362483 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110871191 seconds)
    (41/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.102270836 seconds)
    (42/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111999298 seconds)
    (43/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.116332547 seconds)
    (44/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.129850709 seconds)
    (45/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.111573956 seconds)
    (46/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.314388311 seconds)
    (47/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.15496247 seconds)
    (48/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.198578248 seconds)
    (49/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.236776122 seconds)
    (50/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.103600701 seconds)
    (51/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.142512144 seconds)
    (52/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.193911054 seconds)
    (53/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.106072444 seconds)
    (54/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.141662912 seconds)
    (55/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.158008162 seconds)
    (56/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.21850869 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.104811586 seconds)
    (58/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.078042811 seconds)
    (59/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.199162948 seconds)
    (60/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.215354762 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.160639003 seconds)
    (62/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.105349836 seconds)
    (63/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.078455166 seconds)
    (64/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.137054171 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.125729213 seconds)
    (66/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.079457803 seconds)
    (67/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.132991683 seconds)
    (68/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.196452241 seconds)
    (69/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.079304332 seconds)
    (70/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.134272855 seconds)
    (71/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.080785181 seconds)
    (72/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.104281029 seconds)
    (73/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.197979003 seconds)
    (74/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.174237015 seconds)
    (75/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.08822712 seconds)
    (76/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.077320255 seconds)
    (77/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.166490712 seconds)
    (78/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.136024739 seconds)
    (79/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.079264193 seconds)
    (80/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.159751172 seconds)
    (81/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.125774393 seconds)
    (82/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.082691142 seconds)
    (83/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.190482217 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.107603366 seconds)
    (85/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.173433371 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.149778158 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.105757121 seconds)
    (88/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.079164048 seconds)
    (89/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.079423725 seconds)
    (90/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.103198269 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.101347493 seconds)
    (92/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.110430995 seconds)
    (93/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.134918481 seconds)
    (94/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.080141434 seconds)
    (95/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.177211562 seconds)
    (96/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.134004114 seconds)
    (97/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.079848388 seconds)
    (98/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.127459394 seconds)
    (99/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.213369767 seconds)
    (100/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.223925313 seconds)
    (101/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.19620514 seconds)
    (102/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.080877092 seconds)
    (103/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.106517479 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.128733899 seconds)
    (105/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.081702506 seconds)
    (106/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.079558524 seconds)
    (107/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.100341146 seconds)
    (108/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.077585145 seconds)
    (109/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.102768028 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.135116117 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.104067487 seconds)
    (112/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.133080199 seconds)
    (113/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110495585 seconds)
    (114/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.088551114 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.129932035 seconds)
    (116/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.080457104 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.105670089 seconds)
    (118/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.083404071 seconds)
    (119/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.129536117 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.105676577 seconds)
    (121/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.142653737 seconds)
    (122/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.078369347 seconds)
    (123/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.158680562 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.106870136 seconds)
    (125/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.139307667 seconds)
    (126/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.150128866 seconds)
    (127/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.126127058 seconds)
    (128/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.217548519 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.105654671 seconds)
    (130/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.202017622 seconds)
    (131/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.080397589 seconds)
    (132/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.081549591 seconds)
    (133/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.105151084 seconds)
    (134/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.156873772 seconds)
    (135/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.107468151 seconds)
    (136/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.079715424 seconds)
    (137/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.11081844 seconds)
    (138/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.103655306 seconds)
    (139/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.178721954 seconds)
    (140/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.100908828 seconds)
    (141/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.112316951 seconds)
    (142/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.081019307 seconds)
    (143/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.134455219 seconds)
    (144/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.077727322 seconds)
    (145/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.100696899 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.113048314 seconds)
    (147/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.080591025 seconds)
    (148/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.083932199 seconds)
    (149/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.079621636 seconds)
    (150/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.125676641 seconds)
    (151/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.080515744 seconds)
    (152/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.079090328 seconds)
    (153/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.089190686 seconds)
    (154/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.083976088 seconds)
    (155/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.135038078 seconds)
    (156/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.113705485 seconds)
    (157/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.111029879 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.128828759 seconds)
    (159/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.081495787 seconds)
    (160/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.079262458 seconds)
    (161/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.078923858 seconds)
    (162/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.133469067 seconds)
    (163/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.102797829 seconds)
    (164/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.081215762 seconds)
    (165/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.079338886 seconds)
    (166/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.106281054 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.112981087 seconds)
    (168/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.080634393 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.126179164 seconds)
    (170/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.12960581 seconds)
    (171/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.085837687 seconds)
    (172/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.110340421 seconds)
    (173/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.078018285 seconds)
    (174/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.125209959 seconds)
    (175/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.114186213 seconds)
    (176/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.084354062 seconds)
    (177/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.123696157 seconds)
    (178/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.081077665 seconds)
    (179/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.080575326 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.12461144 seconds)
    (181/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.079913999 seconds)
    (182/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.108044709 seconds)
    (183/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.081494987 seconds)
    (184/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.084575767 seconds)
    (185/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.080277303 seconds)
    (186/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.125495873 seconds)
    (187/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.081588026 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.106218479 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.103538122 seconds)
    (190/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.136425773 seconds)
    (191/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.080600696 seconds)
    (192/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.081507779 seconds)
  done (took 26.821919501 seconds)
done (took 27.810346957 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.215798309 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.127338853 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111599818 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109989762 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.205524886 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.117099662 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.151017952 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113647523 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120132917 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.134595018 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101973554 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122809502 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.133003982 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.184717664 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.137356855 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104348647 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102031696 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.14529528 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.127727596 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126790417 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.205717554 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104186448 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.144268498 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.10432914 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.180165436 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129113777 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110061673 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.111803606 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.148224797 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111643383 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.109996698 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.126257473 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126862966 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.125340913 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126292778 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.113167297 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101684606 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.107734518 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.112742201 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111714135 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.144751363 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.114705784 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111649608 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.125498868 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113705851 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110756494 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102371786 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.139283253 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101028978 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111705965 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.129438749 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.128327297 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.11117981 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.126195177 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102402692 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102758404 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.145066151 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103217328 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125016307 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.125343302 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.105170055 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103011312 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.135895117 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104942554 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111170547 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.102822884 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.136871673 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.11488331 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109630351 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.1293415 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.103504827 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111603111 seconds)
done (took 9.977279831 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108855527 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147543958 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.200930365 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.214439976 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131138587 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.141185787 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.118335016 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126936061 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.138794909 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.122224584 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.139386141 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.15851402 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.184635302 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.142527725 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.117057849 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.11407054 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.140047074 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.11140776 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.21156165 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.127068336 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.15206667 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119753895 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.12880238 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.142945229 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.107111843 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.159368673 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111803593 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114671559 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.1060133 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.142050348 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126991916 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.129499984 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111129607 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125313856 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.146921454 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118847903 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.11715673 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.13881832 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108007574 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.10676218 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139371206 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122818349 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106924403 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.142635404 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115705624 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.121065411 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.138705654 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120225514 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.107482831 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.138586977 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109404288 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131884936 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.143974803 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123182873 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.14147227 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121485506 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121158001 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.141668559 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112382567 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.11918679 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.130319832 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.109823215 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109209739 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.151586524 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.111929977 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119768631 seconds)
  done (took 9.690955023 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.127662467 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137316112 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.141347291 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.119001473 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111887944 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125578391 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.100760937 seconds)
  done (took 1.908593417 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.105825948 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.18953127 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.209324613 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.210221009 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.210165636 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.195973062 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150140379 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.103558966 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.136030806 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.138074793 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188729937 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.241732313 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.111548597 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142736538 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.212485259 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.103034599 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.214274353 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.104155192 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116720192 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.212334888 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118282173 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.157938468 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116063811 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103170873 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.209713221 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.103348138 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.262761978 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.144995019 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113678513 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115472659 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.140676932 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.182214312 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.21173097 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.117040993 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109925898 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.211553534 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.210283521 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116634258 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.224799807 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.106262107 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.211116306 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116764257 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.143222835 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.11958122 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.116897986 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.197685915 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.121746641 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.143853115 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.11885393 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.217916945 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.114998508 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.21283881 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115815742 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116837068 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.138161844 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120512698 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123783569 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.143764222 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.194980013 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.145225967 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.185249548 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.212275244 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.212769514 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.186924625 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.152644468 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.189318839 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.207382643 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116877627 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.138439059 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118440827 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.214482924 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.117107505 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.138221616 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.177636448 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144646843 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.189373738 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.213190551 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114223807 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.139887757 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.108371661 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115316091 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103085422 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.203238772 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116361939 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.140410279 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121891772 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.139311117 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.118661851 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.108189905 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.149449832 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.118066876 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11451781 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.145779115 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.118889363 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118911536 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.21539573 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113266655 seconds)
  done (took 15.888582426 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.109207821 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.104898519 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108047722 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130064284 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106059959 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105245629 seconds)
  done (took 1.724558281 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.142442788 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11801711 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150818527 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120150766 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.190573491 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.197357316 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.223624661 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111848397 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.159333792 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12801038 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.220982912 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.220590562 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.197798971 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.145061386 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.200339345 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.144718654 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.200434402 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.142654306 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12765734 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115813543 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.144328457 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123160333 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115098085 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.213549072 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11944053 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.146023186 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112166125 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.14998595 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127545721 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113245709 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.145521063 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.12051001 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110569063 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.138030969 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.201321032 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.136890385 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114704209 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121521516 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.146906951 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119791251 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.225261116 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115675442 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.148574837 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.123150349 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112795719 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.136555111 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122964086 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111328808 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.22672946 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120298101 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.148003138 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119627538 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119056417 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.147024328 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.112492007 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.137101276 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122967013 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.227233982 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122811411 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.11129786 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.144461156 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120810433 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112186446 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.149306271 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.120889225 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121615125 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.137214094 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119884323 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117228954 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.144971346 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122766176 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.143071097 seconds)
  done (took 11.40777307 seconds)
done (took 41.656652793 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.738812635 seconds)
  done (took 2.795277044 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.889018203 seconds)
  done (took 1.948345232 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.342330642 seconds)
  done (took 18.430674195 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.519116614 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.596372094 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.035761423 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.156449067 seconds)
  done (took 3.364690595 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.063515076 seconds)
  done (took 2.134049124 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296561021 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.267488382 seconds)
  done (took 1.621980219 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.744028323 seconds)
  done (took 1.815080618 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.512675341 seconds)
  done (took 2.577095038 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.355485549 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183511127 seconds)
  done (took 1.616943081 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.608622464 seconds)
  done (took 1.687310852 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.04427623 seconds)
  done (took 21.122810524 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.253516656 seconds)
  done (took 1.336246982 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.285073513 seconds)
  done (took 1.36837182 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.501771265 seconds)
  done (took 4.585901272 seconds)
done (took 67.467699484 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.115172975 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.136509354 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.141046462 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.117253584 seconds)
  done (took 1.584226181 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.127175625 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119599534 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.146074235 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119241719 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124663184 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.143090178 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.119478757 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.121907313 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.116726303 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145703663 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119612906 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116641992 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.14617655 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117601486 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116391212 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.146971314 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122286569 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117631476 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.143923639 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.11990614 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118419843 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.144968248 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.121849722 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121092112 seconds)
  done (took 4.141522226 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.116401705 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109719717 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110936177 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133854795 seconds)
  done (took 1.561266738 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.128330675 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130789076 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153174232 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126135808 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129379287 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153669482 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.119091676 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114831967 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.14273356 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126543661 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.133585923 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.156894924 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.129519741 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.143857927 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129682065 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113191133 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117913999 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.156318725 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125361686 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.150753752 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120416876 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124048126 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.147534931 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.129120943 seconds)
  done (took 4.288391002 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.193816566 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.128670724 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.173294961 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.162085742 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.175930521 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117332865 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.147286436 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.148948696 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.124495645 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.143305017 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.122448391 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161887261 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.148645912 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.120634766 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.117498927 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.148668514 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.130480382 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.147909195 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.165256276 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.123312446 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.149727453 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.130286191 seconds)
  done (took 4.2738939 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122880343 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.110248357 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.129163528 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.111180396 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122386613 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.136271465 seconds)
  done (took 1.829007287 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108992465 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104346967 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103775592 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128675307 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.10782025 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103605897 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.127261612 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.105293753 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.103979175 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103136793 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.129312478 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.10356777 seconds)
  done (took 2.419415567 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.336843319 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.108742398 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.135125632 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11282008 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.114849726 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.106151066 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.147527739 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.109578222 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.271525198 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.104123112 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.144280752 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.198784485 seconds)
  done (took 2.987820212 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204996166 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14460688 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296078479 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.364961659 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162419398 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190084628 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.266052605 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189913684 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.203617969 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137995287 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244089056 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159191759 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180260894 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17643963 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165157371 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.153204502 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194858047 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215717815 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148835522 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229994077 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158137676 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195853792 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18257688 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174440884 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137684673 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186253504 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.11789203 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150937676 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168190107 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190408144 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168350283 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173628484 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139134404 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217646718 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251075287 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195833164 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286187663 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133002928 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.197622524 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.186407027 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252730758 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166466756 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209948484 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155220583 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128813593 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205665886 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176095332 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.174385735 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133276641 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16962155 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204014616 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177734606 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.199055106 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1352776 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307579882 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185943824 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142557106 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193056078 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187058381 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218539296 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190029914 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.123923328 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203359465 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186927011 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208864934 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.141901248 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.187539206 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122789227 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195908748 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221711463 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177521795 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19059492 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.223636644 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13067554 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186086728 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173244539 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202784363 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181529437 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186927569 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119371543 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174082339 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137122121 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125598359 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.21483555 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120069201 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229041972 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131230337 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.333548362 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212187514 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154287567 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185238321 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156132982 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18804954 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145619977 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.126266924 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143446111 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.18946063 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15646953 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157828384 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154508954 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163861053 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.128995036 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15028911 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.147688315 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15904492 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.152287824 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161943004 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187860113 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.130314592 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191376046 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147189944 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.182803426 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167575458 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214404475 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129848788 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157512981 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195528383 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188671519 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136335496 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20427651 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182692221 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.167168531 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134891661 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189132644 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217470543 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143411533 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216365498 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138297083 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132993091 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.161921351 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16214794 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18410955 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151789794 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154209731 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.150733503 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221196494 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125891548 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166188682 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169013644 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158975078 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124094816 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163331729 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135556679 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.141692982 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.173481455 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137334639 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178911713 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160435742 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186350216 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155387341 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160711292 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17700762 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158492724 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.161906695 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174696606 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.119880929 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.197837618 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19012089 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15412386 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202605368 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.188962699 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215583655 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163658999 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158473485 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181337995 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155014953 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120962858 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183479507 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156693267 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18458052 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.179554134 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212201466 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.190396663 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.150006807 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17571809 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166123272 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.205861427 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151888235 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.170073956 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160864124 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191370801 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.120374233 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.150806755 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.128338779 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13700635 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156483337 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135420255 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200536996 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161055257 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208166601 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188862094 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138692572 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214207774 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.126588914 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185774143 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.165431328 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166748467 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.180613394 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212305588 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191908831 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142109026 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184979205 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122019105 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12698981 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.158288002 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162532158 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16107215 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134524366 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139649253 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.214644488 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199633139 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147347646 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221540339 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193716578 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196869009 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.148293526 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.160779176 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198782434 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16116047 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.210373485 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138639664 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.182182437 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183939641 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163790212 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191433269 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187823086 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165087365 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216688574 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.158195465 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157478401 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146765032 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189853752 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136209948 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192960044 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145080722 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156125735 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153620303 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.163906066 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12744689 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209027028 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144120427 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196741962 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.160818773 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194993837 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124876485 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167174742 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16440619 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172106001 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105012659 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167818369 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212560786 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171510954 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155730992 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202602276 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129918222 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.34047816 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188324643 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202510907 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134450937 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167714037 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163738317 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190990514 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160605094 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209060386 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137999496 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209212256 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187744222 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.143445541 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129440793 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175643576 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149436397 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.162857578 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.131927299 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.182140427 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.144559114 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210418132 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138942598 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189982225 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162641645 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.171167657 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.150369601 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140222492 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231356571 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18614113 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174032113 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.186288705 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.167078699 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221921542 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123205471 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155206607 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.134003282 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210960471 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131647688 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164006578 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.203867947 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216886059 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19394542 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164601738 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167078109 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.128218154 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186065036 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150414658 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215247422 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137014811 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.165333531 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193471807 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.153885003 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130862328 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189354885 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275305026 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173615701 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174976895 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.138164491 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.267455648 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152946324 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131971782 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190715109 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16912278 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.159353558 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182168434 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191779561 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14418734 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190305343 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137668769 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207944192 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216604673 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166569598 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199285279 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.144181096 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187325574 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160043338 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20542124 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143980822 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.173903156 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15876988 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213668744 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.180378917 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.160497686 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160977099 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188731697 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158970823 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197407782 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136917034 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220971931 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126894407 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190938084 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135817034 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152573746 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159113609 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.202958274 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130409521 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20679111 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188851497 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134066275 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126210402 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17400318 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159058051 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165552183 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.130963199 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209013862 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.128954977 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193679852 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184653707 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15519926 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160793226 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143940466 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156855203 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14088759 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170855991 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130890145 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172452925 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210945497 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129891257 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208535646 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187762882 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164760244 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182188083 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142520589 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.35999969 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.129375026 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210700962 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15091255 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218666833 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149668708 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192079936 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162576714 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176017046 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16352276 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174823172 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.220461802 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189392319 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.15732365 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156973657 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144767835 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14011341 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.161410184 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15124218 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189089716 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14021819 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.163558508 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.158129831 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169128594 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.146269332 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14014609 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215755096 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148938561 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210549599 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214091512 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137834298 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19378858 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171361236 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158664124 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.161607367 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199651447 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142642708 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176454934 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.132866803 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.136584037 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216950907 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125368401 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18606708 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162379534 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190408809 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16182515 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.162749453 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165746601 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165738849 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165691061 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152508155 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.154056376 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160849086 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161599395 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.127611763 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188607014 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157792898 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.187039547 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126807338 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.174604864 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21510092 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123991659 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159789453 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271738456 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1883015 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220011895 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137960529 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135659164 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172309022 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155207833 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.18315132 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164059009 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.157019079 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131616928 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.130479267 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.188652524 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.143512712 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19010004 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173305593 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188613123 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223686692 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133482614 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280378176 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143949619 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161331476 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.142830478 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128459426 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140993454 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161069213 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140473954 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212441768 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217433366 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.157736624 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.172409839 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136127439 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125663496 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158358575 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166502701 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178776395 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16221105 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171554702 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104246539 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142487184 seconds)
  done (took 84.992199018 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166639604 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152696913 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167918211 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.222328643 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19326645 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.288242652 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.22903214 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246549286 seconds)
  done (took 2.845543823 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.122501388 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.160496499 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.142138378 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145810969 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.119628209 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.454288958 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.158140111 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.120663854 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.163422613 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.159123463 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.142206903 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.609419646 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.11478239 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144753916 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123141047 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.119470246 seconds)
  done (took 4.170516678 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.979586967 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.525159789 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.591628199 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.271260947 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.227893139 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.180735515 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.722222762 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.669816235 seconds)
  done (took 12.35242555 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.145643669 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135660167 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.313991187 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.258287882 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.148882671 seconds)
  done (took 2.190754821 seconds)
done (took 130.712851453 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.124715577 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.122771589 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.123116003 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.15298652 seconds)
  done (took 1.69797655 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.176270125 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.090613245 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.092063297 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116451824 seconds)
  done (took 1.660227974 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.433662771 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089302174 seconds)
  done (took 1.733994938 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.147332152 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.146084793 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.166474598 seconds)
  done (took 1.658903811 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.142378142 seconds)
  done (took 1.330445671 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.126636539 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.119997995 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.234613866 seconds)
  done (took 1.673706694 seconds)
done (took 10.945873235 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12014064 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.927018971 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.432568949 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134172039 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710942927 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.428116911 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.398164564 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175734092 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174134651 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.137944538 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134139838 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.688393206 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.411132131 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.873890703 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.370063013 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.900794856 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.694829592 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110191911 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145310598 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111955503 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.405822294 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110867058 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112097778 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111230114 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.718628772 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.41915642 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109497928 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.912673486 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108931108 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.138566456 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.401173199 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111188629 seconds)
  done (took 20.918947617 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119577707 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171604497 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146099602 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.112559442 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11302952 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.138719818 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123108795 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122742854 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202222216 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.110333795 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162597414 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.109570147 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114512176 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.138747746 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137401936 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109504454 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.140648937 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113872225 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117933469 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.140541055 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135242026 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109127522 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.139214941 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113728897 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109701709 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.159771469 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112250744 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122479791 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138438487 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114192512 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.114428597 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138457051 seconds)
  done (took 5.351820995 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.159327859 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179957686 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.148156006 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.149690532 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185779036 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113147235 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.222265394 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149126186 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.201723608 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112114762 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133587395 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.137681533 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.150563598 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.111142609 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165881393 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.111287003 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114101067 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.140810002 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119255146 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.138115935 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136990201 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110675335 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.138648321 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.114404704 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11038807 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.160190527 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.111856375 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123440551 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138174284 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.116282421 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116000379 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.138549029 seconds)
  done (took 5.654675064 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.126218142 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125097514 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133493504 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.161911892 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121018041 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124486473 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.154460646 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121733836 seconds)
  done (took 2.266468921 seconds)
done (took 35.382658219 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.13378549 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129070206 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129041137 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.151521057 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.19231643 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.144535352 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.126414343 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115197559 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.150487155 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.130980432 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.111141448 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.116281954 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.158050993 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.119411242 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.222852064 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.124104932 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.230689632 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.19560324 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.146426018 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124407206 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.117633755 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.228250505 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.120822537 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.145179552 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.196804486 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.112961538 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.213040381 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118987136 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.148375755 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.113309441 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.225226941 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.121236445 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115840592 seconds)
  done (took 6.122435822 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.212501652 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.119580511 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.149013642 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.119381741 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.120304442 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.147712323 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.21474637 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.148372874 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.120353818 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119330302 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.119156992 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.227593212 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.124463961 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.143872905 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122909479 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.107690258 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.244424962 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.120836626 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.139681002 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.093354177 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.115411856 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117723991 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.255623287 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.115168546 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.147646074 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120523378 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122016812 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.123388723 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.150712672 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.121367388 seconds)
  done (took 5.516071568 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.127346535 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132625006 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.164651341 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.186620964 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.147039339 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.160255311 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.143069941 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133073931 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.172120981 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.114292091 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.128858135 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.176588363 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13049845 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.15126263 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.119467553 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.131259266 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134249739 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.142391253 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.122232888 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130551579 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.162957068 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.12952587 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138453614 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.151087872 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.112830971 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119185614 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.152680687 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127059805 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121821568 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.157324124 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.116013919 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.115889798 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.14448697 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.147466471 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114455107 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.155641243 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.137588574 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125269893 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.155678382 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.144850298 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.144932483 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.11848638 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.1384377 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.193911582 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.117402154 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125284087 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.15353453 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.130233527 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.111463734 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13098582 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.184556009 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.113459231 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.16159236 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.115610702 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111863456 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.149848669 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.116162714 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.116780026 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127827016 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.145858893 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.137956657 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119958542 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.153311638 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.116595593 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.124823658 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.141334915 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.114895524 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.116902012 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.169273459 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122113529 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.149219632 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.1423652 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.127892799 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125944136 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.151283808 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128442609 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.114076856 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123817897 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.153745308 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122044371 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.125907382 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.146443251 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.118239872 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129292407 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.162996273 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.128727218 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124456811 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.15526645 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117906479 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115499398 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.159842044 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115501542 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.11870842 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.15516243 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.115753781 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.117473358 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.154652939 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125456655 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112178775 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.166651286 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.119232773 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.113515382 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.138429836 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.148192579 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119878376 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123028422 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.184580355 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.113544939 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.152189149 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128034929 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114590425 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121739259 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.147151734 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.1138926 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131421485 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.159427161 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122011673 seconds)
  done (took 17.078583446 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.324660597 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.309171321 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.181799014 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.311598421 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.157895528 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.209951964 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.306732558 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.309417916 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114115939 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.182386309 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.194907545 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.276451992 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.117385881 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.141295256 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.311636596 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.363402904 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.176436274 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.15151464 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181950478 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.128580383 seconds)
  done (took 5.671409409 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.135951552 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.148564036 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.165609718 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143749654 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125165637 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.160834659 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.114848259 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134899936 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155327361 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124170191 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.116042254 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.15925712 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127236419 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.130482065 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159083632 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.145133842 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.121164967 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149202834 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136350022 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118291566 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.131175118 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139566007 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.150199363 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.138193252 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.133577009 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.152730218 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.115317264 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.11978528 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119862874 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.153301776 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119946456 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13229021 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.150915669 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.104799668 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124708859 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.157918495 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.12243645 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117772009 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.146588054 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.120689016 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129600653 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127164933 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.154965176 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09803405 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.132780567 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.108249871 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.158990279 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126781336 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105818031 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.162935863 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127128194 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.127967448 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.150635757 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.13842162 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.121337014 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.160500334 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127520034 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.128375687 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.149468456 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.115113004 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.113678927 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.146027672 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.124765139 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.128687413 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.154919888 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138239099 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129978859 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.142904555 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121915554 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.118462931 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.146417241 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.131756742 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.134828238 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.150977833 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.124826484 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.127322447 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122480983 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.122987738 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.125580688 seconds)
  done (took 11.812812684 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.141773907 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.123120662 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132458294 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.178774256 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125818569 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.120667294 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.15322886 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134962709 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12596079 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.160547505 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.12859412 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127468185 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165526959 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125260734 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122221481 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.159750275 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128406873 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.151439409 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.163740958 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.142834431 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.156248003 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.121287693 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126362162 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.125318159 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.172405616 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126703033 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.170433799 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.128721048 seconds)
  done (took 5.174370982 seconds)
done (took 52.579919324 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.388795913 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.552269697 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.33539794 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.327424612 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.318137011 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.329394069 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.327469106 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.327168877 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.71972127 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.301797578 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.328830219 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.328225724 seconds)
done (took 29.807631651 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.434200278 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.835142862 seconds)
    (2/2) benchmarking "String"...
    done (took 1.618162663 seconds)
  done (took 4.663347108 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.334781682 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.316217407 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.563720379 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.313420955 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.332066997 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.314989323 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.324775631 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.315176778 seconds)
  done (took 16.687863709 seconds)
done (took 27.331309671 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.405039651 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.522700027 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.562613511 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.313651674 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.315006922 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.317144814 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.319043244 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.336469052 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.317813662 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.31492347 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.704709486 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.578705109 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.322731116 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.697288794 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.317398325 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.344746917 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.319636941 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.57337748 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.316194949 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.356308067 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.291936508 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.312128789 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.347553686 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.314656519 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.315592537 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.318134511 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.321046674 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.313163993 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.494654971 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.353911055 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.348807229 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.31467991 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.3245823 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.31618333 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.314891445 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.324664738 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.493363884 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.317335717 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.293256651 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.337648241 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.499048485 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.319613272 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.324844023 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.313901346 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.331426055 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.328054092 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.311740099 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.426569632 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.349987601 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.313607454 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.353763739 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.680799919 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.323703503 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.330978603 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.316785887 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.521873498 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.320394154 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.358539245 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.337904855 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.329695636 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.318115677 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.313275187 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.394430418 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.313711086 seconds)
  done (took 150.965662507 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.319571923 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.315219777 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.314529972 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.373051996 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.318360361 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.313236659 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.312308037 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.313961384 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.317192827 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.345285769 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.314985608 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.31477711 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.317561827 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.268940652 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.325343385 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.326139982 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.312428126 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.322536424 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.322389702 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.31516805 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.319085616 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.318024694 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.330123699 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.311801946 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.347712144 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.378313216 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.32046384 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.325437896 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.324713921 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.313787002 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.340591754 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.364176067 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.860010497 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.18136056 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.329789757 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.338871148 seconds)
  done (took 84.298358748 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.317442077 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.314308293 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.315777125 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.342600559 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.316600186 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.814845693 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.816969954 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.265247843 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.84029876 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.443720459 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.481727445 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.31720766 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.403948362 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.32477712 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.311554374 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.330309581 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.339529951 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.317019562 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.317380921 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.816306393 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.324839325 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.310340468 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.479415851 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.325493892 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.344820246 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.704777432 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.311699587 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.471573355 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.311806483 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.343892694 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.637088798 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.356830153 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.315481948 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.580088893 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.47653103 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.421742565 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.317179107 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.343605967 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.314746357 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.593070882 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.313667139 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.316330819 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.319516213 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.874544651 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.315957264 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.812694195 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.313625855 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.198981058 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.315411702 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.315329631 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.399535151 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.843548289 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.318912455 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.315533459 seconds)
    (55/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.316113256 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.314582852 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.316856326 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.318206648 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.347093783 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.378494665 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.405849228 seconds)
    (62/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.314318503 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.316886839 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.320452676 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.345272398 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.31592255 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.387926599 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.319749969 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.325444951 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.37041788 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.526260066 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.81529421 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.314736004 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.409284696 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.42840036 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.312230729 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.317834072 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.317447836 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.317170492 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.427083584 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.313380617 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.680637038 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.478478296 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.331038218 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.444781078 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.412696778 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.315816709 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.586930825 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.318107349 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.319229132 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.964723122 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.409249823 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.316103639 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.321621405 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.320259182 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.680504402 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.813645528 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.480737628 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.319686961 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.493994139 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.317739126 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.699748233 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.804773409 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.896118057 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.320135676 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.426511604 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.479459017 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.330147714 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.319673591 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.442650751 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.319885605 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.381077886 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.316306138 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.719161706 seconds)
  done (took 376.913298999 seconds)
done (took 613.384256751 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.183975456 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.131876186 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.271235846 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.139139485 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.126544422 seconds)
  done (took 12.064144355 seconds)
done (took 13.274345005 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.499829614 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.494774124 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.370089315 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.50128016 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.350595327 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.513027165 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.487274697 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.336512859 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.427305171 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.392472261 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.441121653 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.366735177 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.353547825 seconds)
  done (took 19.749357145 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.589863693 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.333338541 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.390274978 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.576918101 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.366334052 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.59984512 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.639933376 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.332138124 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.473659938 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.343205996 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.343460445 seconds)
  done (took 19.202979863 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.593464383 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.32942607 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.388970127 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.565667669 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.367112647 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.599054673 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.626070375 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.335315287 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.487185251 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.349564956 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.345245153 seconds)
  done (took 19.19992007 seconds)
done (took 59.364540153 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.358323739 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.416089994 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.355651869 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.34469858 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.338439792 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.339191963 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.345226283 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.340345356 seconds)
  done (took 12.053460603 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.337914616 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.336682633 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.337313943 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.337231793 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.338663755 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.336645497 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.339916197 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.337826395 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.340207933 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.340456308 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.339442139 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.336508743 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.337211448 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.339593192 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.339212313 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.339087888 seconds)
  done (took 22.628908154 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.341862646 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.339433554 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.339676998 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.338526171 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.338868532 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.341154196 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.342732785 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.339283201 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.339340027 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.341029022 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.341164892 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.33830223 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.34080315 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.339803034 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.339621063 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.342248458 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.342169792 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.342035716 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.345125313 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.339261714 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.338788472 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.340442004 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.340029114 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.340391625 seconds)
  done (took 33.38950633 seconds)
done (took 69.287228556 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.325659023 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.330591833 seconds)
  done (took 5.871572118 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.398210449 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.397146364 seconds)
  done (took 4.011095457 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.341180976 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.339898977 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.339998537 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.341206582 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.343631519 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.342577894 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.34127894 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.342598179 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.340787249 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.341732469 seconds)
  done (took 14.631535693 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.342190028 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.34278653 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.341179041 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.34178537 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.343297983 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.343068064 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.341693095 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.343279033 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.342319261 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.341366067 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.34272518 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.342033133 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.342134268 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.343065366 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.342542977 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.340703378 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.342827052 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.340032172 seconds)
  done (took 25.37617889 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.353215228 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.357622331 seconds)
  done (took 3.926934439 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.470283964 seconds)
    (2/7) benchmarking "second"...
    done (took 1.382029982 seconds)
    (3/7) benchmarking "month"...
    done (took 1.439772812 seconds)
    (4/7) benchmarking "year"...
    done (took 1.433288223 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.374058842 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.357088243 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.377239314 seconds)
  done (took 11.048665489 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.334087915 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.538649504 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.660028463 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.963371777 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.334665994 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.34082115 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.24485493 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.336139077 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.340916588 seconds)
  done (took 15.308229674 seconds)
done (took 81.390879176 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.331870225 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.355886798 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.333595695 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.336731637 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.631439569 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.354675571 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.323641584 seconds)
done (took 16.877559669 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.300991962 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.308906326 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.299658801 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.311706828 seconds)
  done (took 10.427126861 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.30237472 seconds)
    (2/2) benchmarking "read"...
    done (took 1.635680207 seconds)
  done (took 5.142723402 seconds)
done (took 16.778227994 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.325017543 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.317729508 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.317800442 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.320505496 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.322234483 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.321838019 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.320714589 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.321084526 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.320575332 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.320330133 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.321030782 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.319901403 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.320949006 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.320023073 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.31814698 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318202836 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320554128 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.315704844 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.316449729 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.315596008 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31251714 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.315772017 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.316062539 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.31631904 seconds)
  done (took 32.858599964 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.316264444 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.314251056 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.311972196 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.310880615 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.313233576 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.316459975 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.313140315 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.306383222 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.307618434 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.307578831 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.305588318 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.310272983 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.309699535 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.309395025 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.307444668 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.303829564 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.305359866 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304871703 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.305014947 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.30333796 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.306309766 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.307563332 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.300151871 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.299335536 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.300427801 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.299099713 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.300629663 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.29955074 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.30071456 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.305651145 seconds)
  done (took 40.396707443 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.300625961 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.302732949 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.299288015 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.29976206 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.29899495 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.300607303 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.302938815 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.300964884 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.301471808 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.30233618 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.30151125 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.301785986 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.299766207 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.302353652 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.295086234 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.293068145 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.296458017 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.291985366 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.294459831 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.292969589 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.290531313 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.297017704 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.296796356 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.294039033 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.291746634 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.289096473 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.293805931 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.292131149 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.290873864 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.294923209 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.289631158 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.292695917 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.289352434 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.290237292 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.291141236 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.290544285 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.292170057 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.293334272 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.287955016 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.287105763 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.291338438 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.288883412 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.288233593 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.289443249 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.291218029 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.289071114 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.285401386 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.290145055 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.289752705 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.291326935 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.2935124 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.292212331 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.293752401 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.294868474 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.295925313 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.295402139 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.292258725 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.296306134 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.29340684 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.294967279 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.296397738 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.294570057 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.295571514 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.295345928 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.296568688 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.297109155 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.295521172 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.296547615 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.296470408 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.296504623 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.295411671 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.293706084 seconds)
  done (took 94.389724996 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.298316875 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.295542544 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.29567766 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.296717112 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29511643 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.296979974 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.296572494 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297951669 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297200808 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.296225873 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297059942 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.294229829 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293031015 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.298873185 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.294272549 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.291397877 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.294115407 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.297443045 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.29625201 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.297582595 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.296193323 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.296683479 seconds)
  done (took 29.694750393 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295255573 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.297139903 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.297293305 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.301653496 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.298958716 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.297477552 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.296227428 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.296366415 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294965836 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.29436536 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297197851 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291123443 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.295042016 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29232623 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293524843 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.297462952 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.294241291 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.295012237 seconds)
  done (took 24.512057915 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.295087842 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.293172909 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.293166513 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.2919428 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.29572276 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.295397066 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.293150239 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.291172984 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.295757835 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.295455779 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.296050105 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293156434 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.296845689 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297457022 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296283916 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.291836637 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.294908455 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295652098 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296660911 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.296201693 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.296263645 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.292177419 seconds)
  done (took 29.661935483 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.293539135 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.295069031 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.295083046 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.294798492 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.295343933 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.294061735 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.296423152 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.294573738 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.294782714 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.297229694 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294253424 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.292520552 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.294704412 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.296156574 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.296922225 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293534111 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.293067493 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.297549202 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298409501 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.29662166 seconds)
  done (took 27.085232191 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.296736002 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.296871938 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.29631286 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300037597 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.297905685 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.299141738 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.296010371 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.301953479 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.296820166 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.301510905 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.292838611 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.296702688 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.29519248 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.296429627 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.295014632 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.29201537 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.290340179 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.297568617 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.286649111 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288666761 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.288878238 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.290321256 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288402182 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.291115152 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.29155229 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.295679173 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.290206118 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.296438238 seconds)
  done (took 37.430061081 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.296344106 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.29102261 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.289251311 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.295062691 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.289541405 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.290019106 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.292608482 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.294806427 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.287599965 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.293376935 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.29186118 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.289358633 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.287524905 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.285037354 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.287011547 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.284208394 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28515016 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.285280691 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.288431714 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284561478 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.284222991 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284069353 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.283951077 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.285024086 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286974367 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.282452845 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287996673 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.287499129 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291782329 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.288385941 seconds)
  done (took 39.827302509 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.309858873 seconds)
    (2/2) benchmarking "in"...
    done (took 1.309729396 seconds)
  done (took 3.797378619 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.288091649 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.291254457 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.291879617 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.291190302 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.286086286 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.289209718 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.287575668 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.287156786 seconds)
  done (took 11.488669467 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.279698169 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.283003911 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.286679697 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.288401727 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.282157872 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.271516379 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.283801818 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.292458645 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.276731025 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.283288693 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.280003566 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.281144556 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.284230183 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.28196985 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.278902684 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.282878966 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.291123824 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.287065845 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.287193201 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.28624051 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.287651992 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.281746889 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.28831157 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.292910192 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.279755265 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.286918389 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.289960229 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.288522652 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.279735665 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.282772708 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.280564189 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.28638451 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.286364425 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.288481869 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.288134467 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.286770537 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.290888446 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.288504415 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.289972664 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.292843754 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.285566798 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.285819471 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.280896121 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.284740584 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.282726702 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.287546293 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.287941933 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.282868199 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.275847585 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.276581356 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.280500812 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.273524945 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.281577113 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.279856418 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.284245259 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.290191303 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.287734091 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.277279454 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.278978194 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.284437193 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.2959222 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.285328509 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.285378244 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.287005348 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.281038133 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.281793487 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.290667612 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.291296214 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.285549933 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.281126775 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.283861066 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.288521134 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.285067565 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.288529267 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.281801236 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.278170076 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.276185102 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.283947566 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.283826421 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.28700522 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.284592936 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.279893003 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.277054023 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281753516 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.272456892 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.279991618 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.284005906 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.280120497 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.271186667 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.281839494 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.290829339 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.278345155 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.272806872 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.274518399 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.277679754 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.283506341 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.273297117 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.273612175 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.286776275 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.28113581 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.280417997 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275073723 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.278244852 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.287200115 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282903387 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.283900854 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.28948018 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.275540101 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.286240829 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.289429315 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.282073395 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.271308682 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.278876658 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.281252433 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276833624 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.279398546 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.286742472 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.277511534 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.285839827 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.279701337 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.281609408 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.287427409 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.289839629 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.283423102 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.277038188 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.286342087 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.283867642 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.280847497 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.289848053 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.28113401 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.282076286 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.278714149 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.287641611 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.275890968 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.287906663 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.277438693 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.288236411 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.282715146 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.283131192 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.278649591 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.281968422 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.279013386 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.281436984 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.285006956 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.287417915 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.278352585 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.288008349 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.283209635 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.281737766 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.284014025 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.287907382 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.285625194 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.277362126 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.286524177 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.274832423 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.285876525 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.277574175 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.286849967 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.283661513 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.284117428 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282950533 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.275208007 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.278401524 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.288420191 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.282893009 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.282334782 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.287784862 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.284717243 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.285347357 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.276616296 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.286805411 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.276583574 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.279899535 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.288069893 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.284810093 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.283115033 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.283468827 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.291790931 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.284786134 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.285714281 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.277977713 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.282168664 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.289992772 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.288352462 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.29394303 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.285742734 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.28543206 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.279560904 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.282815968 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.287678265 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.279805111 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.290381927 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.29226272 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.292943776 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.28124843 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.286669255 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.277447619 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.287170537 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.287447321 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.293471653 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.286640904 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.28722569 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27904831 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.290763856 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.283414768 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.290209356 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.277788306 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.288795834 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.288859802 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.285924815 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.28553373 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.279349629 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.284595888 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.288028379 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.28696931 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.286993443 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.280994549 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.289747576 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.283678757 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.278621556 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.286359835 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.284356983 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.286184951 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.290860343 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282416418 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.286899284 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.28574791 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.276386978 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.284424561 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280174495 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.281522462 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.287495787 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.284151447 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.281648165 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.286786013 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.281963751 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.274796701 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.282355654 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.288529801 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.281519634 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.274208656 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.284410115 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.282161446 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.2822024 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.281272634 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.274361208 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.284492396 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.285969015 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.288733427 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.274785383 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.284830723 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.275967911 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.284083171 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.276946291 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.282857273 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.281555505 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.284827635 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.291785654 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.28151366 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.276198323 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.284950184 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.283404264 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.281494391 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.275215943 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.284766855 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.285153029 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.283540342 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.280257718 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.279932044 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.284279512 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.275556973 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.284040126 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.279876759 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.292687108 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.296897197 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.286826637 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.287661753 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.287442512 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.28593754 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.285856493 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.279995659 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.279672199 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.280917995 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.279476779 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.278115869 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.286844678 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278809036 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.286629726 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.282429527 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.286434369 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.287042309 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.284753945 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.27842912 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.288038845 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.285820645 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.284471811 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.278809977 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.28654541 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.280174928 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.287159597 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.284875743 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.280539782 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.291885285 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.288903447 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.283139536 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.280827411 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.280708796 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.277809124 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.281909684 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.290798972 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.278403106 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.289069971 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.278519246 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.282894267 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.281308926 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.290869057 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.295265589 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.280933907 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.290361013 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.285288779 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.278457932 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.280659781 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.288365537 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.289849067 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.298353954 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.2789608 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.289038679 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.287005618 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.28653337 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.285401131 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.287153668 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.2876732 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.286546042 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.291876757 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.290733606 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.282169079 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.289277596 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.296621608 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.287224276 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.286556565 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.278846519 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.289352923 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.297926253 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.283176573 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.285861778 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.282476912 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.288150626 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.288922133 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.288415417 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.290170352 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.286163095 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.292591625 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.293738001 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.290500733 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.288169153 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.293907659 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.297131756 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.293738965 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.301038129 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.283578556 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.294343778 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.29032273 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.284411032 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.284755845 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.284654705 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.292821018 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.281924453 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.293649816 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.288517155 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.286536357 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.28908013 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.296013758 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.281820184 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.290643118 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.296429445 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.282982141 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.293132631 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.289497658 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.282637807 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.291650544 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.289341912 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.281510027 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.28432648 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.285650178 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.292953466 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.283697624 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.293608039 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.284658305 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.292890356 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.289441834 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.290449 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.291425865 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.291737723 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.284921759 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.29210724 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.29149765 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.300222645 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.285406208 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.29115239 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.285337223 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.298079948 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.301137067 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.287136195 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.295973869 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.293445817 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.285859339 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.290712917 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.296055226 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.284789402 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.295441392 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.284993375 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.287115245 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.287568786 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.292721137 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.293932906 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.294595473 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.285163582 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.287408621 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.294715797 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.292385993 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293550658 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.289473543 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.298631537 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.285962364 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.285885303 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.294572721 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.286981765 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.298512005 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.286504119 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.28927653 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.289546689 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.296617252 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.291257128 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.292781985 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.28525627 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.286214158 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.299483751 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.29658017 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.289893377 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.289495961 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.295534676 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.287674218 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.291454743 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.290733178 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.289666283 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.290550773 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.297578068 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.288227372 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.288358132 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.288768312 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.296277071 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.299851352 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.296792901 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.288291748 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.303192249 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.304698748 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.301814541 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.287259662 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.29098416 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.291180961 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.296169028 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.294336268 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.288613455 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.303158531 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.301982902 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.299268348 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.295163669 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.296420453 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.288885345 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.297829028 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.295976225 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.291957459 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.301724809 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.292280737 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.302342632 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.295880722 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.295336036 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.287258395 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.289330833 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.292020173 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.290729924 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.298164192 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.296660348 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.299290357 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.294824863 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.3026376 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.296732526 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.29642771 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.29666608 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.289358159 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.298511499 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.289605235 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.298338285 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.298155182 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.291255337 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.298066395 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.298547853 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.290824285 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.293046513 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.300303103 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.296283344 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.290775198 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.295117362 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.30286266 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.307156815 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.297831437 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.291818637 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.294989122 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.301828106 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.298741766 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.298151577 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.291755028 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.307464399 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.310261537 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.292582869 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.294878654 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.3019043 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.307315506 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.298214799 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.298158277 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.295403754 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.296061834 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.301673555 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.299165612 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.30184099 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.304454639 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.294746296 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.302985996 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.292939906 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.295492953 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.300173001 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.30900362 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.298851107 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.29489845 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.306195139 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.310049305 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.297561421 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.311510007 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.307317049 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.300932378 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.305313153 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.292939973 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.302334534 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.297395389 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.304646334 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.299620493 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.301116452 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.301505758 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.292513 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.302405488 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.308213341 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.309875547 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.299384561 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.293219204 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.296319493 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.303598406 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.300341937 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.302107846 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.300661025 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.301496025 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.301325155 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.295888498 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.313667797 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.31510273 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.307554544 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.302318473 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.302830601 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.302007697 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.305971323 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.298177174 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.305841133 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.301668097 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.302586489 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.300575319 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.309824068 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.303950031 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.297889064 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.297726738 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.297397562 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.304859207 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.309721867 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.32144503 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.307778762 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.30546183 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.305897712 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.305831864 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.298908271 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.307893728 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.303699298 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.296954303 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.299013926 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.305114339 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.304773255 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.304055323 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.296692994 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.307062082 seconds)
  done (took 769.348645261 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.305199954 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.304413668 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302852508 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.30454682 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.30388161 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.303461693 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.304669466 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.303515991 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.303332984 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.303207891 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.303830186 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303991026 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.304044372 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.304934846 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.304405061 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.305022775 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.304647574 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.304115299 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.305503874 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.304430151 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.304802234 seconds)
  done (took 28.579204581 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.305855803 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.306355978 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.305069972 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.304370968 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.304002769 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.305460393 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.304964986 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305596906 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.306573622 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304648822 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.305806077 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306245118 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.304049963 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.306850338 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305334822 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.305701386 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.305524243 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.305612218 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.304290494 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.305014991 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.306635514 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.306206727 seconds)
  done (took 29.911119686 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.306313163 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.30563651 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.299810341 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.309159347 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.306562241 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.305879769 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.307013531 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.305486874 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.305886816 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.300497691 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.298957896 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.301744018 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.303878936 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.311264305 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.303600105 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.311411702 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.30690053 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.308239221 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.307860198 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.306318627 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.309144584 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.318269036 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.307359681 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.298991441 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.308116896 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.308296689 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.307000301 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.30708727 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.299801943 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.309466091 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.308177173 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.301211311 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.311606327 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.310706004 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.302419968 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.311514529 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.309333103 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.308940998 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.307768495 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.306670809 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.316602715 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.309397726 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.31280715 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.320865663 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.309385724 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.30341094 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.313804969 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.30943149 seconds)
  done (took 63.952206696 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.310151485 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.309873046 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.309249133 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.310572809 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.310292995 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.309370756 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.309040766 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.309143857 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.309476948 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.309273906 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.310178104 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.310326816 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.309227284 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.30957505 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.308752969 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.31016296 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.309303253 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.309265824 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.310382367 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.311323837 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.310528389 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.310677428 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.309938983 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.310073828 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.310423873 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.310639965 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.31034995 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.310989216 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.310872325 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.310773811 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.310924106 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.311059541 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.311927221 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.30993817 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.311639843 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.310824182 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.311799337 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.312397534 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.310929213 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.311188567 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.311309073 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.312958294 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.311276604 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.311274108 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.311607129 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.310141857 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.310507827 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.311338427 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.310570375 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.311719427 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.311394389 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.311394985 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.312504542 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.311133459 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.313103151 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.312814971 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.311573489 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.312432067 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.311671782 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.312586448 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.312201322 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.312672756 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.312695584 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.311573333 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.313226408 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.31193443 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.313668917 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.313470195 seconds)
  done (took 90.344889669 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.312826282 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.313912663 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.313299339 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.31516164 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.313433781 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.313292082 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.31373817 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.314476577 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.31289561 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.314019193 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.313704792 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.314225938 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.315150465 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.315357521 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.315388759 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.315619968 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.315167141 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.315246506 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.314728878 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.315632414 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.316045708 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.31477735 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.316160676 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.315646645 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.315747465 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.315642152 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.315157577 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.316541239 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.315170309 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.316402665 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.316173452 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.315330874 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.31603853 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.315776332 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.315602327 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.316245746 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.314726832 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.316799104 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.317924018 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.316790441 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.316657507 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.316736955 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.316991348 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.317127405 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.317661365 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.316742329 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.318128757 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.31752933 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.316814998 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.316578419 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.317327203 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.317213019 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.317029292 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.317726092 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.317728293 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.318137535 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.317603513 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.317400709 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.317764567 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.317752103 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.318455871 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.31661219 seconds)
  done (took 82.787709366 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.317243727 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.317848573 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.317767332 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.317538442 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.318252411 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.317934782 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.318158783 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.318773576 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.318255044 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.318619708 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.318100179 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.317682628 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.319147929 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.320133873 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.321722767 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322693819 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.323510483 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.32218268 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.323818643 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.321440798 seconds)
  done (took 27.593501759 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.319063399 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.319268078 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.318391068 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.318896179 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.318047921 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.318615001 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.318162965 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319419623 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318985284 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318595697 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.318351329 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.319242685 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.319121693 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.319440608 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.319154664 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.319386317 seconds)
  done (took 22.307534534 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.32056283 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.318643983 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.320465037 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.319623303 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.31887676 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.31990536 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.319767505 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.319198855 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.319758714 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.321156652 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.321054642 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.319836395 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.319454751 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.321808144 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.321056509 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.320270396 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.319266069 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.320790473 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.320804365 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.320998327 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.320913912 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.320812423 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.321316027 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.320916065 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.322263277 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.321487438 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.320743935 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.320987168 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.321564639 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.321591445 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.321262843 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.320278487 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.320646345 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.321336086 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.319959723 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.321016015 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.321944899 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.323251341 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.32223186 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.323010554 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.321081605 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.321462705 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.321666546 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.321716101 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.321815647 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.322823442 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.321325419 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.320602817 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.320805475 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.321111516 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.321291434 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.322848056 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.323226236 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.323082941 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.322942005 seconds)
  done (took 73.864050271 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.323716696 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.323142619 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.322574121 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.323011643 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.323559456 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.323608407 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.322555941 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.324893936 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.322961728 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.324672302 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.323119827 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.324599519 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.322636919 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.325899041 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.323041635 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.323714384 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.324551355 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.324172847 seconds)
  done (took 25.033909248 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.324769428 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.323664821 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.324053402 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.323054012 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.325796259 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.325231114 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.324065946 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.324124828 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.324250808 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.325013746 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.325177078 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.325043449 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323816421 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.325215886 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.326100489 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.325532614 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.325764739 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.324969401 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.3264978 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.325197354 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.326830332 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.323954136 seconds)
  done (took 30.356707776 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.315504843 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.316184021 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.315396754 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.329062249 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.324675012 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.315399811 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.316114486 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.316717212 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.332065827 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.341370234 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.335372876 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.324262679 seconds)
  done (took 17.091212379 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327819469 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326617161 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.326411272 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327016873 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325902061 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.32603989 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.32539691 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326727185 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327277737 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.326402439 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.326985203 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326455997 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326761316 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.326817455 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327322907 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32866529 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327401802 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327308928 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326564041 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.32774858 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329078099 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327368065 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32685949 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.327433706 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.327831048 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328270799 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.326880071 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.327587419 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.326438285 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.327472649 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.326618296 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32675979 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.327947291 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.327191629 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.328515542 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.327998766 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328441762 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328715366 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.328766722 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32702929 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.32806435 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329055702 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328144722 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.328097929 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328213854 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328437975 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328418555 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329157688 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.328125691 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.328790062 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.328802475 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.329643815 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329879733 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32960674 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329843533 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.329711672 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.329364436 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329523883 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.329570622 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330507443 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330487093 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330949006 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329418083 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32862278 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332028604 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.329832697 seconds)
  done (took 88.864862745 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331317807 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.329545872 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331958064 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33115523 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.328995168 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3297854 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329957277 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.330242942 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.330793466 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33109548 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331566215 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332335638 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332780626 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331113235 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33159953 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331003432 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33152379 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331752623 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.329883131 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331199609 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331606067 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330346099 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.331054666 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.330981731 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.331968852 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.330837342 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.330686433 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.331154078 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.330590629 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332509614 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331943711 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.331801631 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332329001 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.331513539 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.332121499 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331584145 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332542009 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332387459 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332316915 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.332254701 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332187015 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.333321253 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.331758616 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331436746 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332777464 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.332154117 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.331399041 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.331099849 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33245163 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33344961 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333268017 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.332395399 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3328529 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332672424 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333796087 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.332649987 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33421555 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.332448391 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333266247 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333282115 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.334312729 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.333551881 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.334624754 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.334673185 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.333141948 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.333550892 seconds)
  done (took 89.124087745 seconds)
done (took 1811.509233118 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.489220982 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.443540489 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.325039754 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.342514059 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.324439966 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.324625132 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.337733618 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.325016838 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.323111454 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.325257826 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.324265158 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.517419162 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.358680317 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.326043328 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.32549373 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.420857947 seconds)
  done (took 27.050603083 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.351137345 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.333136352 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.43862907 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.331811764 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.354467002 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.513240578 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.390646296 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.332176585 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.490901958 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.351852348 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.326489321 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.353001515 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.330707718 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.324953496 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.351203755 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.513785781 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.588837468 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.333082741 seconds)
  done (took 29.227845427 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.75219928 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.338047185 seconds)
  done (took 5.309498831 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.350792586 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.330642885 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.332772809 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.330056396 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.333887391 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.322874205 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.331272383 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.336199065 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.332260518 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.451002843 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.336878928 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.342419812 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.347340133 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.331616028 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.339375742 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.37602428 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.495591199 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.339154813 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.338944416 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.33682291 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.330011885 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.423155627 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.371807543 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.342558263 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.451760766 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.340182855 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.333885494 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.339117029 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.448349372 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.341439614 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.332118086 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.331351061 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.333584098 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.271421509 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.861980268 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.325094084 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.355943514 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.339447749 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.339850743 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.473855194 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.332210575 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.339374754 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.32432032 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.866830042 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.435117409 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.449328328 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.341647416 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.350506406 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.33513878 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.394940589 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.332840625 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.334170075 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.388324179 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.107419016 seconds)
  done (took 85.278168349 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.387943286 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.327662193 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.508670769 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.351423692 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.338285173 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.325491833 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.325618415 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.600808272 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.351524172 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.328748514 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.63880158 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.952582889 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.33721275 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.392394041 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.361939106 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.389201385 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.327180629 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.349516442 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.32695712 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.328095276 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.896799085 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.331987769 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.327699557 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.417456037 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.367266237 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.85732984 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.334029635 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.328747338 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.349845609 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.327588646 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.908141676 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.345568551 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.378297526 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.329521154 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.612129783 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.708478001 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.66622768 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.337642869 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.367434805 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.333487506 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.357186564 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.846311557 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.688318943 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.330520231 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.328378035 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.845248798 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.328578026 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.340006376 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.333422003 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.597619532 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.328602097 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.329666383 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.337333559 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.337173289 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.329083626 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.399486382 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.407445177 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.857869603 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.329887466 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.330712073 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.338737993 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.332275109 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.333568691 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.33345108 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.330030657 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.696357147 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.585454598 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.337359818 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.690928544 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.901203105 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.343352686 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.985199506 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.335295955 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.351133396 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.37949409 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.331619481 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.335520027 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.854964743 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.346920843 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.332589101 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.670644659 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.333544741 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.629983756 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.348620093 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.331377699 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.929020168 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.33277522 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.378126233 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.333598778 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.33192102 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.330984147 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.335512595 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.620225107 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.378459503 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.332832746 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.332841766 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.336989067 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.332999796 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.349147449 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.34318038 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.983993198 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.343568141 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.331505544 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.353859171 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.332941196 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.334147978 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.333088277 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.33419783 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.623307895 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.333508774 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.331982716 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.335104226 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.334288571 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.343580915 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.425836527 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.342395946 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.634224112 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.335523383 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.333061591 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.339653161 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.343844433 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.348960191 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.3349249 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.352283903 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.334234312 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.633262556 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.350337201 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.349962737 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.335271086 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.335829585 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.339951775 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.334732864 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.386961509 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.335846885 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.207431509 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.344897599 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.353485272 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.335454787 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.342393225 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.334653484 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.359414508 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.335084556 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.636385432 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.619886576 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.587104575 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.338099849 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.33532016 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.182204147 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.343605147 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.519253319 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.354712865 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.335513362 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.615875191 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.561861188 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.338203537 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.335497774 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.339192325 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.616212307 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.34968678 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.650801779 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.946602955 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.340946641 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.337829937 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.202976604 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.14943431 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.342737614 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.341919808 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.637555157 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.35788256 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.338195978 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.336913409 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.337787232 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.337649646 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.342932368 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.337043889 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.337771546 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.337595155 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.63357019 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.532706255 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.353658608 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.349057966 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.865040557 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.35912023 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.338163517 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.345393118 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.342516907 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.338134274 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.399854113 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.343408824 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.342793398 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.340627773 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.339424585 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.893965943 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.341204246 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.354972884 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.532351592 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.114261308 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.342400889 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.341079277 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.341819711 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.394883491 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.898443761 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.380021252 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.643515112 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.352232621 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.379667767 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.340293296 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.351871295 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.901403101 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.346204719 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.354457257 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.082065102 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.343352555 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.820212886 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.339131009 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.341164277 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.00494527 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.345236141 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.344567402 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.345446077 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.339582862 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.675934801 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.343579974 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.368798981 seconds)
  done (took 499.511449361 seconds)
done (took 647.593648919 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.340643933 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.345090623 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.32366504 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.346520823 seconds)
  done (took 10.58994976 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.359483707 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.348384181 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.357365322 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.345585925 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.356708525 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.346727243 seconds)
  done (took 9.347665638 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.341630153 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.347566491 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.347049138 seconds)
  done (took 8.270146598 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.555893656 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.356917387 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.69686575 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.352634368 seconds)
  done (took 9.19638768 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.357546322 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.356076982 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.357673795 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.356509353 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.358818105 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.359739532 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.357696307 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.356168874 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.358283594 seconds)
  done (took 13.451615023 seconds)
done (took 52.090881391 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.401407362 seconds)
    (2/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.319722554 seconds)
    (3/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.347911106 seconds)
    (4/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.113006816 seconds)
    (5/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.491466635 seconds)
    (6/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.455011446 seconds)
    (7/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.412293753 seconds)
    (8/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.451846689 seconds)
    (9/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.414428653 seconds)
    (10/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.345573391 seconds)
    (11/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.382116321 seconds)
    (12/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.369850561 seconds)
    (13/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.321596236 seconds)
    (14/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.326658336 seconds)
    (15/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.560183857 seconds)
    (16/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.326666545 seconds)
    (17/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.476310137 seconds)
    (18/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.319641636 seconds)
    (19/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.153378729 seconds)
    (20/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.32652065 seconds)
    (21/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.462119998 seconds)
    (22/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.427205194 seconds)
    (23/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.4980599 seconds)
    (24/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.357625786 seconds)
    (25/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.453245993 seconds)
    (26/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.417980561 seconds)
    (27/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.52818248 seconds)
    (28/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.52727076 seconds)
    (29/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.475896903 seconds)
    (30/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.461317302 seconds)
    (31/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.353571887 seconds)
    (32/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.418544036 seconds)
    (33/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.166488364 seconds)
    (34/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.431974737 seconds)
    (35/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.487810949 seconds)
    (36/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.322530589 seconds)
    (37/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.326940876 seconds)
    (38/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.503716164 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.458068557 seconds)
    (40/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.416941206 seconds)
    (41/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.320884158 seconds)
    (42/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.386056191 seconds)
    (43/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.345650224 seconds)
    (44/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.517528258 seconds)
    (45/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.386123378 seconds)
    (46/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.458398788 seconds)
    (47/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.563232613 seconds)
    (48/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.082999382 seconds)
    (49/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.324215023 seconds)
    (50/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.162775071 seconds)
    (51/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.405553544 seconds)
    (52/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.322231597 seconds)
    (53/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.560311924 seconds)
    (54/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.561009594 seconds)
    (55/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.617567964 seconds)
    (56/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.32858628 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.465156719 seconds)
    (58/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.166867846 seconds)
    (59/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.591624896 seconds)
    (60/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.328134105 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.600728499 seconds)
    (62/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.351534593 seconds)
    (63/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.327953004 seconds)
    (64/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.390976635 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.436222748 seconds)
    (66/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.354059228 seconds)
    (67/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.383353477 seconds)
    (68/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.507123906 seconds)
    (69/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.52377281 seconds)
    (70/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.380826772 seconds)
    (71/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.321924034 seconds)
    (72/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.370537958 seconds)
    (73/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.192072704 seconds)
    (74/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.44783363 seconds)
    (75/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.325695565 seconds)
    (76/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.380115311 seconds)
    (77/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.446479599 seconds)
    (78/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.406311259 seconds)
    (79/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.324991389 seconds)
    (80/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.38200872 seconds)
    (81/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.439948231 seconds)
    (82/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.512720694 seconds)
    (83/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.599753359 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.464038782 seconds)
    (85/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.481879105 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.435468196 seconds)
    (87/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.46718097 seconds)
    (88/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.082400788 seconds)
    (89/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.327549575 seconds)
    (90/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.329004535 seconds)
    (91/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.492101655 seconds)
    (92/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.386245308 seconds)
    (93/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.424938476 seconds)
    (94/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.495571102 seconds)
    (95/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.462028026 seconds)
    (96/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.381220938 seconds)
    (97/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.238895059 seconds)
    (98/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.427849054 seconds)
    (99/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.200884634 seconds)
    (100/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.446379632 seconds)
    (101/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.493949048 seconds)
    (102/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.325350532 seconds)
    (103/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.46492786 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.595339676 seconds)
    (105/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.041554514 seconds)
    (106/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.125567857 seconds)
    (107/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.456876804 seconds)
    (108/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.37584544 seconds)
    (109/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.136157715 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.501116809 seconds)
    (111/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.50525807 seconds)
    (112/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.384255283 seconds)
    (113/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.389332874 seconds)
    (114/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.316769989 seconds)
    (115/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.604782511 seconds)
    (116/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.172364187 seconds)
    (117/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.450464279 seconds)
    (118/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.515348981 seconds)
    (119/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.469458495 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.465729679 seconds)
    (121/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.326555345 seconds)
    (122/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.462835034 seconds)
    (123/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.501692109 seconds)
    (124/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.503000312 seconds)
    (125/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.533220766 seconds)
    (126/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.48471981 seconds)
    (127/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.440886547 seconds)
    (128/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.203984753 seconds)
    (129/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.456642709 seconds)
    (130/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.233132511 seconds)
    (131/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.314056839 seconds)
    (132/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.333148759 seconds)
    (133/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.367162231 seconds)
    (134/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.433104977 seconds)
    (135/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.374907905 seconds)
    (136/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.543665974 seconds)
    (137/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.416183236 seconds)
    (138/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.540131729 seconds)
    (139/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.34795561 seconds)
    (140/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.470910362 seconds)
    (141/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.333805644 seconds)
    (142/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.354049849 seconds)
    (143/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.382799739 seconds)
    (144/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.426262855 seconds)
    (145/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.343281057 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.39012935 seconds)
    (147/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.330028319 seconds)
    (148/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.329254144 seconds)
    (149/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.341876502 seconds)
    (150/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.455033034 seconds)
    (151/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.328943154 seconds)
    (152/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.332387248 seconds)
    (153/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.346793741 seconds)
    (154/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.611020737 seconds)
    (155/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.394865849 seconds)
    (156/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.427558664 seconds)
    (157/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.386351055 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.412531943 seconds)
    (159/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.203930835 seconds)
    (160/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.485154483 seconds)
    (161/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.500133701 seconds)
    (162/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.390906528 seconds)
    (163/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.439621345 seconds)
    (164/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.056635369 seconds)
    (165/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.330006331 seconds)
    (166/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.473384235 seconds)
    (167/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.39292251 seconds)
    (168/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.204140128 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.470890958 seconds)
    (170/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.367221538 seconds)
    (171/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.702929968 seconds)
    (172/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.399183393 seconds)
    (173/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.429953135 seconds)
    (174/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.46092825 seconds)
    (175/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.49972851 seconds)
    (176/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.470928555 seconds)
    (177/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.540348803 seconds)
    (178/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.043424142 seconds)
    (179/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.330494194 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.560501289 seconds)
    (181/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.048696591 seconds)
    (182/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.60101527 seconds)
    (183/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.336549764 seconds)
    (184/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.586300805 seconds)
    (185/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.336068509 seconds)
    (186/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.396989212 seconds)
    (187/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.34290047 seconds)
    (188/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.480431595 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.51142667 seconds)
    (190/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.431237519 seconds)
    (191/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.542132686 seconds)
    (192/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.108907153 seconds)
  done (took 343.385868564 seconds)
done (took 344.621183405 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.381622516 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.455907913 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.36190342 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.361816303 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.363847951 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.35465187 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.384855621 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.36302172 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.379160783 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.378126039 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.355664893 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.372056477 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.379212737 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.37499581 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.397222921 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.364480646 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.363248136 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.374280371 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.379574859 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.380898669 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364337914 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364583373 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.392440209 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.364426832 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373351534 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.372055312 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.369950207 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.36538318 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.372014562 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.378374031 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.364847341 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.370682167 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.380984254 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.375860493 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.36625463 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.374568287 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366040589 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.458716736 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.384325176 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.375067818 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.372797234 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.380501888 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.369840934 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.369429688 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.377051454 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.392275108 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.373082766 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.380390791 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.370583703 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.359138918 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.3911233 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.378245466 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.37347395 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.356965002 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.367105731 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.387144894 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.375240061 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384745996 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.373555934 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366421322 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.399485618 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.386379833 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.377739926 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.375141136 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.372376863 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.381537051 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.374845165 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.383540443 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.374932647 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367910912 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.36848269 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.37553831 seconds)
done (took 108.347108406 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.492135651 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.363146254 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.522667025 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.37517836 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.533828053 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.488379868 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.373997509 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.375049028 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.374447472 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.169002845 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.374225657 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.375973157 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.365325233 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.376842339 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.487112776 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.376909563 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.375562699 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.066460992 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.376649828 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.503254634 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.365626929 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.37631927 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.376374518 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.176036789 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.364440229 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.361531943 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.504411583 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.377005734 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.073700269 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.361293506 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.362932358 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.075850933 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.50409279 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.395825756 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.38535095 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.385872635 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.536760754 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.380515457 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.494352879 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.494816394 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.525036538 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.416021471 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.370267246 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.368393533 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.380210084 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.378106601 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.378495572 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.406783199 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.366239832 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.379620347 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.068507519 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.389510028 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.387625943 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.380657938 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.378477288 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.397827729 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.379337405 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.380979744 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.506960271 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.380796104 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.494893046 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.177136262 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.172319895 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.379998623 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.364542675 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.379938416 seconds)
  done (took 110.941064406 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.441533758 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.449341614 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.482795341 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.373941348 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.420425454 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.485798173 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.374105897 seconds)
  done (took 11.282529131 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.379082303 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.381758022 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.419646966 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.418985408 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.381327238 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.55292656 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.381186402 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.383047878 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.381697223 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.423979171 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.384474456 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.381315159 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.389676079 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.369496524 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.419502103 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.381764567 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.489853793 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.372746442 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.380754332 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.523455494 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.380981444 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.389471091 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.42190074 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.383808519 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.383880768 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.378903418 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.157052414 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.380165781 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.380418578 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.381349551 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380870507 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.438033207 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.381255385 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.369679466 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.380727897 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.486359467 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.38239168 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.38151354 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.382750366 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.373882394 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.381422806 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.381643523 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.382548921 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.381018995 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.381900604 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.397249213 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.381672318 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.381956024 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.383048297 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.383198629 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.422666432 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.383023256 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.381380688 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.38289194 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.427359014 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.392329267 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.382733301 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.381995588 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.382785484 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.382869172 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.526010536 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.419336911 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.383396224 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.421760762 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.382780017 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.384229673 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.382536432 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.383458831 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.463627101 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.383254298 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.420477643 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.38344839 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.555254429 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.398636947 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.383785205 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.378172915 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.37803682 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.384184134 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.373444812 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.381909423 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.383028191 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.377648315 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.381316049 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.383348333 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.383930305 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.532473667 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.483150974 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.384259621 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.390516218 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.382653154 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.383101653 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.427411936 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.385099967 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.384321718 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.426235435 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.494537133 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.426654468 seconds)
  done (took 141.985098252 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.390514664 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.389402255 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.379244014 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.403712435 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.377987251 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.376765553 seconds)
  done (took 9.578703392 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.378362896 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.387305524 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.384045638 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.385354936 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.386131272 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.387867076 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.387923671 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.378748834 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.389267059 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.386645875 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.38898292 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.390053189 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.386796902 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.387553042 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.388408721 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.386319351 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.387827922 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.386952022 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.386084592 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387571594 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.373152056 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.387540022 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.388014184 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.379449233 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.394432716 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.387171738 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.402386031 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.386725507 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.386388438 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.387344797 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.390630828 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.389862918 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.380497401 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.385027432 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.390515677 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.380185478 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.391475434 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.391043018 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.388832321 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.38978554 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.390869304 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.388893867 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.387947672 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.391803191 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.380831057 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.382887026 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.394062758 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.403821703 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.389343858 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.392197595 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.391636993 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.388559518 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.393397477 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.392084103 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.384655911 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.385739034 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.394930996 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.389345948 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.389865278 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.381605435 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.392013469 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.391417253 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.382324672 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.393244771 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.390746996 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.393318124 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.383576141 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.394036952 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.389785081 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.390079212 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.392958091 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.39091234 seconds)
  done (took 102.220526185 seconds)
done (took 377.257931273 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.698923235 seconds)
  done (took 3.963497106 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.380243988 seconds)
  done (took 3.645284266 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.770079337 seconds)
  done (took 23.037048837 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.426512625 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.434149235 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.40540943 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.377745976 seconds)
  done (took 10.906878639 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.80889824 seconds)
  done (took 4.074083644 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.385860239 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.388418805 seconds)
  done (took 6.039407705 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.583437631 seconds)
  done (took 3.84783766 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.590196006 seconds)
  done (took 3.854643286 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.413523264 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.40224732 seconds)
  done (took 6.087451378 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.353339849 seconds)
  done (took 3.619234917 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.33665245 seconds)
  done (took 21.601807948 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.397002064 seconds)
  done (took 3.663607528 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.407057851 seconds)
  done (took 3.673068674 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.937237283 seconds)
  done (took 6.202768781 seconds)
done (took 105.481121682 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.37643345 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.37766923 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.378654735 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.377130467 seconds)
  done (took 10.776158758 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.456341007 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.455091088 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.46487256 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.450814312 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.449310785 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.457624129 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.418576785 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.417582005 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.447511304 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.444542643 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.459448528 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.449512099 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.459349518 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.419959339 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.44333228 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.46031841 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.44820705 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.466085965 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.41966702 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.449876502 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.394354142 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.451143792 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.444363273 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.393942875 seconds)
  done (took 35.888871555 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.880459548 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.451552031 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.537007923 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.434391352 seconds)
  done (took 7.570437248 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.497784869 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.498412599 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.515377652 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.551541035 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.599530856 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.513168032 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.416147356 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.414353336 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.400896205 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.497845244 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.583138622 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.4965229 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.712135958 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.393688432 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.711385702 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.394019354 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.394693661 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.498811183 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.546357168 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.577173373 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.39544582 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.497527513 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.501368687 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.49695392 seconds)
  done (took 37.37298811 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.402021703 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.411113228 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.395517247 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.40984775 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.396405113 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.397370139 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.396920803 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.402361183 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.394237668 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.395969892 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.396243936 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.411630417 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.397161018 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.398116665 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.402970726 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.397643379 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.399038208 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.403387113 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.406956569 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.39769601 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.397536806 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.40355127 seconds)
  done (took 32.08316578 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.379743963 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.380793121 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.732138522 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.637613111 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.38176927 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.387789826 seconds)
  done (took 14.168885978 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.459011523 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.600291861 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.388840228 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.740143131 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.826507075 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.390194801 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.389178958 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.634165921 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.933470602 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.928542251 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.451296661 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.461832033 seconds)
  done (took 20.474453373 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.390942421 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.387231151 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.387902895 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.403189386 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.442065406 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.392662367 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.393943543 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.38202777 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.447743418 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.449291234 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.395702461 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.446353535 seconds)
  done (took 22.189219349 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475494868 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393724306 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.39127435 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410321592 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397032876 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.393916274 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.414571637 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.130682672 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.403562998 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668966379 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391810732 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480996753 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.638399352 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404203312 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399980217 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.360642774 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625932927 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909308318 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399275095 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397563891 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430773505 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.406450489 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.407335024 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.614686097 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399849342 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394904632 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.66166626 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395647038 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.68820405 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.668117236 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.666850946 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.400868147 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669794987 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040632924 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507488184 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.606637154 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392090426 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399929673 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.365849551 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.402220494 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.417766185 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402106066 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.661931387 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401667841 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.394095118 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.403058816 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147668497 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.407024691 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.395478281 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395943102 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667716281 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483723137 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.400347978 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.396521083 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467488773 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400166918 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.400255542 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516296286 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039768941 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395603702 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40984148 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.40162255 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399017225 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403375963 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077135044 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.403152069 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.402289471 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401433693 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396742173 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.396845446 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.425825393 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397540374 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.41662967 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398032939 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199255474 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.399769867 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403538768 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965000508 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416406319 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.404821876 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622426681 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398209982 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398945203 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.399047952 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.397078487 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155556207 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410277046 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.364695432 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461201837 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.132005778 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.615753217 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421929796 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42863779 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.618761014 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.364796018 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398373987 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.415314135 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.406979365 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421031399 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.142810033 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404050991 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.404732674 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.646785442 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.608385094 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401850082 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.371983577 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89837684 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415463038 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.425575165 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401475371 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.618876878 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.047976016 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.672818199 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404251875 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437948925 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.40010841 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214507992 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416218587 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.410523236 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399850982 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688892501 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.237065174 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405579254 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473155251 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401876888 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.4012479 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410863434 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407716259 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.4019974 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.59163185 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413765399 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.677181731 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.408400238 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400799624 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.402743034 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406174988 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.408399796 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.62177882 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410562878 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680786007 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401968793 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402781985 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401046719 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.619462777 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.404614235 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.408292543 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.740636701 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406121855 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411104637 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.679223914 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438764006 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513132287 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433218145 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.404784916 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.652687369 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.407986645 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.40905714 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415973401 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.4095059 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408091896 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.411536221 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398307817 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074686921 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379525227 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.408119142 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.403263387 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.419133186 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477059109 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.411081758 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618326152 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.407511078 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430638033 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.414754965 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.407411791 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628703084 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.676614597 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.418133052 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.585601481 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.895554128 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.05822581 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421617839 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.404206077 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.403867872 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.405343929 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404805517 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40548568 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40476483 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.619600844 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683285616 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403145233 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.062495318 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406453204 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.405529909 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.434953137 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676079744 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.419873854 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405767012 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.412563515 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413219341 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413660292 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.68221991 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.639237242 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.423437813 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.407018444 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.92534928 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.413893874 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.408474963 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.407027015 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432806114 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.406041232 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334932062 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.750186345 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416761827 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683751668 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.427120964 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.429535215 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.40700965 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407910356 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428024147 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.432781122 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414932545 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.622086836 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.412437681 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41474171 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047176634 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217307427 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003844739 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418562817 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.422248004 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.4150133 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.155630182 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412816597 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408099261 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657585914 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.147203717 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412388291 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90123355 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.419472509 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17439249 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.686071826 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637129086 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414905629 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.414860445 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687992059 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.624922509 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436197432 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.421547392 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413888098 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.375927568 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988023511 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412709833 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592723107 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148612961 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413751622 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.416463667 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.474740174 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.414471309 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80743811 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414150657 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410715015 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.412239314 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41567493 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32031348 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417753253 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409969617 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087870103 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.411348294 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.912411279 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413565002 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.624632306 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.686310126 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.663022818 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.426798562 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.411402709 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.658682224 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.683169558 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417986522 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.409360851 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016944281 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.2695789 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.418054905 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41272575 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236027594 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415664473 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.715670346 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.426687753 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.417038716 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415197423 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.412629754 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411577606 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.412424524 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.417169162 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.385921283 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929580669 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.41582022 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414671528 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.430514009 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418638011 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.658176792 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.427637881 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.067375337 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642253929 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408403144 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467511058 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.417650697 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414384245 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.386587117 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.412920339 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.413786479 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.464264066 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.637583419 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.416988483 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.385812699 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.424687135 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.627987897 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414120117 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.415213517 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.64890222 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.418837342 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.415876411 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.225842783 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444123738 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415583137 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420959938 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.411940843 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.474710286 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487036002 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629360341 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.692353293 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.693284098 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814017706 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419900591 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421382681 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.430091064 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496056686 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42296106 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.422526792 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.415085675 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068078162 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230466031 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.074100418 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.693095333 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422048238 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423853893 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413719877 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656359981 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414540376 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691371092 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415321992 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.421832843 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440614204 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419122202 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4234001 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632270312 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689388128 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415766496 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415204937 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422506715 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.415903214 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.692828778 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.633164808 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93905421 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995918524 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421948579 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.422723635 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.16966686 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697370061 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416646599 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416503287 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416297518 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.428731069 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.416366368 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.427658422 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424126301 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.645042542 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689653348 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072372323 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.694644704 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.609571749 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.417484466 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423838306 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.66809315 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.247897855 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.632697884 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.080751718 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.185783556 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671886174 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491453324 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.632537774 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.421053229 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.660105156 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.428234022 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.4185025 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418650982 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417920081 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.416630332 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.689961542 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083868045 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673869174 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.424500916 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.429320099 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449101849 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.633787553 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.644167382 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186392738 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.644487641 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.696859857 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.432106943 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422333729 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084787579 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699524469 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426124615 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.427485737 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.651804171 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.424372379 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455285647 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.296096274 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.42033005 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998879037 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.634632564 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439268894 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434046048 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.195596587 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084428319 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.420876974 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94205986 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426297507 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423988736 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701421285 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.428320994 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.426933358 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.70623483 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.426977451 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.431967004 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642841533 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.081413621 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203596813 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.439786492 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422548064 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.446586663 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421595618 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447555504 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424572722 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422041639 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.817445817 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.426464064 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423008319 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434517303 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.422201871 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.428933942 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.427157404 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423669895 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.430727307 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.41117175 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.401019429 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.438222519 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.545872959 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01023854 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429491928 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.036218268 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.757999038 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.669270221 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.434298987 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.395783646 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.427805042 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422925747 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423901303 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423248549 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.430395424 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006570735 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.43677326 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.703120469 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.435823061 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.633575216 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.633019793 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.430747363 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.646365911 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.437112557 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448142566 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.391138008 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424806256 seconds)
  done (took 1001.136790075 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.42804281 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.437511736 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.425589981 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.459027475 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.41788369 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.461713092 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.48781052 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.430888514 seconds)
  done (took 20.846737254 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.413376565 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.423647141 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.414327009 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.425449875 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.421303015 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.907530013 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.425196578 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.427324088 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.439215243 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.424985352 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.428130432 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.108851429 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.445413378 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.420043106 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.410644002 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.426620487 seconds)
  done (took 33.264239792 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.202224616 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.47852575 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.084997816 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.417285676 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.449145825 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.42930848 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.588670667 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.432024288 seconds)
  done (took 26.383392725 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.429644894 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.429279996 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.429941208 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.429422813 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.431185799 seconds)
  done (took 8.450396533 seconds)
done (took 1271.871861344 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.432784099 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.433424618 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.431818935 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.431582119 seconds)
  done (took 7.030052575 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.394676464 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.393765309 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.399040402 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.41218623 seconds)
  done (took 9.900664724 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.134201454 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.032827344 seconds)
  done (took 5.466932055 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.971959016 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.95686096 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.952355219 seconds)
  done (took 7.181331966 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.713702798 seconds)
  done (took 3.014805897 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.388416559 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.423394561 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.151205458 seconds)
  done (took 8.264448237 seconds)
done (took 42.159039016 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.428370274 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.178640698 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.575321595 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.428357289 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.5803462 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.576843579 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.668932068 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.418689593 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.423644059 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.426884406 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.429715569 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.58005922 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.656651304 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.183003989 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.650232005 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.182284043 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.580054474 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.418404694 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.433931406 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.425077854 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.66303989 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.432493779 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.423191505 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.432740674 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.577824697 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.56442604 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.418978058 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.180959174 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.429235916 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.419517127 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.564873335 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.419711837 seconds)
  done (took 84.074828492 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.428866935 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.418996333 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.447917404 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.42045567 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.420068469 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.43180068 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.420320702 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.420664832 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.425989966 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.421949782 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.421022838 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.419752622 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.421170105 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.422081174 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.423315505 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.421171923 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.420432943 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.437285453 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.421511475 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.421310038 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.41920439 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.421112753 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.42071307 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.438186609 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.422221608 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.422518874 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.439321744 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.421064044 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.420467155 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.421264371 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.42335059 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.441577366 seconds)
  done (took 78.90145391 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.421347533 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.422248867 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.432790053 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.421894749 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.435818237 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.433269684 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.423837229 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.425791761 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.434943963 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.434743942 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.428089468 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.433579711 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.422952879 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.439197872 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.425030925 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.438628148 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.427970721 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.422043423 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.422384359 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.437393538 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.423476221 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.422578618 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.438802861 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.424360041 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.424130878 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.428584175 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.425125537 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.434227468 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.429258252 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.426394655 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.428181028 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.423993035 seconds)
  done (took 79.019170779 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.661469996 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.43939445 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.44220266 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.432897984 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.442600736 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.437843696 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.434318297 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.66992624 seconds)
  done (took 15.268450507 seconds)
done (took 258.564260285 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.445755231 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.936795114 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.460312192 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.433798704 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.476227426 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.465583003 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.662277859 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.465895222 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.663407416 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.452395938 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.448480139 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.44139209 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.249159223 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.587217413 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.263650993 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.380234907 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.327415995 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.432683779 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.024926642 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.724420069 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.463227563 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.441123217 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.270831172 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.352430793 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.413998875 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.519707607 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.533154911 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.662751751 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.595412566 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.511465684 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.945142254 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.441639628 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.441935603 seconds)
  done (took 66.243352278 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.43273541 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.440517171 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.442093205 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.442856896 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.440941009 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.44126183 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.432226294 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.44252917 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.443591717 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.443350334 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.442643442 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.443274864 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.444060873 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.442072256 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.441308124 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.413944229 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.432461206 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.441153862 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.433033961 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.414418317 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.443213472 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.442930509 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.443342586 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.443025313 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.443197799 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.441897588 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.443188486 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.444872878 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.443230526 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.443713769 seconds)
  done (took 44.492425038 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.444043659 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.018304049 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.183499259 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.448017239 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.433860557 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.438833922 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.730353124 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.450544779 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.438175607 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.439428836 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.906973338 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.45261082 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.467673421 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.189039743 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.443532543 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.443412695 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.445429137 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.435560963 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.028124833 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.449602096 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.728193384 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.450571218 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.730606945 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.450018178 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.437803271 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.436569439 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.440488606 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.269968344 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.460349202 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.908183 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.249923697 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.730442072 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.199971561 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.234178198 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.247305688 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.451542762 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.445963634 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.916286904 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.444940605 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.438105382 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.728352443 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.444276368 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.191102758 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.129784647 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.455774078 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.447215982 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.300477676 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.914022951 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.690437569 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.449560298 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.224851678 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.446906413 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.447033407 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.439210388 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.686428453 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.447512573 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.437334842 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.303933102 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.444493419 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.729799999 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.454958403 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.4398587 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.032249849 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.446359615 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.022854569 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.447213776 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.446443569 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.440706243 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.195390296 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.448985467 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.141449635 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.462613509 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.448258723 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.915522607 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.032748808 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.369887475 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.447890625 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.029849364 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.241236067 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.752727328 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.450155366 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.253575478 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.756049032 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.450425134 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.451437195 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.451262426 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.449808227 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.510733192 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.729947471 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.064993069 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.143635156 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.31302618 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.739188429 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.455568872 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.442324846 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.307681204 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.450461664 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.450289095 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.194229637 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.150577599 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.46437518 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.449423055 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.131290007 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.466272768 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.736374157 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.452883205 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.231797364 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.448960646 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.512416202 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.450736554 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.448514787 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.446949564 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.734853038 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.451904605 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.451719097 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.125353605 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.947921273 seconds)
  done (took 201.016130131 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.442137863 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.436371042 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.444294857 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.436658899 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.437117548 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.445058801 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.435694276 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.437138572 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.44283995 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.435016092 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.438448604 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.445944101 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.444320234 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.437242103 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.454375435 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.438138004 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.437325334 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.460605878 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.438403998 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.43716556 seconds)
  done (took 46.141920434 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.452533714 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.017581691 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.984784013 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.460078911 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.452629158 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.445107166 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.501801303 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.459713873 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.454671091 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.75093561 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.62376293 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.460872535 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.453723469 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.452237938 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.981201546 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.43017402 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.752006012 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.024696539 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.459845471 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.019903472 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.43013965 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.452909354 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.443648121 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.018663501 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.771436301 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.741064108 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.51089363 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.023848139 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.459239122 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.454948632 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.010255099 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.455365485 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.44593826 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.995277326 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.45470952 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.469485172 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.455147466 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.506072374 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.506243673 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.756607775 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.031881855 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.754174921 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.471664721 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.607609882 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.462000322 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.425278687 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.033673533 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.461612342 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.425682756 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.456105344 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.46115598 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.997706106 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.452741735 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.998611277 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.462142517 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.455436028 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.022086751 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.005321144 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.993416727 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.626596302 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.450844695 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.737969401 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.462626185 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.033736372 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.463696674 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.457444122 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.457782448 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.623745352 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.030435146 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.745360398 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.756600132 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.751819267 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.458168295 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.517662264 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.458337536 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.75590069 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.522325387 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.838071052 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.75580628 seconds)
  done (took 131.203796368 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.723081581 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.569724653 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.825853809 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.029406422 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.95366251 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.587622666 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.561520374 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.698167553 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.459389197 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.563953907 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.111457208 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.566734501 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.21366806 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.519350831 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.554256486 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.578883494 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.84469672 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.424046693 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.099656422 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.097583737 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.462009938 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.555456133 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.970815479 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.65753429 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.45300755 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.020907585 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.389620003 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.96707351 seconds)
  done (took 54.781970501 seconds)
done (took 545.187052632 seconds)
SAVING RESULT...
DONE!
