cset: moving following pidspec: 25792
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.338031711 seconds)
loading group "string"... done (took 0.535648077 seconds)
loading group "linalg"... done (took 6.713956222 seconds)
loading group "parallel"... done (took 0.154241303 seconds)
loading group "find"... done (took 1.164471309 seconds)
loading group "tuple"... done (took 1.747556761 seconds)
loading group "dates"... done (took 1.17980551 seconds)
loading group "micro"... done (took 0.289962898 seconds)
loading group "io"... done (took 0.901343721 seconds)
loading group "scalar"... done (took 36.372316131 seconds)
loading group "sparse"... done (took 10.968756983 seconds)
loading group "broadcast"... done (took 0.917558185 seconds)
loading group "union"... done (took 11.827703471 seconds)
loading group "simd"... done (took 4.150342772 seconds)
loading group "random"... done (took 8.503927221 seconds)
loading group "problem"... done (took 1.873437547 seconds)
loading group "array"... done (took 19.930108947 seconds)
loading group "misc"... done (took 1.681312285 seconds)
loading group "sort"... done (took 3.108024974 seconds)
loading group "collection"... done (took 16.638194322 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.478321903 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121535843 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11294116 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117316902 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.139413022 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11407504 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121684509 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08282061 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.774212056 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.138649996 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117364257 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.406839294 seconds)
done (took 4.885927441 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.169972226 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081207603 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080358244 seconds)
  done (took 1.283951194 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064362144 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119943769 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066089832 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065763772 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065442854 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065326427 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065037567 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.064877532 seconds)
  done (took 1.635707332 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071530041 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067314152 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067463166 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066586916 seconds)
  done (took 1.395765412 seconds)
done (took 5.682238527 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.763619035 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.198100018 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181037374 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.389055861 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.125566914 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.160664534 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.632427046 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317133823 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.187516026 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079341503 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101018673 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.31770656 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.104774708 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.649327584 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075823383 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.08842341 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136442725 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.415883408 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066337226 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.080972906 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088334636 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127013215 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086583031 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074475088 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.141570135 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.06689001 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.126830793 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079423754 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065566367 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.204521125 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171333823 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.655516322 seconds)
  done (took 10.119692531 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09525383 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096034409 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067410316 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122136988 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094439771 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068621561 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07018721 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066283616 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08541908 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126557617 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087084922 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099743467 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065130878 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068015173 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083766136 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.20152233 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081476146 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08229868 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07078843 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074543817 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104018953 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077374933 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077342884 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076257746 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127427385 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178166632 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097951075 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098531811 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067263168 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.078854351 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114362195 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12651008 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064462984 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06542715 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122441806 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093469237 seconds)
  done (took 4.534827756 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.894060133 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.136946976 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.088915882 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158968994 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067312199 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.104525157 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064283815 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08257244 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.196225589 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.032995207 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.110319986 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.433865704 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109775462 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.08356301 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066595808 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067480536 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065923585 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.350775381 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108430515 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.1113117 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082962723 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072791087 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067710018 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.346530725 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068076943 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067170884 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06974019 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.05883585 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114628711 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06872967 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.989471212 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.116145831 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066852421 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10042159 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.163690946 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088560456 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.132160863 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064583409 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.06438191 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.144601388 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071907679 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.063895404 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080550783 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063211113 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100576789 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.099654279 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.195804997 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066703166 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161070558 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06568724 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.086258723 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.739156237 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153266872 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075597981 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06630286 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.243522476 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.084506824 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066466502 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063917965 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.199916889 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131098612 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068638431 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066193382 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06559042 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067480818 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.350688247 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065875416 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.988231 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.066405215 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075711518 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068716993 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065572905 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071595332 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070999362 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08451892 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065835677 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.067074092 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06549654 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06539261 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066895927 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.082813604 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064495917 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.187944741 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066162724 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06625296 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064040026 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085414531 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100636274 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067836019 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06444455 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099201188 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066888185 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06622489 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.100306555 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065906706 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.082579651 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068674693 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112210046 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065637815 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.105974521 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065867856 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096364163 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.066799846 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097873068 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.076093305 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066335243 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.210207336 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063478597 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063020089 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065025031 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.063558513 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068177118 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066817831 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.062119644 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.077078327 seconds)
  done (took 19.964812142 seconds)
done (took 36.636312129 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.272936507 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073644595 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073502181 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073435279 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073582221 seconds)
  done (took 1.774453862 seconds)
done (took 2.974485899 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.117861141 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097344746 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063103245 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094773126 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063360174 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098293121 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097822684 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080153648 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097804389 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063438302 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094973393 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063823498 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062872091 seconds)
  done (took 2.3023739 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081960619 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082047881 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069412299 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082074622 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063346157 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081222093 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079656222 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087126839 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079595721 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071118367 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063844803 seconds)
  done (took 2.02315676 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080529673 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082149421 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06803471 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079961088 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062551384 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080248358 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079837149 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084385459 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080614319 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072439583 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062836082 seconds)
  done (took 2.015080653 seconds)
done (took 7.51718926 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075758366 seconds)
  done (took 1.248429039 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.578962928 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.039591006 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080201633 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110210054 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181192021 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117016027 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.271988351 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085402672 seconds)
  done (took 8.815499286 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099883743 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067704024 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.06746478 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070589922 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.070998501 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068798929 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068227473 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06760206 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.068565883 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068507048 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070199959 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.069718491 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067827203 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069853025 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070188052 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.070912484 seconds)
  done (took 2.379881562 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090196082 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089560932 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071930452 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073674573 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072031588 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.070972534 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07321863 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072458325 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.069736864 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070980378 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073440662 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072441959 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070340094 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063973043 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073341908 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074306446 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069793603 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073123254 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073790288 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07365644 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.072920661 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063105438 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070215396 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072617364 seconds)
  done (took 3.02910931 seconds)
done (took 16.653986253 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109881149 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069991049 seconds)
  done (took 1.360774145 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079450979 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081014115 seconds)
  done (took 1.348430016 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.080483055 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064650287 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.087922701 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076618824 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065280036 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06450479 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085412886 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065457588 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064992928 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064884018 seconds)
  done (took 1.908175059 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.066974296 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076543126 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068873628 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079131893 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.0723427 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062977377 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071401636 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066596197 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076491481 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062081193 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.06985784 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081269902 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.06985492 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08254467 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071118143 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067037599 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069502804 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06572987 seconds)
  done (took 2.470415031 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065319076 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065995309 seconds)
  done (took 1.323146967 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.065420864 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062955113 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065292172 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064870127 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062531731 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061622275 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062583058 seconds)
  done (took 1.634259842 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.370820233 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109095094 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.290537756 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.069780488 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080549351 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247039992 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064910667 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069243821 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069400115 seconds)
  done (took 2.601994897 seconds)
done (took 13.840748945 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077135064 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084091756 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093358544 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.337199576 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090312738 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065020411 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112345942 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.186597335 seconds)
done (took 2.249465919 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.204478809 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.560915143 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.367129372 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.19318654 seconds)
  done (took 2.318740958 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.312550295 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089639764 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058804519 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065553259 seconds)
  done (took 1.731002222 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064999771 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067858117 seconds)
  done (took 1.334604656 seconds)
done (took 6.792832931 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066605006 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064979573 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.084307239 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062774695 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.064948307 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.06272125 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063810149 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065008525 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062531013 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070226963 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.067663235 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.064833184 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065163313 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062733749 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062337368 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06478431 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062508001 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062405643 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065062852 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062728784 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064698285 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065669436 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.062529618 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062816756 seconds)
  done (took 2.799026394 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081633436 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06583672 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070603719 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070359318 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069041583 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070202733 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069733586 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06552675 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070220834 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067307746 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068457003 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068597674 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067587611 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.06884611 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067075205 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068942958 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070256561 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065516419 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066675892 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.068964612 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069585721 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065349326 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068450158 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069682905 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068602518 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068645254 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067118482 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065256198 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069988673 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068532692 seconds)
  done (took 3.271407452 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068829976 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062138747 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06311109 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069871495 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062976363 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06403763 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062787849 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063060518 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063421454 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062502142 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.06386087 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062449818 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062776721 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064067688 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063658006 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066135852 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077746513 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063235422 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062613082 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063699856 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06622247 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062633232 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062871639 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062465325 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062834538 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062105587 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.062927772 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062580619 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063362684 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062682637 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06601188 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.065913451 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062400082 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069700559 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.065956278 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063038101 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066569291 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062334285 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063092699 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062340816 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06263211 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062844507 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06279087 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069638536 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062536223 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063857106 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062625115 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.063991871 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063029826 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064997579 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062368316 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062593334 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063998104 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063574691 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066552974 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061981532 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063251411 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061958451 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062987682 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.061908684 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06202732 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062216117 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064962038 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063004222 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076990613 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069202992 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062094882 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063851289 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063093694 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065245395 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063764917 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075299306 seconds)
  done (took 5.845711945 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088647397 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.197575531 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065078265 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063920092 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061168848 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064915193 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066335679 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063371628 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064462572 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.06822442 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062971384 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064293112 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064229196 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075580472 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063139967 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064185017 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068374131 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060775909 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062914314 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066222964 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063176699 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066104596 seconds)
  done (took 2.810704209 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151551143 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068966155 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104585402 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071943282 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066272183 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071476893 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068274489 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069169082 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068872444 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067475191 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067164747 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069239025 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066534519 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066811952 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066911005 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066937451 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068588502 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0672243 seconds)
  done (took 2.565535982 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076162274 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.064909821 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085707538 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065230554 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064862428 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067326512 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069296015 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072740164 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.066970941 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.064790057 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072772408 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067214916 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067277232 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064908481 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067249947 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06463186 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067553752 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064862232 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07278507 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068982455 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069233068 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072638568 seconds)
  done (took 2.736432093 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077993694 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066869841 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080574051 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06804373 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061273254 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063447264 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069071444 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065327963 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.068769866 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06650635 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06531154 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.062998911 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06807972 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064871932 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068034334 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064710478 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066557182 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064739186 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066636863 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060984845 seconds)
  done (took 2.560693649 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084135228 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066215638 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067298762 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074858021 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066411548 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06645088 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073632835 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066572357 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06641949 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086089225 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066103646 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06656227 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073645085 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070904165 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066105533 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073416549 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073358118 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073306406 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066384764 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065897884 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085301099 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065818626 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073396756 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066364394 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066186374 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.065832621 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066280473 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070648494 seconds)
  done (took 3.194057349 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065435004 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064441239 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06252848 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063347683 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062714452 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06246679 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062413025 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062632189 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065128013 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062876256 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065009272 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065430389 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065088973 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064727234 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065106852 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065114997 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064586919 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062628555 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062466867 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06233893 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.064969627 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06482705 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064621743 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062683174 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06254696 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064560723 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062440381 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062906959 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065182496 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062628869 seconds)
  done (took 3.13802014 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074435094 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072023423 seconds)
  done (took 1.370832927 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062441267 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079128805 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062219023 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068324405 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068780978 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065767943 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072374411 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068695996 seconds)
  done (took 1.768677282 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080137102 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07666871 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067249301 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078800383 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075270975 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081470133 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131076054 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.065917579 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071631761 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06336356 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078706183 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064279724 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071336895 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06571744 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070761208 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071428455 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06298866 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071153317 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06725654 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063574027 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06628363 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073766521 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067568733 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060476318 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066538988 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086428151 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.075429255 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064707266 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067924596 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072442892 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070515811 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059055595 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06487644 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065347697 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063149394 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074264578 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.07992542 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067992933 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073575262 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065836154 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075307232 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060534411 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069907186 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071925447 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075487719 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06543744 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065889041 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060720852 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063655659 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067482303 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06085081 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06537989 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06005733 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074730567 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068280277 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075717994 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063915333 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066511036 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068269717 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068262287 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071689983 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066978575 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067634368 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064551887 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074686498 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069566378 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073683745 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060376002 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059349743 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063101016 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07492349 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086693066 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07093854 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06593605 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065623055 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.062585076 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068449525 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065805347 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070798682 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071180839 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064829514 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07028021 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072800493 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065762449 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067924229 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073822395 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063699343 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068005152 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063409695 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081165912 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064371656 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063521009 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062947129 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075131616 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068379878 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064632101 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.062981241 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07207685 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.059642537 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065411283 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066020716 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065696073 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074328413 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068758618 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068706381 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.072264366 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071040459 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063989371 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066961948 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.060842189 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064143578 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063206579 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.070690279 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05821832 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066974463 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064751443 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064327968 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.197633081 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064262157 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.065689257 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073330594 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071436042 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064326894 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062651091 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068447793 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.065313755 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067637526 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.072935404 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064225709 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061134052 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061747648 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069379905 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065631899 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069159067 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069994941 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068579364 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060462738 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.063291795 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07104019 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.073825948 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.065696488 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066918367 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072158064 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067099324 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065138916 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072201343 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067797366 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065655815 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.0705075 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066545815 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061142225 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068060422 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06885474 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064311944 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.068926503 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068771061 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067830484 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066514144 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064356 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072884518 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065950282 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064702299 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066197316 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063727635 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075145818 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067439132 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061094398 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062801681 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075067128 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063728342 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.06549698 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065372912 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067439693 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066218953 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064218599 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064574489 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067912867 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07565437 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068842232 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066421874 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.070874513 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076066544 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065513548 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067578641 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065186495 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066409236 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.065894329 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07405485 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07029186 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069719424 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067504608 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061805452 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070837311 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072270637 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064730444 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063188873 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064430679 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069093395 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070858395 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069140438 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065564598 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063223503 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06562575 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067943379 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068065876 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064651207 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064609671 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071757735 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063531328 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072605601 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066366408 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075185819 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069626828 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.060776569 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068470118 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064057524 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071754515 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060948358 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063856665 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064716799 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066664543 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064474675 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.06799435 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060072764 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071772584 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071515762 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.06443869 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06370985 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063736471 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070161615 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065839552 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067685966 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067816776 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.069570387 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07399197 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063481785 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067397443 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.073757934 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.192541499 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060114453 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071570487 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.064681961 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066272991 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065031052 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06382798 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069000201 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074164361 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071966692 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060094629 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068515005 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063679155 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065195346 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061271411 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070260457 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069024805 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06728571 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072898265 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067454809 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066144107 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069080902 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065695013 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067273786 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067473828 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069125955 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066956139 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067462015 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065509364 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.06784894 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065135901 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063384714 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067776617 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065913916 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065590078 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071221078 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065434991 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066198295 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068227862 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066828654 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066190018 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066827489 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064730117 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069181725 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067213616 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066552955 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068374835 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060904702 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072613914 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065055175 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073158518 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066088759 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062701112 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072446356 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067942082 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070757457 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065888531 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066552342 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067130374 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065370193 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068690124 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072260805 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063520128 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.075714049 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073152225 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066459789 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068491348 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.065310095 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.066409169 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06439296 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066538068 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.066340586 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065785942 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065032505 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069618358 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068386077 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065407617 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066740117 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065683985 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065315145 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066232285 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059905358 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06431699 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064510555 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06470063 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0746175 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065597509 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.064929933 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064015399 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065994369 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064063618 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06213739 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073030781 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074332122 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.065571519 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072002963 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064450919 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.066690164 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075741502 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059640333 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063337488 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063045754 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06327589 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072288669 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.065696316 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.074085217 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065231608 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064733437 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062468841 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065538383 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063180609 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059298954 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062219928 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067756968 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063345303 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062829741 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064432885 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066477726 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06448109 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072827697 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063206284 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064782013 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.063819566 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061120992 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.063300033 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06330488 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.066722401 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.064466682 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.06205384 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.061386678 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063682116 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064843618 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065646013 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.063956209 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065765992 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072838827 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063856272 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066884692 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066798178 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059048154 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.066595575 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.063997303 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.063663178 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.063592322 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.06757299 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06751382 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064866455 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07266601 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.063862476 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065333322 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064213801 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062030421 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063528735 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.063750289 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063883995 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063416727 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065076751 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071383596 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062222041 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.067262628 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06409022 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06481481 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.070864748 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064643115 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067452436 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069937063 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.064423484 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066323657 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.0716826 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067682116 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.067294633 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064398043 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.064995532 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.067921736 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.062905503 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.069880191 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.063283887 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06330538 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065050349 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061475729 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062736835 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062971858 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06181129 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.068583881 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.063510674 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062631618 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.062704307 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.060564338 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.063875569 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065132949 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069834962 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.065505598 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066165224 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058881486 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061020651 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.063718397 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.060776583 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.064249623 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.065146473 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068200649 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.065291266 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063809155 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062251778 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.071286206 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068706481 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.067328721 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062355061 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.067040393 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064006903 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.065705297 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064245738 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.063109504 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064540119 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.066900536 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.064875503 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.062742791 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.06939324 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.066446942 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.063589792 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.065642319 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.064359176 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.063619088 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058960215 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.063738005 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.064970745 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.067616723 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.065226675 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062607034 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07239377 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061178322 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.063052402 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065609991 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062996598 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.067323089 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.059097734 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.064821723 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064080395 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.063841848 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059890054 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.063420994 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.061897776 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.065423194 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.063349084 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058219716 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.072342697 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072419859 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.065947476 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061730301 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.061711086 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.297960732 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062495856 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066466063 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06842664 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069893074 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078674445 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06792225 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066895256 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063489352 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066875888 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070431131 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070631175 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064746853 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062564607 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066656737 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070254431 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072910282 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065731776 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067175603 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069841554 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070045934 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064827423 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070436124 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063447579 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071140144 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079586399 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067832772 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067613792 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072391198 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073990853 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067821607 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062244932 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067877534 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069561635 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067691612 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068076236 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067532806 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081448049 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069654199 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065518825 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065488407 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069386386 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066289281 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074308224 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067322481 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066374153 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070789366 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068925687 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075155788 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069726261 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074815655 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069289217 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069327365 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065406817 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066441342 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064686835 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065302811 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066913183 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066966532 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071042832 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074017414 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064837725 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076549385 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07541141 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068727763 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062919731 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065889716 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06547035 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061521275 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066653339 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063676532 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06408652 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063847033 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064719687 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066871075 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070899759 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066908749 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066205634 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065330985 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060118954 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068067105 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068163241 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066942298 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062878345 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065498262 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066272046 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069869061 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068970158 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063741123 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067500755 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067704372 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066695023 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061490793 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072962986 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064654921 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067592672 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065439568 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066082454 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066479888 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069327725 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070104596 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066708362 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06775046 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069342499 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06806525 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063730702 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063083455 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070897032 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063993838 seconds)
  done (took 41.721987025 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100544868 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063421958 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062579397 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061707689 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072665666 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062566537 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061567651 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062237891 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062409187 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064441964 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061730967 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061671324 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070292272 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07733963 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07312871 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066193741 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061830254 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062620051 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061752507 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062599278 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070443159 seconds)
  done (took 2.776469126 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072431164 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.06962433 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071974962 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074871364 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066721901 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069714429 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071706714 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070286072 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074749011 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066560075 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07493123 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070394437 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066291485 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075872439 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066814432 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069975385 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075090875 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06662699 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070122081 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071986456 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070024774 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071709574 seconds)
  done (took 2.891316807 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066806955 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064909984 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066941864 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060896639 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065966533 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061004313 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069137398 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064059016 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.0687424 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065078379 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064830309 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065050499 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067788391 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061305234 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066186232 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063866764 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107731741 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068956804 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06530766 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066658084 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061432381 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067732826 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061344833 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062570883 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065246238 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069382589 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06680854 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063921269 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065742576 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064990069 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065644988 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063958658 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067131271 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066259287 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064614159 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064780364 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065120911 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065891127 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06119328 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063950954 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06632623 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061834403 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06610312 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067395499 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063718066 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063702649 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066963254 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065263396 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060852825 seconds)
  done (took 4.566722343 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078044653 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107460718 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067572283 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087682567 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.078867114 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074922047 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069126704 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088879314 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063014787 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06419931 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080451525 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079041182 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065354091 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069910853 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069122225 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065491481 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06635635 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064392675 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068994121 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064799927 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069454483 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071826674 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.07888348 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077751998 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069628355 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064414581 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064601841 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06927388 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077294575 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069516512 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069931884 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07070123 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079642275 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067087493 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064871243 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067486461 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080575163 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065321481 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067561005 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063050943 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067264164 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069346449 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072443642 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080734256 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065411054 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070126155 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065266406 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062444315 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077544169 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067535583 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072777295 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079306505 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069478551 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065229149 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069526296 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079595427 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065068949 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063827437 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068182229 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076995168 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063129792 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068664359 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078112521 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066929689 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072201988 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078737031 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069932437 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068238052 seconds)
  done (took 6.330524628 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07483928 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.0717352 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07958635 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079284615 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071496533 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071354864 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071601732 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071248617 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07124069 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076163616 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071463398 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092073041 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066937323 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073912543 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071839949 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072111616 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071675344 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071516876 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071586615 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071403745 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.0715267 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078645849 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071431169 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079073392 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097583596 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067196776 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071257618 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071782415 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079177461 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071607523 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078785862 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071565727 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071646572 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079211941 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078738602 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07164017 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064646895 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071164039 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071512967 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071455218 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067002021 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078674913 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071037083 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066579556 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070850187 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070567375 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078171012 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077749667 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073359805 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075538777 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071010482 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078576205 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070603649 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071101036 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078242258 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.102664506 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078440148 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078157817 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070744816 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.078038359 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078725399 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.0844423 seconds)
  done (took 5.993507306 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082257276 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073850803 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074803045 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060898722 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063418312 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069092884 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063491731 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063259954 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073083609 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073427738 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075464011 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068909731 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071865191 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075492616 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068938739 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071644411 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068836628 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068845596 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073628818 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06888882 seconds)
  done (took 2.772278555 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073716703 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082165024 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066767078 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071061565 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068478434 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070605753 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067444363 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068509238 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066389358 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068256623 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075183511 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074896182 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066377747 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070947717 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074737096 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071135998 seconds)
  done (took 2.489807122 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07331682 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071269791 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078349369 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065612476 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063566874 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061909212 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064992265 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06092481 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062047554 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077077262 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065209351 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067207502 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065505894 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063706616 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062083989 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.067651018 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062061127 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063074948 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065124389 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077566436 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076242893 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063995583 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065661128 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065329339 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064981016 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070351796 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065090914 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062787207 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063080381 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06519884 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065538712 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068692694 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062314133 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062899632 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063661631 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062369829 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064723238 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06521681 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067774963 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064558509 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.062983484 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064361806 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064900181 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065709965 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061574558 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065614791 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061196076 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066561493 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062642483 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065010523 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064914089 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067645868 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065094937 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07118445 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067698493 seconds)
  done (took 4.980955849 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078270855 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06824954 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061325689 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063507964 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068189554 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066798083 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068662176 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066505577 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067366447 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063090518 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066608739 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068038286 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066877949 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068623619 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066895359 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068571812 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061303607 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066943157 seconds)
  done (took 2.573156493 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070341315 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065295478 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072317815 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064778843 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064625583 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067271352 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06158289 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063779696 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063564467 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064993925 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064848513 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06743186 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063944312 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067599965 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064846423 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065831991 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067259146 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063613449 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06483497 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061295495 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0671539 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06386923 seconds)
  done (took 2.800864355 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07103691 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.090786879 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.136606679 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.083243875 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080661907 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.07790313 seconds)
  done (took 1.901617463 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089209674 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078254244 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065921447 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087245354 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072351975 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066179414 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066390771 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0666555 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074959745 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075088412 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066276403 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074569954 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074784477 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073949051 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071770792 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072029981 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067146524 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066656472 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065840492 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082235209 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0664627 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074384698 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066318124 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066170102 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066193018 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073957489 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075281204 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07539479 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066148918 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074684798 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071793876 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066505775 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074837329 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074652057 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06810484 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07474377 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066613745 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082752428 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072197935 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074203087 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068041415 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072554556 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075113161 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071439346 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07499575 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066862894 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071383001 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06696776 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067119111 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084511528 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072047498 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074052022 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072041992 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074718747 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074571157 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084689812 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074745326 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074105508 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072489637 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077423551 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074180592 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072214052 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073701403 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075129695 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072000207 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074064514 seconds)
  done (took 6.163494057 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079903394 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085279313 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066970074 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075057849 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07474292 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066631184 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066852514 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06667192 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066711298 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066316249 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105580135 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066999369 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074196931 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074216984 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067106365 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066847957 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066684522 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074196721 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066628818 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084899965 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066464071 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073937092 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073981533 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074140323 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074899476 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072077664 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066595323 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066591466 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066997106 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066734487 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071176529 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066830014 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073992353 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066068719 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073975726 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066506509 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066356692 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070896325 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066650114 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072000753 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073940518 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082452094 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066501653 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066409667 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075265456 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066484944 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066456066 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066361851 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066824471 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066758575 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075235555 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075346513 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075328481 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074021036 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066831692 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06668196 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066778934 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066356349 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066579771 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072110233 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073966453 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066839559 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084230102 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066365047 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066420642 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073729886 seconds)
  done (took 6.072911003 seconds)
done (took 127.296325456 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.181996234 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.167974956 seconds)
  done (took 1.707157017 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067978651 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095397205 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076000248 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127363311 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066120315 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.098306475 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.097980392 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077271891 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065376918 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065805925 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065476723 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067681479 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130167314 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06624641 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065455761 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067491673 seconds)
  done (took 2.669837477 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096061469 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.172016354 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099093122 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064222353 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09590933 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072041108 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063943577 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.073931123 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.06985558 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064454035 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072108249 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069837469 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064508647 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069744644 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070178718 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07215682 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064410716 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072083772 seconds)
  done (took 2.798891939 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098940377 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.089631748 seconds)
  done (took 1.562529639 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158887115 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104940239 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.14939441 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.331385011 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.158848634 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.230611773 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127893566 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127134284 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117945589 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122818326 seconds)
  done (took 3.000797636 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096670288 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.145753187 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254195226 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113730553 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071552782 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09026181 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115392523 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076711636 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.076740475 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076370424 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076194679 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075018144 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.094996722 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072362098 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072882911 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075087912 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098221422 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071893677 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074752041 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073632964 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09586633 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065763151 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072866732 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071905522 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.073895056 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074170971 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064990783 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.064939996 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073281725 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073099091 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076375917 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.088879654 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074140935 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103095736 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069282935 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.103776601 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07555715 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070882752 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072926886 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070318553 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.074356906 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074818979 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071360043 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074848174 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064369952 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075250185 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065012864 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065127173 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077207229 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06601037 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076850456 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076201991 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.102819769 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066019411 seconds)
  done (took 5.867596381 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.659305455 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102391472 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069057693 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.106979684 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094865134 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071715568 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.684501583 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.089658017 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.171920957 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091237506 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087241255 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069146294 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079931726 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082064261 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.107534397 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100724488 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092562139 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070526283 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.099412423 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.097125184 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067444454 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092391342 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088596811 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.373794372 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066690592 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068682974 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06683965 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069135425 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.108293062 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077518813 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069127221 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.11930344 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083362534 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.118773871 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066546241 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067113787 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067186874 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07835399 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.176056354 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.130503851 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.128597271 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066373676 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066891465 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067958038 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.088554901 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066144109 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.108331043 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078602659 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.116820703 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068884237 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068984692 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067397655 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068269425 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078820783 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076129137 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079412154 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.227697783 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067540218 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067118445 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069827496 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.177839096 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078222045 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078523392 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.090524864 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.127430715 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066272001 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.691058461 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083043337 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066532558 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068240635 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066761996 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068251186 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067346087 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.244110006 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.341318185 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069861961 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069375573 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068131371 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.162221454 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077512444 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067011632 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.110673701 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06708831 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068460957 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06985892 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069562087 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.116422839 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079415065 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070192702 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068073688 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068953195 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068194042 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067357286 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.160882529 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079581601 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078823968 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.158394031 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0687035 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110230318 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079396866 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069599251 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079042546 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067420493 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069207833 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067996382 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079615776 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.09431357 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078894448 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06942608 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067006542 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.096555617 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080455507 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067494008 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077567439 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.394972022 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07900384 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.0666593 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080228815 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067230367 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.10977529 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069272438 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.173572042 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067999814 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078101366 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067908706 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067090808 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06743635 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.10866448 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069044399 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067769059 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068238277 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069099043 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078411286 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.130579441 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069533442 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.160040134 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.132013611 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069162022 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.117557417 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067601118 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.115048113 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06927017 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068243834 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066345156 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.710067883 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06766101 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067652389 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068931059 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.136465541 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066601846 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077673721 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075628592 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065612236 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.685954949 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077773253 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.205473687 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07999623 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068860744 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068332457 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067809133 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06956343 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.10877872 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.142769277 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069603447 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068100412 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076662252 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.109614838 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06720794 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.076931782 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077364248 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.076808793 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068252107 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069172832 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079550807 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.116592275 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078100281 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.132450556 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.510996616 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068087027 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07670678 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.140526012 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068157652 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084002962 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06839079 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082523243 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.110934694 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076865283 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.226504147 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.111639633 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.137693517 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.078863216 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082311883 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066817619 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066950189 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079320774 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067693129 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068720784 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077020768 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069084634 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069138436 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082442827 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067673843 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.171656896 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066711965 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078497993 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066999257 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06886007 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08186737 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067743174 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06950608 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078342948 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069610715 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076249753 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.634300151 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077022077 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067196047 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069021226 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.133194656 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.11080341 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.0671625 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066911133 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069289639 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.11454747 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.154436766 seconds)
  done (took 27.859788543 seconds)
done (took 46.84872775 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207230836 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.147994607 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198323692 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.1160318 seconds)
  done (took 2.140122326 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119637944 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.099394102 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093486002 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064370904 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099731678 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064258664 seconds)
  done (took 1.950759249 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.302069869 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.20629443 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.178354125 seconds)
  done (took 2.093444213 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.194118232 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.183772272 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.3885757 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.249332067 seconds)
  done (took 2.530309635 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140374454 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087431141 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066126038 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.081895296 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.131711588 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157159565 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.098970185 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123292257 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077175328 seconds)
  done (took 2.423536584 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.142374083 seconds)
done (took 12.695916567 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.235518066 seconds)
    (2/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.096594537 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.143609004 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.094165503 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.104784874 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070036335 seconds)
    (7/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.087313106 seconds)
    (8/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.212682731 seconds)
    (9/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071231384 seconds)
    (10/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.213214952 seconds)
    (11/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.192302011 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076537368 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07339585 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.121875913 seconds)
    (15/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070869576 seconds)
    (16/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068775919 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.132461133 seconds)
    (18/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.187554332 seconds)
    (19/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.156065079 seconds)
    (20/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.155282059 seconds)
    (21/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072082607 seconds)
    (22/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.179560726 seconds)
    (23/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.098634697 seconds)
    (24/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.169252216 seconds)
    (25/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070856426 seconds)
    (26/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.207772815 seconds)
    (27/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073682813 seconds)
    (28/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.160645844 seconds)
    (29/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.160895682 seconds)
    (30/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.106974056 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.154207587 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.213220758 seconds)
    (33/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.108753684 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138866777 seconds)
    (35/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.154330589 seconds)
    (36/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074647448 seconds)
    (37/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.184191536 seconds)
    (38/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071843343 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.146441138 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070704584 seconds)
    (41/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.051751144 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.101678459 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.106317464 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.093705053 seconds)
    (45/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.180575464 seconds)
    (46/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071051529 seconds)
    (47/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.170005703 seconds)
    (48/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050571298 seconds)
    (49/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.157096962 seconds)
    (50/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050140844 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08909366 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089685867 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.168354168 seconds)
    (54/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079810622 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088478353 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071816414 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112573824 seconds)
    (58/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066884692 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071438329 seconds)
    (60/309) benchmarking ("sort", Int8, false)...
    done (took 0.137211876 seconds)
    (61/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.05194233 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.096729678 seconds)
    (63/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051605302 seconds)
    (64/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074069788 seconds)
    (65/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065892318 seconds)
    (66/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.107086983 seconds)
    (67/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073309879 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.108726151 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066396639 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.097044018 seconds)
    (71/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.107393015 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.087921483 seconds)
    (73/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.107513452 seconds)
    (74/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.062213143 seconds)
    (75/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.075594491 seconds)
    (76/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.050846167 seconds)
    (77/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.095797787 seconds)
    (78/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.049825242 seconds)
    (79/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.062172195 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.066100136 seconds)
    (81/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071416093 seconds)
    (82/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.132212683 seconds)
    (83/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.141692822 seconds)
    (84/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.145830789 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.233662211 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.16720499 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.109543804 seconds)
    (88/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.169109817 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.094453564 seconds)
    (90/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.137823154 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087898739 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 0.066288308 seconds)
    (93/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.074085677 seconds)
    (94/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.072943523 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.09941666 seconds)
    (96/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073100361 seconds)
    (97/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073317817 seconds)
    (98/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.144987831 seconds)
    (99/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051847441 seconds)
    (100/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.063181964 seconds)
    (101/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.169069724 seconds)
    (102/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.136565434 seconds)
    (103/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078538735 seconds)
    (104/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171427372 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065313705 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072733816 seconds)
    (107/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.165695304 seconds)
    (108/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.162744059 seconds)
    (109/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07606577 seconds)
    (110/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052812559 seconds)
    (111/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050629198 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.095160846 seconds)
    (113/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050443901 seconds)
    (114/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069472444 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072471475 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.149710524 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092923812 seconds)
    (118/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.10172723 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092797553 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.36546158 seconds)
    (121/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071972896 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070266545 seconds)
    (123/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077673005 seconds)
    (124/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079532321 seconds)
    (125/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060365193 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086112991 seconds)
    (127/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.162137195 seconds)
    (128/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06483156 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064217377 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.132479208 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072948837 seconds)
    (132/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072628288 seconds)
    (133/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.05046763 seconds)
    (134/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068761797 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.070927645 seconds)
    (136/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063753029 seconds)
    (137/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080097908 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091659506 seconds)
    (139/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065068198 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069642919 seconds)
    (141/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072846979 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071055125 seconds)
    (143/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051615161 seconds)
    (144/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074126475 seconds)
    (145/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050255099 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.065727904 seconds)
    (147/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.063963513 seconds)
    (148/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.104295628 seconds)
    (149/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.135798883 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070672199 seconds)
    (151/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070047176 seconds)
    (152/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070512278 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.132166669 seconds)
    (154/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052235065 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069540711 seconds)
    (156/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.070914198 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.063914328 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07144193 seconds)
    (159/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.136650334 seconds)
    (160/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.134602953 seconds)
    (161/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063351855 seconds)
    (162/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050546548 seconds)
    (163/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.06504038 seconds)
    (164/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063424697 seconds)
    (165/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.104091046 seconds)
    (166/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087679994 seconds)
    (167/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071857345 seconds)
    (168/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074279941 seconds)
    (169/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.163554065 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072554468 seconds)
    (171/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.158912116 seconds)
    (172/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070240342 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.105765042 seconds)
    (174/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.054053172 seconds)
    (175/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051397304 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050378477 seconds)
    (177/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.108598408 seconds)
    (178/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051146148 seconds)
    (179/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064178364 seconds)
    (180/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050281483 seconds)
    (181/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.050862821 seconds)
    (182/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.074099842 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088026658 seconds)
    (184/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.097707322 seconds)
    (185/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050258802 seconds)
    (186/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.08874632 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.106838895 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.063802299 seconds)
    (189/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.061514089 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053002717 seconds)
    (191/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.07807059 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070386205 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.063694762 seconds)
    (194/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087680745 seconds)
    (195/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079255249 seconds)
    (196/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.050129743 seconds)
    (197/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065403782 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050386755 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071832 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.296320789 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.118867208 seconds)
    (202/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069735617 seconds)
    (203/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07669982 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065084559 seconds)
    (205/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.05065403 seconds)
    (206/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086872836 seconds)
    (207/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07200982 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064162125 seconds)
    (209/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051629217 seconds)
    (210/309) benchmarking ("sort", Float64, false)...
    done (took 0.124589584 seconds)
    (211/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07039448 seconds)
    (212/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050363356 seconds)
    (213/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066362765 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.145273619 seconds)
    (215/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176314744 seconds)
    (216/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065998339 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066862201 seconds)
    (218/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.05074 seconds)
    (219/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.050494845 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072360773 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074479416 seconds)
    (222/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.163226168 seconds)
    (223/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087255884 seconds)
    (224/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050627972 seconds)
    (225/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051890991 seconds)
    (226/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052191411 seconds)
    (227/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067108634 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070940429 seconds)
    (229/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064863219 seconds)
    (230/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.06520488 seconds)
    (231/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.09880437 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065370798 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063363755 seconds)
    (234/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075414253 seconds)
    (235/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070378045 seconds)
    (236/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067484382 seconds)
    (237/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.146510034 seconds)
    (238/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.104064781 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137396345 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065473683 seconds)
    (241/309) benchmarking ("sort", Float32, false)...
    done (took 0.127767425 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088888149 seconds)
    (243/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066254116 seconds)
    (244/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052238444 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111169301 seconds)
    (246/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067915429 seconds)
    (247/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050509787 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065054329 seconds)
    (249/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065789281 seconds)
    (250/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.052390395 seconds)
    (251/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.06456524 seconds)
    (252/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051721999 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064199665 seconds)
    (254/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.06149408 seconds)
    (255/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082041966 seconds)
    (256/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.070897763 seconds)
    (257/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062690363 seconds)
    (258/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071022038 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064788137 seconds)
    (260/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077867053 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050655602 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07104095 seconds)
    (263/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051790429 seconds)
    (264/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064103852 seconds)
    (265/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050358708 seconds)
    (266/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07448064 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.071967682 seconds)
    (268/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.13448073 seconds)
    (269/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065808884 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088212138 seconds)
    (271/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174574266 seconds)
    (272/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061295212 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125028143 seconds)
    (274/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051473387 seconds)
    (275/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050611397 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084655971 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064068884 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.065203917 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064337568 seconds)
    (280/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.059986885 seconds)
    (281/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067217315 seconds)
    (282/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053495382 seconds)
    (283/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050099552 seconds)
    (284/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.066606576 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071696685 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.064482857 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063084402 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064641036 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063540436 seconds)
    (290/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050216044 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07185201 seconds)
    (292/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.077401763 seconds)
    (293/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067288033 seconds)
    (294/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052729657 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.125142375 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069445175 seconds)
    (297/309) benchmarking ("sort", BigInt, false)...
    done (took 0.181993724 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086657382 seconds)
    (299/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.05143879 seconds)
    (300/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050629039 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064303151 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070043549 seconds)
    (303/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051943901 seconds)
    (304/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053755179 seconds)
    (305/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.11720817 seconds)
    (306/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071029952 seconds)
    (307/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.170012419 seconds)
    (308/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052976658 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.106636725 seconds)
  done (took 29.963580984 seconds)
done (took 31.384579179 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083804445 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091204304 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073106648 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091916738 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.07903616 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075398061 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071278894 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077109006 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078316428 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08007584 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077490295 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054452201 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07297044 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072945648 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073548031 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090184537 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076662032 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071443622 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071519169 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063700205 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.071780809 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064704204 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06674789 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.053932242 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076866153 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070184718 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071329237 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07309682 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064666652 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06530824 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068049872 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072093002 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065077923 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.076591155 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071356255 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072079191 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07367043 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.074894157 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066847274 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064768967 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072703364 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065133762 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071295838 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.071835847 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070785658 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.069943211 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071914593 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076840759 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.08939915 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067009062 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07358287 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075231696 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074658911 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071116719 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068312711 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071839378 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069445022 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09064428 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072171647 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06693214 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073136442 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072596101 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070201746 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071910495 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071659788 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074064917 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073709672 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069799953 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073153257 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069848877 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064501723 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071696674 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067955042 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064334995 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.073947528 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075632203 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063603124 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.069727728 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071263683 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070180147 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063999462 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066298676 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06572577 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070311645 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066424332 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053991647 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067980251 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070488968 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063376292 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071769067 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070645209 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070798584 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066010364 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.073702455 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063661938 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069762357 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064503622 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065077553 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066268603 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068139195 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064118225 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066611458 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072996189 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065434466 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07009117 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077829191 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064265452 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070526537 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063514186 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063657333 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07777775 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073159964 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064342156 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066428384 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063791499 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071047469 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06320765 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06469639 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.063716779 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064370327 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069478077 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06426877 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066363657 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070516994 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075543678 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06349708 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067126314 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065880542 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063880462 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069132213 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064339882 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064243408 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.199863966 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062030032 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067083146 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064876811 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072041738 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06635104 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071961093 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066174426 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073221659 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068873988 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070761531 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069964239 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063114389 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.05854584 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067567954 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067566479 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066289273 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065508469 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066249055 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064693642 seconds)
done (took 12.292559408 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065426408 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.139394678 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096348447 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09331459 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084409253 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065948283 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074774976 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.0997257 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066955599 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100449339 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.085972949 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083939915 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110347875 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.063933723 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064744375 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068671587 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066939391 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08023673 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099326717 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085282337 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107356532 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064397075 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092912536 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088581132 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.085765071 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091065883 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066298452 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068850633 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068935939 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.098925991 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085399979 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068600713 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065804155 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098597795 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.090557028 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.081546123 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065697768 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.080955133 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065731517 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.064865292 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.079573566 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096266918 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078349481 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.078933014 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069208269 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.067950995 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065949897 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.081933112 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087551632 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077252644 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085205069 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101883968 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06772277 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064883037 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063856816 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.083520938 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064922816 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067866743 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065388045 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067491076 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065148738 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.06806138 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079487341 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085176508 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068448389 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.078855095 seconds)
  done (took 6.735388326 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082157998 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088707379 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.081580132 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082115254 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064736998 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065486896 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065443774 seconds)
  done (took 2.044920821 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066457748 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088262641 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087366381 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088726252 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083212338 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.085919697 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074450097 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065647752 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079119552 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066815035 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086011705 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099660735 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066267422 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.071829283 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089285892 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06595643 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.088923881 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065880489 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068768177 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088693006 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067094566 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081417389 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069338385 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065979991 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079382407 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065770879 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111051382 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069556974 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067446426 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068836098 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063730787 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104609713 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.078996693 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07449818 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066401785 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080029613 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080139487 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064431026 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081916118 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070799613 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079900118 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.0662008 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066489128 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06395813 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069948453 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076029294 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06651037 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066187485 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068219888 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085221088 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066189971 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078883779 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070058124 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068524443 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067668895 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069630616 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075262058 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066540157 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085301578 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067455839 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082191598 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081664156 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079715831 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08172424 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.067920253 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079297222 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079350884 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068302306 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067835875 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069764702 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081444073 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064696343 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067551586 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076282201 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067421892 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088449621 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088627143 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067655167 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07511794 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066705747 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066548454 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066303544 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08838761 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068280395 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065995263 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070400093 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068874414 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064272286 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064877557 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069468313 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063848967 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067284428 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068415733 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068592666 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068275282 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081688382 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067858728 seconds)
  done (took 8.698553453 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067765945 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067765974 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068490488 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066964864 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066831838 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067559094 seconds)
  done (took 1.942875033 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092395036 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068973118 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079834731 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.07151264 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103317589 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.08571781 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085983953 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077552336 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083037977 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078506561 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085948038 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087742802 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092063463 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07232759 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08545409 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071605227 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086435902 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07523822 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07785463 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072228942 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086057018 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071934627 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072627503 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080727036 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075041766 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071548745 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066668305 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.0779208 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077793724 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077725502 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071893568 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074861308 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069658476 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077418477 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086415123 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070086209 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071130706 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076514783 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071492451 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07468 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087110128 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071917951 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073406096 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076607364 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077720374 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069386353 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076240943 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075541524 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085041314 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076205532 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076220437 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070651107 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074192121 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075884791 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069128867 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077539439 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076361748 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085083817 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071598512 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069224566 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068409884 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074311668 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076632709 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074048138 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077505831 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075800809 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069384667 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071402763 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071367843 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.070852458 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075844545 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067837353 seconds)
  done (took 7.038667893 seconds)
done (took 27.958156205 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.538069015 seconds)
  done (took 2.041976021 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.610660748 seconds)
  done (took 2.137288837 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.588156995 seconds)
  done (took 8.110322678 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.389667013 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.501314392 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.703625316 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128547675 seconds)
  done (took 3.283845389 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.662092827 seconds)
  done (took 2.198915793 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.207567753 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.194769577 seconds)
  done (took 1.946865152 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.378941184 seconds)
  done (took 1.906154436 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.088882654 seconds)
  done (took 2.617603419 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.256692225 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.161152804 seconds)
  done (took 1.952603281 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.456325937 seconds)
  done (took 1.987908325 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.811312002 seconds)
  done (took 6.344374286 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.203253764 seconds)
  done (took 1.780079663 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236599216 seconds)
  done (took 1.770979461 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.733186363 seconds)
  done (took 3.268266492 seconds)
done (took 42.880253378 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.07857525 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.079828731 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08004416 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07674586 seconds)
  done (took 1.836957184 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075547017 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071267751 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075077324 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072220349 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.074900189 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071227703 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07336918 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075607556 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.070885703 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071483831 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07140769 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071311803 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073657912 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072965803 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069621301 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073350308 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07473908 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071164082 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074046665 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071496426 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069678348 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073808731 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073459508 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070697061 seconds)
  done (took 3.279770237 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.0759969 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07136957 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073627633 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070378123 seconds)
  done (took 1.833384544 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075791969 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090723086 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086665511 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076481899 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090227169 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084263866 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068169959 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067629077 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072065032 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.075649029 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066813293 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093970506 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.085964553 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075430374 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.07743646 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064562359 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067028302 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08533522 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.075825944 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076366378 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068542514 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07571084 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066713463 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08656664 seconds)
  done (took 3.393384214 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07654672 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101077255 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.075813208 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.085582354 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.087978854 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063904455 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.072762767 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087682842 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.120596908 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064321469 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068360841 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064693359 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071273766 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064315948 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.074544804 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103119564 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106538575 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067357279 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094535566 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064422202 seconds)
  done (took 3.166001087 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071750853 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.067947825 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.064958845 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067325938 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075893542 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071557413 seconds)
  done (took 1.966823482 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066949376 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.065665726 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.065998603 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065853702 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070264517 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066216568 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064839984 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065663656 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065633672 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066090567 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065315223 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064938558 seconds)
  done (took 2.336544652 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.331658922 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067701125 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067605385 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064844905 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069911139 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065231104 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078595068 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06685104 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.088946938 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065325828 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065270701 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067374039 seconds)
  done (took 2.644507644 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200696457 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074842631 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2315125 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134264022 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109677982 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11301307 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10210748 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110998167 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140205019 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100100928 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16399949 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162014284 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104982259 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133831376 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087658065 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.096659268 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151823939 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158631568 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101482084 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161915447 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140626128 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122553667 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143405655 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099176257 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103473465 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119335045 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069576913 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078487981 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16612246 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128429393 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142894619 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108665661 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091822126 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172630075 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167566137 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139358924 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132274421 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082400289 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100306852 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.130462759 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194699989 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086940805 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158652427 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243076171 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079829433 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137031491 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118670622 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118028841 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105252998 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088477324 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143919745 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178523446 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136052208 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085107027 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110169117 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113131086 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113268714 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101719347 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178199487 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157393979 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125792398 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069496746 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09731742 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149684284 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128597574 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105894028 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123836286 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091247235 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12986112 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151113919 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115307819 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139335848 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127049398 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087392576 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116704376 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136551957 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125009565 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166174626 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121631629 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07156167 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121976843 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101055273 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079710491 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140417689 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073705588 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171534291 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096323853 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.103834165 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110371759 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106895712 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106308292 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156296899 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13940106 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242355931 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064732915 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102291182 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118049549 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144165177 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085632408 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106216753 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114446249 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076478086 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136264081 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07395566 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12142251 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074724091 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123184278 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130503122 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074052221 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118900522 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099285376 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098441112 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130044956 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156209385 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086707103 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081321411 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163924607 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119563251 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102275966 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140493243 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152468611 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097154759 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100341282 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145397394 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175406915 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088301063 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158905272 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105614548 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082148717 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.085999598 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121312461 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110328056 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119495319 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080349518 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116571766 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164172382 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073944039 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093345311 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131130347 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077348641 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0790308 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100425373 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097884403 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093232085 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.09787355 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101326319 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135081316 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119610118 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102122595 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266913105 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096982158 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166916055 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087865206 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098336072 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102307889 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068824006 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.133235672 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154651709 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07857186 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160344248 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121746635 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104032779 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116033082 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080855861 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13761516 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077241704 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069083986 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141128318 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108118225 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107904733 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148334828 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101963772 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.1241986 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116509457 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131235083 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128901273 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126554083 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103340672 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.085949476 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109134577 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123012393 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071891486 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089166072 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07831468 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102051618 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093789746 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081466866 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13889579 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121813726 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098279536 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108928947 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094561166 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144201095 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075136569 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126392916 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117171682 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09200939 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148177936 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148414611 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128117909 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096890102 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140212991 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068485675 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072117622 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.230917931 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121803206 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082220359 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082773035 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115436388 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144480282 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126340156 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135330015 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109800151 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118751513 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151924009 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068312492 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.113474938 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14491063 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119094897 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102548779 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088886737 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09691479 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139533868 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106185569 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177636899 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111479903 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123767846 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149839199 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098185921 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078574459 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101041173 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132243036 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107471053 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141013699 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097423362 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086089112 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108028686 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.072991768 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098143007 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124661107 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11743844 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132412151 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.112119023 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129951387 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075843046 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114495559 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11823249 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119984485 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063266535 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117211363 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156875012 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09170563 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115606638 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148915238 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077848346 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.12097714 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.315244065 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142892721 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083584212 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108225078 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116652152 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12509048 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117114599 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138423044 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107545464 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132092669 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107052266 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084399196 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086619837 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095439294 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102565454 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093741685 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105751479 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112288647 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092927654 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128902837 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100214224 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107009759 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116090891 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.094346529 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.087812529 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095123856 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170711102 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11776597 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167001585 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097405293 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.141891111 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160084073 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073579527 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077676594 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.076929839 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137225761 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082119567 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127963285 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096264421 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103807851 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121452949 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138630904 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093192895 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067305276 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106747708 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131350254 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110082515 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096405342 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102600508 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15806893 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.098031422 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077827604 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110882537 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102326009 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099804469 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311992925 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061261229 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096786632 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074182815 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080116745 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125064886 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150262018 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.078474305 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101624566 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116965156 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108739168 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125390194 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099853447 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097773773 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112722501 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147268437 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126758383 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.08820161 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110507778 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126948587 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170410167 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102679457 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.093672258 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167299106 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148514533 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.156783352 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087309832 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111771763 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111561622 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105959943 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135653307 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081351178 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159840572 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083288482 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133194447 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101793836 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08858602 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127077022 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097165658 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086705725 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144634449 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115228296 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081370294 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076295533 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115510199 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118583526 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105268798 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074202936 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13540408 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07167477 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129160269 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164917657 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079590685 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.246843223 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09585155 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078084783 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106148382 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100322585 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087967498 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097758874 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169197693 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086143199 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146239372 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138605419 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110498168 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135062296 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09788397 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.633847675 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076285632 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148930059 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114140778 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168747167 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095915795 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115672535 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106868414 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121392409 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140881253 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103189871 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175382987 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128931949 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114067628 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077992222 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100546906 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100186655 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.086785494 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102764884 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111180498 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113189403 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.091515182 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113356931 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120404156 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080451937 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093168949 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153076805 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114727976 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141807022 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137916642 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083237016 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115664338 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13487143 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078229894 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118719828 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147611329 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103236818 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095521571 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.223005448 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100667087 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167894697 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072022044 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159328711 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118287015 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107846095 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111638786 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112652904 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129436548 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10492379 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119719303 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091453094 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108456386 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11071243 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080278482 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075399552 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103332991 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110287568 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.095958136 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096327885 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.09679688 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147792477 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.069810014 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093078359 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101804777 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141683264 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170896975 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.086921886 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08136923 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116541659 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110791301 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.110779076 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118631601 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.077699629 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081007889 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079953273 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076620069 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106268882 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110140917 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102395103 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108753614 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16036281 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081062672 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221519097 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093451619 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102247453 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068371852 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076870998 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094123314 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09558255 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106459955 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098373914 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165806861 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092224753 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087565156 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090542943 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.071888947 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080804898 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.270201064 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109794662 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117511214 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095706656 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061592289 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107296927 seconds)
  done (took 57.765178468 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.10630156 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081487676 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09550158 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148230769 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120651472 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210118143 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15679811 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197145045 seconds)
  done (took 2.7681026 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067521239 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.092982729 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098324682 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.080751859 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065792906 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.066896523 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.222492715 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078627228 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065171169 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.086470742 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077360681 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067241775 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.394578003 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.064768471 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06688185 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061322918 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067801751 seconds)
  done (took 3.368192198 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.368439026 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.360345308 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.367484379 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07162282 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.638742291 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.086747705 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.079704488 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095080058 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.06999892 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.277833566 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702733168 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.091637426 seconds)
  done (took 13.864275805 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074034269 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068146989 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.081741067 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.081494722 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071588573 seconds)
  done (took 2.032631321 seconds)
done (took 101.830629753 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078520202 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.290441282 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052253743 seconds)
  done (took 2.024810959 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081191353 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083041181 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.082722284 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.0812231 seconds)
  done (took 1.987881523 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.072606611 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.074229359 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.083148848 seconds)
  done (took 1.885336385 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.219205822 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.137437626 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.08494455 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.080308668 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076125651 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077079482 seconds)
  done (took 1.891627456 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070407136 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07353455 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070995268 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074790139 seconds)
  done (took 1.942201301 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.074844848 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051684049 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055001377 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055320731 seconds)
  done (took 1.889689602 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085396404 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077334194 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076882795 seconds)
  done (took 1.895482892 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104377247 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084015702 seconds)
  done (took 1.843696756 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080686795 seconds)
  done (took 1.736342691 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097133361 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.111509076 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.125539293 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107355218 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13378795 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.106898404 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.083926065 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.084839231 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075631779 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085388769 seconds)
  done (took 2.666936724 seconds)
done (took 21.938352667 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077110077 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366157002 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359628799 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089064075 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668094933 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355600678 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.978892794 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090495976 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118629269 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066416736 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082732236 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648246131 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.970938225 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323164804 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.957795303 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323287124 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.64900519 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066898099 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066860977 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066542197 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.962407976 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066355141 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066407282 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067060669 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648117771 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370034771 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06705747 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.317313383 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066488661 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068284957 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353542887 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067087893 seconds)
  done (took 16.088825076 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069947506 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.115341692 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072711825 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082753952 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069715003 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068583678 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070521256 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067824622 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123415157 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066899432 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083256695 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066153504 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070467198 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06701236 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085650702 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066846543 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067720408 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067436293 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066983618 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067322812 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085014336 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066462298 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066967035 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067823305 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066883427 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078397719 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067370199 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067179403 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067853933 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069033508 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070507898 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068411276 seconds)
  done (took 4.025592493 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113241606 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123926902 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07328681 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101983139 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110392345 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069110496 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141052956 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091290687 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125197512 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067010289 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083505196 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066897992 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099834217 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067469155 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086429046 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067296722 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068189326 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067692502 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067045906 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067522857 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08570387 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066866612 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067609991 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067778372 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067417581 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080170907 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067598403 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067290652 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.0675997 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068842399 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070399954 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068105823 seconds)
  done (took 4.276469388 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070824771 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073544002 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081723942 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08257898 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068790431 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070756572 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072049427 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068282766 seconds)
  done (took 2.26323414 seconds)
done (took 28.315186554 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077070899 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067926646 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071208118 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.079764854 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071884173 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.076711917 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066219061 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07302816 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07105901 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071359409 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073613556 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066697654 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069697548 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066165049 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07273713 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066840642 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.07759921 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070525527 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.077449128 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.077861921 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068630275 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071905643 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.072964887 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.077975345 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.077500216 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.077830485 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076090209 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072001678 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06787497 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069852116 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07573701 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082675798 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067352382 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078132455 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066681934 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.06673177 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070513326 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066661555 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.077829438 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075388106 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068394962 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074801578 seconds)
  done (took 4.702230219 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086357184 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089383853 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083384942 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06058032 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.065999681 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.063665553 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087306563 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059289034 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058744285 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086605088 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055729998 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058652065 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062443624 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053071436 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059007076 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055890625 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060821052 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055281781 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058488659 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058477597 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.05708472 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053285604 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059155287 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064262509 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055833547 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060883853 seconds)
  done (took 3.348213855 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073393652 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083263155 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087377444 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124602271 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.101730706 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.07598518 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076529273 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.086092729 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084311191 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066113641 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070063427 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091823717 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086848684 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072406661 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066657725 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.082811762 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080203314 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068005979 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072069568 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.088948407 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.082958753 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.076424555 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091407707 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079548766 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065572424 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.06814636 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070063755 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.079852862 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070548299 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075303211 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070474963 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069908796 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068235117 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077798442 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070157428 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067790482 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.087640122 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076118 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076301502 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.066911618 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069305101 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067170092 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088146706 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121255421 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06569593 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072811723 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074228684 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07548622 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066323946 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084444993 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077345074 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.065713758 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069279911 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065721268 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066378119 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078977686 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068088612 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068365901 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.074866837 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.06918701 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.078731812 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070280132 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081481398 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066063902 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073318021 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065267933 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066915324 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065064881 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091062578 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.067780017 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.106440041 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067119754 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067931258 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.074792836 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.073415977 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072057526 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067339155 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081246047 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076492908 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070006871 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074956048 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069791187 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069088268 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086581979 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068653594 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068071923 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067467904 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072424057 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069022069 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068220818 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.07951045 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066939426 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069459886 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082780191 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066026062 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067828193 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072111228 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.070574237 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066489202 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077384264 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071350089 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067217746 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075630534 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066238468 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069466519 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077491237 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072403764 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065863322 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070821654 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072473787 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067251546 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068011971 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069971951 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068126761 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075294132 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073269715 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070420667 seconds)
  done (took 10.419427205 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.157824456 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151288904 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069114933 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.141718822 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075637585 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.078379808 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.144729822 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093128095 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066713657 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067373538 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067705085 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113227743 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104340722 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.120290957 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077727502 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066780943 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082181574 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115123593 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.146238267 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.140662342 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082575983 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076021922 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069288803 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067808247 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.073249039 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081439729 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089107587 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075322598 seconds)
  done (took 4.406224303 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079576482 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100267073 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072276472 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.087744184 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089699604 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066974625 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069573776 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068374644 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.078809352 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077062119 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066379246 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072194077 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073243846 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072546982 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067871201 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073427685 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073807427 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068045074 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069966048 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07206128 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076711248 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080088669 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070580316 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066115404 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073029249 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066003758 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063244211 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.082895945 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067195077 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088950784 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064626499 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073956959 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080165567 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068015618 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066646169 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066977557 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066408053 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06656433 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068612393 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065538546 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065488711 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057007977 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065985136 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077999526 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073080312 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055952846 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071708855 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071645415 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071810056 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06488342 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069450159 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069423282 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070163634 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073779802 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071647213 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071920847 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067757728 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066017064 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074576728 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066429185 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06401573 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065530993 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071051904 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064811937 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074422765 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071327342 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065282013 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066400687 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068698238 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.0727967 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066491528 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069791166 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064727792 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068577935 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071769984 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068603856 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06778431 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065185584 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066634511 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066624592 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054864195 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06678711 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053315053 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069883603 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064681178 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065044525 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066613819 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071316467 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078140443 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067643931 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.071797164 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067139828 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065335633 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.069624713 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059184231 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069131605 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081205621 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081046311 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066333266 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064696586 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080564323 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070792882 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065428627 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055266989 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073615246 seconds)
  done (took 9.063497584 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.093081509 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086994371 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069096445 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.081817004 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090004598 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085665349 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073733024 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075573329 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068462615 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081293948 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072726101 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075354044 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066911001 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076026509 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092478143 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075697469 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068591261 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075317636 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070598964 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.09959935 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081478842 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08155335 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.073847259 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066738268 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074896303 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078895125 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088827812 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.07915703 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.077263773 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.074119249 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.078714282 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089033726 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.072944298 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071172013 seconds)
  done (took 4.393643165 seconds)
done (took 38.002118038 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.748721095 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.924533742 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.750122622 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.120285151 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.013880409 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.823140585 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.857491576 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.745981275 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.019907139 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.786353497 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.994890948 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.800851243 seconds)
done (took 65.275222054 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.800870716 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.891218557 seconds)
    (2/2) benchmarking "String"...
    done (took 2.024185113 seconds)
  done (took 5.604412515 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.083568391 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.305045992 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.992836873 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.746800581 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.753304025 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.04127245 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.548602977 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.269438551 seconds)
  done (took 30.347531391 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.936232788 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.94730525 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.405625735 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.436642027 seconds)
  done (took 15.464015433 seconds)
done (took 63.068556341 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.758612762 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.77872239 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.753416397 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.734340086 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.806311473 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.753747588 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.039617103 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.772138782 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.749345951 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.740347215 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.749895755 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.186224085 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.752668582 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.141560781 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.747949448 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.756206886 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.816619226 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.288791705 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.907631193 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.753279447 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.752679675 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.767358522 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.75167824 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.7581261 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.756727774 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.747687467 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.197168722 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.755198823 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.374821562 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.750264869 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.777939069 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.255430248 seconds)
  done (took 203.323857667 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.745986205 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.608861843 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.700433125 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.747132253 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.081518071 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.937584157 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.873594073 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.141691144 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.738027664 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.744175636 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.931487699 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.732549925 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.91608631 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.686608421 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.750181271 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.814549705 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.917206673 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.916745124 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.755070023 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.006606812 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.752634477 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.781811724 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.698229456 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.899112579 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.750344834 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.830895415 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.881967739 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.756629786 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.9233482 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.881236128 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.74585552 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.753366825 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.955892256 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.605678075 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.74592338 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.744768188 seconds)
  done (took 168.143157413 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.128841378 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.732893734 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.733876701 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.733314087 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.745132131 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.732947379 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.859109534 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.863467216 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.19274814 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.029111316 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.735204367 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.782087311 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.562032425 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.732721351 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.799447026 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.747580445 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.734344104 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.749588858 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.758802377 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.73670882 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.73311104 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.866308196 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.746729865 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.949933785 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.740180547 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.731677381 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.737722316 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.100442586 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.733633713 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.735727893 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.991218282 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.731712147 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.73179729 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.625994818 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.620258361 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.820277126 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.733508011 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.736133768 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.73233316 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.950504451 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.732031724 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.732363669 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.733468477 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.730657277 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.909416803 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.730820155 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.858558549 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.746420014 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.233040652 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.730347787 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.730928498 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.372678761 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.405096201 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.732740391 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.730280664 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.733454673 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.72986775 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.730284796 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.739022118 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.429721955 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.803773711 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.73088628 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.731437988 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.735395782 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.728239836 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.855517279 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.727825194 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.826250318 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.779267261 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.830300897 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.852820243 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.725045609 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.790077139 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.817236135 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.720737205 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.720937715 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.72120673 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.719874956 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.801452574 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.724756018 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.838098767 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.719593221 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.727148069 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.722024632 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.76910665 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.789748371 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.7209777 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.617152679 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.725600898 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.719622253 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.034185795 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.786559066 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.721299868 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.719426302 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.720762666 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.848957718 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.848300522 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.495124251 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.723338153 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.452734141 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.727621543 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.858600638 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.720333406 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.905638506 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.71948117 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.801491906 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.724565589 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.720518746 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.718783059 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.749306719 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.720276606 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.779947912 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.71955669 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.720094643 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.088833488 seconds)
  done (took 396.587106836 seconds)
done (took 771.929496441 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.382537704 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.35117695 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.465026178 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.384750676 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.356321005 seconds)
  done (took 13.600677624 seconds)
done (took 15.261346396 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.806861112 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.810664001 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.745817257 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.810888271 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.742547052 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.81005702 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.79011381 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.745907218 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.775242794 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.745572274 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.777038835 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.744826328 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.731705001 seconds)
  done (took 24.69941766 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.947970809 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.970277512 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.790162178 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.961210436 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.765328089 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.947951544 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.882079061 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.871847096 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.869557655 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.733071891 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.729919898 seconds)
  done (took 22.13021809 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.958655767 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.960337811 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.793411639 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.967042977 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.76641122 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.960556486 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.887273096 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.872353343 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.872304296 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.732090663 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.728877956 seconds)
  done (took 22.15749144 seconds)
done (took 70.648651924 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.724716192 seconds)
  done (took 3.383949396 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.748034156 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.88236799 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.733849003 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.729696352 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.725273309 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.726356891 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.728903138 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.72444408 seconds)
  done (took 15.657716181 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.723564223 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.721655924 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.721631392 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.725329395 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.725006963 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.723427655 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.723399387 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.722539694 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.721612907 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.722693749 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.726319724 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.724119266 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.721929697 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.724860958 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.72464439 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.725166983 seconds)
  done (took 29.238136636 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.721998649 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.72089413 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.721716765 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.722997424 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.721927375 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.723250787 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.722702014 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.721872429 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.721421342 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.722192856 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.722571367 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.722447294 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.721729718 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.722057291 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.721250108 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.722149011 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.721541169 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.722299501 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.7263129 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.722197573 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.722389986 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.72188693 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.723255341 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.724269056 seconds)
  done (took 43.000375177 seconds)
done (took 92.939399382 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.425239559 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.167270183 seconds)
  done (took 8.249377888 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.723826186 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.72433952 seconds)
  done (took 5.144423839 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.723718741 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.724423192 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.724349805 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.724491985 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.723432638 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.725509811 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.725772846 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.723888334 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.723920164 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.724011581 seconds)
  done (took 18.901107568 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.722138654 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.725146147 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.721248845 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.723931232 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.722756298 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.720631946 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.724054393 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.725246998 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.721683527 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.720045959 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.724651433 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.720238673 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.721700943 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.721655477 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.723075973 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.721162405 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.717779407 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.719033985 seconds)
  done (took 32.653841142 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.722218586 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.722733397 seconds)
  done (took 5.101080379 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.719317614 seconds)
    (2/7) benchmarking "second"...
    done (took 1.720777811 seconds)
    (3/7) benchmarking "month"...
    done (took 1.721757967 seconds)
    (4/7) benchmarking "year"...
    done (took 1.71956812 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.720354629 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.719565589 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.721155114 seconds)
  done (took 13.694805898 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.722534985 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.894122475 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.968425769 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.393559872 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.723426312 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.72647048 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.678047274 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.72675251 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.726497753 seconds)
  done (took 19.214866966 seconds)
done (took 104.616927714 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.52964193 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.717785391 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.096307784 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.802635407 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.736094004 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.015594265 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.745919762 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.935895744 seconds)
done (took 42.236810681 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.747038944 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.189542076 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.191132206 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.395795875 seconds)
  done (took 11.434182668 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.71190456 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.235740231 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.755168672 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.316623883 seconds)
  done (took 19.688501027 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.087481707 seconds)
    (2/2) benchmarking "read"...
    done (took 2.07432938 seconds)
  done (took 5.824433051 seconds)
done (took 45.351925117 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.723202892 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.725768771 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.722844318 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.721570809 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.724138482 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.720711618 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.724307497 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.725650409 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.721065542 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.723543714 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.724152121 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.724031579 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.724209452 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.722471546 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.722058777 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.723224491 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.720693277 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.722521513 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.724363214 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.723915559 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.725500461 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.722112844 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.721736674 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.723882764 seconds)
  done (took 43.016103377 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.724791416 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.722504869 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.725181588 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.725092698 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.722247728 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.72617439 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.724758788 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.722947093 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.7248671 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.725041435 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.72371115 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.72333187 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.725112226 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.721234425 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.725964732 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.722859007 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.724862205 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.721564954 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.723846322 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.72351137 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.725732084 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.722857411 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.723693348 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.726910787 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.723747947 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.722416711 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.725354194 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.722725207 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.726821204 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.722469935 seconds)
  done (took 53.38364439 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.729196543 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.731252424 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.726082957 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.72751666 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.726593108 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.724959498 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.726178219 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.725365773 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.725696871 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.727316678 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.726396341 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.72647389 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.725607755 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.726416513 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.727082788 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.727571447 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.728312348 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.726786738 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.725621803 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.726650501 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.726311069 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.727768496 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.727732112 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.727337509 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.727970533 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.728181678 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.72864277 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.727086153 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.726609555 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.727771549 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.727690584 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.727115849 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.727705269 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.72756088 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.729220522 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.726159789 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.731280893 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.734794099 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.727693913 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.728712966 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.728230237 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.727094781 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.728141567 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.728153749 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.728882776 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.728105978 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.728133795 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.728652686 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.7280557 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.727265081 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.728329065 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.727860842 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.726895377 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.728342775 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.728080172 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.729303192 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.728047743 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.727697838 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.727988536 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.728647088 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.727823556 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.72873811 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.728017196 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.728475776 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.728135368 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.72935212 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.72743553 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.729971907 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.729081387 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.72866869 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.728742159 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.729151792 seconds)
  done (took 126.068705082 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.730876098 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.727437505 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.728329545 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.725276578 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.726858524 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.7304759 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.727440795 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.730374739 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.727520229 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.728917018 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.729088808 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.729808291 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.72602535 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.730172449 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.730734963 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.727407612 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.729363341 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.728919647 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.729290266 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.729132918 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.729058976 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.727793985 seconds)
  done (took 39.693674839 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.732690586 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.729577042 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.728288387 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.729654097 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.727719482 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.731106819 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.731114316 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.730179206 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.729276477 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.726179005 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.728587978 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.731807201 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.728478215 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.727435145 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.728871638 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.72872332 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.730702379 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.73075297 seconds)
  done (took 32.796881238 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.728259284 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.729481543 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.7310182 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.728075741 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.730831885 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.730787202 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.729589191 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.73084805 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.73173957 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.727679251 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.733126463 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.730476707 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.732701309 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.72970442 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.732353594 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.729902495 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.731596674 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.728630439 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.732293551 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.729400944 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.729761743 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.732290669 seconds)
  done (took 39.734674521 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.730847826 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.732800515 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.730428941 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.729519176 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.731678499 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.732399592 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.733088357 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.73080761 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.73169126 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.732631332 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.731634296 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.733019002 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.729562822 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.731573521 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.730780024 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.730133915 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.733624694 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.733916157 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.732914211 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.729512278 seconds)
  done (took 36.296615673 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.73339967 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.735388239 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.733484005 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.734139089 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.733169779 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.734645226 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.735656215 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.733671404 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.734651615 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.734565125 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.735306737 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.734568815 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.734210742 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.733362848 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.734600325 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.733274762 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.734923244 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.73468177 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.735668439 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.734101015 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.734845946 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.73596402 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.734536752 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.736139453 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.736295163 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.735699286 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.734877918 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.735280452 seconds)
  done (took 50.238916001 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.734997689 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.734454539 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.731610473 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.73203489 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.732436361 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.731550478 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.733579638 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.73194958 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.734532629 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.732486475 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.736172378 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.734937996 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.736189595 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.735719544 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.735509425 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.735855907 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.735290692 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.733646018 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.733297193 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.732776556 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.73495595 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.735329289 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.736124169 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.732705167 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.735009065 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.73541306 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.733485457 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.733073306 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.736305999 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.735383394 seconds)
  done (took 53.696166089 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.754375837 seconds)
    (2/2) benchmarking "in"...
    done (took 1.755362544 seconds)
  done (took 5.179496741 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.732226354 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.737437575 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.735863844 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.734862683 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.733091862 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.736461608 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.73709045 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.734849942 seconds)
  done (took 15.552649542 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.735605665 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.736147931 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.737271371 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.736355042 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.738039461 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.737925259 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.744113997 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.737123604 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.740638504 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.73891184 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.741457066 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.745469376 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.741435994 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.738666047 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.73826916 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.739921124 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.737483313 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.737925345 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.73866032 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.73819025 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.739109503 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.740102929 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.740053073 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.734127143 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.738547386 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.748502303 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.743663583 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.739579794 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.738872825 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.74414275 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.740264183 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.735811014 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.741872095 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.738449216 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.739171689 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.739553762 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.74826615 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.740020693 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.748006343 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.739084724 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.739888623 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.735172523 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.739951746 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.74192139 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.741097679 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.739123341 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.738495189 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.736541762 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.737956604 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.740570985 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.742778742 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.738916306 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.736531589 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.746894259 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.740676925 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.748584468 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.739383245 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.74158031 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.746080011 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.750267002 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.752807998 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.748009879 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.742018535 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.740152359 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.747869266 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.761133507 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.748543741 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.739284678 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.736639624 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.739838842 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.747969776 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.754104429 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.748372787 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.741383816 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.740636306 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.740239276 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.741885729 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.740423416 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.751012874 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.743980207 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.741545996 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.741147253 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.749403189 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.760300508 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.741449547 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.741230924 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.742077631 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.742083778 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.742975797 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.752360833 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.743053492 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.740710059 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.742499853 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.741260774 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.746095305 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.744015206 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.740147137 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.743412034 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.740201127 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.741141913 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.743184786 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.746434162 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.749074696 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.741784933 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.742273312 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.749359395 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.741603429 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.742858644 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.751776313 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.742383388 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.742156205 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.742845582 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.75041335 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.7404863 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.745359041 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.748544636 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.743517967 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.744559751 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.745206384 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.742472271 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.751671797 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.765763976 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.742758332 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.743017182 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.746995291 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.751623116 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.743392602 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.745998747 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.74341337 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.74000095 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.741909692 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.745076417 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.743300143 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.745015368 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.744502489 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.745787584 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.742614352 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.744460868 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.745579075 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.745667735 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.745460543 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.746547008 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.746026445 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.747619741 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.744958179 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.74623413 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.751964726 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.746062462 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.746710949 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.746402216 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.742024217 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.74526998 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.747548299 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.745969996 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.746155139 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.744715096 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.74515076 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.744400254 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.744663683 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.745121484 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.744740824 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.74518773 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.747971699 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.746044267 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.752707101 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.745320209 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.742304584 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.745362742 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.744862636 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.745912897 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.746134452 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.743682044 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.747550403 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.752256154 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.745329901 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.746800307 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.75182428 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.745117041 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.746046305 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.746414019 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.748473376 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.753460916 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.745903717 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.754406194 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.746525143 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.746251799 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.745257937 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.748576507 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.746005349 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.747733099 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.749170938 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.750922834 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.760444526 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.756333956 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.747461571 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.750538741 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.748242854 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.750238153 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.753926263 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.748400185 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.746378952 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.746778628 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.746255632 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.747845125 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.752365256 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.748002798 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.747128074 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.747095296 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.747906406 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.748709192 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.750044404 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.748869761 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.749954187 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.745303895 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.747877185 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.747770965 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.748642115 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.745081285 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.74606753 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.747653574 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.748355719 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.74902943 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.758315256 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.744900566 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.749838062 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.749760199 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.748902089 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.748106601 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.748579407 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.749878051 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.748963416 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.756007833 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.749588801 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.750745133 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.754987841 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.749598395 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.747795071 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.752091332 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.749808542 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.747623983 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.750968768 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.755966554 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.748589695 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.749195985 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.751038848 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.749712338 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.748733014 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.756441768 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.74648189 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.74889682 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.749776023 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.753812547 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.747515308 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.750407074 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.750965997 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.751690758 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.753976676 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.749682114 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.749499207 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.753233293 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.752649271 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.752723845 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.750546793 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.752818222 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.7571742 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.756271887 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.751788718 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.75580539 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.749834202 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.753588014 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.751889079 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.751396854 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.751279262 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.764840772 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.757117679 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.758993355 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.754365219 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.750669656 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.75758708 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.750811111 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.754800738 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.751580266 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.752953093 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.752725757 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.751351531 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.74894934 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.752871636 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.751383313 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.75184629 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.752329877 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.755480165 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.750673465 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.750463352 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.752008769 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.750819991 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.75072466 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.752919814 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.753095708 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.756542291 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.755244916 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.751272534 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.752753926 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.760883435 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.752966802 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.755166603 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.752660359 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.752280202 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.75219186 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.753435788 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.75247756 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.754318302 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.760027984 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.754192393 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.763910873 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.75420238 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.761973421 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.75298819 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.756094232 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.761215448 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.750080961 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.75294402 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.75425656 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.754277698 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.76156442 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.754147061 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.753862108 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.756283498 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.753677981 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.754313126 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.753653698 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.755333565 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.753044274 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.753861669 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.762634091 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.752988648 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.757958621 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.75702048 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.750715297 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.753357892 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.753118304 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.752310168 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.761631505 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.75422738 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.756495698 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.752944189 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.755337753 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.753974967 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.755560693 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.754581009 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.751518407 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.7540023 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.76388535 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.754770139 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.75884269 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.754355111 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.765869591 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.755470135 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.7630525 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.756260513 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.756264258 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.755472631 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.754858614 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.758474308 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.755697711 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.759018321 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.755922883 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.755906543 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.758955173 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.756952954 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.759746544 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.757520269 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.756704565 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.755994845 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.76412913 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.777165188 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.757874131 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.759031155 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.754796084 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.757487402 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.758918658 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.757176761 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.75629174 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.75797201 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.766536218 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.762623982 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.757240201 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.756787269 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.758538669 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.758098201 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.756201654 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.756098512 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.757805566 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.756433387 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.759603059 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.757618664 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.76403076 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.756318821 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.757550058 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.761750333 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.756418107 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.768541318 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.758576364 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.759315659 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.757915238 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.758074781 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.758442941 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.757175164 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.757673416 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.759104785 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.757577386 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.758309964 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.763477433 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.762325626 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.761156069 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.757548581 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.758709684 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.759447074 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.759726975 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.758728621 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.757718437 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.758494108 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.761285462 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.758098804 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.759430016 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.757845478 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.758748096 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.760011806 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.758750771 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.76152672 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.764794885 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.758890266 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.754929018 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.759879571 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.759199289 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.757830026 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.760154194 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.770137059 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.761739597 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.767997645 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.765037355 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.762674913 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.759828547 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.762477286 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.768000841 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.760966353 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.761377694 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.760047418 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.763045969 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.76046623 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.764590144 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.760409382 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.768802654 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.760917015 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.761557128 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.769184601 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.762437087 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.76148294 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.759937455 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.763368889 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.761613674 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.757157433 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.760987032 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.760715113 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.768805119 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.764407856 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.761128725 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.763867476 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.759376314 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.761373744 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.763921351 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.761174299 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.761802766 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.760301685 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.761895966 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.761088891 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.760284798 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.758623532 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.761346902 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.762553215 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.76247068 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.7676291 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.758363766 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.763842673 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.764625293 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.763549693 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.762460476 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.761264133 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.759104248 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.759279509 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.763271495 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.763676191 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.763371371 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.765058519 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.762274396 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.762110072 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.762484501 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.763339099 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.76515452 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.770788408 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.768318644 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.76158445 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.761599651 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.764521782 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.766617456 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.763409275 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.763789231 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.765469426 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.766584207 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.762920247 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.763848807 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.763466664 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.765469056 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.778811836 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.763879163 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.764155468 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.763831236 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.769139058 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.76422705 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.760083675 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.764624842 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.767302507 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.765863249 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.770082867 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.765236971 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.772563815 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.764096963 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.764675269 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.765941265 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.765936283 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.771456168 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.767039759 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.765396209 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.764396107 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.767973195 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.779977678 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.763970364 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.773089644 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.792269871 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.765323403 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.766631427 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.76545859 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.763298069 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.76490851 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.769253947 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.765715303 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.764939018 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.765295768 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.764904293 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.766362323 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.770574817 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.767073668 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.765563532 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.765459594 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.76540614 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.768494238 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.761857247 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.765463802 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.765798851 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.766036406 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.765121865 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.765826044 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.765511143 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.779530345 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.775720989 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.766251227 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.765770019 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.762906202 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.77076069 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.769316745 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.7741941 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.771410936 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.765659125 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.766796909 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.768330312 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.767207981 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.762794046 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.766904257 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.766409502 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.765827649 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.763266801 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.780582428 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.773102091 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.773910324 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.768625899 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.768032003 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.767586518 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.768749023 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.767622136 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.767332333 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.770322879 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.767513549 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.770724255 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.767790549 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.767076967 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.77010356 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.773454727 seconds)
  done (took 1047.184834007 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.764988517 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.764164384 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.765866536 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.764433867 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.765768604 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.765813214 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.765345961 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.765149677 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.765557725 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.765821982 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.765070722 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.766351082 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.765433357 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.766099746 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.765093374 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.765769054 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.766057742 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.765626097 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.765606423 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.766785613 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.766479663 seconds)
  done (took 38.778541435 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.768779676 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.765165545 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.765851661 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.768904802 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.766461049 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.767923322 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.767264216 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.769423793 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.767909002 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766410946 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.768000191 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768659801 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.766588814 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.767818279 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766902624 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.769364639 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.769331286 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.767205732 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.76939726 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.766853031 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.769969833 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.76795107 seconds)
  done (took 40.593818015 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.770400679 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.770232783 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.769535107 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.766683585 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.769648982 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.767219275 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.769551901 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.769856265 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.770651677 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.772696894 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.76866484 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.771118734 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.775648083 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.774185662 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.773837695 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.770344215 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.914248029 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.771367454 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.77123438 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.771499453 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.767919829 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.778474913 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.770194661 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.768086596 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.771258364 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.771982981 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.771514882 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.770889801 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.771286879 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.772162208 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.774730753 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.771186264 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.771336048 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.77179263 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.771556076 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.771786424 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.77394215 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.771972661 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.76867357 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.771333455 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.780863302 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.789393824 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.772072942 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.780786634 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.771113854 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.771905665 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.774180631 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.778903302 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.769183088 seconds)
  done (took 88.684636189 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.770596739 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.772270147 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.769257565 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.772137319 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.772380104 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.773609572 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.772198079 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.772965872 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.77056536 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.769229919 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.772614499 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.771683413 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.770495039 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.773390116 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.773070782 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.770132706 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.771543807 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.771155525 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.771786607 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.770736412 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.77030986 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.774122996 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.774742147 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.771466088 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.773906591 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.771642268 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.770120666 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.773785081 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.770367705 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.771425191 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.773850359 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.774741546 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.774094912 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.772678676 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.770736723 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.774206193 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.775239404 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.771053971 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.774577734 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.771374378 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.775067338 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.774212163 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.774179592 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.776062153 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.7731546 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.77170112 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.773308239 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.772339415 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.773117499 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.7751748 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.774640649 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.773782308 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.774766374 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.773299556 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.775793068 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.776018456 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.772690346 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.772657595 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.775523817 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.773331243 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.773585349 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.776550894 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.77415365 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.776309272 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.775212819 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.774086045 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.773941478 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.775676115 seconds)
  done (took 122.27453915 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.776917066 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.777087317 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.776632253 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.77622245 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.77673473 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.778334429 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.777018057 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.776924286 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.778769495 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.777131462 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.778011115 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.775963141 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.777209423 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.776525778 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.776451852 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.776724575 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.777202587 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.776990113 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.776772801 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.777109072 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.777466303 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.778004723 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.778384792 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.778219971 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.776767756 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.777145309 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.777064157 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.777980987 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.77720437 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.777120223 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.777737612 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.777115036 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.777674527 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.777782634 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.777010495 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.77728956 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.77790515 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.778351925 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.777800776 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.778102393 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.777645447 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.77803095 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.777514776 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.77816013 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.778216749 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.77771016 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.778712341 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.779110488 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.777806763 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.778295695 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.779186287 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.778405661 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.778183519 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.779148198 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.777778387 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.778255046 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.778916451 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.77867209 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.777492506 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.778976769 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.779537423 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.779315607 seconds)
  done (took 111.929610911 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.779262395 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.778639233 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.775611252 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.77772032 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.77963262 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.775766768 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.77966111 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.77875314 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.778551225 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.779191944 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77960295 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.776775528 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777052177 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779757165 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.77674042 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776749148 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.775889449 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.776232879 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.778989873 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.776588538 seconds)
  done (took 37.270360926 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.777641213 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.779546415 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.776455447 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.777282096 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.780978064 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.777855974 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.779913629 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.77978859 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777583199 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779924531 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.779927321 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.780469099 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.777757467 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.777934324 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.780522839 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.778412863 seconds)
  done (took 30.174691706 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.77806449 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.780142736 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.781228695 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.78145948 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.778510262 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.779071469 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.78012261 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.779103403 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.778140238 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.7807154 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.780890421 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.78153757 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.780758279 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.781447066 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.779594513 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.781349291 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.778676014 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.779298804 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.781048983 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.782661097 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.779070567 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.778235197 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.782531675 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.78134055 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.778747215 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.779519637 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.779988704 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.778566178 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.780040112 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.781652216 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.779610348 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.779136202 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.779609929 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.780243784 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.783109276 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.779683127 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.782743654 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.78297398 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.783338494 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.784243591 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.782705699 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.780149349 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.782103552 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.783083027 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.779137559 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.782206327 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.779774675 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.780400401 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.780189649 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.780652887 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.783429755 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.784629462 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.783598637 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.783661924 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.783609566 seconds)
  done (took 99.663656761 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.790110751 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.79020162 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.787801458 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.789051328 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.78949094 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.788818655 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.790275477 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.787566434 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.786636603 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.789596996 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.788718118 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.79008789 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.787904569 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.790104372 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.788964563 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.790672903 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.788102669 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.789314812 seconds)
  done (took 33.920512782 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.788406915 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.788077304 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.791400184 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.78769152 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.788200273 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.792314935 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.788438006 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.791466017 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791524373 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.790015182 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789126738 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.791959379 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.792280463 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.7921033 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.789816243 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788955584 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.79124453 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.791748799 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.789374107 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.789628266 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.792158475 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.791572958 seconds)
  done (took 41.112466543 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.790917083 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.791435163 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.808119424 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.831150884 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.820096235 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.791938936 seconds)
  done (took 12.559287056 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790412022 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.792494043 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.7892784 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793102475 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792252469 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790648852 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.788854144 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790182233 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.791827621 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790230308 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.790930912 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793867868 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793756399 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790498489 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79314556 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792737219 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790493656 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790473772 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791850372 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.792236038 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.791153298 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793522283 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791020352 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.790969237 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.790230949 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.791599419 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793696655 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.791562914 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791252892 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794574151 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.79342214 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.790998804 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793266631 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792321638 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795049778 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793949283 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.791340634 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79433514 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794215148 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792333626 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.794698013 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795014379 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794714143 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.79230145 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794502108 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.79181692 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792645627 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792895089 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.792078685 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795222621 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795574512 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793066965 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795369967 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795393062 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793553689 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796149997 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793508403 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.792537731 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.79459494 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.792835449 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.792351798 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795060712 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.791853183 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.793602232 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796140425 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793067328 seconds)
  done (took 120.048931362 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.792855752 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.793841388 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.793988901 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794507394 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793799591 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793208561 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793489157 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.793512686 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.793993019 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.792291361 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796067877 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793669571 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794355194 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.793431143 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795322578 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794202226 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794986372 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794970273 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794229921 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796676673 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794384084 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.795008898 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795164286 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796611713 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.79575034 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797199819 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.794656516 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795400394 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794017007 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794360183 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793610101 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.793758304 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793417428 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.793836871 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.79623734 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796302196 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794585518 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.794535137 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794903475 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.797026634 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.794211591 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.796864281 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.793360996 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.793870718 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794912166 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.794451195 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.794978165 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.795092097 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.794564671 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.794850816 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795485806 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.796234934 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795477064 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795055646 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795303729 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.795366395 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795325213 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.796035172 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.795919739 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.798798466 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.795101303 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.796221376 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.799127539 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.795730231 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.796028439 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.795554387 seconds)
  done (took 120.200494176 seconds)
done (took 2441.711408314 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.79887065 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.96044816 seconds)
  done (took 15.491009769 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.967406073 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.917310976 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.799430037 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.821975502 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.798755488 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.818876263 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.816463174 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.799250973 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.799700579 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.799148366 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.798555044 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.986627623 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.795270172 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.798824038 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.799143693 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.891544998 seconds)
  done (took 51.150986175 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.802167256 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.803623896 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.814904594 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.805513269 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.801970274 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.821663579 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.83485049 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.807110691 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.862233195 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.826252263 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.928660939 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.814491167 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.803138091 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.863743607 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.815782285 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.821040171 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.907766022 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.883265378 seconds)
  done (took 34.752044229 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.881009552 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.809201223 seconds)
  done (took 10.432021597 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.80336668 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.807816179 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.82898969 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.813655062 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.799324345 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.810725768 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.833790954 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.838298209 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.80561599 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.841256846 seconds)
  done (took 69.921039998 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.811377046 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.806470849 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.806921464 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.805824341 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.798947496 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.80332255 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.806278634 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.804071202 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.50602988 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.843467321 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.813305964 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.812608059 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.806679086 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.809385432 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.804194228 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.829252118 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.968576765 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.805637805 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.805950349 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.812938055 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.806994506 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.866798802 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.821753643 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.808643656 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.837345352 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.50175513 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.816472535 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.813553831 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.928390022 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.805488536 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.807113117 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.807487008 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.808556245 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.189231301 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.132186477 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.808041722 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.817110034 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.815012197 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.804967952 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.919595008 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.808364285 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.813006333 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.756165215 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.122792411 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.909939375 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.851219552 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.165652531 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.812144564 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.809368843 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.838494573 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.810897678 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.810133143 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.82271524 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.324745107 seconds)
  done (took 129.376109519 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.839711585 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.288359827 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.957218792 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.804681241 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.09822051 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.041330035 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.806843728 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.853552207 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.813496298 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.056427292 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.982531059 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.924148493 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.804884335 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.804946641 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.80325386 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.802100447 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.95356422 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.877474394 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.806443433 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.80764079 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.840575984 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.072808678 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.932518839 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.944638472 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.829282845 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.030136747 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.933837923 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.923349317 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.808002721 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.804195926 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.872752126 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.812656526 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.803688963 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.80411843 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.970386549 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.911042208 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.902594089 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.806720287 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.845797102 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.803860563 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.837378471 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.027266161 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.914488888 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.944509641 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.055864421 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.034394134 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.807659982 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.804596615 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.808380766 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.998333356 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.021730185 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.060500536 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.936763578 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.808526005 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.155161571 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.805073295 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.852083583 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.056245157 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.042337721 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.918284529 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.842156054 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.806420166 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.805062043 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.121407808 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.812948621 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.913962237 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.186166451 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.811109243 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.91645301 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.921524036 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.042147868 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.047835709 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.838495034 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.817461263 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.843287586 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.090644869 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.8809217 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.060749831 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.821219598 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.80810154 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.89844391 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.808478528 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.980555861 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.125193353 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.075038172 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.849824587 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.809610691 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.805608811 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.055485248 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.05907291 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.081982273 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.0524994 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.975844246 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.855670165 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.808886537 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.806504035 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.854651233 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.94146655 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.811607494 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.169446101 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.055248769 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.587003324 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.838952122 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.126697527 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.94878854 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.811177546 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.808484378 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.807069988 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.013475188 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.852657558 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.809747483 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.806723393 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.055407788 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.753190919 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.935515566 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.497444849 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.875462931 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.810160079 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.075760093 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.811143378 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.058177029 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.832136157 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.121805836 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.18530177 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.853611056 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.005016969 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.054551099 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.811980989 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.072524571 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.125156141 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.935461724 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.059704173 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.554082619 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.811056844 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.101994475 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.825962433 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.833323515 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.97987295 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.820817955 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.989673696 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.815748415 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.118889399 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.837700665 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.981891637 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.096104865 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.088109313 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.857126645 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.865055168 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.828337105 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.945465424 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.810705316 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.959568487 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.99648349 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.905277086 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.812244895 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.377475729 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.811252032 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.959311397 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.111014183 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.836701723 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.884070677 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.812494844 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.813409688 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.905617135 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.839764649 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.456037775 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.81076318 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.982344936 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.79703828 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.262034277 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.810848379 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.12233483 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.023071637 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.815007525 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.812517938 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.614937303 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.811238792 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.969382691 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.971048108 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.334915061 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.819323934 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.029801624 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.814815497 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.945964745 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.815635737 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.81291297 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.163850358 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.838276101 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.812671927 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.816809553 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.813028527 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.810434893 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.043047806 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.84352531 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.545218551 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.951803212 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.065177232 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.127097171 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.077234822 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.863354915 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.814085878 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.119180884 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.832678151 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.882745637 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.815412108 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.838081983 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.058992999 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.817841866 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.042701052 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.102769314 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.843898717 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.865970657 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.816381465 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.886769745 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.812389342 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.95572109 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.913026456 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.817588925 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.818570166 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.933285093 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.943087977 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.010297726 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.821112661 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.837350494 seconds)
  done (took 941.426312585 seconds)
done (took 1254.280221604 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.813609745 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.815885767 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.800571436 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.814890803 seconds)
  done (took 28.998646958 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.823395435 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.818353139 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.82028806 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.818620591 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.81861453 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.81438766 seconds)
  done (took 12.663276307 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.892662152 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.806603968 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.80912018 seconds)
  done (took 21.256020188 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.88016816 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.226020082 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.916092632 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.260362069 seconds)
  done (took 10.027459618 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.812515354 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.81172288 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.812807863 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.812622645 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.81274419 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.813783115 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.811727206 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.813538335 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.812112841 seconds)
  done (took 18.058508662 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.982496269 seconds)
done (took 96.73833957 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.194316783 seconds)
    (2/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.845446805 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.109485634 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.056282669 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.202603808 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.977379225 seconds)
    (7/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.82591617 seconds)
    (8/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.779521862 seconds)
    (9/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.980268833 seconds)
    (10/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.79916167 seconds)
    (11/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.0330326 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.86373456 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.840761934 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.457228964 seconds)
    (15/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.047122609 seconds)
    (16/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.882802558 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.887816621 seconds)
    (18/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.266934327 seconds)
    (19/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.971128807 seconds)
    (20/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.333099501 seconds)
    (21/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.834130387 seconds)
    (22/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.012886648 seconds)
    (23/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.950484936 seconds)
    (24/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.092469584 seconds)
    (25/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.899583454 seconds)
    (26/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.382339507 seconds)
    (27/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.16549981 seconds)
    (28/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.116251841 seconds)
    (29/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.252383679 seconds)
    (30/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.833721771 seconds)
    (31/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.816774259 seconds)
    (32/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.803811867 seconds)
    (33/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.150945504 seconds)
    (34/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.818541721 seconds)
    (35/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.419802223 seconds)
    (36/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.775166794 seconds)
    (37/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.208199025 seconds)
    (38/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.849312155 seconds)
    (39/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.917206654 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.918160298 seconds)
    (41/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.414896137 seconds)
    (42/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.46337685 seconds)
    (43/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.422990768 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.144092221 seconds)
    (45/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.172847866 seconds)
    (46/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.071461776 seconds)
    (47/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.859273529 seconds)
    (48/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.105992764 seconds)
    (49/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.910449735 seconds)
    (50/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.122630748 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.727950817 seconds)
    (52/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.206017821 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.819979407 seconds)
    (54/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.821917614 seconds)
    (55/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.098881476 seconds)
    (56/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.932282023 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.891372039 seconds)
    (58/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.918997476 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.074809352 seconds)
    (60/309) benchmarking ("sort", Int8, false)...
    done (took 4.817070141 seconds)
    (61/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.413415538 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.818719227 seconds)
    (63/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 3.484464452 seconds)
    (64/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.823815055 seconds)
    (65/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.244635695 seconds)
    (66/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.028685467 seconds)
    (67/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.906273641 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.89616683 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.876042858 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.866504665 seconds)
    (71/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.01817334 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.871254405 seconds)
    (73/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.317976623 seconds)
    (74/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.077362078 seconds)
    (75/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.823859324 seconds)
    (76/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.02849266 seconds)
    (77/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.334890472 seconds)
    (78/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.054608643 seconds)
    (79/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.816757398 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 8.064271457 seconds)
    (81/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 3.035485736 seconds)
    (82/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.863559556 seconds)
    (83/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.809690601 seconds)
    (84/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.956075347 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.081598521 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.191897894 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.401653665 seconds)
    (88/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.253151205 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.875335093 seconds)
    (90/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.89293122 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.731130406 seconds)
    (92/309) benchmarking ("sort", Int64, false)...
    done (took 5.540976759 seconds)
    (93/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.93678675 seconds)
    (94/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.904950127 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.823367535 seconds)
    (96/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.236663758 seconds)
    (97/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.930559862 seconds)
    (98/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.011642367 seconds)
    (99/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.066266334 seconds)
    (100/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.24339477 seconds)
    (101/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.427749246 seconds)
    (102/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.974917358 seconds)
    (103/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.958606415 seconds)
    (104/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.823139874 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.48710981 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.097036221 seconds)
    (107/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.782782084 seconds)
    (108/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.138396889 seconds)
    (109/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.843704543 seconds)
    (110/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.808804043 seconds)
    (111/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.690978756 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.155168532 seconds)
    (113/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.715561839 seconds)
    (114/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.842920901 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.021550004 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.84570469 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.511829131 seconds)
    (118/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.803475599 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.861339202 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.826266589 seconds)
    (121/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.853203628 seconds)
    (122/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.9848607 seconds)
    (123/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.933376786 seconds)
    (124/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.501855766 seconds)
    (125/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.004990045 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.729347731 seconds)
    (127/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.012931321 seconds)
    (128/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.825530024 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.191240758 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 2.278545151 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.847476192 seconds)
    (132/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.830631716 seconds)
    (133/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.141042155 seconds)
    (134/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.900210588 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.079554506 seconds)
    (136/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.751375166 seconds)
    (137/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.753593673 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.632294677 seconds)
    (139/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.829563998 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.103949516 seconds)
    (141/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.850498897 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.084176766 seconds)
    (143/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.16714107 seconds)
    (144/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.956050319 seconds)
    (145/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.002502265 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.825897339 seconds)
    (147/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.05044281 seconds)
    (148/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.999280506 seconds)
    (149/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.93864102 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.957027861 seconds)
    (151/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.908513251 seconds)
    (152/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.230537494 seconds)
    (153/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.825158409 seconds)
    (154/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.808727419 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.939205231 seconds)
    (156/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.951305634 seconds)
    (157/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.06055819 seconds)
    (158/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.856284479 seconds)
    (159/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.107015267 seconds)
    (160/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.136064363 seconds)
    (161/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.930006235 seconds)
    (162/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.919182032 seconds)
    (163/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.905067012 seconds)
    (164/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.006101782 seconds)
    (165/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.99246181 seconds)
    (166/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.439371801 seconds)
    (167/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.935421661 seconds)
    (168/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.906411018 seconds)
    (169/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.821547366 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.848940541 seconds)
    (171/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.123785458 seconds)
    (172/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.937417699 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.809309043 seconds)
    (174/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.990870949 seconds)
    (175/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.984660449 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.989967049 seconds)
    (177/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.12399184 seconds)
    (178/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.954414426 seconds)
    (179/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.246552823 seconds)
    (180/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.290298043 seconds)
    (181/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.807983137 seconds)
    (182/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.964970109 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.006794313 seconds)
    (184/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.003857415 seconds)
    (185/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.120779064 seconds)
    (186/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.830504933 seconds)
    (187/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.18418419 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.251522603 seconds)
    (189/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.373014107 seconds)
    (190/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.810660605 seconds)
    (191/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.682651944 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.860436238 seconds)
    (193/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.967269659 seconds)
    (194/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.859363877 seconds)
    (195/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.391724399 seconds)
    (196/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.853953046 seconds)
    (197/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.877898516 seconds)
    (198/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.010658253 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.869047498 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.822227998 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.852989829 seconds)
    (202/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.930099018 seconds)
    (203/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.823488176 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 5.127417209 seconds)
    (205/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.18612766 seconds)
    (206/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.845430182 seconds)
    (207/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.850633359 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.880880121 seconds)
    (209/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.123731963 seconds)
    (210/309) benchmarking ("sort", Float64, false)...
    done (took 5.642861268 seconds)
    (211/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.853645538 seconds)
    (212/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.921420488 seconds)
    (213/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.936958282 seconds)
    (214/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.825019377 seconds)
    (215/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.823383433 seconds)
    (216/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.953373535 seconds)
    (217/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.924350308 seconds)
    (218/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.038581065 seconds)
    (219/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.430733491 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.037198286 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.517234216 seconds)
    (222/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.699334924 seconds)
    (223/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.908136579 seconds)
    (224/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.019691867 seconds)
    (225/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.966477671 seconds)
    (226/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.974363624 seconds)
    (227/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.915483756 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.843122948 seconds)
    (229/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.164742758 seconds)
    (230/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.825028743 seconds)
    (231/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.189884887 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.208967162 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.872468018 seconds)
    (234/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.826955949 seconds)
    (235/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.865131448 seconds)
    (236/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.998966678 seconds)
    (237/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.007519694 seconds)
    (238/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.816566059 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.889369674 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.124696092 seconds)
    (241/309) benchmarking ("sort", Float32, false)...
    done (took 5.605789348 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.639203068 seconds)
    (243/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.957471393 seconds)
    (244/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.332932905 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.939949238 seconds)
    (246/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.670393483 seconds)
    (247/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.236010187 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.133239009 seconds)
    (249/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.835651175 seconds)
    (250/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.375347822 seconds)
    (251/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.233469926 seconds)
    (252/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.184170134 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.934475627 seconds)
    (254/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.147262527 seconds)
    (255/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.677901234 seconds)
    (256/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.86745416 seconds)
    (257/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.907936788 seconds)
    (258/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.863122011 seconds)
    (259/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.192123648 seconds)
    (260/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.527098589 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.224192845 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.861924626 seconds)
    (263/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.263688416 seconds)
    (264/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.980311528 seconds)
    (265/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.036038197 seconds)
    (266/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.969723905 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.212765611 seconds)
    (268/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.817124626 seconds)
    (269/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 3.025568362 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.754634353 seconds)
    (271/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.84168423 seconds)
    (272/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.052582037 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.943037845 seconds)
    (274/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.82086262 seconds)
    (275/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.018822752 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.8503575 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.097330337 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.839000295 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 3.6533781 seconds)
    (280/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.345604196 seconds)
    (281/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.901427738 seconds)
    (282/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.870701076 seconds)
    (283/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.921017363 seconds)
    (284/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.97691709 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.02243095 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.215039176 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.923942769 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.225745667 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.957794923 seconds)
    (290/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.940619516 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.031912717 seconds)
    (292/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.355043464 seconds)
    (293/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.911282008 seconds)
    (294/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.699014616 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.944296644 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.878152399 seconds)
    (297/309) benchmarking ("sort", BigInt, false)...
    done (took 6.836029239 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.850474378 seconds)
    (299/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.983573802 seconds)
    (300/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.723255883 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.129059225 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.86469682 seconds)
    (303/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.235616769 seconds)
    (304/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.828749719 seconds)
    (305/309) benchmarking ("sort", BigFloat, false)...
    done (took 8.150174362 seconds)
    (306/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.864030963 seconds)
    (307/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.838072772 seconds)
    (308/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.822793067 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 7.886475955 seconds)
  done (took 1011.36978155 seconds)
done (took 1013.137052092 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.871720166 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.866113501 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.848451268 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.870373804 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.961056355 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.878239026 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.859163143 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.8505838 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.896262519 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.898638329 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.847718735 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.876498125 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.850486721 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.849100536 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.848978912 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.862790787 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.167372882 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.879258332 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.866012769 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.859695873 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.86566053 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.848524209 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.903945243 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.88936788 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.863732587 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.857319816 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.855438403 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.869722446 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.962195526 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.854085266 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.8533026 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.862005307 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.168382282 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.877626928 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.846702135 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.870227674 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.861996096 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.859794769 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.854185285 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.883272877 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.312304972 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.857895958 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.852429447 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.851700544 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.852271103 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.856986556 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.853698286 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.857139234 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.863178751 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.863816285 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.307310992 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.874280415 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.853395217 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.850231744 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.860942317 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.850282501 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.853611358 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.866855001 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.866819596 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.863162361 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.152844778 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.881644788 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.849935304 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.863623995 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.854681384 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.342195893 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.851171708 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.855035984 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.307080546 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.859308675 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.337532167 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.862985233 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.847971233 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.856958717 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.87554754 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.158762547 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.865433013 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.843566442 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.847886943 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.839951772 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.85053243 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.853766086 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.845019827 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.843599026 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.852918071 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.868489866 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.850967838 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.840137011 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.850830774 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.856991093 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.844559237 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.848708639 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.840883753 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.833049546 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.845903943 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.839370367 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.838220307 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.838636578 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.839111789 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.847257166 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.290570732 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.856753122 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.830014782 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.829238839 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.833040151 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.845076466 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.288106212 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.839769335 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.853924789 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.879683464 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.830914797 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.135181818 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.860180926 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.845379906 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.837321457 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.831943701 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.82172237 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.130839303 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.309528214 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.848347937 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.825247764 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.820995238 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.838566485 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.824400859 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.819188746 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.139932036 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.84576789 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.833690548 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.941174233 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.830611998 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.851806861 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.81627398 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.821392473 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.845943892 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.834062954 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.850916987 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.821743385 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.833922318 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.83441804 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.814492884 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.829250709 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.829267611 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.819443201 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.825938093 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.812851281 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.847070677 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.831727711 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.832411246 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.839465992 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.940768954 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.816250917 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.124765435 seconds)
done (took 289.547277272 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.886267701 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.809251312 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.914466493 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.815006588 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.899191038 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.902041201 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.81270973 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.812965639 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.812347624 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.194783069 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.813122835 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.813858307 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.809474962 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.814372832 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.898397387 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.816359764 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.812873668 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.157127783 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.816765315 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.887984912 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.808467428 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.812986615 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.815040315 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.197240508 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.809993584 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.808363041 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.887969862 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.816513142 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.163461075 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.810889378 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.81373906 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.217778764 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.911172223 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.836124636 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.827284661 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.823931075 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.902062549 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.821234234 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.899478672 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.898854994 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.916110343 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.858175851 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.811772882 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.815435143 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.820676676 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.819514294 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.81611597 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.846503394 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.812008777 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.815684928 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.157756587 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.82691551 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.825268342 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.816057628 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.815527779 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.839739099 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.815460134 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.819556266 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.908115384 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.819965392 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.881202424 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.200280313 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.196822379 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.818807015 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.816663952 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.815721927 seconds)
  done (took 180.835656103 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.88599602 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.892450336 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.886654509 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.823435829 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.869016877 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.889753629 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.823109449 seconds)
  done (took 14.819517676 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.825463884 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.818454024 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.874196589 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.875643445 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.819745529 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.968375411 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.819316942 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.830481207 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.816167516 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.886102374 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.82056999 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.820286689 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.827090817 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.820001604 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.872776368 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.831095757 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.935021926 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.820759433 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.820203018 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.977042285 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.817351336 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.827481871 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.87497925 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.832234171 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.821232933 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.825582522 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.408082434 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.820619839 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.816836932 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.820188044 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.817132148 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.858998067 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.821167055 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.818881843 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.81835864 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.935905263 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.821438244 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.818691589 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.821142922 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.820413872 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.820156335 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.821416728 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.82099187 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.818518802 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.821083746 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.844877051 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.821731428 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.821847589 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.821707514 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.821307268 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.882052685 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.821832477 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.818676172 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.819318706 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.891659624 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.829655985 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.822582844 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.819107725 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.821445378 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.820229138 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.978872548 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.875753606 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.822435572 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.875471212 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.822914661 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.822972014 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.82211212 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.821797138 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.882555977 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.82152244 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.879231459 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.819509053 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.005611362 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.846193055 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.823711678 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.825550268 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.825411519 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.824443547 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.819092363 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.830108402 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.82046072 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.82514808 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.829547214 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.821483021 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.820533792 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.930300672 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.932800161 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.821524088 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.835398047 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.830361774 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.820261714 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.887902101 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.823536427 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.82056538 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.887469654 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.939430067 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.880208281 seconds)
  done (took 201.200428608 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.82935253 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.831705049 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.825036023 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.840190082 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.823636037 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.82310528 seconds)
  done (took 12.728252326 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.826500472 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.824432844 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.824399535 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.824572271 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.824569289 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.825476524 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.825137767 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.825257178 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.829009043 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.824726962 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.825278007 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.826243668 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.825727628 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.825047664 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.825676125 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.824731617 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.826394421 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.821954311 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.823828216 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.825509478 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.977987004 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 2.266895931 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.825226703 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.826497075 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.829415542 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.823583024 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.830380978 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.821754827 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.823013986 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.830766473 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.828832298 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.82270188 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.821826581 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.826941635 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.825635365 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.822235116 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.824297536 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.823118815 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.817958825 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.821372759 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.822389449 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.822141959 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.821496413 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.823238393 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.822818775 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.826632842 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.82656157 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.829428187 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.822791146 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.824143312 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.823024679 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.822036979 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.822558144 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.823353171 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.825811896 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.82742592 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.827500428 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.824199321 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.822259972 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.823093331 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.822021687 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.822796615 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.823407655 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.827291291 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.819503875 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.824077916 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.823629047 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.827101745 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.822826041 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.823082667 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.82470867 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.819921777 seconds)
  done (took 134.715958236 seconds)
done (took 546.063128634 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.074262886 seconds)
  done (took 8.827736504 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.927626481 seconds)
  done (took 8.771466592 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.520047189 seconds)
  done (took 10.272319468 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.816180951 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.832587295 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.824449983 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.818759565 seconds)
  done (took 29.054106908 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.144624644 seconds)
  done (took 8.896373417 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.825132952 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.811101481 seconds)
  done (took 15.45170213 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.898312533 seconds)
  done (took 8.646067964 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.149313099 seconds)
  done (took 8.897648669 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.812309151 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.806924868 seconds)
  done (took 15.37631233 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.785026835 seconds)
  done (took 8.521704991 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.406039216 seconds)
  done (took 11.153673731 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.803837372 seconds)
  done (took 8.553019074 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.81988635 seconds)
  done (took 8.556019815 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.854798067 seconds)
  done (took 8.585248282 seconds)
done (took 161.31575073 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.796274237 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.792598514 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.787617935 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.785628828 seconds)
  done (took 28.894703903 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.826040145 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.825866006 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.826258579 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.833324139 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.828958116 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.838113574 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.825190166 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.813170082 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.831397436 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.824296075 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.822640489 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.823374289 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.818743387 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.810535523 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.821409975 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.820975195 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.830768042 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.820164898 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.80910998 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.820747425 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.784450911 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.828301783 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.819886335 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.782726502 seconds)
  done (took 45.409476338 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.978991069 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.852803812 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.935860417 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.834227101 seconds)
  done (took 9.316824795 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.83538462 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.834398671 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.845141106 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.885962836 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.916308806 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.841472564 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.804844513 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.79910905 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.788014787 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.829472808 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.904723727 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.846088322 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.91241477 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.775900548 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.963899099 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.777009426 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.776253006 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.828035361 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.879902091 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.893631132 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.776852127 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.829063738 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.831222603 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.846203652 seconds)
  done (took 45.939273923 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.776828516 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.781788392 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.779850318 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.773111265 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.772795549 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.779010282 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.777880205 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.772602759 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.793042208 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.772637394 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.77126057 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.773727986 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.769551389 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.770269723 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.769089194 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.782310336 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.783149279 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.773068328 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.770117044 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.774366982 seconds)
  done (took 37.227513808 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.761884 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.615100891 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.114946765 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.015251014 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.758919944 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.7623566 seconds)
  done (took 30.730500929 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.77663467 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.831592022 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.769466719 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.819956371 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.902383066 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.769471408 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.76172093 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.832774078 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.87792182 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.837527249 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.78142954 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.790199994 seconds)
  done (took 23.44516869 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.756575983 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.756483413 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.757907468 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.773915427 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.773144828 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.769816784 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.76872849 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.755705155 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.77649586 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.781727272 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.770154617 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.774600457 seconds)
  done (took 42.913173696 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844908399 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.011996599 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.776730167 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.443202758 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.13699866 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.969144448 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.406949443 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.089301811 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.761804231 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.03100267 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.782851661 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863236824 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.013646602 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.321848438 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.796386681 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.222119363 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.061041262 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966307903 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.785497134 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.457975932 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830887271 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.005282907 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.576928013 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.825288745 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.975901113 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.89332418 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.024930572 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.763934959 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902567914 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80386489 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775397513 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.765310323 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.039468416 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144781257 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872564985 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775174278 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.383170399 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.479938712 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.757376881 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.558469114 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.672824027 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.782401649 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.778085009 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.767982144 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.701562915 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.987281839 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.15239817 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.773277643 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.478530525 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.767521607 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.778474621 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861681438 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.77122062 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.583096378 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.715394942 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.771123535 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.765023062 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77543099 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.338100143 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.928014285 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.02914127 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.748799278 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.860029111 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.478495683 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177313427 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.918005703 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.773192518 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.772513522 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.703382951 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.556861675 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.828574181 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.117969037 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.790531435 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.419401364 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086786247 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.857172289 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.715273932 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037558699 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.385431124 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.749626668 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.998040797 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.770245657 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.705239516 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.714774321 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.704034058 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.040803282 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810815931 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.537145291 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.813122027 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.098208608 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.782012503 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789746904 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.794049782 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.994970163 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.907682873 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.770789852 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.582157878 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.925668626 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793576477 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.101815252 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706099562 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.774781925 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027657326 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.982481102 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.922784115 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.271270393 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933783074 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.406618521 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.82978616 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.980375431 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.827098738 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.03935888 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.83025292 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.914347836 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.830132231 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.77513462 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068436474 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.43949094 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.91745866 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.805667793 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.904364555 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.08788199 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.806386961 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.856318931 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.77968596 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.774835377 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.583119422 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.330260113 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.774189706 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.77692763 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.922845593 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.828146306 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.775129948 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.720345242 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.399906391 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.809136071 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.789187199 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.998099316 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.408589248 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.093061174 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.709128702 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.104572485 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.867161236 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.998142486 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.423207901 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.856808403 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035892474 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.916771101 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.95698729 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.829300279 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793221843 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.874828438 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.796879123 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.992362584 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.074750894 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.779887303 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.780216838 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.592346954 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.818013231 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.786714945 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.784130162 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.532950259 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051091694 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.805827168 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.788000519 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.669605029 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.793996987 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844345329 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.785904766 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.790023252 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.32568191 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.494845576 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.788583961 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.365544267 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005569188 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790861782 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.49818314 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901766779 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.864326972 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.052466268 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.841892647 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.717292527 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.493759782 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.474691244 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78146838 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.718270275 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.783204469 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.7921132 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.793450937 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.979095498 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.05676759 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.827092619 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.497612151 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.828234128 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.794109846 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.788868562 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.784482543 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.296148637 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.943977025 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.048734734 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.838200353 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927903017 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.799890431 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.7194544 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.787636412 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.789419387 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.784851867 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.784422973 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817962616 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.498376246 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163765787 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.047519698 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.395625344 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800781956 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.520800808 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.847455548 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.790851517 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.611986104 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.014349941 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.84949743 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806233883 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.808415458 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.514292485 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.493194183 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.36263566 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.106120902 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11037821 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.228944184 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.087387873 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.830552973 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.131467551 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.730913179 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.352440407 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.855794951 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.136490048 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.740928082 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87938607 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.445530495 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.148567864 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81236469 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023890262 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.176669669 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.694643069 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.822236256 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.008368299 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832132008 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.02645343 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.766736028 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.083088275 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9395783 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.532619308 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.010479314 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129251273 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.630655726 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.811463896 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.796154732 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.465663239 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883645252 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.511449065 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.968897919 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.059638726 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.903521239 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.145193054 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.806717513 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.021693031 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144139147 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.026966997 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.925587067 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.734115308 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.808210281 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.809365195 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.799255838 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.796702408 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.66665224 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.053529426 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.8085827 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.733177095 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.968814839 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092818494 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.702267237 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.804636767 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.799189537 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105343867 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.415019731 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978717778 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.975807887 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.326195747 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.802027107 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.734713275 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.732299694 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.49531631 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.807829932 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.787877449 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019261265 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.901000752 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.746300307 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.948380612 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.887393193 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.056496158 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.812808015 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.069320177 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.075183535 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.500457442 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825480404 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.899692897 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.484305347 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.915393936 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.799606865 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.035330622 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.556787714 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.028017904 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.818521433 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.754623423 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.799060118 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.013655179 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.801186641 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.708796798 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040513768 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.524536398 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.878346149 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.11768059 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882569829 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.722355419 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.861953784 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.900217586 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.820097231 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.887105205 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.818166189 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.819969268 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.819413449 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853674123 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.725640307 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.941466119 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.821767196 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903107444 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.960751725 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.334261847 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.817050123 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082137391 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181115635 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.13280916 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.868461945 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.808908079 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.807617345 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.742893406 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957623426 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.03402007 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.081997805 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.941157474 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.92528742 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835603474 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.516334333 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.09163753 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057747587 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.084300887 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.704232663 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.385733736 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.857435618 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.810813959 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.821043403 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.021086265 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033365496 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127485731 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.952501636 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.967253327 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.179901015 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.085182034 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.811183548 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.810881032 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.400253425 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.899894686 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.492269514 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.858592127 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.782482965 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098755101 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825649284 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202886142 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.839661058 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.971442418 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.589392041 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.577433965 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.109324552 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.803478306 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.882015979 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.087901918 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.196625023 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129677013 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884929678 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826981807 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.919825646 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964236116 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.685188868 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.820037831 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.81826117 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.034635412 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.526653245 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.827144377 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090764617 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129465628 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.813655654 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.690390165 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842366046 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.827396944 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.040610035 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079917179 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.072897577 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.827218754 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.824325902 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.635210174 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089672288 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877823428 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.752654718 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.82219665 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920737324 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.068635752 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.842340535 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.270763983 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.530226287 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086691063 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.82092468 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841602589 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.041862596 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.183546859 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141104992 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.356544833 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.028748895 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.409311619 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.466110732 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12616638 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.82546526 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.041122357 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129371405 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.823308509 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.97378819 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.8647186 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.084795297 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.13571039 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.887118925 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.543642427 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.804317647 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.17264889 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385701364 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.77179766 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.843287505 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.892224552 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.833921062 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.963636495 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.843379499 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.719437646 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.066730475 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.598712133 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.117928894 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.838557704 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.821276674 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.57089712 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.196677307 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873477672 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.974964071 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843600397 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.508508082 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.184476354 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.089413972 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.988505325 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.84557401 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.836137784 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833594395 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.82060658 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.031671089 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.029888713 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121846559 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.017295714 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.875594885 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.837435948 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.049979918 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04526261 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.693352165 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.976669956 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.985321198 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.881863968 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.739352453 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.341624744 seconds)
  done (took 1641.939705593 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.888083659 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.847294242 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.88499527 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.91576074 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.857640916 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.920022476 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.889625824 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.907604411 seconds)
  done (took 56.88245779 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.834236757 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.052565083 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.844249408 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.835005822 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.844138197 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.835369909 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.01296528 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.846875953 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.845199901 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.845005802 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.836116265 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.834487505 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.15630976 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.860719599 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.834642145 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.823276414 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.844014902 seconds)
  done (took 73.774062581 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.835793573 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.853983657 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.87118805 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.855936549 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.852156316 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.839607588 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.65512272 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.851111347 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.839235446 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.96521956 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.475303847 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.843573978 seconds)
  done (took 86.51203286 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.844809824 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.842545926 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.843530673 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.842053042 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.842863361 seconds)
  done (took 10.992001066 seconds)
done (took 2135.770174691 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.089509903 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.054446689 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.077429463 seconds)
  done (took 5.90481699 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.989162364 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.035856141 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.159168979 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.160653413 seconds)
  done (took 10.124051119 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.127834774 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.209985085 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.052717563 seconds)
  done (took 8.166779858 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.248226787 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.851470854 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.955340887 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.840414193 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.840890744 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.844660344 seconds)
  done (took 22.304322087 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.844858426 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.847105108 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.845089288 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.847661575 seconds)
  done (took 9.159255541 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.82470618 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.558006085 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.82492597 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.839349227 seconds)
  done (took 20.822740624 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.591045765 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.601764413 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.58852218 seconds)
  done (took 9.55811692 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.476618165 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.764286773 seconds)
  done (took 9.017885787 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.10192201 seconds)
  done (took 3.878961826 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.975501422 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.108080163 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.31197041 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.342898438 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.401557589 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.741907122 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.163422696 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.097715313 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.237465786 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.295932441 seconds)
  done (took 24.454759 seconds)
done (took 138.308577905 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.223535329 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.083432595 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.044677582 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.180443828 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.064095557 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.044679243 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.061094047 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.166757885 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.69108113 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.686856051 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.178107138 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.067633171 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.007429176 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.085391657 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.006729591 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.087211293 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.065193271 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.232784025 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.877446134 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.072477558 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.062807239 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.816481222 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.021698503 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.832266083 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.067322287 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.996460079 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.392498327 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.087322212 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.027360269 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.411415775 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.99833864 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.234454767 seconds)
  done (took 171.65459771 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.609467982 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.849075634 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.853092822 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.843842986 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.221672895 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.858313689 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.842598868 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.847793817 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.187455949 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.17129979 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.869596424 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.270381717 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.871494166 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.84498859 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.856233213 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.855054854 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.267473971 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.71668275 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.864638781 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.864639209 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.866202672 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.127337195 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.864676129 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.161248941 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.265423336 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.863623485 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.845910611 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.864666393 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.851717024 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.861606803 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.865895223 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.846154306 seconds)
  done (took 207.636662053 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.845103851 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.850515299 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.852288786 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.846294139 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.854036097 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.852211765 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.846368128 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.846320391 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.436381225 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.408963301 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.855706038 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.851017663 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.853503913 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.846543052 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.854964956 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.84659363 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.861669389 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.853127712 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.850492091 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.85189058 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.856562558 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.578173401 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.856162269 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.56722119 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.857362063 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.852988932 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.847156654 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.853723429 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.855169087 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.855977329 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.853668141 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.846757916 seconds)
  done (took 219.65227677 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.048403706 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.853108344 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.854235126 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.810185035 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.854184051 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.854221954 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.847941869 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.051058202 seconds)
  done (took 18.96840196 seconds)
done (took 619.704694114 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.265483771 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.1125412 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.031191872 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.87786988 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.099755767 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.911928485 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.874902572 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.938324039 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.04926602 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.948758839 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.522200912 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.895167923 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.609525442 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.898583363 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.998574295 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.933479946 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.422505117 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.509625278 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.05539392 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.933929805 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.048378236 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.811224808 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.949817019 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.097521356 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.634856193 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.860272465 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.035665812 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.424327673 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.885490863 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.039394608 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.591604809 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.25798579 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.886366747 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.872449444 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.926524904 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.90898676 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.210925507 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.884291907 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.003574232 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.613496098 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.925300765 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.934205784 seconds)
  done (took 103.476058236 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.846455506 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.847053073 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.844670207 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.845716025 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.845151407 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.84281668 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.842206457 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.842049717 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.84346324 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.842870032 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.843917022 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.845402361 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.844555953 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.845880965 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.845391559 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.842641939 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.845248398 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.847430434 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.844242206 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.843673438 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.843621302 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.842833868 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.84484702 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.844019734 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.846034566 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.845496527 seconds)
  done (took 49.758436289 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.857284125 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.999458122 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.083792925 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.876793879 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.857012461 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.860510825 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.877335786 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.86288744 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.861243212 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.860822165 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.952319153 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.864598906 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.87630657 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.08380577 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.873035574 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.858394664 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.858868217 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.858708186 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.006306008 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.873591608 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.878752525 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.863980999 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.87724179 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.873335233 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.861257359 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.859489091 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.862611519 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.299456908 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.868238076 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.953255936 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.902173497 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.880153966 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.260810254 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.096990894 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.913491932 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.867898221 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.860063593 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.959339869 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.865895082 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.85961331 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.878693747 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.865263158 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.084823148 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.356086743 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.873782685 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.860349652 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.309471299 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.965323731 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.900799698 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.871984782 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.089241521 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.876253741 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.859828561 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.860783307 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.896732931 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.870188193 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.860203316 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.169804133 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.871780531 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.878608893 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.86423776 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.860423188 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.015118154 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.868546837 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.003780569 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.868641043 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.868278531 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.861302591 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.087100003 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.877130659 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.356551289 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.874526459 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.861500352 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.954679225 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.008818168 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.34242469 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.874409481 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.020371939 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.275824267 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.886423422 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.869651467 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.295491367 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.890195898 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.869343521 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.864132105 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.863703049 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.861516736 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.906088146 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.877910222 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.29500997 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.360191356 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.182924786 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.888611314 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.877124206 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.862610241 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.172931482 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.870841537 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.862656262 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.08083804 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.373336873 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.876655241 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.869626441 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.344010707 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.877091662 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.881495847 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.871271413 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.091376777 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.878001499 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.908250203 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.862946896 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.869119621 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.866637174 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.882350068 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.870708682 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.863148495 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.333842574 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.974339456 seconds)
  done (took 230.634662503 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.857698988 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.856745902 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.858262812 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.858546582 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.856731018 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.862649904 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.858375667 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.858259868 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.86295672 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.856626287 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.856897098 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.859927991 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.858873366 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.866452424 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.33576944 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.865712173 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.471018258 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.860814653 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.858677947 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.858890183 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.535761897 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.866841849 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.860658146 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.865509742 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.859380572 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.864811801 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.870797578 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.885393883 seconds)
  done (took 167.685555538 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.865989107 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.047748223 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.8851345 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.901383136 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.874865934 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.863902402 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.889309379 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.888457229 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.870845778 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.863138927 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.863622261 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.926567359 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.876864096 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.005070064 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.897745539 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.896835592 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.971635738 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.872543835 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.864202208 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.864202547 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.893813491 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.861278685 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.927016623 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.991666596 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.88467183 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.983956027 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.870165585 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.867086645 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.865235934 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.985888408 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.88192857 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.927050376 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.893921557 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.884580502 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.986843992 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.983609099 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.971614603 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.897133709 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.870603729 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.863805614 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.865237194 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.85561975 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.98523077 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.883193745 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.867775611 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.97571269 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.88261963 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.867529472 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.876016185 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.865326508 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.880965424 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.885227904 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.933615818 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.998658267 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.900792668 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.892852302 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.893392949 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.156388564 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.877235399 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.967817747 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.861049422 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.986827985 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.885487744 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.856020222 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.867695531 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.872807241 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.896114518 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.899163589 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.973716895 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.875024723 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.96900123 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.901553721 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.87415555 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.866805209 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.86904644 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.985932788 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.98552586 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.902551644 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.905577191 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.900496433 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.864850516 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.868534926 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.857781423 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.886333571 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.872863989 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.987512421 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.986727046 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.87698572 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.86991586 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.869846836 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.870620314 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.894547789 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.995181018 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.903260594 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.967427046 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.937285239 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.944826876 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.881390179 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.882203618 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.872280481 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.935104983 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.884242851 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.880087827 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.205347786 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.941218713 seconds)
  done (took 202.462343222 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.962275318 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.356433081 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.921642211 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.924703083 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.150185826 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.2890635 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.648039966 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.915544924 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.918989859 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.94354759 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.081194026 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.972665571 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.930536524 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.905403588 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.318313811 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.9078306 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.918512107 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.940074424 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.923338381 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.450625707 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.225342487 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.049754996 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.917600967 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.04289354 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.898115648 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.199928838 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.404027357 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.296148877 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.953342519 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.271747434 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.244873729 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.59687514 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.130978285 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.160805483 seconds)
  done (took 74.576874981 seconds)
done (took 830.377030866 seconds)
SAVING RESULT...
DONE!
