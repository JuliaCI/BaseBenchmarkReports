cset: moving following pidspec: 23928
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.321515566 seconds)
loading group "string"... done (took 0.58561358 seconds)
loading group "linalg"... done (took 7.240145706 seconds)
loading group "parallel"... done (took 0.167364574 seconds)
loading group "find"... done (took 1.158616638 seconds)
loading group "tuple"... done (took 2.022453895 seconds)
loading group "dates"... done (took 1.279927534 seconds)
loading group "micro"... done (took 0.239621453 seconds)
loading group "io"... done (took 0.979409848 seconds)
loading group "scalar"... done (took 40.367031607 seconds)
loading group "sparse"... done (took 12.826627496 seconds)
loading group "broadcast"... done (took 0.998794319 seconds)
loading group "union"... done (took 13.679235762 seconds)
loading group "simd"... done (took 4.64809247 seconds)
loading group "random"... done (took 9.356920463 seconds)
loading group "problem"... done (took 1.980309678 seconds)
loading group "array"... done (took 22.226532948 seconds)
loading group "misc"... done (took 1.99629557 seconds)
loading group "sort"... done (took 3.369496165 seconds)
loading group "collection"... done (took 18.91775543 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.549133232 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142177525 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11812198 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.140464255 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.185262192 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13237953 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.14317789 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084545315 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.871113889 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.165215853 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139958841 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.509021042 seconds)
done (took 4.904214108 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.207079543 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089109804 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097280256 seconds)
  done (took 0.855659386 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066157002 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127601083 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.080152998 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068133323 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066671162 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.081183104 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068126797 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066006308 seconds)
  done (took 1.235307791 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074773983 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068409517 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.084531361 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068140509 seconds)
  done (took 0.972148409 seconds)
done (took 4.019874877 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.924204666 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.252132475 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.192306649 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.459566206 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.151255778 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.188513988 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680663709 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.324203219 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.216756018 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102695256 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.105608611 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.385761848 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107474086 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679953174 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075870859 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.108048803 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.16654484 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.420317784 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081584564 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082351036 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.103421504 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140517141 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.100960417 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078268935 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.167825881 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069468003 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.150627054 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.094898265 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068813897 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.245495166 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188795125 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.679986719 seconds)
  done (took 10.509135076 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.0997673 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.119164282 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068943335 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.1409466 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.120285931 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071437143 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071650415 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.083586963 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093092244 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.160773566 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116931433 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.122981037 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067332544 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070000783 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.101435252 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.229488163 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.092422825 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100684963 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072304386 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075380252 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123432249 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096685044 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081186087 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094597168 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.15146583 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.192460001 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.0980943 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.111881833 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069796802 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.096982254 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.128747178 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128932895 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069371051 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083382499 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.156852371 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096055916 seconds)
  done (took 4.546926008 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.089167278 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.173942027 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092902051 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.154006027 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.085675115 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.128764131 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066961589 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100488321 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.250116766 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.085442023 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.484145291 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128765362 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.124088728 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105147175 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067593896 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08632101 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067133856 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.578085096 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.110580788 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.136566046 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101029424 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075223181 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.086774891 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.359257005 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069667155 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066218853 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085458539 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059929758 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.146345707 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067810742 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.242065574 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.10742271 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069352188 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119432215 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.183839084 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097097891 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.12410117 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081937945 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067623057 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.170797573 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073494988 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.083586958 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089642639 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121140678 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120229024 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065577929 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.08409423 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.184097302 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06783212 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081626204 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083555662 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.925147516 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.164167572 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077707954 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066897778 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.293029384 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.101969461 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068024872 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06499273 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.260244099 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.156054368 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067570685 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083982737 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071033302 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.084264662 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065272145 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067034892 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.369554916 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08627806 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076558249 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.748564588 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071969803 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082063367 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074009375 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088148903 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08624925 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066161209 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.085265539 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067269511 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081083803 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070341934 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.100792509 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.208940183 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.071124674 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067017401 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081808896 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085848298 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113475947 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.070980684 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.082312775 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114081369 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070704179 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067714544 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.120518369 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067888197 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.103721239 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.084120612 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114393335 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082165907 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064625588 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.124524336 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081330286 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098629031 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.087892234 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115751729 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.09535878 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074491606 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.156600297 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066146672 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064858196 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084385931 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065405333 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.084334017 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069664144 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097578509 seconds)
  done (took 21.110688143 seconds)
done (took 37.931371212 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.306708617 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.092087429 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.092386983 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.07547709 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093942891 seconds)
  done (took 1.412377708 seconds)
done (took 2.134249644 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.148885839 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102601972 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079916628 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098691253 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080210552 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102277389 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115799602 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.08145328 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11723226 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064034024 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112849474 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065374045 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.079109513 seconds)
  done (took 1.997226697 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082517896 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084670143 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085520439 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081478819 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078599452 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082196405 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079380425 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104672659 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080093028 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087963859 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065092524 seconds)
  done (took 1.627510292 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081278541 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083409146 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085650456 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08058737 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07847791 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081279854 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080762295 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101408652 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080382277 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087690046 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064872403 seconds)
  done (took 1.624217087 seconds)
done (took 5.961497044 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080358419 seconds)
  done (took 0.795519112 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.725235987 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.469218936 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084391311 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.135454023 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.220389061 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.15550225 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.432856215 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.111347662 seconds)
  done (took 10.256706404 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101325631 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.099736627 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071477192 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086999952 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069529229 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086977989 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071999557 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06858843 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084544002 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071764703 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088321212 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072211942 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08407293 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069985462 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087618305 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072013842 seconds)
  done (took 2.072844777 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.105358357 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.103873326 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.09208189 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076705193 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.089123453 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073139643 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092535448 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074792431 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087073445 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073631863 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09102487 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075968523 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088128462 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066974795 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.090891546 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077214985 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087528848 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075666799 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.091449128 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075990676 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091777476 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066081104 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.088843692 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075328646 seconds)
  done (took 2.844421212 seconds)
done (took 16.691250181 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.133952371 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077064494 seconds)
  done (took 0.934897141 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082580217 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.097973362 seconds)
  done (took 0.910163921 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083443016 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081434595 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090276376 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.093507676 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082977816 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067966676 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.103517491 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067507986 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.082060161 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067978361 seconds)
  done (took 1.549983835 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069295558 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093979684 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07169534 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098343301 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075160546 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080284842 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073930167 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084133215 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080120013 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078803307 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071947054 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.098703132 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071893433 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100161941 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.089408081 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069938004 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086496985 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068456094 seconds)
  done (took 2.194243339 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066433765 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068559732 seconds)
  done (took 0.868613934 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067690601 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064266781 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082883692 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067548317 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079344799 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063777481 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079737628 seconds)
  done (took 1.239208464 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.406845769 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.108781158 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.262785845 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072472177 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.105891454 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.2928216 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067450909 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07144943 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.087991425 seconds)
  done (took 2.249570147 seconds)
done (took 10.676679764 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079831311 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086352487 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11168643 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.431096589 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106104073 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06685689 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.143732927 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.211373074 seconds)
done (took 1.968511861 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.127497421 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.621646597 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.407654883 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214141975 seconds)
  done (took 1.976927258 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.382646792 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09135839 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073287129 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06723789 seconds)
  done (took 1.353059109 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066530652 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070750005 seconds)
  done (took 0.877129687 seconds)
done (took 5.069589379 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067801651 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066290826 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.113437037 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064204651 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.084111408 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064191406 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063924568 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083849792 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067250886 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.083814335 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.067711351 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066561906 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079931115 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064967527 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06654338 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.079508564 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064404655 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064440402 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079882007 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067085172 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079026783 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065004005 seconds)
    (23/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067263623 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.082172304 seconds)
  done (took 2.527538185 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085588194 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083045841 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073439008 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088556876 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072364414 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088621096 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074697991 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067453493 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088516646 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069575376 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086370675 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070955313 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.084713307 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071841209 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085017447 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072234443 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087684189 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068042647 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069638101 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087511285 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072272723 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083169198 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071281784 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087644899 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071572843 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086529078 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06931153 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082870561 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073144404 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086377859 seconds)
  done (took 3.100066901 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071141616 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064456537 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080604362 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07109597 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064865702 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081576538 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064360772 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.080525519 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06625525 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064874703 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081708121 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06428298 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065047557 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.081051333 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065808388 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084111555 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082005534 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064419076 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.080696318 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065094226 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.084024557 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064893844 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064551224 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080845579 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065408326 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063938528 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.080676135 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064662066 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.08124316 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065645034 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067025108 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083651838 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06494558 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072300111 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.08355753 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063809168 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068386676 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079802392 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064912853 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.079716826 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064647484 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064826989 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080294653 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071013626 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064297347 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.082939713 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065153438 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.082252738 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065405619 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068036476 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080779967 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064467739 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081395218 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066467632 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069085396 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080303798 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065103681 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064647101 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.080566317 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064930481 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.079703347 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064861278 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067157016 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080957467 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080539221 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.08709464 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065415871 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066909545 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.081636071 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067607411 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066226989 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094181888 seconds)
  done (took 5.959853693 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118117101 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093381466 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083522532 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066471353 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079486346 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065285508 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068312055 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080693385 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067218531 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086763908 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065401852 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082204409 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06732038 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079631858 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08136813 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067087062 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086712403 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063786239 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.065446004 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084597893 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065771797 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084235794 seconds)
  done (took 2.451027974 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.187728045 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087819265 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.111455326 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090847197 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085027508 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074747045 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087012656 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071316645 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071128194 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084734178 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06919562 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087114589 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06924305 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084747668 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068856331 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085788265 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071260755 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085492678 seconds)
  done (took 2.320222422 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07938508 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067261727 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106129009 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066735438 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084096223 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069640673 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089288343 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076266167 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085842926 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068244776 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091631322 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070262167 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.194499648 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067770819 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069911051 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082730317 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069408353 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083281109 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07680639 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088155938 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072470388 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091635255 seconds)
  done (took 2.599060023 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082376 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069226068 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102226251 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085919686 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.0640703 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066312915 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090566261 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067795975 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089824461 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070144037 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083788165 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067316919 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07261173 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.083088108 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072350693 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083767908 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069739057 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083451104 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070595345 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063165525 seconds)
  done (took 2.288850078 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088433904 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08442932 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069299533 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093328348 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068861852 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085289044 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077957379 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.0842337 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069252332 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11040048 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069573774 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085654672 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077736356 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090476414 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069504653 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093514713 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077761689 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093470457 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084394224 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069267493 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109674264 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068669637 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093461417 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069004577 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084184093 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069049313 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084439817 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07445814 seconds)
  done (took 3.0505044 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067384119 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067031848 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081467967 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065812687 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.06534314 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.081463061 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065027169 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064952537 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083688339 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065429744 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082660769 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067390804 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067646067 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.082543676 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067152123 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066991369 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082831602 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065575258 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065075921 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080956525 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066653526 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082746447 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06721668 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064558285 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080288384 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067171986 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065138163 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08099189 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067306177 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06456545 seconds)
  done (took 2.898730289 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076662188 seconds)
    (2/2) benchmarking "in"...
    done (took 0.09074177 seconds)
  done (took 0.922574931 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066267186 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081248756 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081724194 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071655398 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087586245 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068352068 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.09254038 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0721585 seconds)
  done (took 1.373245501 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083019149 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078568758 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.086029389 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.095264307 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079875864 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084023366 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.157288243 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.084895542 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075276609 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082443863 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081426929 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065952027 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090714021 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06704698 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090410797 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073852514 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.081808484 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073869821 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070177672 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.082354082 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069430811 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095020304 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070850131 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.080700257 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069485126 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.076774007 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.096742844 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068483875 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08821525 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075277466 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089246059 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062085496 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068049193 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.084867077 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066172297 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094171298 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083300288 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088593276 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077188586 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08440185 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077939838 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.079661126 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072574484 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073850362 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094123532 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068114389 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084970658 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063171441 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.081829858 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071481617 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062843554 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084058646 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062495322 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090909435 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071388978 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078292205 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.083542375 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068949932 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.086988372 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070813816 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090543273 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069976151 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070133399 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.084108009 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074763529 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.088313568 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077528647 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078665784 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.0621168 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06567944 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.094485769 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090207498 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089635475 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068282588 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084833511 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066209764 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07113179 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085509833 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07366769 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090049284 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067953757 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090062147 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075497433 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084101199 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070541703 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075787128 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.082898212 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06987092 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082699544 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084651528 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.084025433 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066444388 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065304045 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.095692027 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070880539 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.083623279 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066333017 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091867295 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06280244 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068723418 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085340161 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068675919 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095536232 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074018639 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090135848 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.077557929 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.092111408 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068090351 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070884183 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.081240426 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06951103 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083854163 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.075465877 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.062463528 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087406332 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068201679 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.084706606 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076425603 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082306528 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067708676 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075583239 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.089250375 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06718501 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.081139365 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070499161 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083456862 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071205334 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075816655 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.082230971 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063292217 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079166781 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07125738 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067346542 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087716178 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072649309 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086811725 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062808751 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082552984 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071808822 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093465473 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068336357 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069353874 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.090057661 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068937838 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.083765471 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074407664 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069975944 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083342844 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073761481 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.084838503 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062777867 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087208332 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070431702 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067101873 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088647746 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071144258 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.086337392 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069072857 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066876056 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089989888 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068597482 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083470572 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06772638 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083055174 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079089505 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069834835 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.079693913 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06538418 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091545781 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06553622 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067154156 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083613044 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.07032826 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085329077 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065827645 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.0841855 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069856512 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078046616 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089353813 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068654044 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089918689 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079263028 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084114435 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06998516 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084319436 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069249418 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.06900428 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.094078124 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07274521 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089254369 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070163888 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080534152 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073110112 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074705648 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084619063 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065297861 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083636317 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071462406 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.089282308 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071794214 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06865458 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083331776 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068598352 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088169147 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071140189 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066836992 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083247171 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072705948 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083443434 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075485017 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085725697 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078876764 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087402897 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063982731 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070983024 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083255182 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074031354 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079861773 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065645936 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067451481 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085750133 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06703423 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087434904 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062627786 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075297799 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093151606 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067790598 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083778553 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068247617 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090730734 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069734448 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071538861 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087636176 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074280139 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095058831 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067605993 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088012704 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078442898 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068410779 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.079208062 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07386663 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083279935 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067334161 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066809704 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082424474 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070308208 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093282599 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074871389 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.078926646 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071395697 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066828041 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08346786 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063862932 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.089769381 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070561155 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068309582 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091223479 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068434287 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.084957192 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072198082 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084509017 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069121823 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068760599 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088208838 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069197617 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087692565 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067541002 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087715348 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067302879 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065217128 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086343216 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067680313 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067597961 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089893799 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067473745 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085088692 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070496122 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.08538745 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068598089 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067917596 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.084340893 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071261064 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08538946 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06832465 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.070470424 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080313811 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075704592 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084937382 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075562303 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067569337 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081735104 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072798072 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087359439 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073834434 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.08543317 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068999011 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068700469 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084754608 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071017956 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091569734 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066189468 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.096671388 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076931183 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085157626 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07099305 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068616442 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.08702113 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067779049 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085512286 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069920097 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068274838 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085535899 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073740844 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.086826973 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068652702 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069831101 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.085625618 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068807455 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086294785 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063291396 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066970126 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.084878605 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067690851 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095161402 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068530576 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085006416 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067489216 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068259345 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084374749 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065033684 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092798328 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077211188 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086358961 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075479389 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066561331 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087075265 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077743415 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.082077749 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066554614 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082510961 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06561652 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075539817 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085255687 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077342197 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084713888 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067676582 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065759374 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08561988 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067416349 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079836916 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066319121 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071894057 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084221763 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067349335 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.084364372 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.07096308 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068551233 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095237988 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068075393 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086425373 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068657837 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.08196952 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067462544 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066847298 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087766181 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069874994 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065245888 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082405562 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068143318 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086127984 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069374782 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067288694 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086962528 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074977165 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084904513 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07096492 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088414532 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063524338 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070787946 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.086435086 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067923272 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084277579 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072050972 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071079721 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087133419 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077322109 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085569728 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069342056 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085164063 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066151282 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06723356 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085597371 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068180073 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08399554 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069173037 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076304331 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083457241 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070627875 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08569669 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068853141 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092165248 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069330688 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070966144 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092807882 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068674429 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086408346 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076381178 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088940008 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071310875 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086251763 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070034109 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074171683 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084676308 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074381878 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084822552 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069222814 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069581798 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.083295224 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068281582 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084373151 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067748931 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073736736 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.08624929 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067441514 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.084421996 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.066334028 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068726601 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088580956 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075675104 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.087598533 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071961943 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.080032975 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066400625 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069131675 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.082747913 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069416652 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.088152543 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074568035 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070741162 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085964932 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066667804 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094391572 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074078768 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088698014 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067101236 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071595418 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.086559161 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070388103 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086374518 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068580885 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06959671 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089327125 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069348591 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08439228 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075373009 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087966714 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069231803 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069551604 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085786537 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068227514 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063528002 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069502219 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070702524 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0903253 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070429008 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085180755 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07910705 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065510421 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085507651 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072013573 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085626488 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072897368 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080432241 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069379089 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069195499 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087365004 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063291409 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08463149 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066035787 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070845942 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084822625 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.0638834 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09687408 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077164344 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088189625 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06698367 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067319992 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080625137 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064042238 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083731042 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070037017 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069875725 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096294479 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067587328 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08397002 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064711922 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068719816 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08804413 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07151952 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083250403 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063551599 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066660493 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.088476405 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073516803 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08377609 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068031578 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070706532 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088002381 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066092344 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088908594 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066089475 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.088464387 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082504091 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068622807 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08703189 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074142176 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093993185 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069391625 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.080966532 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069967458 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07062196 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086238293 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068906498 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086965105 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084009309 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089123567 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068163126 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083013808 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071072878 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067189271 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093159318 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069101993 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.08615179 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073133366 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069782573 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093967337 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070347494 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09410564 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071581667 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.088535321 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066909431 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085318131 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066302064 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066554441 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.086741157 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069726175 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090776255 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075777423 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084795109 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079255695 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095047748 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070577713 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064859676 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.085067042 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068349199 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062873751 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086600706 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066862279 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.083756516 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.067360026 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066570177 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.086554791 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074199386 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.086812208 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069254988 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.084914721 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062743543 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070430451 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087871773 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070305242 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064835069 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086173439 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069281362 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.089871311 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071834667 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083574232 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.070144939 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069872275 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086448328 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063830975 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092335315 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068062408 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070460202 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.084923568 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069210597 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.086694084 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072545658 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073298802 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087579394 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070578839 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.094658116 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070828736 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.08305981 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065884083 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073575758 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.083957866 seconds)
  done (took 46.797912158 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109689173 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082976013 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064125685 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081822663 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077399823 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082962933 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063836484 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064601298 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082388721 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068185636 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081387437 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064010427 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091107013 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087511613 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094387487 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.085243724 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064381883 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06435381 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081625966 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065525133 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090503409 seconds)
  done (took 2.441737308 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.08736102 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.101686417 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07851244 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099887829 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091513901 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.078535765 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09632422 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079365704 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100655005 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092837174 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082449593 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096161402 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075749689 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.092222444 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075061252 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094570307 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.099146502 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073633473 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.097169394 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079404654 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093756013 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078520868 seconds)
  done (took 2.737636229 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068494243 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067220349 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086444569 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063659254 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06666666 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.08055041 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071272005 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.082971263 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071669395 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066155605 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085494168 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.0664483 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086627762 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.074313603 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067715208 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083397221 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.131518131 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071640566 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085560369 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068858368 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06302645 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.087737213 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063901162 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.081918837 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066410879 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071638083 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086149203 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066485471 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.085156957 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066560783 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067122839 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084130207 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.06925504 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066975575 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085100917 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06702733 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084647807 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067332122 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062578302 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084293474 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068674246 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.081166627 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067786624 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068147193 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084012089 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065802596 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068800118 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.08507648 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063154911 seconds)
  done (took 4.475425555 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08628724 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.140645263 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088718575 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.122559352 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083727503 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.094504648 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071422745 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.123093915 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.084186393 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.067509984 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.102780712 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082630329 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087031484 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073222839 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.088975707 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067707304 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086367467 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066923863 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090099848 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067273314 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.089684984 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074472839 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100587172 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081204107 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089830013 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067412387 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086055779 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.072462163 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098961443 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.090065913 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073176822 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.0907524 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083572147 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091073127 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067644922 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.08709576 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085046974 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086403762 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070763672 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.082636702 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070137773 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089408448 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075293152 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102040394 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068258905 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.090972024 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067941866 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.082150339 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081698127 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087700759 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076243478 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101178284 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072033507 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.0863522 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07231609 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101351804 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085566914 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066566047 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070793789 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099666468 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064588709 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089760749 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.099485254 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.0705545 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.092897117 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082360996 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.091717985 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071972885 seconds)
  done (took 6.684059965 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076787163 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092245098 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082567715 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100740526 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092160832 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075754369 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092143595 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07419612 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092406914 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079388946 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092045332 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116003383 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070078131 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095552828 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074198614 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092587512 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073436403 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093253993 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091552404 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074712539 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092314788 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082663709 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092319386 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100350754 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.104313277 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087974477 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073920475 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092224812 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099774272 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075109 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104120414 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074354143 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092534928 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101318377 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086363238 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092887594 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067277047 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092765764 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074825448 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092716632 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069822815 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101190774 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091946077 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070833795 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092013509 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074743459 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.102044353 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.104719342 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078127728 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098073928 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074669619 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10170971 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093137276 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075218049 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.1016992 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128079092 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085422318 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102635141 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093702115 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085311903 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.102386669 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.109917756 seconds)
  done (took 6.357211926 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090581413 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095930211 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.0985498 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063978464 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065935718 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091197212 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066482418 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.083771616 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077116209 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094619036 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079941286 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089801645 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074791149 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097177929 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089785148 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075951943 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089527622 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071970883 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094689153 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071911756 seconds)
  done (took 2.472302366 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077315236 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103596302 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069285556 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092077977 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.071877396 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07408458 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089592049 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071321728 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086800967 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071235018 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097174109 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078553432 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08771133 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074330575 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097039845 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073661646 seconds)
  done (took 2.12930771 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.080105271 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.096660293 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083414873 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086668169 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066185982 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.083476324 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069122681 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063104788 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083770756 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082123396 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.087533438 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070643728 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087347491 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066670314 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064597358 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091056554 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064258125 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08392921 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067920182 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.101354286 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078447802 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.08567177 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068441235 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088318558 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069474698 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.09226189 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068551246 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065312981 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.08519658 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068493662 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087197233 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075519579 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084080416 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066918608 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.084384184 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066262736 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067312394 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086850775 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070903407 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.086889569 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.066693277 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.085758694 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.068639368 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.06899065 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.082862312 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069033409 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.081889699 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.0748877 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065358327 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.087591862 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067246113 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.088611359 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069606496 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.096322133 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071870715 seconds)
  done (took 5.083141127 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081916794 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070540264 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082756585 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066764139 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08899115 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070471847 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070553784 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089528215 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069579753 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084726245 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069838974 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088317251 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070564526 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070468142 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088749003 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071513198 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081908222 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069630876 seconds)
  done (took 2.202430203 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074211643 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06798234 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094814372 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068537499 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086212704 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071206376 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063893959 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.08533871 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066712737 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086319524 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068463868 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06952978 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085398329 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070333209 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086529911 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068902812 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070001077 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086233898 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068430221 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082455463 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071334735 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065929871 seconds)
  done (took 2.480275844 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073990125 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095112964 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.166168511 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.109077078 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083868361 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.100714794 seconds)
  done (took 1.445454153 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092216557 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100335064 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069086463 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107195205 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07628004 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088722952 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07072117 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087778199 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079299174 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103085252 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069457289 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098739303 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096639205 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081945962 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094423375 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075645163 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088893328 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069286706 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087508398 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106328363 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070601864 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097271524 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07049316 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088663831 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069863718 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09665909 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097221071 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083666516 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088220642 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07882971 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094828551 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069123893 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098175929 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102846294 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07154918 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097137739 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069498721 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106858584 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094113507 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079550113 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089923432 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076696434 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096706165 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074434988 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098115284 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088473139 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075825547 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088108453 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07090485 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112525159 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093744694 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078186682 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094819819 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079478365 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09755215 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11305487 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102034582 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079173234 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093878633 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101818083 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079275584 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094265145 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078736363 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102877479 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094312731 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078087865 seconds)
  done (took 6.618027399 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084676777 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106297151 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07062355 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102922174 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097379381 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071118904 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088040443 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070364252 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088501946 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070726223 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129505666 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070107521 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097264533 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096856312 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071165469 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088971189 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070471277 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097318023 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069446958 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113350019 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087964625 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078436588 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097400135 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096358165 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083678911 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095339045 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069294489 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089315036 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069675653 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089259311 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093629873 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070168615 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096422106 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069332942 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097101553 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071210409 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088638705 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075696175 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088751012 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074288587 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097454503 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107721881 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069678227 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089302809 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102632234 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070293553 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088720761 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07045533 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088035649 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070481024 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10272964 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083479876 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104405853 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096768972 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070020946 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089130764 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069961546 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088363109 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070075707 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094945504 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097438256 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071124239 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113671079 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06904204 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089473863 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097500872 seconds)
  done (took 6.52339566 seconds)
done (took 128.679640554 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.212349048 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186895363 seconds)
  done (took 1.214706842 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070457518 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.116269215 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.079801277 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.152170572 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087543033 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102428423 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119459335 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081550304 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068270439 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087606519 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069084497 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088402566 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.146949373 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06775929 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.087699046 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070962888 seconds)
  done (took 2.318209878 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104820732 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.198734267 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111569192 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067190174 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101118738 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080472222 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087127612 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079381597 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093285069 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068163823 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.098279877 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077715125 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066277129 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096579474 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.091465162 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080689658 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066379164 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098899039 seconds)
  done (took 2.493460574 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109353919 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.144249596 seconds)
  done (took 1.080394211 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.201312302 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124041739 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.205285211 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.435768051 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.22527671 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.276972901 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.175496285 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.175793265 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.158018495 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.170706365 seconds)
  done (took 2.969452511 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100791639 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.173082272 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317425322 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.139788612 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.089934868 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.117537434 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.139810383 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.110180324 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084423143 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.103422334 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.102250504 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07936015 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.118478713 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077290054 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.096147387 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078601799 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.12279183 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075159659 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.098013028 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077254042 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11989699 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067586876 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.096578228 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075997664 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.099724169 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079815715 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.087430177 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068212924 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.095615559 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077332053 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.099481598 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115207368 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081073965 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.133368804 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103660363 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.134726507 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079543061 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093676815 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076664598 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.093876149 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079250438 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.098355289 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104925622 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079889144 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067037261 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.098587102 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067650134 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086452342 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081812344 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.098084827 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080952994 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.100350812 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.133014145 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.098099142 seconds)
  done (took 6.279951642 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.761608959 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.135962634 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073030627 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.824078071 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116471044 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084966352 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.746681483 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095621613 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.233860246 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.756688269 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113376967 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078535507 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206857258 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.216374816 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.930225523 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.289919929 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.639882165 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106155758 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110579997 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.136180165 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.161845522 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.158462991 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.150082727 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.407411751 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.097280181 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073129363 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.139152978 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100347063 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.142331738 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.084437398 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.096954177 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.158666685 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.23055457 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.182846967 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075688806 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092479903 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072434958 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.150390782 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.244940367 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192540224 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.159075849 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070896887 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071139137 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.164720101 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132696399 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070926885 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.144098129 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.155553379 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.171513387 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076844186 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.078034732 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.165444213 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.142312563 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.145656731 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103034646 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.278099285 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.287712376 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.092186586 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123385172 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.086688737 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242331254 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084015546 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.203588148 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13950626 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190090148 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072518569 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753076722 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.151358186 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072088389 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.097456182 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123286167 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077689841 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.141808394 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.14654194 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.372583017 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.144366946 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.096550845 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07212273 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.211919904 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085530391 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.091833283 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.144722829 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.078215426 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124668947 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.147907865 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.169769622 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.15153039 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.216458135 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144567543 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.162327436 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075987303 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126951524 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.097116257 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.194032137 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.175517672 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164187666 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.191773996 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.143658476 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.144819079 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.148626663 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100501623 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.153089369 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121583665 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103408779 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142130873 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.173881069 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.125888028 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.105151185 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075101219 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.162664363 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.128014327 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088747732 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.141425111 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.17098783 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.434566155 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.150378223 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068189109 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.109164219 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.141494009 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.142486488 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099018783 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.214580281 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125503201 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.169822901 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123681196 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070696716 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.124044228 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.144403817 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101967439 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125769883 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.142225315 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078854872 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.216509248 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.194597619 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101861303 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.200147619 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.164370124 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077071092 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173871639 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122407271 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.149106127 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080409783 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139454724 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098512046 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.766925195 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.147086629 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.124495918 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076268738 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.167643431 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070256896 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105781771 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.105341889 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069142892 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755062248 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087218995 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102811426 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084173348 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098157317 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.123529158 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139407267 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074965332 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165070074 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.185721395 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100407696 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122644051 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083607441 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.162613951 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.077744139 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.105557265 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085362355 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.106205686 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126677859 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075215705 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106346033 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.151393206 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.143087681 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.198843098 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.545538543 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093268725 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083329581 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204828238 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092272346 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.244619933 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139471959 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.203798208 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.143787769 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.102970766 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.284222444 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.146430119 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.166839855 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.087616931 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153973858 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090904183 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.139782339 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.145976786 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092531417 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07862831 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.143334894 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.168003968 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.147892963 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.939883691 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072833024 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.205650757 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068853399 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.174303493 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07762696 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100563483 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.249673293 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093737995 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149673172 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.145394639 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095809368 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.08492782 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.69773996 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.084654305 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.162574694 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077978104 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.198901641 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.144743746 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.139204868 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140233777 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100280877 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.143802139 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.189050901 seconds)
  done (took 41.013661926 seconds)
done (took 58.190035962 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.281422715 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.194465315 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.255657429 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.149359635 seconds)
  done (took 1.815727569 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.149185934 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.107213529 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.11943968 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087184707 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.106934234 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087075323 seconds)
  done (took 1.511051403 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.427957187 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279173624 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239050182 seconds)
  done (took 1.796350902 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.301000083 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.232873583 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.455649079 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.302514605 seconds)
  done (took 2.2573903 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.195224461 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.116488366 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.090537773 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08659746 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.16253699 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.263685228 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.130695782 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.194104264 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080013242 seconds)
  done (took 2.222944977 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.204789398 seconds)
done (took 10.660639436 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.110717145 seconds)
    (2/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.145406083 seconds)
    (3/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.204136303 seconds)
    (4/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.078197479 seconds)
    (5/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.102423144 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084266067 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.12871477 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.101021078 seconds)
    (9/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.321913236 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.214310242 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.119699574 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.212762458 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076594847 seconds)
    (14/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.268022511 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.155028599 seconds)
    (16/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.237861592 seconds)
    (17/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.217065149 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.167518604 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.113538345 seconds)
    (20/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.079890338 seconds)
    (21/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.294985343 seconds)
    (22/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.100250479 seconds)
    (23/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.286771058 seconds)
    (24/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.148215201 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.124255322 seconds)
    (26/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.283156168 seconds)
    (27/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.242902798 seconds)
    (28/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.21842758 seconds)
    (29/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.076512489 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.135605547 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092511588 seconds)
    (32/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.096057427 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.251002055 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.075483911 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.128125294 seconds)
    (36/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079909126 seconds)
    (37/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.104026177 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.109357525 seconds)
    (39/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.103529792 seconds)
    (40/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077167214 seconds)
    (41/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.097286024 seconds)
    (42/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.269853387 seconds)
    (43/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.155848598 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.13078116 seconds)
    (45/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.104770671 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074811695 seconds)
    (47/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.064584836 seconds)
    (48/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.094977719 seconds)
    (49/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.0680646 seconds)
    (50/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072458945 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.115746564 seconds)
    (52/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.292873433 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.120007797 seconds)
    (54/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075906979 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.087927558 seconds)
    (56/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053757804 seconds)
    (57/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.176471475 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.078462873 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069110747 seconds)
    (60/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.173894273 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.122574999 seconds)
    (62/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072337475 seconds)
    (63/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.180189526 seconds)
    (64/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.256095039 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067218752 seconds)
    (66/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.054356032 seconds)
    (67/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.088035705 seconds)
    (68/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.228551874 seconds)
    (69/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.116590694 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067739079 seconds)
    (71/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.101508955 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.054489514 seconds)
    (73/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.098736623 seconds)
    (74/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.237641404 seconds)
    (75/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.252876837 seconds)
    (76/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.073986611 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092960001 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.074148274 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.166641208 seconds)
    (80/309) benchmarking ("sort", Int8, false)...
    done (took 0.167215465 seconds)
    (81/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.254628428 seconds)
    (82/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054492807 seconds)
    (83/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.169078256 seconds)
    (84/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.130024649 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.069334131 seconds)
    (86/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.089329283 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.12442293 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.195443767 seconds)
    (89/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.073652815 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.115810089 seconds)
    (91/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.080577816 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.149155618 seconds)
    (93/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.080659386 seconds)
    (94/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.136308707 seconds)
    (95/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.260179392 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068683428 seconds)
    (97/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.140294408 seconds)
    (98/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.241395835 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.151011838 seconds)
    (100/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.166173939 seconds)
    (101/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.168056749 seconds)
    (102/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074754607 seconds)
    (103/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.095572131 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095195399 seconds)
    (105/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.066316317 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.095786806 seconds)
    (107/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06865441 seconds)
    (108/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.096538192 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075634285 seconds)
    (110/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083427551 seconds)
    (111/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.096648233 seconds)
    (112/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.053232261 seconds)
    (113/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.270455146 seconds)
    (114/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067955173 seconds)
    (115/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.109613192 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.069228774 seconds)
    (117/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096075519 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.149426227 seconds)
    (119/309) benchmarking ("sort", Float64, false)...
    done (took 0.153989804 seconds)
    (120/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.110210402 seconds)
    (121/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.075820741 seconds)
    (122/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.108474946 seconds)
    (123/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.091544015 seconds)
    (124/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.078620443 seconds)
    (125/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053759399 seconds)
    (126/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.245093492 seconds)
    (127/309) benchmarking ("sort", Float32, false)...
    done (took 0.152413022 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.107941525 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.160979324 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.09741099 seconds)
    (131/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07603762 seconds)
    (132/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053833727 seconds)
    (133/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.116150586 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094684368 seconds)
    (135/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.252939567 seconds)
    (136/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.075780383 seconds)
    (137/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.077613359 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072835039 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118311088 seconds)
    (140/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.069759707 seconds)
    (141/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.076015499 seconds)
    (142/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.116864661 seconds)
    (143/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.076514213 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.075584286 seconds)
    (145/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.312929461 seconds)
    (146/309) benchmarking ("sort", BigInt, false)...
    done (took 0.210781052 seconds)
    (147/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.110719091 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.089016023 seconds)
    (149/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.054286977 seconds)
    (150/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.07224124 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.088349875 seconds)
    (152/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072936238 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075418024 seconds)
    (154/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.074818312 seconds)
    (155/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.05307973 seconds)
    (156/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082306197 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.1213404 seconds)
    (158/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.108992705 seconds)
    (159/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.258053138 seconds)
    (160/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053185621 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.098446268 seconds)
    (162/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055935056 seconds)
    (163/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.075018845 seconds)
    (164/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.116644133 seconds)
    (165/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.065151612 seconds)
    (166/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.091244529 seconds)
    (167/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.238547034 seconds)
    (168/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.05437407 seconds)
    (169/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.159636049 seconds)
    (170/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.26918423 seconds)
    (171/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.053920528 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.139772019 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.093369651 seconds)
    (174/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.09751006 seconds)
    (175/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068891924 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073182323 seconds)
    (177/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.077933353 seconds)
    (178/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074442916 seconds)
    (179/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.053079799 seconds)
    (180/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.099251461 seconds)
    (181/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073728557 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.11629221 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149005452 seconds)
    (184/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.07618453 seconds)
    (185/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.219294042 seconds)
    (186/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.11568105 seconds)
    (187/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067926937 seconds)
    (188/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.075015387 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067393919 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.053795379 seconds)
    (191/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.090462774 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.078900848 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.133975296 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067712136 seconds)
    (195/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069339514 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.100164588 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098176088 seconds)
    (198/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052611794 seconds)
    (199/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.074747774 seconds)
    (200/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.053141986 seconds)
    (201/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054129127 seconds)
    (202/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.074962469 seconds)
    (203/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07602628 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067539561 seconds)
    (205/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098064513 seconds)
    (206/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071405265 seconds)
    (207/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066436236 seconds)
    (208/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.193141688 seconds)
    (209/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053640501 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.090390938 seconds)
    (211/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080194968 seconds)
    (212/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.075168365 seconds)
    (213/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.103749923 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.147183007 seconds)
    (215/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074115931 seconds)
    (216/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053120505 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089397346 seconds)
    (218/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075410372 seconds)
    (219/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.052830171 seconds)
    (220/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.123984259 seconds)
    (221/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.053348227 seconds)
    (222/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103055057 seconds)
    (223/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070666803 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.157197741 seconds)
    (225/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.111049304 seconds)
    (226/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.052877241 seconds)
    (227/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.084433351 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066314731 seconds)
    (229/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.063203446 seconds)
    (230/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.095793806 seconds)
    (231/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070625728 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.16426354 seconds)
    (233/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054765022 seconds)
    (234/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078237934 seconds)
    (235/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.085905262 seconds)
    (236/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.054384331 seconds)
    (237/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.053106864 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.127764792 seconds)
    (239/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.068378776 seconds)
    (240/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.194767493 seconds)
    (241/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070932698 seconds)
    (242/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.079386541 seconds)
    (243/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072748288 seconds)
    (244/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.141043804 seconds)
    (245/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05321958 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067715614 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.115214408 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067561568 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.108497863 seconds)
    (250/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.175398356 seconds)
    (251/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.100651302 seconds)
    (252/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.05451892 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.110260237 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074167135 seconds)
    (255/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.108699792 seconds)
    (256/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.076756836 seconds)
    (257/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069351918 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066629567 seconds)
    (259/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.116242373 seconds)
    (260/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068111235 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.099070627 seconds)
    (262/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.242605198 seconds)
    (263/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079679711 seconds)
    (264/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.070189655 seconds)
    (265/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.093255914 seconds)
    (266/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.053904907 seconds)
    (267/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115085377 seconds)
    (268/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.203385493 seconds)
    (269/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.054107433 seconds)
    (270/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.071972115 seconds)
    (271/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.053697379 seconds)
    (272/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.07543677 seconds)
    (273/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054488253 seconds)
    (274/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082598923 seconds)
    (275/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.090092907 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.1929616 seconds)
    (277/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054005252 seconds)
    (278/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.053553002 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.097627188 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090206296 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.138288562 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066962735 seconds)
    (283/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053848038 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.090747389 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.161142898 seconds)
    (286/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053762353 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066946481 seconds)
    (288/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063556543 seconds)
    (289/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.090942729 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07624622 seconds)
    (291/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103733722 seconds)
    (292/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066707878 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.088130998 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074159885 seconds)
    (295/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068450888 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.10900861 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.118640717 seconds)
    (298/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.07576296 seconds)
    (299/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068103895 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069023392 seconds)
    (301/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.076893779 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074377607 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067212314 seconds)
    (304/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.099924545 seconds)
    (305/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076984252 seconds)
    (306/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097640445 seconds)
    (307/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069973492 seconds)
    (308/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074797097 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.205135155 seconds)
  done (took 35.477305812 seconds)
done (took 36.339460622 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085584678 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.118164607 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077703729 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.117568532 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083496292 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.102714158 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07485606 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103289978 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08384019 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.106759262 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081929301 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056070258 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099760673 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.077915135 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099208211 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095793115 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.102765997 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075299286 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.097727008 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067583898 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076573252 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089793001 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069831682 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056369914 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.102511217 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074878885 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.097158895 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077545577 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067085843 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.090008849 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071059777 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.096861302 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067493481 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081306343 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096574918 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076029295 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.099637492 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078986399 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06868517 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089603809 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076173474 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.089515326 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075493524 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075518412 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.096103472 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074248041 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.096718636 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082238044 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118059268 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07019732 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076537325 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.101198058 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079022941 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.097260044 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072407533 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.097493041 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073819646 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094819928 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.099395208 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070414597 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.097766859 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078002175 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073184954 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.098923527 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075718704 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.099915783 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07923278 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095136607 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078347375 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073504565 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.090013926 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076484727 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.092509735 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068194334 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078147731 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.100461894 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066664707 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072995819 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.096889073 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074278637 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.088750164 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070040147 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069931178 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.095329959 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070299271 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056862881 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.093585233 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07426113 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067183174 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.098546996 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074269958 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.096239911 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070193777 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07925648 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.09035201 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073250167 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.089988337 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068237736 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070553484 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.094347478 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067761435 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070419855 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.098733596 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070327101 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.095543902 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082281969 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067350881 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.096637781 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067329601 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.088403248 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084768722 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077972356 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.089956416 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070698679 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088295976 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07606141 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067283266 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.09003452 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067474982 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06802951 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.096252027 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06829288 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069548901 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.097222007 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.081899157 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.092098232 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071118256 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069781812 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.090362366 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073784169 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.089348732 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068386785 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.070361996 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.087134294 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069877383 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068281859 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.097383547 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070051623 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098067853 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069801062 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076928698 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.094522228 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07367105 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073368483 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.089185951 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060930373 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069985167 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092083866 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069753441 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089555968 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070813259 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067794321 seconds)
done (took 13.437826774 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070556771 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.175376515 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.128807283 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100172739 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.113523457 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06904353 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.102268363 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.13186471 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070394947 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.131164837 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090150189 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.110800438 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.141412597 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067907557 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068338841 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.094719746 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069700048 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.11509765 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.105480796 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.112221783 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.145544309 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067396201 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.124752818 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092989323 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.11456584 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.129272945 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068948117 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072210288 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.094014814 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.11907572 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089563636 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071789238 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.091666025 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.103350341 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120618037 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.111962875 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068016332 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.109893001 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069293736 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068134866 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.117868386 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.126672376 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.083593866 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.107112817 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072009027 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.093057806 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070224579 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.112440424 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094699083 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.105938202 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.113782193 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.137995526 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072829158 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.108334395 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068274171 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.112983454 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.086090327 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.093065514 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069535183 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.070681553 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.089810224 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071929741 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.115403781 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.096073672 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.094659421 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084978805 seconds)
  done (took 7.380849845 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086861417 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118103566 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087025309 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109775102 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068814067 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068890106 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091888119 seconds)
  done (took 1.548512243 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070644466 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09099267 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114985424 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09260963 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.111338859 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.090614574 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10275102 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068957528 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.10957017 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069558156 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.112945551 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.107872368 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.093547221 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076685867 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.116751952 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06920916 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093622459 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091614718 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072585575 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115576869 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071889895 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.112991827 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071542789 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068796763 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.107078416 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069177972 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140666445 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073363267 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093485157 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072098724 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067373232 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.142465737 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106879883 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080140785 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09196183 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08439943 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.107035388 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068211128 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086392014 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097555789 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084093699 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.092544056 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070456019 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067296576 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.096651271 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.080778021 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.092752841 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070717005 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071389043 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.112665626 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.069727919 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.106035859 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070250204 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073329408 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.094456547 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074720481 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.101918412 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.071102697 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089973955 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094014506 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086484117 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.109032225 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083643757 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.109211709 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072376733 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.106315755 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084442642 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072056833 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094436651 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.073154675 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.109649587 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06784245 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070615248 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.104294196 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070851128 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.116165145 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093431188 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093781452 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080001394 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069811696 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.092979305 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069558689 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.116537683 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073138903 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069647963 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.097028971 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072567611 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.089596011 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068247216 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072295257 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.090804711 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070969654 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072074449 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.093073348 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072299322 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.109755019 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.071284984 seconds)
  done (took 9.461008238 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072103302 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.07053117 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094074847 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070158414 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070548364 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093155599 seconds)
  done (took 1.402730212 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.103272826 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.095370505 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084430456 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.098096102 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.110979695 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107221164 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085285559 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109364148 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088194179 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.106393079 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084789644 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.108485181 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091316415 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.099361878 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.084327644 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.0982 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084801958 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103554013 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08222505 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099439522 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090738179 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.099277277 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076183266 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.10967543 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073276745 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098399042 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.08034728 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.106102346 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.081987806 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.108402896 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077302571 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07340321 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097623666 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.108701317 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085563865 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.097812578 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075431731 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073966204 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.103129222 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072990945 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.108419469 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075864427 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.104173178 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074236097 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.109220454 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073731323 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.098363335 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079097106 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.107561733 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073799794 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.096883353 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075027815 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095752203 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.074043632 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07416552 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.109532508 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.073379738 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.108488237 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076183359 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097415596 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.072831707 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.096216607 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.084556392 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.096273545 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084126216 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096876452 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07499386 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.099222419 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076255587 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.098596825 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075372887 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072480904 seconds)
  done (took 7.46162396 seconds)
done (took 28.170479395 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.652994569 seconds)
  done (took 1.580037326 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.807545666 seconds)
  done (took 1.736809665 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.941294285 seconds)
  done (took 16.874047766 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.640638662 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.810790106 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.817291411 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158826305 seconds)
  done (took 3.357448847 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.883058053 seconds)
  done (took 1.831250129 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.245347661 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.253825698 seconds)
  done (took 1.433488039 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.726597291 seconds)
  done (took 1.664902375 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.261865178 seconds)
  done (took 2.196143488 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.342216446 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.187924122 seconds)
  done (took 1.472829407 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.527783963 seconds)
  done (took 1.46535475 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.520362609 seconds)
  done (took 7.466198572 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.235849141 seconds)
  done (took 1.193656903 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.274877551 seconds)
  done (took 1.220275198 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.238435882 seconds)
  done (took 4.178774364 seconds)
done (took 48.607641886 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082748782 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083774219 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107176265 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080747362 seconds)
  done (took 1.293889419 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082409551 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.076041538 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.103710966 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075320249 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.104259382 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075914031 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.101314681 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.0808756 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.098809145 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.076914635 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075489742 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.098889473 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.078847886 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.10019739 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073184962 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077514493 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.102703432 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075367011 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.10208204 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075766047 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.096218432 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.077614215 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.10187119 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074937918 seconds)
  done (took 3.037462769 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082210824 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075307451 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.100648271 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074518336 seconds)
  done (took 1.285286898 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08143028 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.119012129 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092176291 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.103133258 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.095117602 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.113958895 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072550827 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071229473 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.097826922 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079044209 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093069538 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.103519339 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113875601 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079722764 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104618698 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068873745 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071082643 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.114410823 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079180432 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103595616 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072434694 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.102367067 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.070786628 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.116839097 seconds)
  done (took 3.172244772 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.081474444 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128115609 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082068485 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.116275444 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09480693 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067871592 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.103399708 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093285897 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.154191147 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067378087 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.097787522 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068631719 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.097843688 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069395613 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078843557 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.136527477 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.140033465 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071848037 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.12328193 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06838473 seconds)
  done (took 2.891382705 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078784627 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071570743 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.09203993 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.071665988 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077823947 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098692586 seconds)
  done (took 1.449224342 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071744837 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069110452 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092075437 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069459358 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073596206 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092868751 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068255635 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068467331 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092847667 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068537133 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092186611 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068231795 seconds)
  done (took 1.881928318 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.464240108 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070788512 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.094813748 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068394838 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073314205 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092344676 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083216485 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070333397 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.118074632 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068795457 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.092939407 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.0711136 seconds)
  done (took 2.328708723 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269867451 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079764604 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.333676956 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17058485 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141098279 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160818866 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107389353 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14335984 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.202367424 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140997449 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232705919 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203847009 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137010278 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170383808 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11604502 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.135446313 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19003755 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224534522 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132208424 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23154573 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18772048 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15886278 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210184056 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105833105 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137527883 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148590974 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.098367273 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082630776 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236612802 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188258207 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181883731 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140293811 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122085134 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239689801 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223854114 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174078 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164428746 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112881313 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.159037037 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.171233955 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266748243 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116004079 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199880303 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137476348 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108473582 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177856094 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150719654 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.149265129 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.139937196 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1175126 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180011086 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244430942 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.170576617 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11552623 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13886559 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143739185 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.146064902 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106751408 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.276549071 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200371908 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186741274 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.074352002 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125148337 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192979994 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164052387 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.145211456 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182354932 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09830242 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198918881 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194224123 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148618914 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204310114 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.164284827 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118042812 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151504207 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175994415 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159606188 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235905475 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158725643 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.10010754 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155386777 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129477231 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085523554 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.173866764 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07812448 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241593747 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127419217 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.144286324 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141850057 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114286379 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139649648 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225655428 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207999149 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10860622 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.093288701 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132860847 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154224193 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180197266 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115746508 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138083713 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151305273 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082317816 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19653187 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079328156 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155648253 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.106900759 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156313027 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165724789 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07793381 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181405172 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106961924 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.131314488 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168689988 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226466438 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118108047 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086453348 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232775715 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15830946 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135585145 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180038472 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.221392511 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.130147016 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105527684 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207465615 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250226592 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118233967 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203530491 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13376088 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112324196 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.09149265 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18311282 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144235836 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.127598712 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110622941 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.157619533 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232706484 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.077496729 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124844287 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16921729 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110058723 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108602297 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144169389 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104652092 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.122909958 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.129723909 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.136231243 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173466454 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158522234 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137569903 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157374277 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128251716 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227049044 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117207744 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.109105903 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133565804 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097517353 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.169213177 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221093248 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084031416 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232009106 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.158191923 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134524404 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151797306 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086722862 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200196069 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083100304 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073007557 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203685512 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141481425 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140986581 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.189901325 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132968044 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.160322387 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.155254589 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188943215 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165656194 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166008127 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137158136 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089613157 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142378285 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183863116 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076757278 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123404738 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.086170745 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133038685 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124519308 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110119676 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177267495 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1588533 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126705958 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144252319 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1257931 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.186593263 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079417637 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190480426 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.151493853 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098054158 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.217081988 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220488287 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169913112 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130396058 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180360906 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.098973832 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077317642 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.118075175 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16148674 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112159796 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087476622 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148482674 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210714396 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162071821 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170323597 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14101937 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154005413 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.219528136 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074733789 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.146155365 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186099547 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156977766 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.158825449 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094499375 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.127261438 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.207266026 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109080879 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280673743 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149476346 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159279226 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188548912 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.133742336 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113135766 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10870288 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198402358 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135393542 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187270961 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129819363 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117958071 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141926312 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.084166375 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134738287 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160344473 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150719322 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19626432 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148917313 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16534834 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106073008 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14878312 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156306185 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153709169 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066716156 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151045556 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226954156 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125148152 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150458818 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217770642 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083171079 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.15568552 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246019051 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206693998 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090099332 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139246201 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154416069 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162663633 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150865346 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.200760741 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140738808 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169783061 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140928086 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089431931 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116866575 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127536638 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113120219 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.125754152 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.143049329 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.148143702 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.123643146 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163700658 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142558769 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141725031 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150218855 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.12744349 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.094970896 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127951581 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242432179 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15384558 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242584648 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.129519697 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.187859515 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234553337 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077752962 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108830951 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.10860199 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177194896 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087311864 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19329712 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.099910768 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135012041 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159424785 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20347728 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099695885 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.096469742 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115366356 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192954911 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141505159 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103518801 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137570257 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228882522 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.133861195 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083125433 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157850406 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134526443 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132946938 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243984061 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064441334 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126269768 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078706225 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109735061 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165012104 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221898114 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.086738837 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.15770639 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15319414 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155095012 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163538726 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130359285 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125967925 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117968679 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210479598 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162076015 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.12010271 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145633557 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165090301 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221176345 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137209344 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100086748 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235239291 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218046209 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.229262569 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.09225478 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147980469 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148060361 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142594952 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203477421 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086911649 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235331352 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111246885 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172023009 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134012038 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122293505 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162084636 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.12547182 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092849541 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211206182 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152663587 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085606622 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109442814 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162747125 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155506915 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133624232 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07714386 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199946037 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075051513 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197321653 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207312984 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110818256 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136070116 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100317948 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111012623 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137954414 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134808943 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115901578 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.123714101 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239294361 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.1204061 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188212908 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202800433 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146800125 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172254287 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130550643 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.667555849 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.106987362 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193412325 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149805136 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243220909 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128842778 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150653541 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141742687 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154677073 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203385188 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13667788 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182585771 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191173458 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.154262681 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082392894 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134267558 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142490841 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.119081434 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13782185 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147676937 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147212451 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.129685848 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.153812304 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161896845 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.109897162 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10157005 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223447127 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151581966 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178695642 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202380374 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08995637 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151755827 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204219679 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082959091 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.17978311 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195463885 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139242608 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130719336 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.109077891 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.111916348 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235661497 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.101511967 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198999293 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181906089 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11596165 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14667239 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.179067079 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168550345 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137259903 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157565088 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126015048 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.145019677 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1481745 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114213014 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081779456 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136760893 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14469193 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.128788099 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132287677 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.12321206 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216271912 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074967291 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125388836 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132245553 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180677297 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247123942 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.118409829 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087188057 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149716388 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145264481 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.147040827 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158923188 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.110579907 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110857423 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.086962406 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.138081169 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.116900338 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146651211 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133809045 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142479064 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233833794 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087184842 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.255960921 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125281992 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13964652 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073320688 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.108647949 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100437996 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125895579 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13517873 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127366834 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211115195 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.12675943 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.120124069 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121585879 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.077109316 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085998095 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189791492 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141731454 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154198849 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127376139 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066943486 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138808623 seconds)
  done (took 73.219858573 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.137264019 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.106152703 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.12050083 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.175872973 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150421929 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.242438307 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.18428391 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.22673315 seconds)
  done (took 2.37191659 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07343554 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.12101433 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104443771 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.11871882 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091566845 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071727533 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.30385878 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.112992485 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.092704374 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.093397375 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.121735284 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093627694 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.479335537 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.068079604 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.095841176 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.086720602 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069920038 seconds)
  done (took 3.216850195 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.445134518 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.637467004 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.448301151 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.099352864 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.881894957 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112250137 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.321627386 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.164058769 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09307082 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.425144061 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.735447493 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.150973321 seconds)
  done (took 17.544792041 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077954445 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071651717 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.112533684 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085969065 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100982647 seconds)
  done (took 1.476758556 seconds)
done (took 116.110284698 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083845275 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.377474168 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055546212 seconds)
  done (took 1.495598243 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087551761 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087371079 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.114703691 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.086356008 seconds)
  done (took 1.413858003 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078251332 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077993937 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.114268119 seconds)
  done (took 1.304456974 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.296281503 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.170244878 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091701332 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087278266 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079686764 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106465148 seconds)
  done (took 1.308510899 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078022307 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077514487 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101957437 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078776547 seconds)
  done (took 1.362526573 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081134237 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054986841 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057601799 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.084282861 seconds)
  done (took 1.312071143 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094218338 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.10807473 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083556018 seconds)
  done (took 1.31719592 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.11357028 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.115545778 seconds)
  done (took 1.264379309 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085788601 seconds)
  done (took 1.115055182 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096768597 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.144931422 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.163164898 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.141349242 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.17327531 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.14072801 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.116494052 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090724995 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.107229563 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.119428545 seconds)
  done (took 2.329127404 seconds)
done (took 15.887636892 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.0826859 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.392754469 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364183963 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121098467 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.675434764 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.385696942 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.021280452 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12217906 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110927789 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.097271843 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087257998 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.678818697 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.975826453 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.320720623 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.988303427 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326838971 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678850699 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071160368 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.095180298 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071034921 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.006067244 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09607037 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069834944 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09674524 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652943219 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37330867 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097335908 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327181291 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096242733 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072961907 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357158039 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096909157 seconds)
  done (took 16.034173945 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074808478 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.147489194 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077511291 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085966073 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100308257 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072545142 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.101026752 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07215478 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.151637052 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070433505 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114595076 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070600969 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101115112 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071322493 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089130441 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09742142 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071234624 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097407339 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071596582 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070359028 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.116646348 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070209915 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096820921 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072007331 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070396653 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109549912 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071289549 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.096249943 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072056764 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072006641 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099563158 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07090944 seconds)
  done (took 3.860079774 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118109133 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.155798048 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077066483 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.131833718 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.14193488 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073410494 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.173056784 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096511253 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154542378 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070636739 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1137307 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070604424 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.131199912 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070809814 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.117338433 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07057996 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097539875 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071206338 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07012644 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.097448104 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090039544 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.0961759 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071574674 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070609746 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.097435001 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083788454 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.097184158 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073520877 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070596934 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098329582 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073597976 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.097623242 seconds)
  done (took 4.166076847 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076282341 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077762756 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.112031981 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086337265 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098062677 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074651904 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074378443 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.09881575 seconds)
  done (took 1.736299681 seconds)
done (took 26.824905 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082160614 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07207414 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.102676665 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08371794 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101191749 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082320914 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069689257 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103515993 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07770054 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.100883834 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.078575406 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069511151 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.100017834 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.069924359 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075995163 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.096691072 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082241793 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100076519 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082029723 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.108544292 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072715127 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077414711 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103084014 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082713691 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.108666593 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083018317 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.108176662 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077175971 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071493419 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099620968 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.079249354 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.11392375 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07125871 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081702808 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.098096295 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069491141 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.0960161 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071128766 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.082130755 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.103762668 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.073499949 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.103914668 seconds)
  done (took 4.699210568 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092983137 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094588864 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.115991128 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.064574082 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097427189 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064407051 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.118776909 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06283485 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064777303 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.119046775 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.058466766 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059975614 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.088558604 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057161551 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.05946716 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058918247 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.089424251 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058453535 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059375038 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.087268224 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.063423612 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.055821006 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08915734 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062838047 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05821071 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.063727858 seconds)
  done (took 3.009960465 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078992519 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084182268 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.11749298 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13109481 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135690485 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077415723 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.107733458 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088533181 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114341366 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069436535 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.099479962 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.099792131 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088228469 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.104477463 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069513619 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.112807832 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084971075 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071127772 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.103769293 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090777956 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.113546824 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080653722 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.118100191 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.082075839 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069610385 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099493439 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073508096 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.11058618 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075479212 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079134429 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.101462634 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073258421 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098471116 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081800291 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.100967977 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072240471 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089870189 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.108041334 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078069419 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.097727206 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074604351 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070618034 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.118545188 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.115379657 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09703688 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077370668 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.104272725 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081062484 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070115292 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115199062 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079920077 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.096498427 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07495572 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06884556 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096970055 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084228599 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.098527643 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073049489 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079262544 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099874851 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083126056 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074336537 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112562961 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069117487 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.105158744 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069446405 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.097186325 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069554984 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092260469 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.098589877 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111527901 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.098358083 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071308089 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.106111101 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078058315 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076155352 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.097387604 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085204999 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.106135898 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075121708 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078940327 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.10070827 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.073149812 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.115152368 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073417884 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071759751 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.098810779 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07654577 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071770464 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.098378688 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08404174 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.097613973 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073694954 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.113817954 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.07048519 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07157675 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.103681608 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075132472 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.096058741 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083708723 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074607188 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.098122349 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079039948 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.0964972 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074458367 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079212281 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.101740379 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068154302 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.101304443 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.076989374 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070487932 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.098448236 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072481683 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.098452866 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080155862 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076265576 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.101740443 seconds)
  done (took 11.519855066 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.198087988 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.196799543 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072532768 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.181971105 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078153673 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.11070089 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.182722032 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099145375 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.098056669 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070165196 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.098516648 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109700325 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.1309881 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.145617308 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082361754 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070140727 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.116697561 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.109791789 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.18465527 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.17880802 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.118548926 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078774909 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.100192107 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072306751 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07160884 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.107810173 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086217806 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105519641 seconds)
  done (took 4.311624306 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085044944 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.126244592 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076171605 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.087867188 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.121822588 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069749456 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102527115 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071669206 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109447654 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083319728 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097426254 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.076837248 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077581269 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106255014 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071172758 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107045506 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080305887 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07200632 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.101781764 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074857966 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.104831451 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.083972509 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.101709421 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070334575 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076732944 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097439369 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068633026 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.117301756 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070391864 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117298301 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069095518 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103890879 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081247763 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.0706288 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.099110097 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073304101 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073107425 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100376828 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072200147 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.096144064 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06989565 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060545066 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.096903898 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084428446 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.104381939 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062955476 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076457526 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.104811321 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075712096 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067253764 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100530523 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072727236 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.1015568 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077943233 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074483877 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.103667181 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07343967 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.068541814 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.104893072 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072375202 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066341475 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.096739058 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075280067 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.097827397 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.077894741 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075328973 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.096836616 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072150449 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.10214872 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.076647044 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072133198 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.101271894 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068378446 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072059275 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102407314 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074472934 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.100858011 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069542505 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069500727 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.098393322 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.057858965 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.07051315 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.083948883 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074396195 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068161879 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.096572546 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072648238 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.10638238 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084418658 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.100358431 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077873186 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071751321 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.097804318 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07349168 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065190599 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.101131067 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085044049 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.115864381 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070542574 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.097425051 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084451006 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.102497101 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070544444 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.058922077 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.105719912 seconds)
  done (took 10.019581207 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096003801 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.122050214 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073330288 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083777565 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124400944 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095394198 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.106477908 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076239301 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07105465 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.115829743 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070338239 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.105960004 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075274882 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078786564 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.122923502 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077766522 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.100410379 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079834001 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.078010688 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.134714056 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083417552 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.11244244 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080722988 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.098935652 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075374203 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082375937 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.126852849 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080650654 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108095669 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.084582143 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108095709 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.098104125 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.085094475 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.102879409 seconds)
  done (took 4.279448163 seconds)
done (took 38.876495232 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.13896824 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.332833676 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.115120553 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.986897656 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.164221159 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.135565266 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.125400094 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.115060349 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.28337998 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.117445891 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.359935551 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.732568529 seconds)
done (took 58.667595718 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.115981467 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.254229451 seconds)
    (2/2) benchmarking "String"...
    done (took 1.385232929 seconds)
  done (took 3.698010441 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.461392209 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.090755673 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.400062397 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.12494447 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.116380162 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.563558613 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.661496584 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.953047265 seconds)
  done (took 26.969093754 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.120081438 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.462933767 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.390490921 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.398595688 seconds)
  done (took 17.433536236 seconds)
done (took 57.737826666 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.103156435 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.164982161 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.120111153 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.100594253 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.219670869 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.137381912 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.449467606 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.130135731 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.122758032 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.104325551 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.13379898 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.12717623 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.132234511 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.38554855 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.11754557 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.115675279 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.138308992 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.615639059 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.495950751 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.14088591 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.13950978 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.162825425 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.116561812 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.117276843 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.154664064 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.116829042 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.11670062 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.11889705 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.293966606 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.122798602 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.203156671 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.62551407 seconds)
  done (took 187.403450344 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.116156175 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.112842746 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.213569138 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.146900606 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.570737156 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.317701284 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.257606908 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.640771353 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.131263627 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.125322831 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.375707821 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.119112776 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.447379253 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.143679831 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.125915613 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.226615911 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.41274475 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.42590719 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.131937579 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.395655848 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.139359315 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.382449351 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.287658219 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.323215261 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.163596428 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.200976894 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.132722223 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.149043742 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.309292583 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.342323104 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.125726167 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.153827846 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.677244334 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.977152102 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.144397298 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.134837568 seconds)
  done (took 147.142319805 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.39320473 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.119959866 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.117625041 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.118778049 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.148440969 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.121018258 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.637547087 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.638650465 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.624925504 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.344139181 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.178897877 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.345915531 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.118403041 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.118974109 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.210968166 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.130835787 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.119384283 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.134892513 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.145139084 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.120436626 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.118307359 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.640130229 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.131443621 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.247161641 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.124378603 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.119827217 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.148089176 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.513578854 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.119391528 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.148281122 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.433857018 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.162772567 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.119215691 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.401354191 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.508672888 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.227306576 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.121852381 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.149857418 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.122987054 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.390037808 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.121600913 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.122461336 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.123826539 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.683812958 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.121033763 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.120285185 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.643473677 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.00192553 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.120532243 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.121852204 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.120901249 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.561843946 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.553395914 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.12143812 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.12025675 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.122921934 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.121440977 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.12114632 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.151124611 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.57701073 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.218507939 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.122216174 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.126082335 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.149814012 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.122057949 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.121883952 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.121836662 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.213585598 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.176681376 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.227400483 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.503071401 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.645669159 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.122924354 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.214209294 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237421444 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.121392026 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.121967177 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.122222901 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.122733035 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.227187686 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.122266405 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.507880544 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.126734029 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.124022703 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.180609349 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.215891095 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.120025827 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.416867552 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.121838311 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.122889677 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.79451496 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.214545145 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.121744285 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.122442304 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.121393705 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.511650149 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.643736491 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.300792991 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.123540317 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.123323078 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.476336388 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.123974235 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.5224027 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.626699549 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.709073567 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.122966287 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229217884 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.125088328 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.124304452 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.123554034 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.149746941 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.123733282 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.18293485 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.122103438 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.521450949 seconds)
  done (took 335.72465472 seconds)
done (took 672.722818093 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.74265174 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.732736104 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.834362961 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.729059176 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.711158095 seconds)
  done (took 9.816412961 seconds)
done (took 10.881362076 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.303568417 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.305879317 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.182052108 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.30468867 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.150938705 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.321467369 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.282975151 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.145737351 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.22198588 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.199078642 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.226905216 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.171020961 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.150682971 seconds)
  done (took 17.03301242 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.443444301 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.427042648 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.189521277 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.427647982 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.164688479 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.437123725 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.319355049 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.330797294 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.337877656 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.139655077 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.140109758 seconds)
  done (took 15.426321662 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.433108396 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.426945726 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.190389732 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.430810552 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.164102998 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.430036003 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.321538639 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.332525382 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.318740591 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.142398557 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.13808874 seconds)
  done (took 15.397497476 seconds)
done (took 48.921263923 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.134433976 seconds)
  done (took 2.200087271 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.166401262 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.327122125 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.148022515 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.138554432 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.13522916 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.13609932 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.142149297 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.13569895 seconds)
  done (took 10.3985325 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.131978628 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.134296546 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.13339065 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.132332941 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.131720858 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.132911769 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.135121197 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.13113634 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.133316008 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.134142523 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.134674439 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.134925501 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.131998961 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.131068172 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.134730541 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.135148825 seconds)
  done (took 19.204119079 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.13538044 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.133039062 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.131505565 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.133365936 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.132652239 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.133275821 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.134950242 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.133235516 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.133349772 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.132123181 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.133566625 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.132635524 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.132442351 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.131183816 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.132262404 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.132466708 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.133415609 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.132359041 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.135797758 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.133040736 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.133911163 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.133031286 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.132650691 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.132059135 seconds)
  done (took 28.265461854 seconds)
done (took 61.134766709 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.103234297 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.750439133 seconds)
  done (took 8.923037727 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.135452513 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.135275881 seconds)
  done (took 3.342279456 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.135918665 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.136503621 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.136184686 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.135891007 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.138011238 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.137188854 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.13614288 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.136356567 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.134872399 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.135380025 seconds)
  done (took 12.433292905 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.134926691 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.137723305 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.133756017 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.137615731 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.135267109 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.134508169 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.138660705 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.137861048 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.135261034 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.13437198 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.139191986 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.133961123 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.136028194 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.135506957 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.137312199 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.135198682 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.13563562 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.134395253 seconds)
  done (took 21.517688452 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.136449266 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.13651646 seconds)
  done (took 3.34366068 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.134737904 seconds)
    (2/7) benchmarking "second"...
    done (took 1.135950552 seconds)
    (3/7) benchmarking "month"...
    done (took 1.136161755 seconds)
    (4/7) benchmarking "year"...
    done (took 1.134963875 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.135146228 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.135989547 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.136551588 seconds)
  done (took 9.022315023 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.139061835 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.322130374 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.402047744 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.73204168 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.140144615 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.141166591 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.042574854 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.143650447 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.143444148 seconds)
  done (took 13.279703773 seconds)
done (took 72.930757905 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.13159466 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.13089577 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.031054533 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.139207715 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.148134129 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.476056742 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.182566533 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.258176573 seconds)
done (took 36.57065202 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.138744928 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.818834303 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.861755579 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.139570476 seconds)
  done (took 10.894725689 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.121301143 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.017687759 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.117652255 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.141676636 seconds)
  done (took 17.472598505 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.737583107 seconds)
    (2/2) benchmarking "read"...
    done (took 1.463118584 seconds)
  done (took 4.275281331 seconds)
done (took 39.853088575 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.139369659 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.139846866 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.135739756 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.13759542 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.140583027 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.137625495 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.137503396 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.137640776 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.139169246 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.139926135 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.139889475 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.141304078 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.138520866 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.137372589 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.141651341 seconds)
    (16/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.13755037 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.137020018 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.138051563 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.137479958 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.139875095 seconds)
    (21/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.13820454 seconds)
    (22/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.137558307 seconds)
    (23/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.140076762 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.139549293 seconds)
  done (took 28.403411192 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.141133753 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.140001225 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.140543446 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.140880823 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.138092134 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.141278176 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.139321715 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.139422007 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.140897168 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.140823926 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.138255232 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.137398708 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.140607169 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.140366549 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.139240338 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.140470248 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.143523102 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.136242006 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.141707458 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.138383718 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.140088331 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.138863102 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.137901881 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.140995818 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.139139146 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.139220802 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.1404303 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.140349669 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.142506384 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.140489409 seconds)
  done (took 35.275317053 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.146322227 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.1487551 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.141587978 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.141307076 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.139787148 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.142174898 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.141058589 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.142229818 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.144210754 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.140957295 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.142372747 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.141216528 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.141678717 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.142146119 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.143979569 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.143626102 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.142098826 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.142089144 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.14427025 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.14169386 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.142982096 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.143184193 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.142772892 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.141741305 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.143082143 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.143213215 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.14269615 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.142605769 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.144000116 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.142217396 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.143079676 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.145491963 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.143175874 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.145879201 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.143822463 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.143408563 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.148242939 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.150779649 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.14261754 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.142832623 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.143055682 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.142569812 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.143902988 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.143615189 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.144110187 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.144019938 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.143331247 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.142662573 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.14344945 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.144229267 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.144753861 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.143500538 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.14255717 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.144158807 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.143950395 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.14425117 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.145549198 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.144103 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.144238521 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.142591555 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.145073484 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.144094923 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.143728597 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.144303064 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.145888161 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.142378827 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.143703951 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.14579645 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.144978445 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.144105731 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.145955759 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.145853766 seconds)
  done (took 83.419396254 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.144272226 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.142648178 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.140247256 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.14246644 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.141898199 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.145307131 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.142194972 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.144110391 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.141127638 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.145535124 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.146025772 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.143012217 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.143546927 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.144573957 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.145185125 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.142267894 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.147396833 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.143086416 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.146137083 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.146378454 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.144836868 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.143894229 seconds)
  done (took 26.247449704 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.144959656 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.14551231 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.143521944 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.145862087 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.143331736 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.145741172 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.144155744 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.145808711 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.145697523 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.143318711 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.142710957 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.144398052 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.144277967 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.144230263 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.143547571 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.144188011 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.146334625 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.143698459 seconds)
  done (took 21.681228733 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.145167967 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.145423646 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.147040593 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.144181181 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.144701217 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.147457662 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.143883177 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.146851505 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.146910802 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.145249198 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.146780225 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.147049806 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.147808128 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.145356104 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.148413235 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.146671542 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.147877429 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.142302416 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.148863609 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.144426513 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.145239121 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.14844796 seconds)
  done (took 26.297499621 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.14715609 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.14901339 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.144883552 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.146406527 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.146487956 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.149726898 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.148275595 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.146087844 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.148443285 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.147253278 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.147143237 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.149876364 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.145391907 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.144631496 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.146087635 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.145047791 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.147737341 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.147214337 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.147648613 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.144560457 seconds)
  done (took 24.021361223 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.149901585 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.149252138 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.148778057 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.148222861 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.149011552 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.14911532 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.148818153 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.148481239 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.148880696 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.15054045 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.148264146 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.150111462 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.149095641 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.148059912 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.149175805 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.149111139 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.149530114 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.149627498 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.148379256 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.148944286 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.149983247 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.151127339 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.15064204 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.149568192 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.151238608 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.149491831 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.150013136 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.150603584 seconds)
  done (took 33.268312122 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.149476632 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.149052111 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.147474758 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.147878972 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.148238308 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.147279971 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.147758113 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.149570862 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.150380177 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.147094119 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.151622451 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.1494059 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.149448451 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.150954885 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.14977652 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.150745937 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.152007613 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.147892696 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.148808007 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.149717906 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.150082683 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.152277447 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.154023661 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.150717228 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.150179467 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.151424159 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.148015619 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.148961458 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.152044968 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.149467301 seconds)
  done (took 35.577298513 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.169800864 seconds)
    (2/2) benchmarking "in"...
    done (took 1.17012858 seconds)
  done (took 3.426367216 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.148708239 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.15315195 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.152543098 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.148907442 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.14791133 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.152340245 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.15055806 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.149367534 seconds)
  done (took 10.289942963 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.149010762 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.151778693 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.152826872 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.150947922 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.152512342 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.152845904 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.159470586 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.16638549 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.153292657 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.154228018 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.158757766 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.160691343 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.153708918 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.149818675 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.15161168 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.154504456 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.153679555 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.151952925 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.151661725 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.15244728 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.152497929 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.155602271 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.155887842 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.151303649 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.153196085 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.164335238 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.157060253 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.153478033 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.15366989 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.156297731 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.152143879 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.150458724 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.152271274 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.152213969 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.153944796 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.152834327 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.16348588 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.16931559 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.159894347 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.153928134 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.154924593 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.152076136 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.155580055 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.156963903 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.156011946 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.154173889 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.153631618 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.150443229 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.153501837 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.158722724 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.160605893 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.151863096 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.152881209 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.15829409 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.156337064 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.161760814 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.168530318 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.157269001 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.165756114 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.167528206 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.166091514 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.163784542 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.156222506 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.156130832 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.165820633 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.178076436 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.161860167 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.168206312 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.153491794 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.154114875 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.161305509 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.166927189 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.164542208 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.157442439 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.156235493 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.157588815 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.155522549 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.158303753 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.16252386 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.174775608 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.156205377 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.157827871 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.166543442 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.179150291 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.156546655 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.157334573 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.155598064 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.156400618 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.156889828 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.167620289 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.172227894 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.157706095 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.155877946 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.156253697 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.158436498 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.155317342 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.154592794 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.156708334 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.154612989 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.158488715 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.157359306 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.160945378 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.168074098 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.157300324 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.157658367 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.164256694 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.159627453 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.15677998 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.164134912 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.157413458 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.158205152 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.158062777 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.162706071 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.156330207 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.160256784 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.168380817 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.157581624 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.159233605 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.157777469 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.158534364 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.167337982 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.184067224 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.157931533 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.159060607 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.163316124 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.171169765 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.157339707 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.160992452 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.159514126 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.156103638 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.155790151 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.158766433 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.159663451 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.159138475 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.158038107 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.158497283 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.157160154 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.159414653 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.159028998 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.159877561 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.159761559 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.158686939 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.162311884 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.161060621 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.158927229 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.161089552 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.164508217 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.159019553 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.158232429 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.161030485 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.157486237 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.160828902 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.159640116 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.160830942 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.160718324 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.1591376 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.159014141 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.161327219 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.160138497 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.159983131 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.160918867 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.161052056 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.165211013 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.160798675 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.163449067 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.160083953 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.157479178 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.161446381 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.160773055 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.160050455 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.160743174 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.15879308 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.164225481 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.168223261 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.16057925 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.161658349 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.163707554 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.160107096 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.15998186 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.161383129 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.162648043 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.170578377 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.160699388 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.167044002 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.160104442 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.161156919 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.162882335 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.160692018 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.16214815 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.161919249 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.164785327 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.171530814 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.173486674 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.172396995 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.164491042 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.165305494 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.164212559 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.166468378 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.16578983 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.163067008 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.16199949 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.161764833 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.161313821 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.161498812 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.163144281 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.16183408 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.160826468 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.162921983 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.16253132 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.161724771 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.16250709 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.163173928 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.16277732 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.160624509 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.162063515 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.163255757 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.16208212 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.161375438 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.16111649 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.162567284 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.163307891 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.163186141 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.169340113 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.161216046 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.163658022 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.164379176 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.162892162 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.161488702 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.163325936 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.165754052 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.163539346 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.169927223 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.179112149 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.163233993 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.169205434 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.176961673 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.162723839 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.16564169 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.163956501 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.162011073 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.167882869 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.174377506 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.164213006 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.163910373 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.16295745 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.165428387 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.164289586 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.171489493 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.163154412 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.163297973 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.164143208 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.164573738 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.162748691 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.165567095 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.165431699 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.166297815 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.166388011 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.165849319 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.164379164 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.165208726 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.162965732 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.165335043 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.164769794 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.167757139 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.172871777 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.17044724 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.164596234 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.167935994 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.165841759 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.169584291 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.166185248 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.165097449 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.165717095 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.178661667 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.175240402 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.172572345 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.167320497 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.167234349 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.171199711 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.166842341 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.16997185 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.166828599 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.167020917 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.165697059 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.163473275 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.163075538 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.166985423 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.166457032 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.16657452 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.167510305 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.169757889 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.165980362 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.165477667 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.165648228 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.167266483 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.168001746 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.16729605 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.167873938 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.169225599 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.169387848 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.166693922 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.167394052 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.174535662 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.182550734 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.167339267 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.167818788 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.167874691 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.166166455 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.167696839 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.167804286 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.171297098 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.17574416 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.16951623 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.177073452 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.169791714 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.175123325 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.168041454 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.171303124 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.175602824 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.166787381 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.167893921 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.167426238 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.167457068 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.173679633 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.181428642 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.170265047 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.172097571 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.167967433 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.168959159 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.16899511 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.168484355 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.170699346 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.168968268 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.176806984 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.1845917 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.173623679 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.170472207 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.165986437 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.170258272 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.168924076 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.16755229 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.172986866 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.168080878 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.170537931 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.169781939 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.168662928 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.170077965 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.168259502 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.171151155 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.165524505 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.170941437 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.175575967 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.186919873 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.173863151 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.170551345 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.179357899 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.168495752 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.175589593 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.185451645 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.17123302 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.171541714 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.170342203 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.172293759 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.168987969 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.172374673 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.169731611 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.170782753 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.174262092 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.172531259 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.173007711 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.170516 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.169835878 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.169703445 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.179594809 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.194024555 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.171603089 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.176335505 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.166577467 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.171190962 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.176595989 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.16969897 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.169668245 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.173949508 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.183217619 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.178873111 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.170495417 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.171974824 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.169535671 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.171266652 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.172239801 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.171683737 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.170574555 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.171431105 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.171715139 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.171825682 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.17508568 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.172059906 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.17148903 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.173657454 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.174117976 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.182726402 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.171151363 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.17338283 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.171380943 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.172096897 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.17149392 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.17417421 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.173506302 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.173460168 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.173021922 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.175363585 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.18049386 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.181340113 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.17689152 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.172573292 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.173505838 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.17215245 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.174044037 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.17357217 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.171969208 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.172679354 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.173673003 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.173255523 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.175062308 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.171928752 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.172462351 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.174158255 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.174091194 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.176758742 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.179814015 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.172447449 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.170208399 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.173618628 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.172506514 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.172527258 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.174565307 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.180946704 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.176755276 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.184958983 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.183548069 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.177570088 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.173118358 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.180511841 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.181992506 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.17414754 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.174738175 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.173007855 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.17627797 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.177485014 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.177560868 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.173188486 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.182057009 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.17452295 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.175458312 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.181773344 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.190112078 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.175910785 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.177010018 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.18082243 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.174439354 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.172636123 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.175931924 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.175024689 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.180902399 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.1923707 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.175455004 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.176739245 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.173734887 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.178153169 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.178322498 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.175562641 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.177178557 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.173402627 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.175753921 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.17519677 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.176300714 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.176028159 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.174142237 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.176044041 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.178345574 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.183571814 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.173692426 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.179582271 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.175328921 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.177306831 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.177286149 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.178441607 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.174366076 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.173947797 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.175844379 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.176115662 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.176942494 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.180383491 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.176569251 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.177174082 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.178378761 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.176682001 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.178897824 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.187269098 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.18603638 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.175022218 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.17817318 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.179089813 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.180256653 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.177752401 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.176404347 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.176943014 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.180438771 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.177274213 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.178383023 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.179401113 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.18015739 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.19416013 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.192388071 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.177514654 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.178092942 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.18079334 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.178399013 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.175364957 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.178752091 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.179325153 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.180199314 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.187362877 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.178102044 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.185108834 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.193330892 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.180271214 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.183978505 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.182885828 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.186762266 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.179978849 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.179829658 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.178260094 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.184710681 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.196993186 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.178848034 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.189250604 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.210683691 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.195554998 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.181158548 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.179755072 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.177626528 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.178778989 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.183887444 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.180136243 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.179434417 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.180246505 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.179113085 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.180026815 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.185672987 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.180527826 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.179536223 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.17936186 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.18119976 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.180766454 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.177606829 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.180131615 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.179228407 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.181277855 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.18033456 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.179252085 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.181172845 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.192702431 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.191138999 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.180859141 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.181292584 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.17826611 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.183057729 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.183561036 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.19049608 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.191028585 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.180345845 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.179279028 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.182443031 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.181197303 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.177106214 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.180016973 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.180761175 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.18091938 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.178462033 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.193419728 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.191158066 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.18612313 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.179154341 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.180223445 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.181578574 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.185314764 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.181194601 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.180060201 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.181738302 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.182093886 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.185241554 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.182648527 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.181071575 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.184757782 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.191861115 seconds)
  done (took 697.982405088 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.17998657 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.180611754 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.179647475 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.179910593 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.179823803 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.181612594 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.180857051 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.180237867 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.179510303 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.178835718 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.179741139 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.18122357 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.180369218 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.181802763 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.179193526 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.181197434 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.179990289 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.180752494 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.180709194 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.180414226 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.180113511 seconds)
  done (took 25.90323199 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.182587765 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.181675622 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.182062413 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.18367154 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.182302594 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.181974994 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.182213311 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.182746468 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.184900346 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.181274776 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.185189684 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.18346864 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.180993672 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.180080379 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.181124626 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.183674159 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.184775084 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.181193167 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.185188155 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.181608135 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.184597039 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.181911031 seconds)
  done (took 27.136637048 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.184151121 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.184212983 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.182230827 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.18071407 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.187096685 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.182343384 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.184743631 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.184100543 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.184612201 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.184808891 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.183376283 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.185695564 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.19396195 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.190935715 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.18635643 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.18543137 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.3302516 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.185138512 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.185558325 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.185070355 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.182692533 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.190191368 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.181951872 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.182324018 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.183225637 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.184501322 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.184548978 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.185050136 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.184816086 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.189277049 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.18959318 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.185357514 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.18378642 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.18744769 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.185117148 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.18636111 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.189918904 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.188960488 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.183235481 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.18642237 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.195130342 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.20879554 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.185745869 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.19160733 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.185932603 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.185766895 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.192178968 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.195814376 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.181842792 seconds)
  done (took 59.408208264 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.187161672 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.187179668 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.18541774 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.185979175 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.189261541 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.184751457 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.187499405 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.187434661 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.183126489 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.183259154 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.186868063 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.185115672 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.185138212 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.189413854 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.187249338 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.18406603 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.185647349 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.185006865 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.18353616 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.183217632 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.184314204 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.189984154 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.187397692 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.1852728 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.18821448 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.183764771 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.186809799 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.187601385 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.185605819 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.184616604 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.188325487 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.187031491 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.187660693 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.184455257 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.18492426 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.187453796 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.188920274 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.186618339 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.190336755 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.185590004 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.187626637 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.188372727 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.187658132 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.187972315 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.184503624 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.186993792 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.185321584 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.188237201 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.188290577 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.18870086 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.188412422 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.185632022 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.188285211 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.18531091 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.189773037 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.18940024 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.187113195 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.186486691 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.189260369 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.18721118 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.185667254 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.190094909 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.186872342 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.19084194 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.189577378 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.186964399 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.187864604 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.191367094 seconds)
  done (took 81.834741787 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.189083239 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.190702325 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.190296704 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.189358643 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.189976977 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.188227265 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.188199058 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.191091869 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.190551225 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.188106245 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.188588953 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.190987287 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.188984006 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.192092607 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.189968542 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.190404673 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.190210264 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.189924584 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.191315463 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.192623754 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.191582555 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.191029117 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.189662106 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.189848886 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.189864103 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.191278224 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.190596759 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.190612972 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.192093075 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.193133495 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.189947526 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.191363208 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.190758592 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.190325189 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.190442847 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.192556652 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.195082132 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.193021546 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.191462028 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.190022419 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.191653501 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.189516294 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.192772416 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.18993341 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.191057617 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.194207658 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.191293553 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.191270466 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.192534724 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.191863267 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.190915201 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.191339305 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.190568818 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.19426525 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.191786862 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.193660624 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.191977793 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.193043195 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.192215041 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.191361384 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.192723083 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.193834298 seconds)
  done (took 74.974309474 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.191967551 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.192553957 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.188634033 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.190116338 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.193466369 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.190910031 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.19167055 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.195718667 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.192646474 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.193456664 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.193361528 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.190702754 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.190212378 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.194798804 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.18974272 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.192531029 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.191897589 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.19175652 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.195674435 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.190007514 seconds)
  done (took 24.970176663 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.191691749 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.194569161 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.191250238 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.195574208 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.192572349 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.19061309 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.194032979 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.193279905 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.191157739 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.196212304 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.19357892 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.19791417 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.191546777 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.191748056 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.195001704 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.191966792 seconds)
  done (took 20.220698344 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.191089538 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.19491397 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.195034367 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.195600031 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.192218763 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.19082471 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.195144749 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.191440306 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.191432535 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.193557215 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.193630976 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.197201513 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.194517799 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.193729633 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.192659664 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.194982054 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.191450775 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.1928541 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.194967225 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.19811926 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.192687591 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.193022404 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.195379281 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.196322376 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.192714556 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.194119509 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.192561876 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.193323275 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.195867552 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.196158941 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.194312363 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.193654344 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.19404578 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.19338928 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.196675741 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.193389233 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.198463667 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.197398709 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.197653452 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.196405447 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.196188207 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.193970107 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.198012939 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.196610027 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.192840149 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.198889319 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.193871732 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.195217484 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.194176388 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.193844936 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.198166417 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.197054482 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.196112807 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.201080948 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.199565845 seconds)
  done (took 66.846664693 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.197555642 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.197942486 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.195181975 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.196046688 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.197680507 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.198111688 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.197649363 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.195469519 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.195421463 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.196341285 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.194613668 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.198800984 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.195224694 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.198157345 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.1983678 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.198531813 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.195122468 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.195395572 seconds)
  done (took 22.671743471 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.19566755 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.197040935 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.196710388 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.20010214 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.195617423 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.199127484 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.195004298 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.198141061 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197235491 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.196182895 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195365887 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.199729151 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.198675686 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.198324838 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.196703197 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196019986 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.20073966 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.199248443 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.196510234 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.194619015 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.200804073 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.197766718 seconds)
  done (took 27.477099125 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.197692375 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.196462146 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.213230979 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.241440723 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.230959722 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.199174994 seconds)
  done (took 8.411147352 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197195781 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200366662 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.196114425 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200080667 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.198227932 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198563026 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196192045 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200906837 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.199598354 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197263477 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.198807655 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200031848 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199873314 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.196996749 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.199385745 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.20327456 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198955868 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197915474 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198023973 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.200079811 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.197749197 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.200514191 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.197384978 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.19950898 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.197182126 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.198148205 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.199837653 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198663842 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.196966234 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199606395 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201110891 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.199274233 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.202280627 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.199619101 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20230086 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202903257 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.199021803 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.202031726 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.200869231 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.199850086 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.205397602 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200553506 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.201585624 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.197872449 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203377154 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.20017875 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199808082 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.199150424 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202362607 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20483564 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.202718504 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200468856 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202843703 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203499696 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.202928919 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203665978 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201505566 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200378289 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203312386 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.200480437 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200338553 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201580628 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.200195612 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199686278 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203403218 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203932177 seconds)
  done (took 80.352339982 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199787875 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.200039886 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.199855486 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201555078 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.199111064 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.200579972 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201915519 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.198740981 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.201826118 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202110016 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203398984 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201309391 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200551064 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201018967 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201939274 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2034432 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.200984451 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200650213 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.202931804 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.203918637 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20255196 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.201984973 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.201099159 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204469141 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201471375 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204185916 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.200146682 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203121245 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201139707 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202615664 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201825235 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.202755093 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202816529 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.202552721 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20404367 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202384491 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.201513215 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.203584558 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202488693 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205755068 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.201223073 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205366606 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.201795908 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202268845 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20325173 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203444072 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203070489 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204247764 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.204470711 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.202675072 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203329064 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.203100101 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205831632 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204663409 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.202418527 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204849296 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203301441 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204133444 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.203799643 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205504301 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.203694131 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.201913285 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207638601 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.203641617 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.204482646 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203205538 seconds)
  done (took 80.511411672 seconds)
done (took 1627.679691505 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.292900656 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.210714618 seconds)
  done (took 13.639156124 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.368235341 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.321952064 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.206419968 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.24383166 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.203076869 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.209722783 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.226422022 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.205066519 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.204992608 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.205018496 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.206672038 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.397767401 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.223348409 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.204349953 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.205574139 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.299993839 seconds)
  done (took 41.072263021 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.235447651 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.211876403 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.321239666 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.223825771 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.233787609 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.389500067 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.264068541 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.209979705 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.380738733 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.251158692 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.738422198 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.234700083 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.209950425 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.296030936 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.226299691 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.387794789 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.455241416 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.736830581 seconds)
  done (took 28.146187039 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.649954567 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.220029603 seconds)
  done (took 9.011578659 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.221427208 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.223871344 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.226539891 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.230805224 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.220293124 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.201360367 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.268585635 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.266118613 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.244020908 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.256624195 seconds)
  done (took 63.50288123 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.231880884 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.214923844 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.214876899 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.211438062 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.203709972 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.203974957 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.211416713 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.201957764 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.780622979 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.337478366 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.227384877 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.220629382 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.214065247 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.213236551 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.211115779 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.247632038 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.358136088 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.209060007 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.208686628 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.218263531 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.213985253 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.312190411 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.252182413 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.211548365 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.336510523 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.80047925 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.216306008 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.219787027 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.33650101 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.210249496 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.213935634 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.210002037 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.214670661 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.77786898 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.760727824 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.22808121 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.237490801 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.222951287 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.209064604 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.339946895 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.213099484 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.220251167 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.205883305 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.75245068 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.373327928 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.325449085 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.502231816 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.21693979 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.216192725 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.278593104 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.21575139 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.215756706 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.243412922 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.956798794 seconds)
  done (took 104.745968565 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.252818877 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.69540452 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.377520821 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.231206829 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.050224699 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.843105045 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.20712003 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.487562912 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.228128 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.207102582 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.485897992 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.705622484 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.213014114 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.254837802 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.76588214 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.227341135 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.205899261 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.030005791 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.207441803 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.208527518 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.626425825 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.222514934 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.20656111 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.305665682 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.249630687 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.665300943 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.620868328 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.643144783 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.209760368 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.206894054 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.671862821 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.208715537 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.254477795 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.211003548 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.480359088 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.558132165 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.532957663 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.207343038 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.216542646 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.210581166 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.235698889 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.663029718 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.547334934 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.205767183 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.20630886 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.670444441 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.206545013 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.210393457 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.213779552 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.416614589 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.131263138 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.206493763 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.627839083 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.208684404 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.481720372 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.224880364 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.27749844 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.701075765 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.208244782 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.287461986 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.2246477 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.209061694 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.210733145 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.209547392 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.209292128 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.551588387 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.604185842 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.211414002 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.55211066 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.665603987 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.208778447 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.747025229 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.081530942 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.23403239 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.263999364 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.209514787 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.878403986 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.695025402 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.224807497 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.209918663 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.537116107 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.213290837 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.48978945 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.222209193 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.207753644 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.638012904 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.231459726 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.25551116 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.209819711 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.222691607 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.987531305 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.209490461 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.477996413 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.228442362 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.20867095 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.211956013 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.246116826 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.212254381 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.208254212 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.211140821 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.730590306 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.214643222 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.347645309 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.22795679 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.210907968 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.209780704 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.211436267 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.214307993 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.436488037 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.767661979 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.216441994 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.21368631 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.219989446 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.218816476 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.300292204 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.217671467 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.514927783 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.210989793 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.211229505 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.214664935 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.87960337 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.236455953 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.211265264 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.2132103 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.041164977 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.41740144 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.231789831 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.210628368 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.213948837 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.223112475 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.624901273 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.213952071 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.233913237 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.208537543 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.906467758 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.218516556 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.239942357 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.790180824 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.214363745 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.209144927 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.206272399 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.206659098 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.511554899 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.478571206 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.504793364 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.205285108 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.207103365 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.891478499 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.210715924 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.347396629 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.225140906 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.236330774 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.405548073 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.325508557 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.207194448 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.748777505 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.205336281 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.426644202 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.206569052 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.523200264 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.686160327 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.206002296 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.207203002 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.90610208 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.864012142 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.863708395 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.20882434 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.480961446 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.20034947 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.66929968 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.208345011 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.207187403 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.79629115 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.210712789 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.212076301 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.206498044 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.210834892 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.279414124 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.384739247 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.890568875 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.213236632 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.660905771 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.214763539 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.208322368 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.22647459 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.207443554 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.563958791 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.276806047 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.207432043 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.217496889 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.207342667 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.210890766 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.666832825 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.082580283 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.209106901 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.362105131 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.829310285 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.208006453 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.208693486 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.962670128 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.472030135 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.745592724 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.24059313 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.505293819 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.213510503 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.246066212 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.988059659 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.284678162 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.711458614 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.208015101 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.207690844 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.812462716 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.208258761 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.265098336 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.209587816 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.209582421 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.735799554 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.210312308 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.209823322 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.52571224 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.209505054 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.479584673 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.209183417 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.232578028 seconds)
  done (took 1083.62264181 seconds)
done (took 1344.877219278 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.211607846 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.213477911 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.199786049 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.207465288 seconds)
  done (took 25.983897486 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.21668038 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.214098821 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.213877725 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.213274295 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.216147501 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.212990909 seconds)
  done (took 8.433828075 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.311557647 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.209721988 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.208438265 seconds)
  done (took 18.87618776 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.427421933 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.443749824 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.575456972 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.308188665 seconds)
  done (took 9.901564124 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.213737486 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.216220594 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.216515853 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.218957434 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.219158522 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.217834648 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.218223453 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.215994026 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.220922791 seconds)
  done (took 12.106126173 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.018318096 seconds)
done (took 81.466555265 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.234807353 seconds)
    (2/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.225963752 seconds)
    (3/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.216086088 seconds)
    (4/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.294088183 seconds)
    (5/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.310802375 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.460796712 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.671555704 seconds)
    (8/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.248595123 seconds)
    (9/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.372796427 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.231721711 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.054232654 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.83513237 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.234970139 seconds)
    (14/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.239978499 seconds)
    (15/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.20958903 seconds)
    (16/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.937809384 seconds)
    (17/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.775201044 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.330193568 seconds)
    (19/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.600233714 seconds)
    (20/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.312200222 seconds)
    (21/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.408091944 seconds)
    (22/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.322835382 seconds)
    (23/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.531929319 seconds)
    (24/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.466811387 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.207128403 seconds)
    (26/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.782401151 seconds)
    (27/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.784545929 seconds)
    (28/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.826896803 seconds)
    (29/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.630413325 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.219277644 seconds)
    (31/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.715641305 seconds)
    (32/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.329986382 seconds)
    (33/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.551227364 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.329084369 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.059082922 seconds)
    (36/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.222691323 seconds)
    (37/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.379675562 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.067979427 seconds)
    (39/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.362421162 seconds)
    (40/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.237013826 seconds)
    (41/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.249043221 seconds)
    (42/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.252220305 seconds)
    (43/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.224714282 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.651245343 seconds)
    (45/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.222371791 seconds)
    (46/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.325230493 seconds)
    (47/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.822091308 seconds)
    (48/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.950600802 seconds)
    (49/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.211112143 seconds)
    (50/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.422200248 seconds)
    (51/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.487781222 seconds)
    (52/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.197593815 seconds)
    (53/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.843052309 seconds)
    (54/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.329003546 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.831164665 seconds)
    (56/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.849909682 seconds)
    (57/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.823070011 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.60947634 seconds)
    (59/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.281541251 seconds)
    (60/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.196154926 seconds)
    (61/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.30057422 seconds)
    (62/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.313937158 seconds)
    (63/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.760172437 seconds)
    (64/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.197535733 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.802835712 seconds)
    (66/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.962727303 seconds)
    (67/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.21143125 seconds)
    (68/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.730665789 seconds)
    (69/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.21257161 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.915638255 seconds)
    (71/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.296526236 seconds)
    (72/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.200261959 seconds)
    (73/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.216217453 seconds)
    (74/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.196696614 seconds)
    (75/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.519756184 seconds)
    (76/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.549598118 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.138382285 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.948170881 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.319754136 seconds)
    (80/309) benchmarking ("sort", Int8, false)...
    done (took 4.222688487 seconds)
    (81/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.612134908 seconds)
    (82/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.789665322 seconds)
    (83/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.423705765 seconds)
    (84/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.575359419 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.391827538 seconds)
    (86/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.270805156 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.21743368 seconds)
    (88/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.213059439 seconds)
    (89/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.237884486 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.513225015 seconds)
    (91/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.211595583 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.289552138 seconds)
    (93/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.223454328 seconds)
    (94/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.40200404 seconds)
    (95/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.039779063 seconds)
    (96/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.228485299 seconds)
    (97/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.622007159 seconds)
    (98/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.714508208 seconds)
    (99/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.22690318 seconds)
    (100/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.070035839 seconds)
    (101/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.025924352 seconds)
    (102/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.322345755 seconds)
    (103/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.587746107 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.52451966 seconds)
    (105/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.296250915 seconds)
    (106/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.033268245 seconds)
    (107/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.212353529 seconds)
    (108/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.223172338 seconds)
    (109/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.42768176 seconds)
    (110/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.573271749 seconds)
    (111/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.239687219 seconds)
    (112/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.429956039 seconds)
    (113/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.538800289 seconds)
    (114/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.216826671 seconds)
    (115/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.5748786 seconds)
    (116/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.245011968 seconds)
    (117/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.243517762 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.214424856 seconds)
    (119/309) benchmarking ("sort", Float64, false)...
    done (took 5.492110716 seconds)
    (120/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.629013276 seconds)
    (121/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.043704931 seconds)
    (122/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.585921309 seconds)
    (123/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.322001653 seconds)
    (124/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.264362202 seconds)
    (125/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.020708906 seconds)
    (126/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.461669232 seconds)
    (127/309) benchmarking ("sort", Float32, false)...
    done (took 5.211040914 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.288945084 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 1.728652272 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.239710289 seconds)
    (131/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.240779506 seconds)
    (132/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.086036663 seconds)
    (133/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.311508584 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.497121914 seconds)
    (135/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.415643487 seconds)
    (136/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.756626721 seconds)
    (137/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.230373729 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.97759078 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.470519446 seconds)
    (140/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.320997794 seconds)
    (141/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.211702485 seconds)
    (142/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.988058493 seconds)
    (143/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.287256192 seconds)
    (144/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.365251607 seconds)
    (145/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.297319411 seconds)
    (146/309) benchmarking ("sort", BigInt, false)...
    done (took 6.216528004 seconds)
    (147/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.46755256 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.109739571 seconds)
    (149/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.354857231 seconds)
    (150/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.294032376 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.979441112 seconds)
    (152/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.278746847 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.242635521 seconds)
    (154/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.697373795 seconds)
    (155/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.556350179 seconds)
    (156/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.405284911 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.227826815 seconds)
    (158/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.58713396 seconds)
    (159/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.722055744 seconds)
    (160/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.050828571 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.237451501 seconds)
    (162/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.201078159 seconds)
    (163/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.224867543 seconds)
    (164/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.201664542 seconds)
    (165/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.403823041 seconds)
    (166/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.302080439 seconds)
    (167/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.595174798 seconds)
    (168/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.288266826 seconds)
    (169/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.203757719 seconds)
    (170/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.650467706 seconds)
    (171/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.644292025 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.201608036 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.306850103 seconds)
    (174/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.239071694 seconds)
    (175/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.210454185 seconds)
    (176/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.67955635 seconds)
    (177/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.231125626 seconds)
    (178/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.248226548 seconds)
    (179/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.208720315 seconds)
    (180/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.259335469 seconds)
    (181/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.233006801 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.263590334 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.216419612 seconds)
    (184/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.202834737 seconds)
    (185/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.788576926 seconds)
    (186/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.233984757 seconds)
    (187/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.662441631 seconds)
    (188/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.20153879 seconds)
    (189/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.085884105 seconds)
    (190/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.446068154 seconds)
    (191/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.354465355 seconds)
    (192/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.127324454 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.225535545 seconds)
    (194/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.280695128 seconds)
    (195/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.300835849 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.568761616 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.277327318 seconds)
    (198/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.787372989 seconds)
    (199/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.534236286 seconds)
    (200/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.540346249 seconds)
    (201/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.849001995 seconds)
    (202/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.513710041 seconds)
    (203/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.426542599 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.63161713 seconds)
    (205/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.868622455 seconds)
    (206/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.236285793 seconds)
    (207/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.66429608 seconds)
    (208/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.218539583 seconds)
    (209/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.512421493 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.813125323 seconds)
    (211/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.926483433 seconds)
    (212/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.866724172 seconds)
    (213/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.594494393 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.243396984 seconds)
    (215/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.241491471 seconds)
    (216/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.537915227 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.076476396 seconds)
    (218/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.243270985 seconds)
    (219/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.06998055 seconds)
    (220/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.819806505 seconds)
    (221/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.342746086 seconds)
    (222/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.240542055 seconds)
    (223/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.283442643 seconds)
    (224/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.219530356 seconds)
    (225/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.961588549 seconds)
    (226/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.357153498 seconds)
    (227/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.716769089 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.277407255 seconds)
    (229/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.482807394 seconds)
    (230/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.245606245 seconds)
    (231/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.282611634 seconds)
    (232/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.217602418 seconds)
    (233/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.206723813 seconds)
    (234/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.259777218 seconds)
    (235/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.98046501 seconds)
    (236/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.408649332 seconds)
    (237/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.820424267 seconds)
    (238/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.295363828 seconds)
    (239/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.25294473 seconds)
    (240/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.343864406 seconds)
    (241/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.292405564 seconds)
    (242/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.761486136 seconds)
    (243/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.304748494 seconds)
    (244/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.221742785 seconds)
    (245/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.503944817 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.150708116 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.717815261 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.435179625 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.724526622 seconds)
    (250/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.223583607 seconds)
    (251/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.230149683 seconds)
    (252/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.450167421 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.633794552 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.266546578 seconds)
    (255/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.608678771 seconds)
    (256/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.59513755 seconds)
    (257/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.31924705 seconds)
    (258/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.632420696 seconds)
    (259/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.262220389 seconds)
    (260/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.220914491 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.669651395 seconds)
    (262/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.987956646 seconds)
    (263/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.227993713 seconds)
    (264/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.346543547 seconds)
    (265/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.254810147 seconds)
    (266/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.092514727 seconds)
    (267/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.226068232 seconds)
    (268/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.222316328 seconds)
    (269/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.969096594 seconds)
    (270/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.802709263 seconds)
    (271/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.414096734 seconds)
    (272/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.519375165 seconds)
    (273/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.436598449 seconds)
    (274/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.597315577 seconds)
    (275/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.965729965 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.21962393 seconds)
    (277/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.579057872 seconds)
    (278/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.06859609 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.305073104 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.225517615 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.209069239 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.308212623 seconds)
    (283/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.786966387 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.631243506 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.363827399 seconds)
    (286/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.546050667 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.339217194 seconds)
    (288/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.519384501 seconds)
    (289/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.230845807 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.96586552 seconds)
    (291/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.94014046 seconds)
    (292/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.361213137 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.137535099 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.2633665 seconds)
    (295/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.48115917 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.663688903 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.326205112 seconds)
    (298/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.874754789 seconds)
    (299/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.957552699 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.221369986 seconds)
    (301/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.124099374 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.244699174 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.579561879 seconds)
    (304/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.245501263 seconds)
    (305/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.247701148 seconds)
    (306/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.249659591 seconds)
    (307/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.224252351 seconds)
    (308/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.302620865 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.225904965 seconds)
  done (took 885.014430295 seconds)
done (took 886.161896227 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.258945535 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.251996722 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.236631124 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.257791731 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.349274864 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.268158808 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.247166837 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.239507895 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.285980089 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.287451227 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.236099525 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.266371712 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.237322248 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.235395535 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.236175602 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.2513405 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.262863888 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.238351949 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.254405416 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.246460588 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.255154699 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.234133876 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.285262416 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.267722455 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.239851235 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.23944021 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.241048879 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.256450465 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.350488847 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.239039625 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.239457725 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.248397868 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.26200969 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.235355194 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.229587589 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.256611048 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.24935751 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.246418994 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.242193597 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.269901265 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.648691811 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.237324692 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.238854052 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.237041309 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.238463935 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.242201749 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.240078357 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.242909906 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.250182962 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.252030745 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.63822254 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.251757547 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.240335975 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.239630384 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.248386574 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.239381446 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.242349696 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.254475275 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.257447717 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.254377712 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.251184603 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.241900895 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.240617448 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.256180912 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.245747548 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.678043365 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.232670082 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.242614513 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.660575116 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.242526085 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.68626076 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.247039132 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.240349584 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.255218801 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.271020412 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.266634511 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.232823932 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.237214887 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.248245277 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.238831022 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.248872261 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.251551144 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.242434452 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.239776049 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.255005561 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.271641846 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.250461794 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.243585461 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.248578136 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.258606595 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.248009649 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.252147863 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.241219107 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.234346549 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.250313549 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.244659534 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.245821533 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.244624288 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.243411327 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.250684495 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.662775013 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.255656728 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.235570923 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.23812392 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.240377776 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.256163462 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.666877397 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.241478492 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.262460262 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.285875886 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.244259576 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.254633657 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.24359932 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.256121754 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.2506514 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.242866808 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.236491983 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.257668633 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.657558139 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.254856657 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.242348954 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.240696355 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.256782851 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.241373522 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.238890896 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.271824282 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.241933616 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.253637912 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.363308489 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.251827781 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.274374802 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.239849573 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.245042827 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.278049942 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.25721314 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.274597127 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.245110429 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.258498214 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.260363886 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.240724468 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.255644765 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.253087088 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.244126492 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.248303052 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.237526125 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.278727188 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.255339038 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.254395484 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.261969573 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.363828217 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.238614694 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.257049922 seconds)
done (took 210.848173191 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.301041384 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.236734177 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.322129254 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.239182382 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.338496195 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.336964483 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.236325697 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.237632838 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.235088172 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.61780904 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.235681202 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.234728229 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.238497536 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.236482289 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.320237608 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.236738881 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.235064474 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.580065473 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.238782509 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.309086889 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.233047126 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.236383848 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.238801357 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.61796526 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.237752715 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.236685736 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.310122642 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.240093114 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.589854615 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.237950674 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.234513678 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.582859124 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.325916445 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.256015807 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.248066507 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.245909378 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.342104143 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.253261058 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.321756479 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.320306005 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.323549095 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.27768279 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.23603718 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.236343522 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.241280657 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.238853732 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.237135998 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.266596026 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.238859288 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.237919108 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.5821716 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.248540876 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.23873847 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.237887456 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.237990215 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.270741572 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.237778615 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.240472058 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.329065335 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.240620494 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.303446607 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.622518898 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.616635657 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.241825648 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.239571079 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.240243243 seconds)
  done (took 142.107977132 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.308384414 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.314025355 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.35339465 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.242581385 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.292691704 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.35920179 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.242146828 seconds)
  done (took 10.284021737 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.249950236 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.242179241 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.297729082 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.292218022 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.24068636 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.389699451 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.240103823 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.252587162 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.237992241 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.294174252 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.241732303 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.243281649 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.248622868 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.23663586 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.288843308 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.25352646 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.35580371 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.244242342 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.242574794 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.398170883 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.239830381 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.249468754 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.294867932 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.251907595 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.243755847 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.250975512 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.805820785 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.24276474 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.240925295 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.242392744 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.241136992 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.280726267 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.242824415 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.244741632 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.240835959 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.3581567 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.242883354 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.241863585 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.245269863 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.237822191 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.242447406 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.245627849 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.243958871 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.24080524 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.244865383 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.266863381 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.243056128 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.245741493 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.242831866 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.244271546 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.293325868 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.243739122 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.243077023 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.241522311 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.300398385 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.251023634 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.2433528 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.240645233 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.244615938 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.240809888 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.40085874 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.289721838 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.245880095 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.290642157 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.245855422 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.246385697 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.24193363 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.244534061 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.300351072 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.244222414 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.292136637 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.240697553 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.399104667 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.268285008 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.244067009 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.246216305 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.248711409 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.246347537 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.238306752 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.250204565 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.240990408 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.245549007 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.249215041 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.240852112 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.241531037 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.348851352 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353595051 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.243162171 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.257840814 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.252787345 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.243511251 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.298973681 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.244579563 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.243105009 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.297701249 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.359528173 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.29796362 seconds)
  done (took 144.392131006 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.251538341 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.254182304 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.246985864 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.261950502 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.248164675 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.247416646 seconds)
  done (took 8.687852753 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.248825584 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.247879354 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.245708338 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.246230892 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.246294954 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.248422289 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.247732964 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.248229827 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.251616955 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.246602751 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.246985649 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.249835721 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.248081016 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.249166099 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.247335638 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.247586382 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.246800645 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.2450494 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.24772392 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.248562874 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.350930518 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.248171867 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.247575039 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.250138024 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.25361028 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.249862058 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.256133557 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.25006199 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.249670411 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.254130616 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.249264435 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.248534924 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.251610009 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.256372684 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.252480976 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.249293922 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.252103469 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.250940109 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.245280887 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.250554454 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.250369668 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.248288061 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.24835123 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.250669736 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.252434611 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.253780491 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.25359552 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.25873486 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.248654644 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.251617521 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.250238055 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.249163348 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.251356812 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.252164961 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.250956138 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.252762568 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.256443041 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.251262597 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.250476623 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.250895111 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.250813507 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.253152116 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.251593944 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.253340948 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.247228011 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.250381529 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.251362453 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.255204222 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.251062122 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.249554598 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.249804471 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.249772471 seconds)
  done (took 92.296832001 seconds)
done (took 398.936904967 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.602769343 seconds)
  done (took 7.783045178 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.37096531 seconds)
  done (took 7.554506384 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.351878268 seconds)
  done (took 22.541181405 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.335216709 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.332172007 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.268647668 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.243116942 seconds)
  done (took 26.363154496 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.723483274 seconds)
  done (took 7.903404284 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.242046349 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.240838475 seconds)
  done (took 13.664606434 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.653575651 seconds)
  done (took 7.831660784 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.703687144 seconds)
  done (took 7.884459477 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.263377296 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.267766139 seconds)
  done (took 13.957732786 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.226458979 seconds)
  done (took 7.403909837 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.072260219 seconds)
  done (took 8.252338732 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.253739324 seconds)
  done (took 7.434686198 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.308248616 seconds)
  done (took 7.488465108 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.297520076 seconds)
  done (took 9.476096998 seconds)
done (took 156.718870791 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.240530468 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.243704261 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.244630546 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.242108015 seconds)
  done (took 26.149024867 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.281259222 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.283456839 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.282757974 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.291235368 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.285463024 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.282213716 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.27388702 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.275031072 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.295173113 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.282592373 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.282475556 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.283454813 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.282663141 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.273899385 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.282792159 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.282519373 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.296029829 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.28336413 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.272716646 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.286898723 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.250276586 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.292359015 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.284352444 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.249726177 seconds)
  done (took 31.916520375 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.44893269 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.319564144 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.402053943 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.298798283 seconds)
  done (took 6.650275177 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.300092174 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.301056248 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.312230022 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.353017819 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.377320247 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.316401407 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.275033266 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.271727021 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.255456998 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.300989641 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.375122734 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.317490132 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.384775554 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.24861858 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.432323341 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.248253757 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.247623724 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.300510294 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.352715925 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.365775664 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.247982811 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.299744214 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.304379635 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.316963186 seconds)
  done (took 32.684038472 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.247496362 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.255246413 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.252359126 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.248161688 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.246564213 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.24912262 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.253200006 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.24804972 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.269158364 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.247443057 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.246295914 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.246774373 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.246680188 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.245899029 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.245840789 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.260791746 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.259682582 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.248479044 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.252627264 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.252701224 seconds)
  done (took 26.202794297 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.241992828 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.096610615 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.593173932 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.498190764 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.242803361 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.241349831 seconds)
  done (took 27.093774692 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.312920627 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.452040082 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.251442868 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.594214051 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.671914317 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.247104549 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.248613247 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.48637321 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.777536895 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.770082761 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.299934891 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.313565563 seconds)
  done (took 18.606187368 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.241479265 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.242932434 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.249266396 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.259851502 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.301561256 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.254994395 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.256794818 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.241586978 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.30199764 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.305135078 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.25386656 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.299843558 seconds)
  done (took 36.391155876 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.330420397 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.287582815 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.18116231 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.979909131 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.962192782 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.454034703 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.986614713 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.115998112 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.248927849 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.515248203 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.244702928 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.333954233 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.500635043 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.252491567 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.245943626 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.229500806 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.470713542 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.722041229 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.245047431 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.114847764 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.270802226 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.24312161 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.287756931 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.27078804 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.455444864 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.220622649 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.503646814 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.022427485 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517875193 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.257390743 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.253477313 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.242703135 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.51863975 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889118253 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336063228 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.252806083 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.916252076 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.794089983 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.242471127 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.165457166 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.015402205 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.245138058 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.251314407 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.243290754 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.178052698 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.243798242 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663701355 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.249349837 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.951507574 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.241641156 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.250413285 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.336820814 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.244506003 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.811137847 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.233655825 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.246355379 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.239874993 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.246602864 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.814116461 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.516880485 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.253842617 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.176211998 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.59398876 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.119420488 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.822345904 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.342450531 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.244276669 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.246255988 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.1770253 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.095791235 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.259684016 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391268561 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.264328163 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.89317516 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900751483 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.180049777 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.185068584 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.773843435 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.24351852 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.178044016 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.471236133 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.01783986 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.176289345 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.187375036 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.17583121 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911923276 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.250664154 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.58319437 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.247210473 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.663012489 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.254070315 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.257699818 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.264757422 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.463002656 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.125283377 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.240304029 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.844369134 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.382199186 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.259832587 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.649240096 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.177954749 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.242597178 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.496977867 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.453096106 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.238888238 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.185690035 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.422899545 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.245723356 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.257831503 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.246953999 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.253246083 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.771247842 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.251062274 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.447096845 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.259670623 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.01602542 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944524609 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.2524433 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.342727211 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.053252332 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.482521931 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.971883066 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.140047259 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.307542321 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.244411486 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.239157909 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.075895347 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.093457457 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.147432728 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.242407892 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.251106948 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.250563744 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.238840588 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.190275186 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.237550906 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.061881226 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.023373875 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.465552188 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.239726548 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.520171184 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.17590502 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39052535 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.252551379 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.465451518 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.380213029 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.241634151 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.502252892 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.252216221 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.253210109 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.252167256 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.261322621 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.338611068 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271539812 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.253125271 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.50020609 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.247979299 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.24769983 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.064145457 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.024249208 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.245838615 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.24758395 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.060579739 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.765947878 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222868067 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.248933722 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.131494549 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.256013216 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.310118412 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.249162373 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.252569716 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.898682596 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.028934527 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.247678259 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.242566451 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.463838199 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.249999015 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.052730827 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.32572937 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.421587049 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.773182051 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.258442623 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.177774281 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.954350816 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.936446708 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.2415753 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.432960365 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.242670652 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.252179412 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.255179286 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.720170372 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.770730316 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.2471282 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.97819057 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.251472736 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.254176001 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.248567664 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.243064505 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.894010166 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.441578635 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.258767533 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.255457151 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389426907 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.258779682 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.180035359 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.760960526 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.249090259 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.245608095 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.022693904 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278163792 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.981430264 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.749358414 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.506093555 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.89817577 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.258005155 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.073422886 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.274995572 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.245223793 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.828386647 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265022565 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.245622791 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.253438815 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.25734356 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.989128611 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.68950134 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.810736825 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9101294 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.723618723 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123454646 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.253449946 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.140343486 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.661415742 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.182302549 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.90048993 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.418471086 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.661201337 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.191336648 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.423859053 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.377673425 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.944625568 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.255469791 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.473854541 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.119626551 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.833939179 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.272050941 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.457856644 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.280914056 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.250961002 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.177531056 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.547035549 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.481506436 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.840656357 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.326936206 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660596329 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.844168316 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.037968334 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.245021939 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.547789409 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.404204207 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.794737371 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.633098913 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.247040242 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.069070467 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781925514 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.256461402 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.774364476 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.830568996 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.255093392 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.428632712 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.184042634 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.257785982 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.257790696 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.248510307 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.389154709 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.25159472 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.500811639 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.257733206 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.180998099 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.259015656 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.730932873 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.109099857 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.250980864 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.247988491 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954412995 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.249949895 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508136393 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.250679989 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.861065216 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.252007919 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.184224293 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.181682112 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.939142829 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.251028776 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.223127842 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.6984411 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.578235851 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.225966156 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.269151916 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093936732 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.505354131 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.262612919 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.780623987 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.472630981 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.012613583 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271265915 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.34731887 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.869475857 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.246998413 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.131083249 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.484975966 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.062988386 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.471897143 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.162871672 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.146139569 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.247440881 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.461577759 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.178058893 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.076731824 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486557679 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.958542714 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.267623405 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907316319 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.274274199 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.082789461 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.276265409 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.596673814 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.257115833 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.319005367 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.261475895 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.260399595 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.261311958 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406845516 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.08741579 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.265836484 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.263328671 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.344024727 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.476522247 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.872231991 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.023952326 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790801705 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932716153 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.786963908 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.26298858 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.250975551 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.249300635 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.183065052 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397820375 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.777498045 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.524413904 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381919683 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.658557046 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272332109 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.882163034 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.266567467 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.463530738 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.525300925 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.122853528 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.259571723 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.911732099 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.133604682 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.262817671 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.464250329 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707480949 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.771524603 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401574303 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.263401352 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.663727612 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.527104619 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.344296808 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.253415885 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.840886121 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.257269798 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.543765118 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.259654586 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.117591861 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400561693 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.262253341 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889420511 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.261899096 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.409513846 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.026343682 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.01291486 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.508983879 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.68958453 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.265000321 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.798445615 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.890178648 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.518470057 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.323211281 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.263318878 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.361192332 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400660583 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.257059956 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.135797014 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.252204251 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097748781 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.963262817 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.264113866 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789576626 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.517783315 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.25273761 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.257556976 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275349063 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.265318593 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.476067918 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928474656 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.478928676 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.26262662 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.254053548 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.82517418 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.791917383 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.26496773 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.189529522 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.256442535 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478535688 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.489498742 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.278785913 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.707577143 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.963987281 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.776768827 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.224856726 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276474629 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.259416908 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.898794408 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794410324 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.880105177 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.711317261 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.912258813 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.263242739 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.529667438 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.260164325 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.268300649 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.532477895 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.259003648 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.267145446 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.265968096 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.790601907 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.962351521 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.260222304 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.029185975 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.191574643 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.518889158 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.862560784 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.19413871 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.254422203 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.423844218 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.258762254 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387374285 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.265745503 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.258197336 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.255145045 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.025753416 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.530321738 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.259767582 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.256183214 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.950126788 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.256768976 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.264585637 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.4791663 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262861107 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.111644371 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.60966866 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.514330842 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.268958217 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.24001898 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.260609338 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.258018433 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.974379041 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.224124401 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.731340068 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.775733836 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.257157375 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.284714955 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.261313973 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.473553176 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.469371115 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.256002498 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.267482971 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.258598297 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.273777438 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.155643504 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.024969533 seconds)
  done (took 1530.885400614 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.300853136 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.306782217 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.306590313 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.337696828 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.268845543 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.352413068 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.37313543 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.332834283 seconds)
  done (took 51.775536338 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.271047498 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.409699279 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.287429993 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.264521594 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.268387616 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.264656274 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.687894336 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.260431112 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.267939804 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.269656791 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.259244627 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.265079836 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.881657308 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.268865863 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.264076203 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.244692382 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.2661441 seconds)
  done (took 63.90718966 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.265306704 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.479541128 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.338143072 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.262407668 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.870215278 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.266235027 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.460037552 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.30019768 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.261384622 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.581385285 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.918122016 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.274578465 seconds)
  done (took 82.474020855 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.268577332 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.267661333 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.266903966 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.265259849 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.267000731 seconds)
  done (took 7.529666851 seconds)
done (took 1943.444605801 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.505927429 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.891438247 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.87382433 seconds)
  done (took 4.959627803 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.40947053 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.458777397 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.577877749 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.582589592 seconds)
  done (took 7.224649072 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.538685082 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.636459866 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.45776056 seconds)
  done (took 5.830410459 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.557063783 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.278915366 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.382143259 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.258988394 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.261379151 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.26422699 seconds)
  done (took 19.984430131 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.265523595 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.266930817 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.265470797 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.268346771 seconds)
  done (took 6.264519674 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.246936767 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.947166156 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.24758473 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.259964865 seconds)
  done (took 17.899644194 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.011133454 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.02249822 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.009262069 seconds)
  done (took 7.239287095 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.261132294 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.098942072 seconds)
  done (took 9.557860099 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.548319768 seconds)
  done (took 2.743756473 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.398783675 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.590272156 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.248488018 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.151988588 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.271072891 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.720403532 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.73774249 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.360399353 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.13944874 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.211921032 seconds)
  done (took 26.028579445 seconds)
done (took 120.650513666 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.808100869 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.26555975 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.471924224 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.782102896 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.493109346 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.472496304 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.673291254 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.746111841 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.299541918 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.278567261 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.78160654 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.497266592 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.411856937 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.271248172 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.412360971 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.273601654 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.516196713 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.860614692 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.49957404 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.660606705 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.670170878 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.420676907 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.609099523 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.443358592 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.492564573 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.426709641 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.000685674 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.269111492 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.677145562 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.023379659 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.426274639 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.839536158 seconds)
  done (took 182.973079665 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.26739566 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.260994557 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.277877903 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.261990591 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.276336601 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.26964468 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.264060183 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.27367487 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.261212633 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.275734018 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.275085422 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.262737657 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.273193283 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.26245254 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.263701468 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.273974509 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.268802423 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.263384445 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.263726196 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.263670469 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.282527353 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.263571403 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.263930537 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.263519131 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.263359793 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.265513656 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.276375447 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.276221423 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.279255756 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.263561085 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.262898969 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.264626645 seconds)
  done (took 201.786326882 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.267735154 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.264618713 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.266135417 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.264394253 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.276215933 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.265188323 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.266829926 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.264746088 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.272642469 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.268126295 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.262363686 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.288697336 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.264244002 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.26413637 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.264408401 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.264363418 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.263411026 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.26377231 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.262868427 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.265348243 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.265900455 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.267409388 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.270403018 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.262295276 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.263208221 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.276002905 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.264949213 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.263639885 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.264916038 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.264933937 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.276177022 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.265245868 seconds)
  done (took 201.746306488 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.470409655 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.276047056 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.276640765 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.230733673 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.276995734 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.276735345 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.270424473 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.466861522 seconds)
  done (took 13.747903507 seconds)
done (took 601.451552634 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.498076649 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.221606381 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.466501914 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.296063688 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.995547031 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.296458988 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.295715822 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.45278195 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.166578158 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.455694567 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.486969435 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.290746927 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.620942788 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.292481556 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.535042066 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.385181039 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.139842021 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.250582166 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.595125489 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.739356155 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.539548862 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.689682853 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.454355352 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.170236016 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.623029025 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.692213039 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.922257237 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.135618388 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.29268116 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.599008408 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.826272112 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.183591195 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.347421361 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.329327935 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.384729948 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.370291419 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.154741534 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.32683543 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.474748315 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.453824775 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.767398101 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 1.985802293 seconds)
  done (took 87.408480962 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.266190364 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.265781123 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.265794487 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.264456661 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.267121186 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.26485361 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.265407117 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.265781139 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.263944761 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.26609689 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.266173067 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.267447129 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.266455101 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.266461841 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.264586689 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.265955973 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.264936079 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.266919234 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.263923995 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.263959369 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.265448332 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.265023654 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.265414941 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.265539295 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.266574879 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.264839489 seconds)
  done (took 34.111142469 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.277778749 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.523703404 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.68993468 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.285151531 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.278027205 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.283760597 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.349183421 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.27977208 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.28266593 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.282265653 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.42835951 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.279711928 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.316511931 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.708438183 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.281917422 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.279596122 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.280406076 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.277155464 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.529334251 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.289415436 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.367026636 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.281737526 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.350028429 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.289664235 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.2970774 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.280711793 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.284478655 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.823813376 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.280027335 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.432993446 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.98111117 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.346189226 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.746575228 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.689097125 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.98062652 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.281800537 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.279590941 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.436618489 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.281170427 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.281442478 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.350443699 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.282290397 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.685151593 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.891251045 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.290938387 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.282445258 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.824810393 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.429648618 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.501960422 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.291169804 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.707801389 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.283654998 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.281266755 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.282209191 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.502843721 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.288306201 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.281435568 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.805307538 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.298121448 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.352724022 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.282502064 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.282432906 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.552459661 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.282706373 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.523849678 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.285849749 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.29150364 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.284328266 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.687432937 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.283885641 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.931858966 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.297021676 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.282831179 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.428234432 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.521755975 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.857563174 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.285041934 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.548631041 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.76022362 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.348820672 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.286732553 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.783139979 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.354844797 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.28570253 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.283311824 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.286090022 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.280160141 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.329037841 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.350916069 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.850580773 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.915967451 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.828185563 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.367962302 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.295689206 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.283939519 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.806670241 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.296695629 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.284040574 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.685875912 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.912772664 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.293004579 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.292600247 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.903321399 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.295770605 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.354040095 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.288598347 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.691926342 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.282943873 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.380596826 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.283802853 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.29150517 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.287865689 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.354260839 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.288746929 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.284351987 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.889455344 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.449131838 seconds)
  done (took 169.016921782 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.278314518 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.282595174 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.274698073 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.27292831 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.276585236 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.281770429 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.277956701 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.276584868 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.28409388 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.276776343 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.278093262 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.277509872 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.278629439 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.278618013 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.285584576 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.283561854 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.888108958 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.278617277 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.287108715 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.275707884 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.058943649 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.280297553 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.286953802 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.277590412 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.278143532 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.281934051 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.281632393 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.279628074 seconds)
  done (took 150.430167971 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.285879925 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.797495518 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.283650224 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.404381734 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.304610021 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.28179845 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.400128458 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.33720759 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.28698962 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.285536138 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.283762842 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.560896319 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.285082372 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.752279488 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.451270567 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.404089209 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.752266187 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.285981442 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.284637315 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.284017608 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.403704021 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.291868065 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.563772392 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.799333514 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.283696272 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.80911684 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.277764712 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.288461325 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.285473916 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.805674927 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.282415657 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.567888627 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.358176992 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.344590105 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.811320281 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.760395359 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.761977377 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.418867875 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.287137677 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.285550206 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.285851131 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.27656433 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.809914567 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.288858999 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.289581537 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.804811826 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.301906426 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.287839705 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.299501393 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.285448206 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.340996966 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.344369475 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.570340973 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.815973108 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.357523281 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.306429789 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.405221662 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.665982254 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.290570817 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.761156296 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.273580674 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.811982177 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.292190157 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.277797709 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.288418144 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.292837577 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.420649327 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.4073525 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.757663052 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.287473535 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.756959836 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.419839066 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.289017359 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.286805123 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.290459147 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.815041717 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.75814078 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.421654916 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.409708139 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.463928011 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.278425436 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.287758486 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.278861314 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.357172003 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.288836999 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.816472013 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.764736328 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.291458266 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.291804233 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.290008458 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.29184033 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.447187644 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.814700644 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.360416089 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.757970597 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.587283141 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.574060187 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.292141875 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.344529397 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.289610985 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.573833277 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.290410799 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.342075404 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.728723302 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.573534921 seconds)
  done (took 152.941769206 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.525564576 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.427362052 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.377755624 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.394871158 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.854714954 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.846966339 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.537903238 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.40677283 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.392839256 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.524388312 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.380153216 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.382721289 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.446393246 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.37424556 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.977609254 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.352430075 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.375626865 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.413003415 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.381843348 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.272558243 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.898559864 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.563365683 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.462863163 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.155913218 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.381424166 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.037774873 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.815160129 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.818137242 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.453152741 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.513458052 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.796118499 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.348145467 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.195962 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.918987589 seconds)
  done (took 62.222463215 seconds)
done (took 657.334116604 seconds)
SAVING RESULT...
DONE!
